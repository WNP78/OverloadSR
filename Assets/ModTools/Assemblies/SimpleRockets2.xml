<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>SimpleRockets2</name>
  </assembly>
  <members>
    <member name="T:Philip.AirfoilTest.AirfoilTest">
      <summary>
            Test class to plot NACA airfoils
            Converted to C# from MATLAB code from: https://www.youtube.com/watch?v=6pt8Uolfj0M
            </summary>
    </member>
    <member name="F:Philip.AirfoilTest.AirfoilTest.ClosedTrailingEdge">
      <summary>
            The closed trailing edge
            </summary>
    </member>
    <member name="F:Philip.AirfoilTest.AirfoilTest.NACA">
      <summary>
            The NACA airfoil number.
            </summary>
    </member>
    <member name="F:Philip.AirfoilTest.AirfoilTest.GridPoints">
      <summary>
            The grid points
            </summary>
    </member>
    <member name="M:Philip.AirfoilTest.AirfoilTest.GraphAirfoil(System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Graphs the airfoil, given the NACA values.
            </summary>
      <param name="M">The mean camber.</param>
      <param name="P">The percentage of the total chord back from the leading edge where the maximum camber is located. This is interpreted as being multiplied by 10, so passing 4 would mean 40% back.</param>
      <param name="T">The maximum thickness as a percentage of the chord length.</param>
      <param name="closeTrailingEdge">if set to <c>true</c> [close trailing edge].</param>
    </member>
    <member name="M:Philip.AirfoilTest.AirfoilTest.GraphCircle">
      <summary>
            Graphs a circle.
            </summary>
    </member>
    <member name="M:Philip.AirfoilTest.AirfoilTest.OnValidate">
      <summary>
            Called when [validate].
            </summary>
    </member>
    <member name="T:Assets.Dev.Philip.OrbitTesting.GetPointAtDistanceGraph">
      <summary>
            Testing get point at distance w/graphs.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="M:Assets.Dev.Philip.OrbitTesting.GetPointAtDistanceGraph.CompareOrbitPoints(ModApi.Flight.Sim.IOrbitPoint,ModApi.Flight.Sim.IOrbitPoint,System.Double)">
      <summary>
            Compares the orbit points.
            </summary>
      <param name="a">a.</param>
      <param name="b">The b.</param>
      <param name="epsilon">The epsilon.</param>
      <returns></returns>
    </member>
    <member name="M:Assets.Dev.Philip.OrbitTesting.GetPointAtDistanceGraph.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="T:Assets.Dev.Philip.Status">
      <summary>
            Dummy class to hold debug/status related stuff.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.Status.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Dev.Philip.Status" /> class.
            </summary>
    </member>
    <member name="T:Assets.Dev.Philip.UiTesting.Scripts.DebugPanel">
      <summary>
            Debug panel
            </summary>
      <seealso cref="T:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel" />
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.DebugPanel._instance">
      <summary>
            The instance
            </summary>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.DebugPanel.Instance">
      <summary>
            Gets the instance.
            </summary>
      <value>
            The instance.
            </value>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.DebugPanel.OnDestroy">
      <summary>
            Called when this InfoPanel has been destroyed.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.DebugPanel.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.DebugPanel.Initialize">
      <summary>
            Initializes this instance.
            </summary>
      <returns>The debug panel.</returns>
    </member>
    <member name="T:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel">
      <summary>
            Info panel
            </summary>
      <seealso cref="T:UI.Xml.XmlLayoutController" />
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.DefaultAllowDragging">
      <summary>
            The default allow dragging
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.DefaultHeight">
      <summary>
            The default height
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.DefaultWidth">
      <summary>
            The default width
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.NotInitializedError">
      <summary>
            The not initialized error
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._currentToggleVisibility">
      <summary>
            The current toggle visibility
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._defaultParent">
      <summary>
            The default parent transform.
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._disabledContainer">
      <summary>
            The disabled container
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._enabledByDefault">
      <summary>
            The enabled by default
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._lastAlignment">
      <summary>
            The last alignment
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._lastInitialPadding">
      <summary>
            The last initial padding
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._lastPadding">
      <summary>
            The last padding
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._panels">
      <summary>
            The panels
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._actionsButton">
      <summary>
            The temporary buttons
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._actionsDropdown">
      <summary>
            The temporary dropdowns
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._actionsDynamicText">
      <summary>
            The temporary dynamic text
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._actionsToggle">
      <summary>
            The temporary checkboxes
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._allowDragging">
      <summary>
            The allow dragging
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._contentStyle">
      <summary>
            The content style
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._contentTextStyle">
      <summary>
            The content text style
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._dynamicText">
      <summary>
            The dynamic text
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._headerClicked">
      <summary>
            The header clicked
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._headerStyle">
      <summary>
            The header style
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._height">
      <summary>
            The height
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._immediateLogControls">
      <summary>
            Reference to the text controls which are used by LogValue to immediately show/update values.
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._toogleButtonStates">
      <summary>
            The toogle button states
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._width">
      <summary>
            The width
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._xmlDoc">
      <summary>
            The XML document
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._xmlLayout">
      <summary>
            The layout
            </summary>
    </member>
    <member name="F:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel._xmlLayoutTable">
      <summary>
            The table
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel" /> class.
            </summary>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.EnabledByDefault">
      <summary>
            Gets or sets a value indicating whether [enabled by default].
            </summary>
      <value>
        <c>true</c> if [enabled by default]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.StyleContent">
      <summary>
            Gets or sets the content of the style.
            </summary>
      <value>
            The content of the style.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.StyleContentDropdownLabel">
      <summary>
            Gets or sets the style content dropdown label.
            </summary>
      <value>
            The style content dropdown label.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.StyleContentDropdownText">
      <summary>
            Gets or sets the style content dropdown text.
            </summary>
      <value>
            The style content dropdown text.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.StyleContentText">
      <summary>
            Gets or sets the style content text.
            </summary>
      <value>
            The style content text.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.StyleHeader">
      <summary>
            Gets or sets the style header.
            </summary>
      <value>
            The style header.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.StyleRowSize">
      <summary>
            Gets or sets the size of the style row.
            </summary>
      <value>
            The size of the style row.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.TableLayout">
      <summary>
            Gets the table layout.
            </summary>
      <value>
            The table layout.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.ToggleStates">
      <summary>
            Gets the toggle button's current states.  Use the desc field to index to the current value;
            </summary>
      <value>
            The toggle button's current states.  Use the desc field to index to the current value;
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.Canvas">
      <summary>
            Gets the canvas
            </summary>
      <value>
            The canvas.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.ContentStyle">
      <summary>
            Gets the content style.
            </summary>
      <value>
            The content style.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.ContentTextStyle">
      <summary>
            Gets the content text style.
            </summary>
      <value>
            The content text style.
            </value>
    </member>
    <member name="P:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.HeaderStyle">
      <summary>
            Gets the header style.
            </summary>
      <value>
            The header style.
            </value>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AutoArrange">
      <summary>
            Automatics the arrange.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AutoArrange(UI.Xml.RectAlignment,System.Single,System.Single)">
      <summary>
            Arranges the panels.
            </summary>
      <param name="align">The align.</param>
      <param name="initialPadding">The initial padding to use for the top of the first panel.</param>
      <param name="padding">The padding.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.Create``1(System.String,UnityEngine.Events.UnityAction,System.Boolean)">
      <summary>
            Creates the specified name.
            </summary>
      <typeparam name="T">The InfoPanel type.</typeparam>
      <param name="name">The name.</param>
      <param name="onHeaderClicked">The action to perform when the header of the panel is clicked.</param>
      <param name="forceVisible">if set to <c>true</c> [force visible].</param>
      <returns>
            The new InfoPanel.
            </returns>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.Create``1(System.String,System.Boolean,UnityEngine.Events.UnityAction,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},UnityEngine.Transform,System.Boolean)">
      <summary>
            Creates a new InfoPanel
            </summary>
      <typeparam name="T">The InfoPanel type.</typeparam>
      <param name="name">The name of the panel..</param>
      <param name="createHeader">if set to <c>true</c> a header for the panel will be created, otherwise <c>false</c>.</param>
      <param name="onHeaderClicked">The action to perform when the header of the panel is clicked.</param>
      <param name="width">The width, or <c>null</c> for default.</param>
      <param name="height">The height, or <c>null</c> for default.</param>
      <param name="draggable">
        <c>true</c> if the panel should be draggable, otherwise <c>false</c>, or <c>null</c> for default.</param>
      <param name="parent">The parent transform, or <c>null</c> for default.</param>
      <param name="forceVisible">if set to <c>true</c> [force visible].</param>
      <returns>
            The new InfoPanel.
            </returns>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.GetPreferredHeightAllChildren(UnityEngine.RectTransform)">
      <summary>
            Gets the largest preferred height from all children.
            </summary>
      <param name="rectTransform">The rect transform.</param>
      <returns>The largest preferred height from all children.</returns>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.SetGlobalVisibility(System.Boolean,System.Boolean)">
      <summary>
            Sets the global visibility.
            </summary>
      <param name="visible">if set to <c>true</c> [visible].</param>
      <param name="autoArrange">if set to <c>true</c> [automatic arrange].</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.ToggleVisibility">
      <summary>
            Toggles the visibility for all InfoPanels.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddButton(System.String,System.String,UnityEngine.Events.UnityAction,System.Boolean)">
      <summary>
            Adds the checkbox.
            </summary>
      <param name="desc">The desc.</param>
      <param name="buttonText">The button text.</param>
      <param name="onClicked">The on clicked.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddButton(System.String,System.String,System.String,UnityEngine.Events.UnityAction,System.Boolean)">
      <summary>
            Adds the checkbox.
            </summary>
      <param name="id">The identifier.</param>
      <param name="desc">The desc.</param>
      <param name="buttonText">The button text.</param>
      <param name="onClicked">The on clicked.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddDropdown(System.String,System.String,UnityEngine.Events.UnityAction{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean)">
      <summary>
            Adds the checkbox.
            </summary>
      <param name="desc">The desc.</param>
      <param name="toolTip">The tool tip.</param>
      <param name="onSelectionChanged">The on selection changed.</param>
      <param name="selectedItem">The selected item.</param>
      <param name="items">The items.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddDropdown(System.String,System.String,System.String,UnityEngine.Events.UnityAction{System.Int32},System.Nullable{System.Int32},System.Collections.Generic.List{System.String},System.Boolean)">
      <summary>
            Adds the checkbox.
            </summary>
      <param name="id">The identifier.</param>
      <param name="desc">The desc.</param>
      <param name="toolTip">The tool tip.</param>
      <param name="onSelectionChanged">The on selection changed.</param>
      <param name="selectedItem">The selected item.</param>
      <param name="items">The items.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddDynamicText(System.String,System.Func{System.String},System.Boolean)">
      <summary>
            Adds the dynamic text.
            </summary>
      <param name="desc">The desc.</param>
      <param name="text">The text.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddDynamicText(System.String,System.String,System.Func{System.String},System.Boolean)">
      <summary>
            Adds the dynamic text.
            </summary>
      <param name="id">The identifier.</param>
      <param name="desc">The desc.</param>
      <param name="text">The text.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddHeader(System.String,UnityEngine.Events.UnityAction,System.Boolean)">
      <summary>
            Adds the header.
            </summary>
      <param name="text">The text.</param>
      <param name="onClicked">The on clicked.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddStaticText(System.String,System.Object,System.Boolean)">
      <summary>
            Adds the static text.
            </summary>
      <param name="desc">The desc.</param>
      <param name="value">The text.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddStaticText(System.String,System.String,System.Object,System.Boolean)">
      <summary>
            Adds the static text.
            </summary>
      <param name="id">The identifier.</param>
      <param name="desc">The desc.</param>
      <param name="value">The text.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddToggleButton(System.String,System.Boolean,UnityEngine.Events.UnityAction{System.Boolean},System.Boolean)">
      <summary>
            Adds the checkbox.
            </summary>
      <param name="desc">The desc.</param>
      <param name="initialValue">if set to <c>true</c> [initial value].</param>
      <param name="onChanged">The on changed.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AddToggleButton(System.String,System.String,System.Boolean,UnityEngine.Events.UnityAction{System.Boolean},System.Boolean)">
      <summary>
            Adds the checkbox.
            </summary>
      <param name="id">The identifier.</param>
      <param name="desc">The desc.</param>
      <param name="initialValue">if set to <c>true</c> the toggle is initially selected, otherwise <c>false</c>.</param>
      <param name="onChanged">The on changed.</param>
      <param name="rebuildUi">If set to <c>true</c> the UI will be immediately rebuilt with the new control, otherwise <c>false</c> if RebuildUI() will be called later, manually.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.Clear(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean})">
      <summary>
            Clears the panel, and (re)initializes with the provided params.
            </summary>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <param name="allowDragging">The allow dragging.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.LogValue(System.String,System.Object)">
      <summary>
            Immediately logs the value, creating a new row if necessary.
            </summary>
      <param name="desc">The desc.</param>
      <param name="value">The text.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.LogValue(System.String,System.String,System.Object)">
      <summary>
            Immediately logs the value, creating a new row if necessary.
            </summary>
      <param name="id">The identifier.</param>
      <param name="desc">The desc.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.RebuildUi">
      <summary>
            Creates the UI.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.SetPosition(UnityEngine.Vector2)">
      <summary>
            Sets the position.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.OnDestroy">
      <summary>
            Called when this InfoPanel has been destroyed.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.AutoArrangePerform(UI.Xml.RectAlignment,System.Single,System.Single)">
      <summary>
            Arranges the panels.
            </summary>
      <param name="align">The align.</param>
      <param name="initialPadding">The initial padding to use for the top of the first panel.</param>
      <param name="padding">The padding.</param>
      <exception cref="T:System.InvalidOperationException">Unsupported alignment</exception>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.OnActiveSceneChanged(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
            Called when [active scene changed].
            </summary>
      <param name="arg0">The arg0.</param>
      <param name="arg1">The arg1.</param>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.Reset">
      <summary>
            Resets this instance.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.ContentRow(System.Object[])">
      <summary>
            Contents the row.
            </summary>
      <param name="content">The content.</param>
      <returns>A new content row.</returns>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.ContentText(System.Object[])">
      <summary>
            Contents the text.
            </summary>
      <param name="content">The content.</param>
      <returns>A new content text</returns>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.CreateHeaderRow(System.Object[])">
      <summary>
            Creates the header row.
            </summary>
      <param name="content">The content.</param>
      <returns>A new header row.</returns>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.CreateRow(System.Xml.Linq.XAttribute,System.Object[])">
      <summary>
            Creates the row.
            </summary>
      <param name="style">The style.</param>
      <param name="content">The content.</param>
      <returns>A new row</returns>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.CreateText(System.Xml.Linq.XAttribute,System.Object[])">
      <summary>
            Creates the text.
            </summary>
      <param name="style">The style.</param>
      <param name="content">The content.</param>
      <returns>A new text</returns>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.CreateXmlDoc">
      <summary>
            Creates the base XML document for the controls.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.RefreshActions">
      <summary>
            Refreshes the actions.
            </summary>
    </member>
    <member name="M:Assets.Dev.Philip.UiTesting.Scripts.InfoPanel.RefreshControlReferences">
      <summary>
            Refreshes references to controls when necessary.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Audio.AudioPlayer">
      <summary>
            Plays audio files in the game.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.AudioPlayer._audioMixer">
      <summary>
            The audio mixer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.AudioPlayer._audioMixerGroupGame">
      <summary>
            The audio mixer group game
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.AudioPlayer._audioMixerGroupUi">
      <summary>
            The audio mixer group UI
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.AudioPlayer._parent">
      <summary>
            The parent game object for one shot audio sounds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.AudioPlayer._snapshotNormal">
      <summary>
            The snapshot normal
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.AudioPlayer._snapshotPaused">
      <summary>
            The snapshot paused
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.CreateAudioSource(ModApi.Audio.AudioFile,UnityEngine.GameObject,System.Boolean)">
      <summary>
            Creates the audio source and returns it without playing the sound.
            </summary>
      <param name="audioFile">The audio file.</param>
      <param name="gameObjectToApplyAudioSourceTo">The game object to apply audio source to.  Pass null to attach to main camera.</param>
      <param name="userInterfaceSound">if set to <c>true</c> then this is a user interface sound.</param>
      <returns>The audio source that was created.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.EnableGameAudio(System.Boolean)">
      <summary>
            Enables the game audio. Used when in the menu to disable any looping game sounds.
            </summary>
      <param name="enable">if set to <c>true</c> then enable game audio, otherwise disable.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.GetGameMixerGroup">
      <summary>
            Gets the audio mixer group for game audio
            </summary>
      <returns>
            The audio mixer group for game audio
            </returns>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.GetUiMixerGroup">
      <summary>
            Gets the audio mixer group for user interface audio.
            </summary>
      <returns>The audio mixer group for user interface audio.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.PlaySound(ModApi.Audio.AudioFile,System.Nullable{UnityEngine.Vector3},System.Boolean)">
      <summary>
            Plays the sound at the given position (unless null, then at the camera) with the sound's default volume.
            </summary>
      <param name="audioFile">The audio file.</param>
      <param name="position">The position.  Optional, if null it is played at the camera position.</param>
      <param name="userInterfaceSound">if set to <c>true</c> then this is a user interface sound.</param>
      <returns>The audio source for the sound.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.PlaySound(ModApi.Audio.AudioFile,System.Nullable{UnityEngine.Vector3},System.Single,System.Single,System.Boolean)">
      <summary>
            Plays the sound at the given position with the volume supplied.
            </summary>
      <param name="audioFile">The audio file.</param>
      <param name="position">The position.  Optional, if null it is played at the camera position.</param>
      <param name="volume">The volume to play at.</param>
      <param name="delay">The delay.</param>
      <param name="userInterfaceSound">if set to <c>true</c> then this is a user interface sound.</param>
      <returns>The audio source for the sound.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.SetMasterVolume(System.Single)">
      <summary>
            Sets the master volume.
            </summary>
      <param name="volume">The volume.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.SetMusicVolume(System.Single)">
      <summary>
            Sets the music volume.
            </summary>
      <param name="volume">The volume.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.SetSoundVolume(System.Single)">
      <summary>
            Sets the sound volume.
            </summary>
      <param name="volume">The volume.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.SetVolumes(System.Single,System.Single)">
      <summary>
            Updates the mixer volumes.
            </summary>
      <param name="sound">The sound volume.</param>
      <param name="music">The music volume.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.LinearToDecibels(System.Single)">
      <summary>
            Converts a linear scale to the logarithmic decibel scale.
            </summary>
      <param name="x">The x.</param>
      <returns>The decibel equivalent.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.GetAudioClip(ModApi.Audio.AudioFile)">
      <summary>
            Gets the audio resource.
            </summary>
      <param name="audioFile">The audio file.</param>
      <returns>The audio clip.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.OnFlightSceneTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called when the flight scene's time multiplier mode changed.
            </summary>
      <param name="e">The e.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.OnSceneLoaded(System.Object,ModApi.Scenes.Events.SceneEventArgs)">
      <summary>
            Called when a scene is loaded.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Scenes.Events.SceneEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.OnVolumeChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{System.Single})">
      <summary>
            Called when a volume setting changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.PlaySound(ModApi.Audio.AudioFile,System.Nullable{UnityEngine.Vector3},System.Single,System.String,System.Single,System.Boolean)">
      <summary>
            Plays the sound.
            </summary>
      <param name="audioFile">The audio file.</param>
      <param name="position">The position.</param>
      <param name="volume">The volume.</param>
      <param name="trackedSoundId">The tracked sound identifier.</param>
      <param name="delay">The delay.</param>
      <param name="userInterfaceSound">if set to <c>true</c> then this is a user interface sound.</param>
      <returns>
            The audio source.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Audio.AudioPlayer.SetVolumes">
      <summary>
            Sets all the volumes based on the current audio settings.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Audio.MusicPlayer">
      <summary>
            Plays music...
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.MusicPlayer.MusicPath">
      <summary>
            The music path in resources folder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.MusicPlayer._fadeInTime">
      <summary>
            The fade in time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.MusicPlayer._fadeOutTime">
      <summary>
            The fade out time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.MusicPlayer._fading">
      <summary>
            Whether we are currently fading from one theme to another or not
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.MusicPlayer._haltPlayback">
      <summary>
            The halt playback
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.MusicPlayer._mainLayer">
      <summary>
            The main layer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.MusicPlayer._musicTracks">
      <summary>
            The music tracks.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.MusicPlayer._musicVolume">
      <summary>
            The music volume
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.MusicPlayer._secondaryLayer">
      <summary>
            The secondary layer
            </summary>
    </member>
    <member name="P:Assets.Scripts.Audio.MusicPlayer.Instance">
      <summary>
            Gets the instance.
            </summary>
      <value>
            The instance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Audio.MusicPlayer.Intensity">
      <summary>
            Gets or sets the intensity.
            </summary>
      <value>
            The intensity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Audio.MusicPlayer.IsPlaying">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Audio.MusicPlayer" /> is playing.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Audio.MusicPlayer.MusicTracks">
      <summary>
            Gets the music tracks.
            </summary>
      <value>
            The music tracks.
            </value>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.CalculateMusicIntensity(ModApi.Craft.ICraftScript)">
      <summary>
            Calculates the music intensity based on the state of the craft.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.ToggleIntensity">
      <summary>
            Toggles the intensity, for debugging purposes
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.ToggleIntensityNextFrame">
      <summary>
            Toggles the intensity next frame, for debugging purposes
            </summary>
      <returns>yielded WaitForEndOfFrame()</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.FadeTo(ModApi.Audio.MusicTrack,System.Single,System.Single)">
      <summary>
            Fades main layer to the specified track over time.
            </summary>
      <param name="musicTrack">The new music track.</param>
      <param name="outTime">The fade out time.</param>
      <param name="inTime">The fade in time.</param>
      <returns>Yielded wait for end of frames.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.IsPlayingSongForPlanet(ModApi.Planet.IPlanetData)">
      <summary>
            Determines whether we're playing song for the specified planet.
            </summary>
      <param name="planet">The planet.</param>
      <returns>
        <c>true</c> if [is playing song for the specified planet]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.MusicVolume_Changed(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{System.Single})">
      <summary>
            Handles the Changed event of the MusicVolume control.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="!:ModApi.Settings.Core.Events.SettingChangedEventArgs&lt;System.Single&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.OnDestroy">
      <summary>
            Called when this script is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.PickRandomTrackForPlanet(ModApi.Planet.IPlanetData)">
      <summary>
            Picks a random track for the given planet.
            </summary>
      <param name="planet">The planet.</param>
      <returns>The selected track.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.PickRandomTrackForPlanetName(System.String)">
      <summary>
            Picks a random track for the given planet name.
            </summary>
      <param name="planetName">The name of the planet.</param>
      <returns>The selected track.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.ToggleMusic">
      <summary>
            Toggles the music.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.MusicPlayer.Update">
      <summary>
            Unity update method, called once per frame
            </summary>
    </member>
    <member name="T:Assets.Scripts.Audio.SingleSound">
      <summary>
            Manages multiple sources playing a single sound. They can combine their positions and
            volumes into one single audio source that is played.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.SingleSound._audioSource">
      <summary>
            The audio source.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.SingleSound._sources">
      <summary>
            The _sources
            </summary>
    </member>
    <member name="F:Assets.Scripts.Audio.SingleSound._totalVolume">
      <summary>
            The _total volume
            </summary>
    </member>
    <member name="P:Assets.Scripts.Audio.SingleSound.MaxVolume">
      <summary>
            Gets or sets the maximum volume.
            </summary>
      <value>
            The maximum volume.
            </value>
    </member>
    <member name="M:Assets.Scripts.Audio.SingleSound.Create(System.String,UnityEngine.Transform,System.Single,UnityEngine.Audio.AudioMixerGroup)">
      <summary>
            Creates the single sound for the specified sound.
            </summary>
      <param name="sound">The sound.</param>
      <param name="parent">The parent.</param>
      <param name="maxVolume">The maximum volume.</param>
      <param name="mixerGroup">The mixer group.</param>
      <returns>
            The single sound.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Audio.SingleSound.AddPosition(UnityEngine.Vector3,System.Single)">
      <summary>
            Adds the position to the sound for this frame
            </summary>
      <param name="position">The position.</param>
      <param name="volume">The volume.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.SingleSound.NewFrame">
      <summary>
            Marks that a new frame is starting. Clears sounds from the previous frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.SingleSound.SetSound(System.String,UnityEngine.Audio.AudioMixerGroup)">
      <summary>
            Sets the sound.
            </summary>
      <param name="sound">The sound.</param>
      <param name="mixerGroup">The mixer group.</param>
    </member>
    <member name="M:Assets.Scripts.Audio.SingleSound.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Audio.SingleSound.SoundSource">
      <summary>
            Sound source.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Audio.SingleSound.SoundSource.Position">
      <summary>
            Gets or sets the position.
            </summary>
      <value>
            The position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Audio.SingleSound.SoundSource.Volume">
      <summary>
            Gets or sets the volume.
            </summary>
      <value>
            The volume.
            </value>
    </member>
    <member name="T:Assets.Scripts.Audio.SingleSoundManager">
      <summary>
            Manages  <see cref="T:ModApi.Audio.ISingleSound" />s.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:ModApi.Audio.ISingleSoundManager" />
    </member>
    <member name="F:Assets.Scripts.Audio.SingleSoundManager._sounds">
      <summary>
            The single sounds, keyed by sound resource path
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.SingleSoundManager.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Audio.SingleSoundManager" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Audio.SingleSoundManager.GetSingleSound(System.String)">
      <summary>
            Gets the single sound.
            </summary>
      <param name="soundResource">The sound resource.</param>
      <returns>The single sound for the sound.</returns>
    </member>
    <member name="M:Assets.Scripts.Audio.SingleSoundManager.LateUpdate">
      <summary>
            Unity late update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.BillboardScript">
      <summary>
            Script for a billboard.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.BillboardScript._cameraTransform">
      <summary>
            The camera transform
            </summary>
    </member>
    <member name="P:Assets.Scripts.BillboardScript.CameraTransform">
      <summary>
            Gets or sets the camera transform.
            </summary>
      <value>
            The camera transform.
            </value>
    </member>
    <member name="M:Assets.Scripts.BillboardScript.LateUpdate">
      <summary>
            Unity LateUpdate method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Cameras.SceneCameraScript">
      <summary>
            A script for a camera that is responsible for rendering part or all of the game scene.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:ModApi.Cameras.ISceneCamera" />
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneCameraScript._cam">
      <summary>
            The camera component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneCameraScript._craftMaskMode">
      <summary>
            The craft mask mode used by this camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneCameraScript._dualBufferArray">
      <summary>
            The render buffer array used when dual render targeting is used.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneCameraScript._masterCam">
      <summary>
            The master camera script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneCameraScript._useConfigurableFOV">
      <summary>
            A value indicating if the camera should use the field of view configured in the game settings.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Cameras.SceneCameraScript.CraftMaskMode">
      <summary>
            An enumeration defining the craft mask modes that can be utilized by a camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneCameraScript.CraftMaskMode.Disabled">
      <summary>
            No craft mask is drawn.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneCameraScript.CraftMaskMode.NearCam">
      <summary>
            The craft mask is drawn with the near camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneCameraScript.CraftMaskMode.FarCam">
      <summary>
            The craft mask is drawn with the far camera.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Cameras.SceneCameraScript.Camera">
      <summary>
            Gets the camera component.
            </summary>
      <value>
            The camera component.
            </value>
    </member>
    <member name="P:Assets.Scripts.Cameras.SceneCameraScript.MasterCamera">
      <summary>
            Gets the master camera script.
            </summary>
      <value>
            The master camera script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Cameras.SceneCameraScript.UseConfigurableFOV">
      <summary>
            Gets a value indicating whether the camera should use the field of view configured in the game settings.
            </summary>
      <value>
        <c>true</c> if the camera should use the field of view configured in the game settings; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneCameraScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneCameraScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneCameraScript.OnFieldOfViewChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{System.Single})">
      <summary>
            Called when the field of view is changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneCameraScript.OnPostRender">
      <summary>
            Called after rendering the scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneCameraScript.OnPreRender">
      <summary>
            Called prior to rendering the scene.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Cameras.SceneMasterCameraScript">
      <summary>
            The camera that is responsible for managing the rendering of the scene.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:ModApi.Cameras.ISceneMasterCamera" />
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript._antiAliasingImageEffect">
      <summary>
            The antialiasing image effect reference (if any).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript._pendingHeight">
      <summary>
            The pending screen height change.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript._pendingWidth">
      <summary>
            The pending screen width change.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript._previousHeight">
      <summary>
            The screen height at the last time it was checked.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript._previousWidth">
      <summary>
            The screen width at the last time it was checked.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript._renderTextureCraftMask">
      <summary>
            The render texture data for the craft mask.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript._renderTextureScene">
      <summary>
            The render texture data for the main scene.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Cameras.SceneMasterCameraScript.Camera">
      <summary>
            Gets the camera component.
            </summary>
      <value>
            The camera component.
            </value>
    </member>
    <member name="P:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureCraftMask">
      <summary>
            Gets the render texture craft mask (if available).
            </summary>
      <value>
            The render texture craft mask (if available).
            </value>
    </member>
    <member name="P:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureScene">
      <summary>
            Gets the render texture for the main scene.
            </summary>
      <value>
            The render texture for the main scene.
            </value>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.OnEnable">
      <summary>
            This function is called when the object becomes enabled and active.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.AntialiasingChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.DisplayQualitySettings.AntiAliasingType})">
      <summary>
            Called when antialiasing settings change.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;DisplayQualitySettings.AntiAliasingType&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.ApplyAntiAliasingSettings(ModApi.Settings.DisplayQualitySettings.AntiAliasingType)">
      <summary>
            Applies the specified antialiasing settings.
            </summary>
      <param name="setting">The setting to apply.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.ApplyReentryEffectsSettings(ModApi.Settings.ImageEffectsQualitySettings.ReEntryQuality)">
      <summary>
            Applies the reentry effects quality settings.
            </summary>
      <param name="reentryQuality">The reentry quality.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.ApplyResolutionSettings(ModApi.Settings.DisplayQualitySettings.ResolutionScaleMode)">
      <summary>
            Applies the resolution settings.
            </summary>
      <param name="resolutionScale">The resolution scale setting.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.CreateDebugImage(Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData,UnityEngine.Canvas,System.Int32)">
      <summary>
            Creates a debug image of the specified texture on the specified canvas.
            </summary>
      <param name="texture">The texture for the debug image.</param>
      <param name="canvas">The canvas on which to create the debug image.</param>
      <param name="index">The index of the debug image.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.CreateDebugImages">
      <summary>
            Creates debug images of the current textures.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.InitializeCraftMaskTexture">
      <summary>
            Initializes the craft mask texture.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.InitializeSceneTexture">
      <summary>
            Initializes the main scene texture.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.InitializeTextures">
      <summary>
            Initializes the textures.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.OnRenderImage(UnityEngine.RenderTexture,UnityEngine.RenderTexture)">
      <summary>
            Called when the camera renders the image.
            </summary>
      <param name="source">The source.</param>
      <param name="destination">The destination.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.ReentryEffectsSettingsChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.ImageEffectsQualitySettings.ReEntryQuality})">
      <summary>
            Called when the reentry effect quality settings change.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;ImageEffectsQualitySettings.ReEntryQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.RequireHealthCheck">
      <summary>
            Flags the textures as requiring health checks.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.ResolutionScaleChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.DisplayQualitySettings.ResolutionScaleMode})">
      <summary>
            Called when the resolution scale setting changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;DisplayQualitySettings.ResolutionScaleMode&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.SetRenderTextureDescriptorDefaults(UnityEngine.RenderTextureDescriptor@)">
      <summary>
            Sets the render texture descriptor defaults.
            </summary>
      <param name="d">The descriptor on which to set the defaults.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.UnloadTextures">
      <summary>
            Unloads all textures.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.UpdateTextureAntiAliasing(System.Int32)">
      <summary>
            Updates the antialiasing settings for all textures.
            </summary>
      <param name="msaa">The MSAA setting to be used.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.UpdateTextureAntiAliasing(Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData,System.Int32)">
      <summary>
            Updates the antialiasing setting for the specified texture.
            </summary>
      <param name="texture">The texture for which to update the MSAA setting.</param>
      <param name="msaa">The MSAA setting to be used.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.UpdateTextureResolution(System.Int32)">
      <summary>
            Updates the resolution settings for all textures.
            </summary>
      <param name="scale">The scale setting to be used.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.UpdateTextureResolution(Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData,System.Int32)">
      <summary>
            Updates the resolution settings for the specified texture.
            </summary>
      <param name="texture">The texture for which to update the resolution setting.</param>
      <param name="scale">The scale setting to be used.</param>
    </member>
    <member name="T:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData">
      <summary>
            A class wrapping some data and functionality related to a single render texture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData.CheckHealth">
      <summary>
            A value indicating whether a texture health check needs to be made before the texture is accessed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData.Descriptor">
      <summary>
            The render texture descriptor.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData.SettingsChanged">
      <summary>
            A value indicating whether the texture settings have changed (and thus, the texture needs recreated).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData._name">
      <summary>
            The name of the texture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData._texture">
      <summary>
            The texture.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData.#ctor(System.String,System.Boolean,System.Int32,System.Int32,UnityEngine.RenderTextureFormat,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData" /> class.
            </summary>
      <param name="name">The name of the texture.</param>
      <param name="enabled">The default enabled state of the texture.</param>
      <param name="width">The width of the texture.</param>
      <param name="height">The height of the texture.</param>
      <param name="format">The format of the texture.</param>
      <param name="depth">
        <c>true</c> if the texture has a depth buffer; <c>false</c> otherwise.</param>
    </member>
    <member name="P:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData.Enabled">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData" /> is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData.CreateTexture">
      <summary>
            Creates the texture.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData.GetTexture">
      <summary>
            Gets the texture.
            </summary>
      <returns>The texture.</returns>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData.SetEnabled(System.Boolean)">
      <summary>
            Sets the enabled state of the texture.
            </summary>
      <param name="enabled">A value indicating the enabled state of the texture.</param>
    </member>
    <member name="M:Assets.Scripts.Cameras.SceneMasterCameraScript.RenderTextureData.UnloadTexture">
      <summary>
            Unloads the texture.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.BodyCollisionHandler">
      <summary>
            Class that handles collisions on a body script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler._bodyScript">
      <summary>
            The body script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler._collidingWithTerrainThisFrame">
      <summary>
            Flag that tracks if the rocket is colliding with the terrain this frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler._debugCheckPartLookup">
      <summary>
            The debug check part lookup. I'm keeping this in here while we are early in development to keep an eye out
            for potential bugs with the part breakage code.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler._disconnectParts">
      <summary>
            The parts to disconnect after a collision.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler._jointBroke">
      <summary>
            The joint broke flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler._playCollisionSound">
      <summary>
            The play collision sound flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler._playDisconnectSound">
      <summary>
            The player disconnect sound flag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.#ctor(Assets.Scripts.Craft.BodyScript,Assets.Scripts.Craft.CraftScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.BodyCollisionHandler" /> class.
            </summary>
      <param name="bodyScript">The body script.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.BodyCollisionHandler.CollisionResponseType">
      <summary>
            The available collision responses.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler.CollisionResponseType.None">
      <summary>
            The collision does not have a response
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler.CollisionResponseType.Disconnect">
      <summary>
            The collision should result in the part disconnecting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler.CollisionResponseType.Explode">
      <summary>
            The collision should result in the part exploding.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.BodyCollisionHandler.PartDisconnectFlags">
      <summary>
            Flags defining how to handle a disconnected part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler.PartDisconnectFlags.None">
      <summary>
            No special disconnect flags
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler.PartDisconnectFlags.Explode">
      <summary>
            Indicates the part should explode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler.PartDisconnectFlags.DisablePart">
      <summary>
            Indicates the part should be disabled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler.PartDisconnectFlags.PlayDisconnectSound">
      <summary>
            Indicates the disconnect sound should be played.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler.PartDisconnectFlags.DefaultExplosion">
      <summary>
            The default flags for an explosion.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyCollisionHandler.PartDisconnectFlags.DefaultNoExplosion">
      <summary>
            The default flags for no explosion.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyCollisionHandler.CollidingWithTerrain">
      <summary>
            Gets a value indicating whether the body is colliding with terrain.
            </summary>
      <value>
        <c>true</c> if colliding with terrain; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.ExplodePart(ModApi.Craft.Parts.IPartScript,System.Single,System.Int32)">
      <summary>
            Creates an explosion and destroys the part. If zero is provided for power, then the part will
            just simply be destroyed, without an explosion.
            </summary>
      <param name="part">The part.</param>
      <param name="power">The explosion power.</param>
      <param name="numCascades">The number of explosion cascades.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.FixedUpdate">
      <summary>
            Called on the body's FixedUpdate method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.OnCollisionEnter(UnityEngine.Collision)">
      <summary>
            Called on the body's OnCollisionEnter method.
            </summary>
      <param name="collision">The collision.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.OnCollisionStay(UnityEngine.Collision)">
      <summary>
            Called on the body's OnCollisionStay method.
            </summary>
      <param name="collision">The collision.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.OnJointBreak">
      <summary>
            Called when the joint breaks.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.QueuePartGroupForDestruction(ModApi.Craft.Parts.IPartGroupScript)">
      <summary>
            Adds the part group to the list of part groups to destroy this frame.
            </summary>
      <param name="partGroup">The part group.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.SetCollidingWithTerrainThisFrameFlag">
      <summary>
            Sets a flag on the body indicating that one if its colliders is currently in contact with the ground.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.Update">
      <summary>
            Called on the Body's Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.CreateDisconnectedPart(System.Boolean,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Creates a standard disconnected part object for the specified part.
            </summary>
      <param name="explode">if set to <c>true</c> then explode the part.</param>
      <param name="part">The part for which to create the disconnect part object.</param>
      <returns>
            The requested object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.GetCollisionResponse(ModApi.Craft.Parts.IPartFlightCollision,ModApi.Craft.Parts.IConfigData)">
      <summary>
            Gets the collision response.
            </summary>
      <param name="collision">The collision.</param>
      <param name="partConfig">Type of the part.</param>
      <returns>The collision response.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.AddDisconnectedPart(Assets.Scripts.Craft.BodyCollisionHandler.DisconnectedPart)">
      <summary>
            Adds the disconnected part to the disconnected list.
            Parts added to this list will be disconnected at the next available opportunity.
            </summary>
      <param name="disconnectedPart">The disconnected part to add.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.CreateBodyScript(System.Collections.Generic.List{ModApi.Craft.Parts.PartData},System.Single)">
      <summary>
            Creates the body script.
            </summary>
      <param name="bodyPartList">The body part list.</param>
      <param name="maxSeparationTorque">The maximum separation torque.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.DisconnectPartGroup(ModApi.Craft.Parts.IPartGroupScript,System.Boolean)">
      <summary>
            Disconnects all part connections for all parts in the part group.
            </summary>
      <param name="partGroup">The part group.</param>
      <param name="isExploding">if set to <c>true</c> [is exploding].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.DisconnectParts(System.Collections.Generic.List{Assets.Scripts.Craft.BodyCollisionHandler.DisconnectedPart})">
      <summary>
            Disconnects the parts in the specified list.
            </summary>
      <param name="disconnectedParts">The parts to be disconnected.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.HandleBrokenJoints">
      <summary>
            Handles the broken joints, if there are any.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.HandleCollision(ModApi.Craft.Parts.IPartFlightCollision)">
      <summary>
            Handles the collision.
            </summary>
      <param name="collision">The collision.</param>
      <returns>
            True if the collision was handled.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.OnPartDisconnectExplosion(Assets.Scripts.Craft.BodyCollisionHandler.DisconnectedPart)">
      <summary>
            Called when a part disconnect explosion occurs.
            </summary>
      <param name="disconnectedPart">The part.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyCollisionHandler.RecreateJoint(ModApi.Craft.IBodyJoint)">
      <summary>
            Strap in, because this is a helluva method. It destroys a joint, and then updates the BodyJointData to use the
            new BodyScript and updates the local anchor position on said body. It's tricky. If you need to fiddle with it,
            be careful and pray to the Many-Faced God.
            </summary>
      <param name="joint">The joint.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.BodyCollisionHandler.DisconnectedPart">
      <summary>
            Contains information about a part that has been disconnected.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyCollisionHandler.DisconnectedPart.DisconnectFlags">
      <summary>
            Gets or sets the disconnect flags.
            </summary>
      <value>
            The disconnect flags.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyCollisionHandler.DisconnectedPart.ExplosionCascadeCount">
      <summary>
            Gets or sets the explosion cascade count, which counts
            how many explosions have been created by other explosions.
            </summary>
      <value>
            The explosion cascade count.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyCollisionHandler.DisconnectedPart.Force">
      <summary>
            Gets or sets the force.
            </summary>
      <value>
            The force.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyCollisionHandler.DisconnectedPart.Part">
      <summary>
            Gets or sets the part.
            </summary>
      <value>
            The part.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.BodyJoint">
      <summary>
            The joint between two bodies.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyJoint._joints">
      <summary>
            The joints.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyJoint.#ctor(ModApi.Craft.Parts.PartConnection,ModApi.Craft.IBodyScript,ModApi.Craft.IBodyScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.BodyJoint" /> class.
            </summary>
      <param name="partConnection">The part connection.</param>
      <param name="body">The body that owns the joint.</param>
      <param name="connectedBody">The connected body (does not own the joint).</param>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyJoint.Body">
      <summary>
            Gets the body of the joint.
            </summary>
      <value>
            The body joint.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyJoint.Broken">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Craft.BodyJoint" /> is broken.
            </summary>
      <value>
        <c>true</c> if broken; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyJoint.ConnectedBody">
      <summary>
            Gets the connected body.
            </summary>
      <value>
            The connected body.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyJoint.IntermediaryRigidbody">
      <summary>
            Gets or sets the intermediary rigidbody. Sometimes a body joint may actually consist of two physics joints, which
            are connected with a small intermediary rigid body.
            </summary>
      <value>
            The intermediary rigidbody.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyJoint.Joints">
      <summary>
            Gets the Unity physics joints involved in this body joint.
            </summary>
      <value>
            The joints.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyJoint.PartConnection">
      <summary>
            Gets the part connection.
            </summary>
      <value>
            The part connection.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyJoint.Destroy">
      <summary>
            Destroys the joint and notifies the craft that the structure has been changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyJoint.Destroy(System.Boolean)">
      <summary>
            Destroys the joint.
            </summary>
      <param name="destroyPartConnection">
            if set to <c>true</c> then destroy the part connection. This is normally what you want. The part connection
            should only be preserved in rare cases, such as by the body collision handler that needs to recreate joints.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyJoint.FlightEnd">
      <summary>
            Called when the craft is being removed from the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyJoint.GetJointForAttachPoint(ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Gets the physics joint for the specified attach point.
            </summary>
      <param name="attachPoint">The attach point.</param>
      <returns>The physics joint, or null if the attach point does not have a joint in this body joint.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyJoint.OtherBody(ModApi.Craft.IBodyScript)">
      <summary>
            Convenience method to get the other body in the joint.
            </summary>
      <param name="body">The body you don't want to get.</param>
      <returns>The body you do want to get.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyJoint.SetJoint(UnityEngine.ConfigurableJoint,ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Sets the joint.
            </summary>
      <param name="joint">The configurable joint.</param>
      <param name="attachPoint">The attach point.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyJoint.DestroyPhysicsJoints">
      <summary>
            Destroys only the physics joints.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyJoint.OnPartConnectionDestroyed(ModApi.Craft.Parts.PartConnection)">
      <summary>
            Called when the part connection is destroyed.
            </summary>
      <param name="partConnection">The part connection.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.BodyScript">
      <summary>
            Script for a group of parts that are simulated together as a single rigid body.
            </summary>
      <seealso cref="T:ModApi.GameLoop.MonoBehaviourBase" />
      <seealso cref="T:ModApi.Craft.IBodyScript" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._bodyCollisionHandler">
      <summary>
            The body collision handler.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._dragPhysics">
      <summary>
            The drag physics
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._frameDrag">
      <summary>
            The frame drag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._lastVelocity">
      <summary>
            The velocity from last frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._partIsland">
      <summary>
            The part island
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._plasmaTemperature">
      <summary>
            The stagnation point temperature times the convection rate, in Kelvin. Just a fudge number
            used to get the re-entry effects about right.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._recalculateMass">
      <summary>
            The recalculate mass flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._recenteredThisFrame">
      <summary>
            The flag that indicates that the body has been re-centered this frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._reentryQuality">
      <summary>
            The reentry effects quality settings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._rigidBody">
      <summary>
            The _rigid body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._rotationCache">
      <summary>
            The cached world rotation of the body script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._totalPartDrag">
      <summary>
            The total part drag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._transform">
      <summary>
            The transform component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._vaporTrailStrength">
      <summary>
            The vapor trail strength
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._waterPhysics">
      <summary>
            The water physics
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._waterPrecisionBody">
      <summary>
            The water precision body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyScript._waterPrecisionPart">
      <summary>
            The water precision part
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.BodyScript.UnloadedFromGameView">
      <summary>
            Occurs when the body script has been unloaded from the game view.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.EnableDragLift">
      <summary>
            Gets or sets a value indicating whether to enable drag lift on bodies.
            </summary>
      <value>
        <c>true</c> if drag lift should be enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.Acceleration">
      <summary>
            Gets the acceleration of the body for this frame, in m/s.
            </summary>
      <value>
            The acceleration of the body for this frame, in m/s.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.ApplyStandardForces">
      <summary>
            Gets or sets a value indicating whether to apply standard forces such as drag, gravity, buoyancy, etc.
            </summary>
      <value>
        <c>true</c> if standard forces will be applied; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.CenterOfMass">
      <summary>
            Gets or sets the center of mass, relative to the transform's origin.
            </summary>
      <value>
            The center of mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.CollidingWithTerrain">
      <summary>
            Gets a value indicating whether the body is colliding with terrain.
            </summary>
      <value>
        <c>true</c> if colliding with terrain; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.CraftScript">
      <summary>
            Gets the craft.
            </summary>
      <value>
            The craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.Data">
      <summary>
            Gets the body data.
            </summary>
      <value>
            The body data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.Disconnected">
      <summary>
            Gets or sets a value indicating whether this body is disconnected from the craft.
            </summary>
      <value>
        <c>true</c> if this body is disconnected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.FluidDensity">
      <summary>
            Gets the fluid density that the body is currently in (atmosphere/water/vacuum).
            </summary>
      <value>
            The fluid density that the body is currently in (atmosphere/water/vacuum).
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.GameObject">
      <summary>
            Gets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.IsDebris">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:ModApi.Craft.IBodyScript" /> is debris. If it
            is debris, it will not be separated into a CraftNode when disconnected bodies are processed.
            </summary>
      <value>
        <c>true</c> if debris; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.Joints">
      <summary>
            Gets the joints.
            </summary>
      <value>
            The joints.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.MachNumber">
      <summary>
            Gets the Mach number.
            </summary>
      <value>
            The Mach number.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.PartGroups">
      <summary>
            Gets the part groups.
            </summary>
      <value>
            The part groups.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.ModApi#Craft#IBodyScript#PartGroups">
      <summary>
            Gets the part groups.
            </summary>
      <value>
            The part groups.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.PartIsland">
      <summary>
            Gets or sets the part island, which is the list of all parts in the craft that can be reached
            from any part in this body via part connections. This includes all parts in this body.
            </summary>
      <value>
            The part island.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.RigidBody">
      <summary>
            Gets the rigidbody.
            </summary>
      <value>
            The rigidbody.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.SurfaceVelocity">
      <summary>
            Gets the velocity of the body relative to the surface of the planet in frame coordinates.
            </summary>
      <value>
            The surface velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.Transform">
      <summary>
            Gets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.Velocity">
      <summary>
            Gets the velocity.
            </summary>
      <value>
            The velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.VelocityMagnitude">
      <summary>
            Gets the velocity magnitude.
            </summary>
      <value>
            The velocity magnitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.VelocityNormalized">
      <summary>
            Gets the velocity normalized.
            </summary>
      <value>
            The velocity normalized.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.VelocitySquared">
      <summary>
            Gets the velocity squared.
            </summary>
      <value>
            The velocity squared.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.WaterPhysics">
      <summary>
            Gets the water physics.
            </summary>
      <value>
            The water physics.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.WaterPhysicsEnabled">
      <summary>
            Gets a value indicating whether water physics enabled for this body.
            </summary>
      <value>
        <c>true</c> if water physics are enabled for this body; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyScript.WorldCenterOfMass">
      <summary>
            Gets or sets the world center of mass.
            </summary>
      <value>
            The world center of mass.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.AddFrameDrag(ModApi.Craft.Drag.DragDirection,System.Single,UnityEngine.Vector3)">
      <summary>
            Adds drag that will only be applied this frame.
            </summary>
      <param name="direction">The direction.</param>
      <param name="drag">The drag to add.</param>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.CalculateDrag">
      <summary>
            Calculates the drag for this body.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.ExplodePart(ModApi.Craft.Parts.IPartScript,System.Single,System.Int32)">
      <summary>
            Creates an explosion and destroys the part. If zero is provided for power, then the part will
            just simply be destroyed, without an explosion.
            </summary>
      <param name="part">The part.</param>
      <param name="power">The explosion power.</param>
      <param name="numCascades">The number of explosion cascades.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.FlightEnd">
      <summary>
            Called when the craft is being removed from the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.Initialize(Assets.Scripts.Craft.CraftScript,ModApi.Craft.BodyData,UnityEngine.Rigidbody)">
      <summary>
            Initializes the body script.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="body">The body.</param>
      <param name="rigidBody">The rigid body.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.MoveToCraft(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Moves the body/script to the specified craft.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.OnCraftStructureChanging">
      <summary>
            Called when the craft structure is changing, but has not yet finished changing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.OnInitialized">
      <summary>
            Called after the body has been initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.OnPartMassChanged">
      <summary>
            Sets a flag on the body script notifying it that a part's mass has changed and the body needs to
            recalculate its total mass.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.OnRecentered">
      <summary>
            Called when the body has been re-centered in the reference frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.QueuePartGroupForDestruction(ModApi.Craft.Parts.IPartGroupScript)">
      <summary>
            Adds the part group to the list of part groups to destroy this frame.
            </summary>
      <param name="partGroup">The part group.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.RecalculateMass">
      <summary>
            Recalculates the mass and CoM of the body from its parts. This method should only be called
            during flight.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.SetBody(UnityEngine.Rigidbody)">
      <summary>
            Sets the rigid-body for this <see cref="T:ModApi.Craft.IBodyScript" /></summary>
      <param name="body">The rigid-body to use for this <see cref="T:ModApi.Craft.IBodyScript" />.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.SetCollidingWithTerrainThisFrameFlag">
      <summary>
            Sets a flag on the body indicating that some part of it is currently in contact with the ground this
            frame. Normal colliders should be handled by the BodyScript automatically, but this method can be used
            for other types of collision elements, such as wheel colliders, that may not trigger OnCollisionStay events.
            This must be called every frame that the collision element is in contact with the ground.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.UpdateHeatAndEffects(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Updates the heat and effects.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.OnCollisionEnter(UnityEngine.Collision)">
      <summary>
            Called when the body enters a collision.
            </summary>
      <param name="collision">The collision.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.OnCollisionStay(UnityEngine.Collision)">
      <summary>
            Called once per frame for every collider/rigidbody that is touching rigidbody/collider.
            </summary>
      <param name="collision">The collision.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.OnJointBreak(System.Single)">
      <summary>
            Called when a joint attached to the same game object broke.
            </summary>
      <param name="breakForce">The break force.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.ApplyDrag(System.Single)">
      <summary>
            Calculates and applies the drag to the body.
            </summary>
      <param name="fluidDensity">The fluid density.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.FirstFrameUpdate">
      <summary>
            An update method that runs on the first frame after other update methods and before the late update methods.
            </summary>
      <returns>The coroutine enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.OnDestroy">
      <summary>
            Called when the script is being destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.OnValidate">
      <summary>
            Called when a property changes in the inspector.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.UpdatePartTemperatures(System.Single)">
      <summary>
            Updates the part temperatures by cooling them towards a desired "operating" temperature.
            </summary>
      <param name="deltaTime">The delta time. This takes into account warp and may be clamped.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyScript.UpdateReentryEffectValues(System.Single)">
      <summary>
            Updates the reentry effect values for all parts in the body.
            </summary>
      <param name="deltaTime">The delta time. This takes into account warp and may be clamped.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.BodyWaterPhysics">
      <summary>
            Provides water physics for BodyScripts
            </summary>
      <seealso cref="!:Assets.Scripts.Craft.WaterPhysics&lt;ModApi.Craft.IBodyWaterPhysics&gt;" />
      <seealso cref="T:ModApi.Craft.IBodyWaterPhysics" />
    </member>
    <member name="F:Assets.Scripts.Craft.BodyWaterPhysics._angularDragTween">
      <summary>
            The angular drag tween
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyWaterPhysics._beginTimeRestingAtSurface">
      <summary>
            The time that the body started resting at the water surface.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyWaterPhysics._bodyScript">
      <summary>
            The body script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyWaterPhysics._defaultAngularDrag">
      <summary>
            The angular drag in atmosphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.BodyWaterPhysics._precisionModePartOverride">
      <summary>
            The precision mode part override.  It is used for debug purposes to force all parts within the body to a specific precision mode.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyWaterPhysics.#ctor(Assets.Scripts.Craft.BodyScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.BodyWaterPhysics" /> class.
            </summary>
      <param name="bodyScript">The body script.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyWaterPhysics.BodyScript">
      <summary>
            Gets the body script.
            </summary>
      <value>
            The body script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyWaterPhysics.IsPrecisionModePerPart">
      <summary>
            Gets a value indicating whether the current precision mode processes individual parts for water physics, or solely at the rigid body level.
            This is used to allow PartWaterPhysics objects to know if they need to manually forward water related events since their Update method won't be called.
            </summary>
      <value>
        <c>true</c> if the current precision mode processes individual parts for water physics; otherwise, <c>false</c> to signify it is calculated solely at the rigid body level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyWaterPhysics.PrecisionMode">
      <summary>
            Gets or sets the precision mode.
            </summary>
      <value>
            The precision mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.BodyWaterPhysics.PrecisionModePartOverride">
      <summary>
            Gets or sets the part precision override.  When set, this will assign the specified precision mode to all parts within the body.  It is used for debug purposes to force all
            parts within the body to a specific precision mode.
            </summary>
      <value>
            The part precision override.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyWaterPhysics.Update">
      <summary>
            Updates the water physics for this object.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyWaterPhysics.ApplyBuoyancy">
      <summary>
            Applies the buoyancy force to this rigid body.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyWaterPhysics.ApplyWaterPhysics">
      <summary>
            Applies the water physics.
            </summary>
      <returns>
            The current WaterState.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyWaterPhysics.CalculateTotalDisplacement">
      <summary>
            Calculates the total displacement from the body's parts' colliders.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyWaterPhysics.ReduceBobbing">
      <summary>
            Tries to reduce the up-down bobbing of a body while on the surface of the water.  It is a "fudge factor" type method in that it doesn't follow any real physics
            formulas...just an attempt to solve the bobbing however possible.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyWaterPhysics.ReduceRocking(Assets.Scripts.Craft.WaterPhysics{ModApi.Craft.IBodyWaterPhysics}.WaterState)">
      <summary>
            Attempt to reduce the side-to-side rocking of a body while on the surface of the water.  It is a "fudge factor" type method in that it doesn't follow any real physics
            formulas...just an attempt to solve the bobbing however possible.
            </summary>
      <param name="state">The current water state.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.BodyWaterPhysics.SetPartsPrecision(System.Nullable{ModApi.Craft.PrecisionModeType})">
      <summary>
            Sets all parts in this rigid body to the specified precision. It is used for debug purposes to force all parts within the body to a specific precision mode.
            </summary>
      <param name="precisionMode">The precision mode.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.CraftAudio">
      <summary>
            Updates audio from the craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftAudio._collisionSoundCooldown">
      <summary>
            The collision sound cooldown
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftAudio._collisionSoundPosition">
      <summary>
            The collision sound position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftAudio._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftAudio._disconnectSoundCooldown">
      <summary>
            The disconnect sound cooldown
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftAudio._disconnectSoundPosition">
      <summary>
            The disconnect sound position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftAudio._windNoise">
      <summary>
            The wind noise
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftAudio.#ctor(ModApi.Craft.ICraftScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.CraftAudio" /> class.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftAudio.PlayCollisionSound(UnityEngine.Vector3)">
      <summary>
            Plays the collision sound at the next update.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftAudio.PlayDisconnectSound(UnityEngine.Vector3)">
      <summary>
            Plays the disconnect sound at the next update.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftAudio.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftAudio.CreateWindNoise(UnityEngine.GameObject)">
      <summary>
            Creates the wind noise.
            </summary>
      <param name="target">The target game object to add the audio to.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftAudio.UpdateWindNoise">
      <summary>
            Updates the wind noise.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.CraftBuilder">
      <summary>
            Handles the building of a craft script from a craft object.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.#ctor(ModApi.Craft.CraftData)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.CraftBuilder" /> class.
            </summary>
      <param name="craft">The craft data.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftBuilder.Craft">
      <summary>
            Gets the craft data.
            </summary>
      <value>
            The craft data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftBuilder.InDesigner">
      <summary>
            Gets a value indicating whether [in designer].
            </summary>
      <value>
        <c>true</c> if [in designer]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CalculateCenterOfMass(System.Collections.Generic.ICollection{ModApi.Craft.Parts.PartData})">
      <summary>
            Calculates the center of mass of all of the parts in the list.
            </summary>
      <param name="parts">The parts.</param>
      <returns>The result.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CalculateInertiaTensors(Assets.Scripts.Craft.BodyScript,System.Boolean)">
      <summary>
            Calculates the inertia tensors for the body script. The inertia tensors must be calculated after all of
            the parts have been added under this body. Also, the kinematic state must be turned off so that Unity/PhysX will
            calculate initial inertia tensors for the body. The finalKinematicState parameter can be used to instruct
            this method what to set the kinematic state to before exiting.
            </summary>
      <param name="bodyScript">The body script.</param>
      <param name="finalKinematicState">Flag that determines what the kinematic state of the body should be
            when exiting this function.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateBodyData(System.Collections.Generic.ICollection{ModApi.Craft.Parts.PartData},UnityEngine.Transform)">
      <summary>
            Creates the body from the list of parts.
            </summary>
      <param name="parts">The list of parts in the body.</param>
      <param name="craftTransform">The craft transform.</param>
      <returns>
            The body data.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateBodyDatas(ModApi.Craft.ICraftScript)">
      <summary>
            Creates and assigns the body-data for the specified craft. This method should only be called from the designer.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateBodyJoint(ModApi.Craft.Parts.PartConnection)">
      <summary>
            Creates the body joint.
            </summary>
      <param name="partConnection">The part connection.</param>
      <returns>
            The new body joint.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateBodyScript(Assets.Scripts.Craft.CraftScript,ModApi.Craft.BodyData,System.Nullable{UnityEngine.Quaternion})">
      <summary>
            Creates the body script for the body.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="body">The body.</param>
      <param name="bodyRotation">Optional argument to override using the body.Rotation. Null will use the rotation specified in body.Rotation.</param>
      <returns>
            The body script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateCraftScript(ModApi.Craft.CraftData,System.Boolean)">
      <summary>
            Creates the craft script and all associated game objects.
            </summary>
      <param name="craft">The craft.</param>
      <param name="createBodyScripts">if set to <c>true</c> then create body scripts.</param>
      <returns>
            The craft script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateModifierScripts(ModApi.Craft.Parts.PartData)">
      <summary>
            Creates the modifier scripts for the part.
            </summary>
      <param name="part">The part.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreatePartGameObject(ModApi.Craft.Parts.PartData,ModApi.Craft.ICraftScript)">
      <summary>
            Generates the game object for part, and assigns the part script. It is created directly under
            the craft's transform.
            </summary>
      <param name="part">The part.</param>
      <param name="craftScript">The craft script.</param>
      <returns>
            The game object for the part.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreatePartGameObjects(System.Collections.Generic.IEnumerable{ModApi.Craft.Parts.PartData},ModApi.Craft.ICraftScript)">
      <summary>
            Creates the game objects.
            </summary>
      <param name="parts">The parts.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.DuplicatePart(ModApi.Craft.Parts.PartData,ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Duplicates the part.
            </summary>
      <param name="part">The part.</param>
      <param name="craftScript">The craft script.</param>
      <param name="clearSymmetryIds">If <c>true</c> symmetry IDs will be nulled out on the duplicate part.</param>
      <returns>The duplicated part.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.GetPartBodyData(ModApi.Craft.Parts.PartData,ModApi.Craft.Assembly)">
      <summary>
            Gets the body data containing the part data.
            </summary>
      <param name="part">The part.</param>
      <param name="assembly">The assembly.</param>
      <returns>The body data, or null if not found.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.SetJointTargetRotation(UnityEngine.ConfigurableJoint,UnityEngine.Quaternion)">
      <summary>
            Sets the target rotation of the joint using a target rotation defined local space relative to the body.
            </summary>
      <param name="joint">The joint.</param>
      <param name="targetBodyLocalRotation">The target body local rotation.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.BuildCraft(System.Boolean)">
      <summary>
            Builds the craft.
            </summary>
      <param name="createRigidBodies">if set to <c>true</c> then create the rigid bodies.</param>
      <returns>
            The craft script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.AreBodiesConnectedWithJoint(ModApi.Craft.IBodyScript,ModApi.Craft.IBodyScript)">
      <summary>
            Checks if the parts are connected with a joint.
            </summary>
      <param name="bodyA">The body a.</param>
      <param name="bodyB">The body b.</param>
      <returns>True if the parts are jointed.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.BuildPartGroup(ModApi.Craft.Parts.PartData,System.Collections.Generic.List{ModApi.Craft.Parts.PartData},Assets.Scripts.Craft.PartGroupScript,System.Int32)">
      <summary>
            Recursive method that builds up a part group.
            </summary>
      <param name="part">The part to start with.</param>
      <param name="remainingParts">The remaining parts.</param>
      <param name="partGroup">The part group.</param>
      <param name="maxPartsPerGroup">The maximum parts per group.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateBodyJointData(ModApi.Craft.Parts.PartConnection,ModApi.Craft.ICraftScript)">
      <summary>
            Creates the body joint.
            </summary>
      <param name="partConnection">The part connection.</param>
      <param name="craftScript">The craft script.</param>
      <returns>
            The new body joint.
            </returns>
      <exception cref="T:System.NotImplementedException">Automatic intermediary rigid bodies are not supported. Ensure that two part connections that both " +
                                "require a physics joint cannot be connected directly to each other</exception>
      <exception cref="T:System.NotImplementedException">Automatic intermediary rigid bodies are not supported.</exception>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateBodyJointDatas(ModApi.Craft.ICraftScript)">
      <summary>
            Creates the body joint datas. This method should only be called from the designer when saving a craft.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateBodyPartLists(System.Collections.Generic.IReadOnlyList{ModApi.Craft.Parts.PartData})">
      <summary>
            Identifies the different bodies that need to be created for the given parts and generates
            the list of parts that belong in each of those bodies.
            </summary>
      <param name="parts">The parts.</param>
      <returns>The list of body part lists.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateBodyScripts(ModApi.Craft.Assembly,Assets.Scripts.Craft.CraftScript)">
      <summary>
            Creates the bodies.
            </summary>
      <param name="assembly">The assembly.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateJoint(ModApi.Craft.BodyData,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,ModApi.Craft.BodyData,UnityEngine.Vector3,System.Nullable{UnityEngine.Vector3},System.Nullable{UnityEngine.Vector3},ModApi.Craft.BodyJointData.BodyJointType,System.Boolean,System.Single,System.Single)">
      <summary>
            Creates the joint.
            </summary>
      <param name="jointBodyData">The joint body data.</param>
      <param name="jointPosition">The joint position in local space to the jointBody.</param>
      <param name="jointAxis">The joint axis in local space to the jointBody.</param>
      <param name="secondaryAxis">The secondary axis.</param>
      <param name="connectedBodyData">The connected body data.</param>
      <param name="connectedPosition">The joint position in local space tot he connected body.</param>
      <param name="connectedBodyNeutralPosition">The connected body's neutral position, in coordinates local to the body identified by jointBodyData.</param>
      <param name="connectedBodyNeutralRotation">The connected body's neutral rotation, in coordinates local to the body identified by jointBodyData.</param>
      <param name="jointType">Type of the joint.</param>
      <param name="enableCollision">if set to <c>true</c> [enable collision].</param>
      <param name="breakTorque">The break torque.</param>
      <param name="breakForce">The break force.</param>
      <returns>
            The configurable joint.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreateJointsForRigidBodies(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Creates the joints for rigid bodies.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.CreatePartGroups(Assets.Scripts.Craft.BodyScript,System.Collections.Generic.List{ModApi.Craft.Parts.PartData},System.Int32@)">
      <summary>
            Creates the part groups.
            </summary>
      <param name="body">The body.</param>
      <param name="parts">The parts.</param>
      <param name="partGroupId">The current part group identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.GetAttachPointPosition(UnityEngine.Vector3,ModApi.Craft.Parts.PartData)">
      <summary>
            Gets the attach point position, and scales it if necessary.
            </summary>
      <param name="p">The original attach point position.</param>
      <param name="part">The part.</param>
      <returns>
            The attach point position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.GetCenterOfAttachPoints(ModApi.Craft.Parts.PartConnection)">
      <summary>
            Gets the center of the attach points in the list.
            </summary>
      <param name="partConnection">The part connection.</param>
      <returns>
            The center of the attach point positions, in world coordinates.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilder.IsPartInRigidBody(ModApi.Craft.BodyData,ModApi.Craft.Parts.PartData)">
      <summary>
            Determines whether [is part in rigid body] [the specified rigid body group].
            </summary>
      <param name="bodyData">The rigid body group.</param>
      <param name="part">The part.</param>
      <returns>True if the part is in the rigid body.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.CraftBuilder.CenterOfMassResult">
      <summary>
            Result for a center of mass calculation.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftBuilder.CenterOfMassResult.TotalMass">
      <summary>
            Gets or sets the total mass.
            </summary>
      <value>
            The total mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftBuilder.CenterOfMassResult.WorldCenterOfMass">
      <summary>
            Gets or sets the center of mass in world position.
            </summary>
      <value>
            The center of mass.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.CraftBuilderDebug">
      <summary>
            Provides debug methods that can be used by CraftBuilder.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilderDebug.FindMissingColliders(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Finds colliders that might have been disabled (or enabled) after a body has calculated its inertia tensors.
            This can be problematic if the inertia tensors need that collider in their calculation.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilderDebug.GetColliderName(UnityEngine.Collider)">
      <summary>
            Gets the name of the collider.
            </summary>
      <param name="collider">The collider.</param>
      <returns>The collider name.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftBuilderDebug.PrintColliderList(System.String,System.Collections.Generic.IEnumerable{UnityEngine.Collider})">
      <summary>
            Prints the collider list.
            </summary>
      <param name="name">The name.</param>
      <param name="colliders">The colliders.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.CraftLoaderScript">
      <summary>
            A script that manages the loading of crafts.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.Create(UnityEngine.GameObject)">
      <summary>
            Creates the craft loader script.
            </summary>
      <param name="parent">The parent object.</param>
      <returns>The craft loader script reference.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.LoadCraftImmediate(System.String)">
      <summary>
            Loads the craft with the specified ID.
            This will show no message dialogs or errors and will attempt to force the
            loading of craft with potential issues (version or mod requirements not met).
            Some errors may be logged and exceptions could be thrown for show-stopping errors.
            </summary>
      <param name="craftId">The craft identifier.</param>
      <returns>The requested craft.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.LoadCraftImmediate(System.Xml.Linq.XElement)">
      <summary>
            Loads the craft with the specified XML.
            This will show no message dialogs or errors and will attempt to force the
            loading of craft with potential issues (version or mod requirements not met).
            Some errors may be logged and exceptions could be thrown for show-stopping errors.
            </summary>
      <param name="craftXml">The craft XML.</param>
      <returns>The requested craft.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.LoadCraftInteractive(System.String,System.Action{ModApi.Craft.CraftData},System.Action)">
      <summary>
            Loads the craft with the specified ID.
            This may be an interactive process, with message dialogs or errors being shown before completing.
            As such, the craft may not be loaded immediately. In fact, the craft may not be loaded at all due to errors or cancellation.
            The success callback will be invoked if the craft was loaded successfully (not necessarily without issues though).
            The failure callback will be invoked for any show-stopping errors that were encountered or if the loading was canceled.
            </summary>
      <param name="craftId">The craft identifier.</param>
      <param name="successCallback">The success callback.</param>
      <param name="failureCallback">The failure callback.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.LoadCraftInteractive(System.Xml.Linq.XElement,System.Action{ModApi.Craft.CraftData},System.Action)">
      <summary>
            Loads the craft with the specified XML.
            This may be an interactive process, with message dialogs or errors being shown before completing.
            As such, the craft may not be loaded immediately. In fact, the craft may not be loaded at all due to errors or cancellation.
            The success callback will be invoked if the craft was loaded successfully (not necessarily without issues though).
            The failure callback will be invoked for any show-stopping errors that were encountered or if the loading was canceled.
            </summary>
      <param name="craftXml">The craft XML.</param>
      <param name="successCallback">The success callback.</param>
      <param name="failureCallback">The failure callback.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.CheckRequiredMods(System.Xml.Linq.XElement,System.String,System.Action,System.Action)">
      <summary>
            Checks the required mods for the craft, comparing it to the currently enabled mods.
            If some required mods are missing, a dialog will be displayed informing the user.
            </summary>
      <param name="craftXml">The XML of the craft being loaded.</param>
      <param name="craftName">The name of the craft being loaded.</param>
      <param name="failureCallback">The failure callback that is to be invoked if any show-stopping errors or cancellations occur.</param>
      <param name="continueAction">The continue action that is to be invoked if no failures or cancellations occur.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.CheckXmlVersion(System.Xml.Linq.XElement,System.String,System.Action,System.Action)">
      <summary>
            Checks the XML version of the craft, comparing it to the current XML version.
            If the craft XML version is newer, this will pop a dialog asking the user to force the loading of the craft or cancel it.
            </summary>
      <param name="craftXml">The XML of the craft being loaded.</param>
      <param name="craftName">The name of the craft being loaded.</param>
      <param name="failureCallback">The failure callback that is to be invoked if any show-stopping errors or cancellations occur.</param>
      <param name="continueAction">The continue action that is to be invoked if no failures or cancellations occur.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.LogModRequirementsNotMetError(System.String,ModApi.Mods.RequiredModsCheck)">
      <summary>
            Logs an error regarding the mod requirements not being met to load the specified craft.
            </summary>
      <param name="craftName">The name of the craft being loaded.</param>
      <param name="requiredMods">The required mods check.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.ShowErrorMessage(System.String,System.Action)">
      <summary>
            Shows the specified error message as a dialog with an 'Okay' button.
            After clicking the 'Okay' button, the specified action will be invoked (if any).
            </summary>
      <param name="message">The message to display in the dialog.</param>
      <param name="okayAction">The action to invoke after the user clicks the button (or <c>null</c> for no action).</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftLoaderScript.LoadCraftCoroutine(System.Xml.Linq.XElement,System.String,System.Action{ModApi.Craft.CraftData},System.Action)">
      <summary>
            The corountine invoked to actually load the craft data.
            </summary>
      <param name="craftXml">The XML of the craft being loaded.</param>
      <param name="craftName">The name of the craft being loaded.</param>
      <param name="successCallback">The success action that is to be invoked if the loading succeeds.</param>
      <param name="failureCallback">The failure callback that is to be invoked if any show-stopping errors or cancellations occur.</param>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.CraftScript">
      <summary>
            The script for crafts in the game.
            </summary>
      <seealso cref="T:ModApi.GameLoop.MonoBehaviourBase" />
      <seealso cref="T:ModApi.Craft.ICraftScript" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdateWarp" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightLateUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdatePaused" />
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript.DebrisUnloadAgl">
      <summary>
            The minimum AGL at which debris will be considered for removal.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript.DebrisUnloadDistanceSquared">
      <summary>
            The squared distance that debris should be unloaded.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._activeEngines">
      <summary>
            The active engines
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._cameraTarget">
      <summary>
            The camera target
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._centerOfMassTransform">
      <summary>
            The center of mass transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._commandPods">
      <summary>
            The command pods
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._craftFuelSources">
      <summary>
            The craft's fuel sources.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._craftNode">
      <summary>
            The craft node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._debris">
      <summary>
            The debris
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._firstFrame">
      <summary>
            Value indicating whether this is the first frame for this craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._gravityForce">
      <summary>
            The gravity force
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._isInitialized">
      <summary>
            Value indicating whether this craft has been fully initialized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._lastRebuildCenterOfMass">
      <summary>
            The position of the center of mass when the last RebuildCraftStructure was called. If the current CoM
            drifts too far from this, it's a good idea to call RebuildCraftStructure again.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._physicsEnabled">
      <summary>
            The physics enabled flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._processDisconnectedBodies">
      <summary>
            The flag set when the craft needs to check for and process disconnected bodies if necessary.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._recalculateDrag">
      <summary>
            The flag set when the craft should recalculate the drag for its bodies.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._recalculateMass">
      <summary>
            The recalculate mass flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._structureChanged">
      <summary>
        <c>true</c> if the craft's structure changed this frame; otherwise, <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript._terrainAlignedTransform">
      <summary>
            A transform that is positioned at sea level directly below the craft's position and aligned with the gravity vector.  Forward and right vectors are undefined.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.CraftScript.CraftStructureChanged">
      <summary>
            Occurs when the craft structure has changed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.CraftScript.Initialized">
      <summary>
            Occurs after the craft has been fully initialized. If the craft has already been initialized, it is immediately fired and no event subscription is registered.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.CraftScript.TimeMultiplierModeChanged">
      <summary>
            Occurs after the time multiplier changes, and after this <see cref="T:ModApi.Craft.ICraftScript" /> has finished processing the event.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.CraftScript._initialized">
      <summary>
            Occurs when the craft has been initialized.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.CraftScript.CraftOrientationMode">
      <summary>
            The available orientation modes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript.CraftOrientationMode.Rocket">
      <summary>
            The rocket orientation mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.CraftScript.CraftOrientationMode.Airplane">
      <summary>
            The airplane orientation mode.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.ActiveEngines">
      <summary>
            Gets the active engines.
            </summary>
      <value>
            The active engines.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.AltitudeAboveSeaLevel">
      <summary>
            Gets the altitude above sea level of the craft's current frame position.
            </summary>
      <value>
            The altitude above sea level of the craft's current frame position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.AtmosphereSample">
      <summary>
            Gets or sets the current sample from the atmosphere at the current altitude.
            </summary>
      <value>
            The atmospheric sample.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.CameraFocus">
      <summary>
            Gets or sets the camera focus.
            </summary>
      <value>
            The camera focus.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.CameraTargetPosition">
      <summary>
            Gets the camera target position.
            </summary>
      <value>
            The camera target position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.CenterOfMass">
      <summary>
            Gets the center of mass of the craft, which is oriented to primary command pod's pilot orientation.  up=yaw, forward=roll, right=pitch.
            </summary>
      <value>
            The center of mass transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.CommandPods">
      <summary>
            Gets the command pods in the craft.
            </summary>
      <value>
            The command pods in the craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.CraftAudio">
      <summary>
            Gets the craft audio.
            </summary>
      <value>
            The craft audio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.CraftNode">
      <summary>
            Gets or sets the craft node.
            </summary>
      <value>
            The craft node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.Data">
      <summary>
            Gets the craft data.
            </summary>
      <value>
            The craft data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.FlightData">
      <summary>
            Gets the flight data.
            </summary>
      <value>
            The flight data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.FrameHeading">
      <summary>
            Gets the frame heading.
            </summary>
      <value>
            The frame heading.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.FramePosition">
      <summary>
            Gets the frame position.
            </summary>
      <value>
            The frame position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.FrameVelocity">
      <summary>
            Gets the frame velocity.
            </summary>
      <value>
            The frame velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.FuelSources">
      <summary>
            Gets the fuel sources in the craft that don't require direct fuel line connections.
            </summary>
      <value>
            The craft fuel sources.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.FuelTransfer">
      <summary>
            Gets or sets the fuel transfer.
            </summary>
      <value>
            The fuel transfer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.GravityForce">
      <summary>
            Gets or sets the gravity force vector. This is the force of gravity for 1kg of mass. It should be scaled by the
            rigid body's mass before being used to apply a force. This vector is in the reference frame's coordinate system.
            Note: This gravity force is updated once per Update frame.
            </summary>
      <value>
            The gravity vector.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.GravityNormal">
      <summary>
            Gets the gravity vector, normalized.
            </summary>
      <value>
            The gravity vector, normalized.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.InletAir">
      <summary>
            Gets the inlet air.
            </summary>
      <value>
            The inlet air.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.IsPhysicsEnabled">
      <summary>
            Gets or sets a value indicating whether this instance is physics enabled.
            </summary>
      <value>
        <c>true</c> if this instance is physics enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.Mass">
      <summary>
            Gets the mass.
            Note: This mass has been scaled by Constants.MassScale.
            </summary>
      <value>
            The mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.OrientationMode">
      <summary>
            Gets the orientation mode of the craft. This instructs the craft on which direction to
            use for forward and up.
            Rockets point up (0,1,0) and their up-axis is (0,0,-1).
            Airplanes point forward (0,0,1) and their up axis is (0,1,0).
            </summary>
      <value>
            The orientation mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.PartHighlighter">
      <summary>
            Gets the part highlighter for the craft.
            </summary>
      <value>
            The part highlighter for the craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.PrimaryCommandPod">
      <summary>
            Gets the primary command pod, or null if there is not one.
            </summary>
      <value>
            The primary command pod.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.ReferenceFrame">
      <summary>
            Gets the reference frame the craft is currently in.
            </summary>
      <value>
            The reference frame.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.RootPart">
      <summary>
            Gets the root part.
            </summary>
      <value>
            The root part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.SurfaceVelocity">
      <summary>
            Gets the velocity of the craft relative to the surface of the planet in frame coordinates.
            </summary>
      <value>
            The surface velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.CraftScript.Transform">
      <summary>
            Gets the transform for the craft.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.RepositionParticleSystem(UnityEngine.ParticleSystem,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Repositions the particle system.
            </summary>
      <param name="ps">The particle system.</param>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.AbsorbCraftScript(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Absorbs the source craft script into this craft script.
            </summary>
      <param name="sourceCraftScript">The craft script to be absorbed into this craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.AddDebris(ModApi.Craft.ICraftDebris)">
      <summary>
            Adds the debris, which will then be managed by the craft and automatically
            removed when it drifts too far. It will also be updated with reference frame
            recenters.
            </summary>
      <param name="debris">The debris.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.CalculatePrice">
      <summary>
            Calculates the price.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.CalculateStartingBounds">
      <summary>
            Calculates the bounds.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.DestroyBody(ModApi.Craft.BodyData)">
      <summary>
            Destroys the body.
            </summary>
      <param name="body">The body.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.DestroyPart(ModApi.Craft.Parts.PartData,System.Boolean)">
      <summary>
            Removes the part from the craft.
            </summary>
      <param name="part">The part to destroy.</param>
      <param name="destroyPartGameObject">if set to <c>true</c> then destroy the part script game object too.
            Otherwise the part script game object will only be disabled.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.DestroyPartGroup(ModApi.Craft.Parts.IPartGroupScript)">
      <summary>
            Destroys the part group.
            </summary>
      <param name="partGroup">The part group.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.FlightEnd">
      <summary>
            Called when the craft is being removed from the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdateWarp#FlightFixedUpdateWarp(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and only when warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.ModApi#GameLoop#Interfaces#IFlightLateUpdate#FlightLateUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            LateUpdate method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.ModApi#GameLoop#Interfaces#IFlightUpdatePaused#FlightUpdatePaused(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.GetAltitudeAboveGroundLevel(UnityEngine.Vector3)">
      <summary>
            Gets the altitude above ground level at the frame position.
            </summary>
      <param name="framePosition">The frame position.</param>
      <returns>
            The altitude above ground level at the frame position
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.GetAltitudeAboveSeaLevel(UnityEngine.Vector3)">
      <summary>
            Gets the altitude above sea level for the given frame position.
            </summary>
      <param name="framePosition">The frame position.</param>
      <returns>
            The altitude above sea level
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.GetColliderSubmergedPercent(UnityEngine.Collider)">
      <summary>
            Gets the percentage that the supplied collider is submerged under water.
            </summary>
      <param name="collider">The collider to determine the submerged percent for.</param>
      <returns>
            The percentage that the supplied collider is submerged under water.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.GetVerticalVelocity">
      <summary>
            Gets the vertical velocity of the craft, relative to the planet.
            </summary>
      <returns>
            The vertical velocity of the craft, relative to the planet.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.Initialize(ModApi.Craft.CraftData)">
      <summary>
            Initializes the specified craft.
            </summary>
      <param name="craft">The craft data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.InitiateDragRecalculation">
      <summary>
            Initiates the drag recalculation for the craft script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.OnCraftLoaded(System.Boolean)">
      <summary>
            Called after the craft has finished loading.
            </summary>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.OnNodeLoaded">
      <summary>
            Called after this craft's node has been loaded, and assigned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.RaiseDesignerCraftStructureChangedEvent">
      <summary>
            Raises the event that the craft structure has changed for designer events.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.RecalculateCenterOfMass">
      <summary>
            Recalculates the center of mass.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.RecalculateFrameState(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Called when the <see cref="T:Assets.Scripts.Craft.CraftScript" /> should recalculate the state (position/velocity) of any GameObjects that it manages using
            the supplied deltas.
            </summary>
      <param name="positionDelta">The frame delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
      <param name="frameZeroVelocity">The frame zero velocity.</param>
      <remarks>
            This may be called either when the reference frame recenters, or when the node's orbit position/velocity is manually
            updated such as while warping.
            </remarks>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.RecenterTransformOnCoM(System.Boolean)">
      <summary>
            Centers this parent transform on craft's center of mass frame position.
            </summary>
      <param name="updateRotation">if set to <c>true</c> update the rotation too.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.SetMassChanged">
      <summary>
            Notifies the craft that its mass has changed and it should update its center of mass.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.SetPrimaryCommandPod(ModApi.Craft.Parts.ICommandPod)">
      <summary>
            Sets the primary command pod.
            </summary>
      <param name="commandPod">The command pod.</param>
      <exception cref="T:System.InvalidOperationException">SetPrimaryCommandPod can only be called from the designer</exception>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.SetStructureChanged">
      <summary>
            Sets a flag causing the StructureChangedEvent to be called at the end of the frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.SetVelocity(UnityEngine.Vector3)">
      <summary>
            Called when warp mode is exited.
            </summary>
      <param name="velocity">The velocity.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.Unload">
      <summary>
            Called when the craft is being unloaded from the scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.UpdateFuelSourcesForDebris(ModApi.Craft.PartLookup)">
      <summary>
            Updates the fuel sources for debris. Fuel tanks that have been disconnected from
            the main craft's part island will be moved into new fuel sources that are accessible by
            parts in the disconnected part island.
            </summary>
      <param name="partIsland">The part island.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.EnablePhysics(System.Boolean)">
      <summary>
            Enables physics for the craft.
            </summary>
      <param name="enable">if set to <c>true</c> enable physics.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.FindActiveEngines">
      <summary>
            Finds the active engines.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.GetAllRenderers">
      <summary>
            Gets all renderers used by the craft.
            </summary>
      <returns>All renderers used by the craft.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.InitializePartGroups">
      <summary>
            Initializes the part groups.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.OnInitialized">
      <summary>
            Called when this craft has been fully initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.OnNodeDestroyed(ModApi.Flight.Sim.INode)">
      <summary>
            Called when the Craft's node has been destroyed.
            </summary>
      <param name="node">The node.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.OnPhysicsQualitySettingChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.PhysicsQualitySettings.PhysicsUpdateFrequencyQuality})">
      <summary>
            Called when the physics quality setting has changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="newSetting">The <see cref="!:ModApi.Settings.Core.Events.SettingChangedEventArgs&lt;int&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.OnTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called after the CraftNode finishes processing a time multiplier mode changed event.
            </summary>
      <param name="e">The event args.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.ProcessDisconnectedBodies">
      <summary>
            Processes the disconnected bodies.
            </summary>
      <returns>True if a disconnected body was found.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.RebuildCraftStructure(System.Boolean)">
      <summary>
            Rebuilds the craft structure.
            </summary>
      <param name="raiseStructureChangedEvent">if set to <c>true</c> then raise the structure changed event.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.RecenterDebris(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Recenters the debris.
            </summary>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.RepositionTerrainAlignedTransform">
      <summary>
            Repositions the terrain aligned transform.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.SetCenterOfMassGameObjectPosition(UnityEngine.Vector3)">
      <summary>
            Sets the position of the center of mass game object.
            </summary>
      <param name="position">The world position.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.ShadowsOrReflectionsQualityChanged(System.Object,System.EventArgs)">
      <summary>
            Called when shadows or reflections quality changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.UpdateCameraTarget(System.Single)">
      <summary>
            Updates the camera target.
            </summary>
      <param name="unscaledDeltaTime">The unscaled delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.UpdateEventSubscriptions(System.Boolean)">
      <summary>
            Updates event subscriptions for the craft.
            </summary>
      <param name="subscribe">if set to <c>true</c> events will be subscribed to, otherwise; <c>false</c> to unsubscribe.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.UpdateFlightData">
      <summary>
            Updates the flight data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.UpdateGravityForce">
      <summary>
            Updates the gravity force.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.CraftScript.UpdateInContactWithPlanetStatus">
      <summary>
            Checks if the craft is currently in contact with the planet (on the terrain/water surface, under water, etc.).
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.DragCalculatorScript">
      <summary>
            Calculate drag for a parts in a craft.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.DragTempLayer">
      <summary>
            The layer to temporarily place mesh renderers when rendering parts for drag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.TextureSize">
      <summary>
            The texture size to use for rendering the parts for drag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript._camera">
      <summary>
            The camera to render with.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript._dragMaterial">
      <summary>
            The drag material.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript._dragMaterialPool">
      <summary>
            The drag material pool.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript._dragShader">
      <summary>
            The drag shader.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript._resultTexture">
      <summary>
            The result texture
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.DragCalculatorScript.Queue">
      <summary>
            Gets the queue.
            </summary>
      <value>
            The queue.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.CalculateDrag(ModApi.Craft.IBodyScript,System.Action{Assets.Scripts.Craft.DragCalculatorScript.DragResult})">
      <summary>
            Calculates the drag for the craft.
            </summary>
      <param name="bodyScript">The body script.</param>
      <param name="callback">The callback.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.CalculateDrag(ModApi.Craft.ICraftScript)">
      <summary>
            Calculates the drag for all bodies in the craft. This can only be called from the designer when all bodies are
            oriented exactly the same way.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.CreateIdColor(System.Int32)">
      <summary>
            Creates a unique color based on the integer ID.
            </summary>
      <param name="id">The integer id.</param>
      <returns>The color.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.ExtractIdFromColor(UnityEngine.Color32)">
      <summary>
            Extracts the integer id from the specified color.
            </summary>
      <param name="c">The color from which to extract the id.</param>
      <returns>The ID, or -1 if there is no ID.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.InitializeDragCalculation(UnityEngine.Transform,System.Collections.Generic.IEnumerable{ModApi.Craft.BodyData},System.Collections.Generic.IEnumerable{ModApi.Craft.BodyData})">
      <summary>
            Finds and initializes all part renderers for the drag calculation.
            </summary>
      <param name="referenceTransform">The reference transform.</param>
      <param name="allBodies">All bodies that will be included in the render.</param>
      <param name="dragBodies">The subset of bodies that drag will be calculated for.</param>
      <returns>
            The drag calculation object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.CalculateDragCoroutine(UnityEngine.Transform,System.Collections.Generic.IReadOnlyList{ModApi.Craft.BodyData},System.Collections.Generic.IReadOnlyList{ModApi.Craft.BodyData},System.Action{Assets.Scripts.Craft.DragCalculatorScript.DragResult})">
      <summary>
            Calculates the drag for the parts. When called as a coroutine, it will split the drag calculation up over
            six frames in an attempt to reduce the impact on runtime performance.
            </summary>
      <param name="referenceTransform">The reference transform.</param>
      <param name="allBodies">All bodies that will be included in the render.</param>
      <param name="dragBodies">The subset of bodies that drag will be calculated for.</param>
      <param name="callback">The callback.</param>
      <returns>
            The Unity enumerator.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.RenderDrag(Assets.Scripts.Craft.DragCalculatorScript.DragCalculation,ModApi.Craft.Drag.DragDirection,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
            Renders the parts to a texture and then looks through the pixel data to determine how much drag to assign to each part.
            </summary>
      <param name="dragCalculation">The drag calculation.</param>
      <param name="dragDirection">The drag direction.</param>
      <param name="up">The up vector to use in rotating the camera.</param>
      <param name="size">Maximum size of the area to render.</param>
      <param name="distance">The distance to move the camera away.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.DragCalculatorScript.DragResult">
      <summary>
            Result of a drag calculation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.DragResult.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.DragCalculatorScript.DragResult" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.DragCalculatorScript.DragResult.TotalDrag">
      <summary>
            Gets or sets the total drag.
            </summary>
      <value>
            The total drag.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.DragCalculatorScript.ShaderPropertyIds">
      <summary>
            The shader property IDs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.ShaderPropertyIds.PartGroupId">
      <summary>
            The part group ID shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.ShaderPropertyIds.PartId">
      <summary>
            The part ID shader property ID.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation">
      <summary>
            Contains data about a drag calculation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.BodyLookup">
      <summary>
            Gets the body lookup.
            </summary>
      <value>
            The body lookup.
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.PartGroupLookup">
      <summary>
            Gets the part group lookup.
            </summary>
      <value>
            The part group lookup.
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.PartLookup">
      <summary>
            Gets the part lookup.
            </summary>
      <value>
            The part lookup.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.DragResult">
      <summary>
            Gets the drag result.
            </summary>
      <value>
            The drag result.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.LocalBounds">
      <summary>
            Gets or sets the bounds, in local space relative to the reference transform.
            </summary>
      <value>
            The bounds.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.ReferenceTransform">
      <summary>
            Gets or sets the reference transform.
            </summary>
      <value>
            The reference transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.Renderers">
      <summary>
            Gets the render maps.
            </summary>
      <value>
            The render maps.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.RendererWrapper">
      <summary>
            Contains information about a renderer and other essential information.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.RendererWrapper.CalculateDrag">
      <summary>
            Gets or sets a value indicating whether to calculate drag.
            </summary>
      <value>
        <c>true</c> if calculate drag; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.RendererWrapper.Id">
      <summary>
            Gets or sets the part id (designer) or part group id (flight).
            </summary>
      <value>
            The part part id (designer) or part group id (flight).
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.RendererWrapper.RenderMap">
      <summary>
            Gets or sets the render map.
            </summary>
      <value>
            The render map.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.RendererWrapper.#ctor(ModApi.Craft.Parts.IRendererMaterialMap,System.Boolean,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.DragCalculatorScript.DragCalculation.RendererWrapper" /> struct.
            </summary>
      <param name="renderMap">The render map.</param>
      <param name="calculateDrag">If set to <c>true</c>, drag should be calculated for this renderer.</param>
      <param name="id">The part id (designer) or part group id (flight).</param>
    </member>
    <member name="T:Assets.Scripts.Craft.DragPhysics">
      <summary>
            Contains methods for drag physics
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragPhysics._dragTable">
      <summary>
            The drag table
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragPhysics._transform">
      <summary>
            The transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragPhysics._velocityTable">
      <summary>
            The table of orthogonal velocity components (squared) that is used every frame. It's defined once here to prevent unnecessary garbage.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.DragPhysics.#ctor(UnityEngine.Transform)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.DragPhysics" /> class.
            </summary>
      <param name="transform">The transform.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.DragPhysics.HeatDamageEnabled">
      <summary>
            Gets or sets a value indicating whether heat damage is currently enabled.
            </summary>
      <value>
        <c>true</c> if heat damage is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.DragPhysics.DragTable">
      <summary>
            Gets the drag table.
            </summary>
      <value>
            The drag table.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.DragPhysics.MachNumber">
      <summary>
            Gets the Mach number.
            </summary>
      <value>
            The Mach number.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.DragPhysics.Velocity">
      <summary>
            Gets the velocity.
            </summary>
      <value>
            The velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.DragPhysics.VelocityMagnitude">
      <summary>
            Gets the velocity magnitude.
            </summary>
      <value>
            The velocity magnitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.DragPhysics.VelocityNormalized">
      <summary>
            Gets the velocity normalized.
            </summary>
      <value>
            The velocity normalized.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.DragPhysics.VelocitySquared">
      <summary>
            Gets the velocity squared.
            </summary>
      <value>
            The velocity squared.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.DragPhysics.CalculateConvectionHeat(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Calculates the convection heat.
            </summary>
      <param name="h">The heat transfer coefficient.</param>
      <param name="fluidTemperature">The fluid temperature.</param>
      <param name="objectTemperature">The object temperature.</param>
      <param name="mass">The mass of the object.</param>
      <param name="area">The area of the object.</param>
      <param name="deltaTime">The delta time.</param>
      <returns>
            The amount of heat flowing from the fluid to the object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragPhysics.CalculateConvectionHeat(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Calculates the convection heat for two different fluids at once.
            </summary>
      <param name="h1">The first heat transfer coefficient.</param>
      <param name="fluidTemperature1">The first fluid temperature.</param>
      <param name="area1">The area of the object with regard to the first fluid.</param>
      <param name="h2">The second heat transfer coefficient.</param>
      <param name="fluidTemperature2">The second fluid temperature.</param>
      <param name="area2">The area of the object with regard to the second fluid.</param>
      <param name="objectTemperature">The object temperature.</param>
      <param name="mass">The mass of the object.</param>
      <param name="deltaTime">The delta time.</param>
      <returns>
            The amount of heat flowing from the fluid to the object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragPhysics.CalculateStagnationPointTemperature(System.Single,System.Single)">
      <summary>
            Calculates the temperature of the stagnation point.
            </summary>
      <param name="atmosphericTemperature">The static atmospheric temperature.</param>
      <param name="machNumber">The Mach number.</param>
      <returns>
            The atmospheric heat in Kelvin.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragPhysics.GetDragForceMagnitude(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Gets the drag force magnitude given the supplied params.
            </summary>
      <param name="velocitySquared">The velocity squared.</param>
      <param name="area">The area.</param>
      <param name="dragCoefficient">The drag coefficient.</param>
      <param name="fluidDensity">The fluid density.</param>
      <returns>The drag force magnitude.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragPhysics.ApplyFrameDrag(ModApi.Craft.Drag,UnityEngine.Rigidbody,System.Single)">
      <summary>
            Applies the frame drag.
            </summary>
      <param name="frameDrag">The frame drag.</param>
      <param name="rigidbody">The rigidbody.</param>
      <param name="fluidDensity">The fluid density.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.DragPhysics.GetDragForce(ModApi.Craft.Drag,System.Single,System.Single,System.Boolean)">
      <summary>
            Gets the drag force.
            </summary>
      <param name="drag">The drag.</param>
      <param name="mass">The mass.</param>
      <param name="fluidDensity">The fluid density.</param>
      <param name="enableDragLift">if set to <c>true</c> [enable drag lift].</param>
      <returns>The drag force, in world coordinates.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragPhysics.InitializeFrame(UnityEngine.Vector3,System.Single,System.Boolean)">
      <summary>
            Sets up the drag physics for the frame with the specified velocity.
            </summary>
      <param name="velocity">The velocity.</param>
      <param name="speedOfSound">The speed of sound.</param>
      <param name="enableDragLift">if set to <c>true</c> [enable drag lift].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.DragPhysics.LimitDragForce(UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
            Limits the drag force if it is too large and will cause issues.
            </summary>
      <param name="dragForce">The drag force.</param>
      <param name="magnitude">The magnitude.</param>
      <param name="mass">The mass.</param>
      <returns>
            The drag force, limited if necessary.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Craft.DragQueue">
      <summary>
            Queue for calculating drag for bodies during flight.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragQueue._dragCalculator">
      <summary>
            The drag calculator
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragQueue._processing">
      <summary>
            The processing
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragQueue._queue">
      <summary>
            The queue
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.DragQueue.#ctor(Assets.Scripts.Craft.DragCalculatorScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.DragQueue" /> class.
            </summary>
      <param name="dragCalculator">The drag calculator.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.DragQueue.AddBody(ModApi.Craft.IBodyScript)">
      <summary>
            Adds the body to the queue for processing.
            </summary>
      <param name="bodyScript">The body script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.DragQueue.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.DragQueue.OnBodyScriptUnloaded(ModApi.Craft.IBodyScript)">
      <summary>
            Called when the body script has been unloaded from the game view.
            </summary>
      <param name="bodyScript">The body script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.DragQueue.OnComplete(ModApi.Craft.IBodyScript,Assets.Scripts.Craft.DragCalculatorScript.DragResult)">
      <summary>
            Called when the drag calculation is complete for an item in the queue.
            </summary>
      <param name="bodyScript">The body script.</param>
      <param name="result">The result.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.DragTable">
      <summary>
            Provides methods to calculate drag parameters based on a direction vector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.DragTable.Values">
      <summary>
            Floating point values indicating the amount of drag in each of the cardinal directions.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.DragTable.CalculateDragCoefficientTimesArea(ModApi.Craft.Drag)">
      <summary>
            Calculates the drag coefficient times area, given the current drag table.
            </summary>
      <param name="drag">The drag.</param>
      <returns>The drag coefficient times area.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragTable.CalculateExposedArea(ModApi.Craft.Drag)">
      <summary>
            Calculates the are exposed to drag, given the current drag table.
            </summary>
      <param name="drag">The drag.</param>
      <returns>The drag coefficient times area.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.DragTable.Clear">
      <summary>
            Clears the drag table.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.DragTable.SetValuesFromVector(UnityEngine.Vector3)">
      <summary>
            Sets the values for the table from the direction vector.
            </summary>
      <param name="v">The vector.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Fuel.IFuelSourceCollection">
      <summary>
            Interface for a collection of fuel sources.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.IFuelSourceCollection.Count">
      <summary>
            Gets the number of fuel sources.
            </summary>
      <value>
            The number of fuel sources.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.IFuelSourceCollection.ContainsFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Determines whether this fuel source collection contains the specified fuel source.
            </summary>
      <param name="fuelSource">The fuel source.</param>
      <returns>
        <c>true</c> if the collection contains the specified fuel source; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.IFuelSourceCollection.RemoveFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Removes the fuel source.
            </summary>
      <param name="fuelSource">The fuel source.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Fuel.CraftFuelSource">
      <summary>
            Contains methods to add and remove fuel from a collection of prioritized fuel tanks. Fuel is
            added/removed from each fuel source in the collection, one at a time.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSource._crossFeedPullSources">
      <summary>
            The fuel sources to pull from via cross feed simulation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSource._currentDrainIndex">
      <summary>
            The current fuel tank that fuel should be drained from.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSource._currentFillIndex">
      <summary>
            The current fuel tank that fuel should be filled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSource._fuelAdded">
      <summary>
            The amount of fuel added this frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSource._fuelRemoved">
      <summary>
            The amount of fuel removed this frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSource._fuelSources">
      <summary>
            The fuel sources.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSource._fuelTransferMode">
      <summary>
            The fuel transfer mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSource._recalculateSubPriority">
      <summary>
            The flag that determines if the sub priority should be re-calculated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.#ctor(Assets.Scripts.Craft.Fuel.IFuelTransferManager,System.Int32,ModApi.Craft.Propulsion.FuelType)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Fuel.CraftFuelSource" /> class.
            </summary>
      <param name="fuelTransferManager">The fuel transfer manager.</param>
      <param name="id">The identifier.</param>
      <param name="fuelType">Type of the fuel.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.Count">
      <summary>
            Gets the number of fuel sources.
            </summary>
      <value>
            The number of fuel sources.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.FuelTransferManager">
      <summary>
            Gets or sets the fuel transfer manager.
            </summary>
      <value>
            The fuel transfer manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.FuelTransferMode">
      <summary>
            Gets or sets the transfer mode.
            </summary>
      <value>
            The transfer mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.FuelType">
      <summary>
            Gets the type of the fuel.
            </summary>
      <value>
            The type of the fuel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.Id">
      <summary>
            Gets or sets the identifier.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.IsDead">
      <summary>
            Gets a value indicating whether this fuel source is no longer being used.
            </summary>
      <value>
            The value indicating if this fuel source is no longer being used.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.IsDestroyed">
      <summary>
            Gets a value indicating whether this instance is destroyed.
            </summary>
      <value>
        <c>true</c> if this instance is destroyed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.Position">
      <summary>
            Gets the position of the fuel source in the reference frame.
            </summary>
      <value>
            The position of the fuel source in the reference frame.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.Priority">
      <summary>
            Gets the priority of the fuel source.
            </summary>
      <value>
            The priority.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.ReverseSubPriority">
      <summary>
            Gets or sets a value indicating whether to reverse the order of the
            sub priority.
            </summary>
      <value>
        <c>true</c> if sub priority should be reversed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.SubPriority">
      <summary>
            Gets the sub-priority of the fuel source.
            </summary>
      <value>
            The sub-priority.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.SupportsFuelTransfer">
      <summary>
            Gets or sets a value indicating whether the fuel source supports fuel transfer.
            </summary>
      <value>
        <c>true</c> if the fuel source supports fuel transfer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.TotalCapacity">
      <summary>
            Gets the maximum fuel capacity of the fuel source.
            </summary>
      <value>
            The maximum fuel capacity of the fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSource.TotalFuel">
      <summary>
            Gets the amount of fuel remaining in the fuel source.
            </summary>
      <value>
            The amount of fuel remaining.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.AddCrossFeedPullSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Adds the fuel source to the list of sources this fuel source can pull from
            via cross feed simulation.
            </summary>
      <param name="fuelSource">The fuel source.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.AddFuel(System.Single)">
      <summary>
            Adds the specified amount of fuel.
            </summary>
      <param name="amount">The amount of fuel to add.</param>
      <returns>
            The amount of fuel added. This will be the same as amount unless the fuel source
            was too full to accommodate the requested amount without overflowing.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.AddFuelTank(Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript)">
      <summary>
            Adds the fuel tank.
            </summary>
      <param name="fuelTank">The fuel tank.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.ClearCrossFeeds">
      <summary>
            Clears the internal list of cross feeds.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.ContainsFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Determines whether this fuel source collection contains the specified fuel source.
            </summary>
      <param name="fuelSource">The fuel source.</param>
      <returns>
        <c>true</c> if the collection contains the specified fuel source; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.GetFuelSourceOrderInSet(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Gets the order of the fuel source in the set. One would be the first fuel
            source to be drained, two would be the second, and so on.
            </summary>
      <param name="fuelSource">The fuel source.</param>
      <returns>
            The index of the fuel tank in the list, or -1 if it could not be found.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.RecalculateFuel">
      <summary>
            Recalculates the total fuel levels in the fuel source.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.RemoveFuel(System.Single)">
      <summary>
            Removes the specified amount of fuel.
            </summary>
      <param name="amount">The amount of fuel to remove.</param>
      <returns>
            The amount of fuel removed. This will be the same as the amount argument unless the fuel
            source had less fuel than the requested amount.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.RemoveFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Removes the fuel source.
            </summary>
      <param name="fuelSource">The fuel source to remove.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.UpdateCrossFeeds(System.Single)">
      <summary>
            Updates the cross feeds.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.UpdateFuel">
      <summary>
            Updates the fuel in the fuel source based on the fuel that was added and/or removed this frame.
            </summary>
      <returns>
            The change in the amount of fuel. Negative value indicates the fuel is transferred out of the fuel
            source and positive values indicate fuel is transferred into the fuel source.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSource.GetOrCreateFuelSourceGroupAtIndex(System.Int32)">
      <summary>
            Gets the FuelSouceGroup at the index. If the fuel source at the specified index is not a FuelSourceGroup yet,
            then one will be created and the current fuel source at that index will be added to the group.
            </summary>
      <param name="index">The index.</param>
      <returns>The fuel source group.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Fuel.CraftFuelSources">
      <summary>
            Manages the the craft's fuel sources.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSources._crossFeeds">
      <summary>
            The cross feeds
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSources._equalizeCrossFeeds">
      <summary>
            The equalize cross feeds
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSources._frameFuelLog">
      <summary>
            The log of how much fuel has been added/removed for each fuel type this frame.
            This is only used when the FuelUsed event has at least one subscriber.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSources._fuelSources">
      <summary>
            The fuel sources
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.CraftFuelSources._fuelTransferManager">
      <summary>
            The fuel transfer manager
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.#ctor(Assets.Scripts.Craft.Fuel.IFuelTransferManager)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Fuel.CraftFuelSources" /> class.
            </summary>
      <param name="fuelTransferManager">The fuel transfer manager.</param>
    </member>
    <member name="E:Assets.Scripts.Craft.Fuel.CraftFuelSources.FuelUsed">
      <summary>
            Occurs when fuel is used from any of the craft's fuel sources.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.CraftFuelSources.FuelSources">
      <summary>
            Gets the list of all fuel sources.
            </summary>
      <value>
            The fuel sources in the craft.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.AbsorbFuelSources(Assets.Scripts.Craft.Fuel.CraftFuelSources)">
      <summary>
            Absorbs the fuel source from another craft script into this craft script's fuel sources.
            </summary>
      <param name="craftFuelSources">The craft fuel sources to absorb.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.CreateFuelSourceForConnectedParts(System.Collections.Generic.IEnumerable{ModApi.Craft.Parts.PartData},System.Boolean,System.Collections.Generic.List{Assets.Scripts.Craft.Fuel.CraftFuelSource})">
      <summary>
            Creates the fuel source for a list of connected parts.
            </summary>
      <param name="parts">The list of parts that are connected.</param>
      <param name="removeDisconnectedCrossFeeds">if set to <c>true</c> then remove disconnected cross feeds.</param>
      <param name="fuelSources">An optional list to add the new fuel sources to as they are created. If this is null then it will not be used.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.Rebuild(ModApi.Craft.ICraftScript)">
      <summary>
            Rebuilds the fuel sources.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.Update(System.Single)">
      <summary>
            Updates the craft's fuel sources.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.FindConnectedTanks(ModApi.Craft.Parts.PartData,Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript,Assets.Scripts.Craft.Fuel.CraftFuelSource,System.Collections.Generic.Dictionary{System.Int32,Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript})">
      <summary>
            Recursive method that finds the tanks connected to the specified fuel source and adds them to the fuel source. The fuel tanks
            found along the way are removed from the lookup dictionary by setting their value to null.
            </summary>
      <param name="part">The part.</param>
      <param name="fuelTankScript">The fuel tank script.</param>
      <param name="fuelSource">The fuel source.</param>
      <param name="lookup">The lookup.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.ClearFuelLog">
      <summary>
            Clears the frame's fuel log.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.CreateFuelSource(ModApi.Craft.Propulsion.FuelType,System.Boolean)">
      <summary>
            Creates the fuel source.
            </summary>
      <param name="fuelType">Type of the fuel.</param>
      <param name="reverseSubPriority">if set to <c>true</c> then set the fuel source to reverse its sub priority ordering.</param>
      <returns>
            The fuel source.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.EqualizeFuelSources(ModApi.Craft.Parts.IFuelSource,ModApi.Craft.Parts.IFuelSource,System.Single)">
      <summary>
            Equalizes the fuel sources via cross feed simulation.
            </summary>
      <param name="sourceA">The source a.</param>
      <param name="sourceB">The source b.</param>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.LogFuelUsed(ModApi.Craft.Propulsion.FuelType,System.Single)">
      <summary>
            Adds the fuel delta for the specified fuel type to the fuel log for this frame.
            </summary>
      <param name="fuelType">The fuel type.</param>
      <param name="fuelDelta">The fuel delta.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.RaiseFuelUsedEvents">
      <summary>
            Raises the fuel used events based on the amount of fuel that has been used by the craft this frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.CraftFuelSources.SetupCrossFeeds(System.Boolean)">
      <summary>
            Sets up the cross feeds.
            </summary>
      <param name="removeDisconnectedCrossFeeds">if set to <c>true</c> then remove disconnected cross feeds.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Fuel.FuelSourceGroup">
      <summary>
            Contians methods to add/remove fuel from a group of fuel sources at the same rate.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.FuelSourceGroup._fuelSources">
      <summary>
            The fuel sources.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.FuelSourceGroup._fuelTransferMode">
      <summary>
            The fuel transfer mode
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelSourceGroup.#ctor(System.Int32,System.Int32,ModApi.Craft.Propulsion.FuelType)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Fuel.FuelSourceGroup" /> class.
            </summary>
      <param name="priority">The priority.</param>
      <param name="subPriority">The sub priority.</param>
      <param name="fuelType">Type of the fuel.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.Count">
      <summary>
            Gets the number of fuel sources in the group.
            </summary>
      <value>
            The number of fuel sources in the group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.FuelTransferMode">
      <summary>
            Gets or sets the transfer mode.
            </summary>
      <value>
            The transfer mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.FuelType">
      <summary>
            Gets the type of the fuel.
            </summary>
      <value>
            The type of the fuel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.IsDestroyed">
      <summary>
            Gets a value indicating whether this instance is destroyed.
            </summary>
      <value>
        <c>true</c> if this instance is destroyed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.Position">
      <summary>
            Gets the position of the fuel source in the reference frame.
            </summary>
      <value>
            The position of the fuel source in the reference frame.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.Priority">
      <summary>
            Gets the priority.
            </summary>
      <value>
            The priority.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.SubPriority">
      <summary>
            Gets the sub priority.
            </summary>
      <value>
            The sub priority.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.SupportsFuelTransfer">
      <summary>
            Gets a value indicating whether the fuel source supports fuel transfer.
            </summary>
      <value>
        <c>true</c> if the fuel source supports fuel transfer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.TotalCapacity">
      <summary>
            Gets the maximum fuel capacity of the fuel source.
            </summary>
      <value>
            The maximum fuel capacity of the fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelSourceGroup.TotalFuel">
      <summary>
            Gets the amount of fuel remaining in the fuel source.
            </summary>
      <value>
            The amount of fuel remaining.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelSourceGroup.AddFuel(System.Single)">
      <summary>
            Adds the specified amount of fuel.
            </summary>
      <param name="amount">The amount of fuel to add.</param>
      <returns>
            The amount of fuel added. This will be the same as amount unless the fuel source
            was too full to accommodate the requested amount without overflowing.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelSourceGroup.AddFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Adds the fuel source.
            </summary>
      <param name="fuelSource">The fuel source.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelSourceGroup.ContainsFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Determines whether this fuel source collection contains the specified fuel source.
            </summary>
      <param name="fuelSource">The fuel source.</param>
      <returns>
        <c>true</c> if the collection contains the specified fuel source; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelSourceGroup.RemoveFuel(System.Single)">
      <summary>
            Removes the specified amount of fuel.
            </summary>
      <param name="amount">The amount of fuel to remove.</param>
      <returns>
            The amount of fuel removed. This will be the same as the amount argument unless the fuel
            source had less fuel than the requested amount.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelSourceGroup.RemoveFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Removes the fuel source.
            </summary>
      <param name="fuelSource">The fuel source to remove.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Fuel.IFuelTransferManager">
      <summary>
            Interface for the fuel transfer manager.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.IFuelTransferManager.AddFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Adds the fuel source to the fuel source manager.
            </summary>
      <param name="fuelSource">The fuel source.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.IFuelTransferManager.RemoveFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Removes the fuel source from the fuel transfer manager.
            </summary>
      <param name="fuelSource">The fuel source.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Fuel.FuelTransferManager">
      <summary>
            The fuel transfer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Fuel.FuelTransferManager._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelTransferManager.#ctor(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Fuel.FuelTransferManager" /> class.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Fuel.FuelTransferManager.FuelSources">
      <summary>
            Gets the fuel sources.
            </summary>
      <value>
            The fuel sources.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelTransferManager.AddFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Adds the fuel source.
            </summary>
      <param name="fuelSource">The fuel source.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelTransferManager.RemoveFuelSource(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Removes the fuel source.
            </summary>
      <param name="fuelSource">The fuel source.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelTransferManager.Update(System.Single)">
      <summary>
            Updates the fuel transfers.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.FuelTransferManager.UpdateTransfer(ModApi.Craft.Propulsion.FuelType,System.Single)">
      <summary>
            Updates the transfer.
            </summary>
      <param name="fuelType">Type of the fuel.</param>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Fuel.IFuelTransferredHandler">
      <summary>
            Interface used to receive a callback after a fuel transfer has occurred.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Fuel.IFuelTransferredHandler.OnFuelTransferred">
      <summary>
            Called when a fuel source has transferred fuel during flight.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.PartGroupScript">
      <summary>
            Group of parts that will be combined into a single mesh and the smallest unit that can break off.
            </summary>
      <seealso cref="T:ModApi.GameLoop.MonoBehaviourBase" />
      <seealso cref="T:ModApi.Craft.Parts.IPartGroupScript" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightLateUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightLateUpdatePaused" />
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MaxPartsPerPartGroup">
      <summary>
            The maximum number of parts per part group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._combineSource">
      <summary>
            A utility object used during the mesh combined process for reading source mesh data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._combineTarget">
      <summary>
            A utility object used during the mesh combined process for writing target mesh data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._defaultShaderPartData">
      <summary>
            The default array of part data that is used to initialize materials.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._combinedMesh">
      <summary>
            The combined mesh used by the part group (if any).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._initialized">
      <summary>
            A value indicating whether the part group has been initialized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._material">
      <summary>
            The default part material used by all parts in the part group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._materialPropertyBlock">
      <summary>
            The material property block used to set part specific data on the renderers.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._outlinedPartCount">
      <summary>
            The current number of outlined parts in this part group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._outlinedParts">
      <summary>
            The current list of outlined parts within the part group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._partDataDirty">
      <summary>
            A value indicating whether the part data is dirty (the material property block needs updated).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._partGroupRenderer">
      <summary>
            The part group renderer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._partMaterialScripts">
      <summary>
            The cached list of part material scripts in the part group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._partOutlineMaterial">
      <summary>
            The part outline material.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._partScripts">
      <summary>
            The cached list of part scripts in the part group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._reentryQuality">
      <summary>
            The reentry effects quality settings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._selectedPartCount">
      <summary>
            The current number of selected parts in this part group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._shaderPartData">
      <summary>
            The array of part data that is passed to the material property block.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript._theme">
      <summary>
            The theme used by this part group.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Scripts.Craft.PartGroupScript" /> class.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.PartGroupScript.Disconnected">
      <summary>
            Occurs when this part group is being disconnected.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.BodyScript">
      <summary>
            Gets or sets the body.
            </summary>
      <value>
            The body.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.CombinedMeshFilter">
      <summary>
            Gets the combined mesh filter.
            </summary>
      <value>
            The combined mesh filter.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.CombinedMeshParts">
      <summary>
            Gets the list of parts that make up the combined mesh.
            </summary>
      <value>
            The list of parts that make up the combined mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.CombinedMeshRenderer">
      <summary>
            Gets the combined mesh renderer.
            </summary>
      <value>
            The combined mesh renderer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.Data">
      <summary>
            Gets the part group data.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.GameObject">
      <summary>
            Gets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.Id">
      <summary>
            Gets or sets the identifier.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.OutlinedParts">
      <summary>
            Gets the current list of outlined parts within the part group.
            </summary>
      <value>
            The current list of outlined parts within the part group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.PartGroupRenderer">
      <summary>
            Gets the part group renderer for the part group's combined mesh (if any).
            </summary>
      <value>
            The part group renderer for the part group's combined mesh (if any).
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.ModApi#GameLoop#Interfaces#IFlightLateUpdate#FlightLateUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            LateUpdate method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.ModApi#GameLoop#Interfaces#IFlightLateUpdatePaused#FlightLateUpdatePaused(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            LateUpdate method that is only called in the flight scene when the game is paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.GetPartOutlineMaskMaterial">
      <summary>
            Gets the part outline mask material.
            This will also update the part data for the material so it is ready for outline rendering this frame.
            </summary>
      <returns>The part outline mask material.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.Initialize">
      <summary>
            Initializes the part group.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.OnBeingDisconnected(System.Boolean)">
      <summary>
            Method to notify this <see cref="T:ModApi.Craft.Parts.IPartGroupScript" /> when it is being disconnected.
            </summary>
      <param name="isExploding">if set to <c>true</c> the part group is exploding.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.RemovePart(ModApi.Craft.Parts.PartData)">
      <summary>
            Removes the part.
            </summary>
      <param name="part">The part.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.CleanupCombinedRenderers(System.Collections.Generic.List{Assets.Scripts.Craft.PartGroupScript.RendererInfo})">
      <summary>
            Cleans up the renderers used to create the combined mesh.
            </summary>
      <param name="renderers">The renderers.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.CombineMeshes(System.Collections.Generic.List{Assets.Scripts.Craft.PartGroupScript.RendererInfo},System.Int32)">
      <summary>
            Combines the meshes for the specified renderers.
            </summary>
      <param name="renderers">The renderers for which to combine meshes.</param>
      <param name="vertexCount">The vertex count of the final combined mesh.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.CreateMaterial">
      <summary>
            Creates the default part material for parts in this part group.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.OnPartGroupInitialized">
      <summary>
            Called when the part group is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.OnPartOutliningChanged(System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Called when part outlined state changes for a part.
            </summary>
      <param name="partGroupPartId">The part ID within the part group.</param>
      <param name="selected">If set to <c>true</c>, the part is selected.</param>
      <param name="outlined">If set to <c>true</c> the part is outlined.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.OnPartSelectedChanged(System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Called when part selected state changes for a part.
            </summary>
      <param name="partGroupPartId">The part ID within the part group.</param>
      <param name="selected">If set to <c>true</c>, the part is selected.</param>
      <param name="outlined">If set to <c>true</c> the part is outlined.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.ProcessMeshes">
      <summary>
            Processes the meshes, combining where possible.
            This also updates the UV data on all meshes, even those excluded from the combine process.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.ProcessUncombinedMesh(Assets.Scripts.Craft.PartGroupScript.RendererInfo)">
      <summary>
            Processes the uncombined mesh.
            This will update mesh UV data and the renderer material.
            </summary>
      <param name="renderer">The renderer for the uncombined mesh.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.SwitchToCombinedMesh(UnityEngine.Mesh,System.Collections.Generic.List{Assets.Scripts.Craft.PartGroupScript.RendererInfo})">
      <summary>
            Switches to the combined mesh.
            </summary>
      <param name="mesh">The combined mesh.</param>
      <param name="renderers">The renderers from which the combined mesh was created.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.UpdateMaterialPartData">
      <summary>
            Updates the part dynamic data for the default part material used by all parts in this part group.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.PartGroupScript.MeshData">
      <summary>
            A utility class used during the mesh combined process.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MeshData.Normals">
      <summary>
            The normals data set.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MeshData.Tangents">
      <summary>
            The tangents data set.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MeshData.Triangles">
      <summary>
            The triangles data set.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MeshData.UV1">
      <summary>
            The UV1 data set.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MeshData.UV2">
      <summary>
            The UV2 data set.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MeshData.VertexCount">
      <summary>
            The vertex count.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MeshData.Vertices">
      <summary>
            The vertices data set.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.MeshData.Init">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.MeshData.PrepareCombineSource(UnityEngine.Mesh)">
      <summary>
            Prepares this object as a mesh combine source.
            </summary>
      <param name="mesh">The mesh source.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.MeshData.PrepareCombineTarget(System.Int32)">
      <summary>
            Prepares this object as a mesh combine target.
            </summary>
      <param name="vertexCount">The vertex count.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.PartGroupScript.RendererInfo">
      <summary>
            A class containing information about a renderer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.RendererInfo.Part">
      <summary>
            The part script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.RendererInfo.PartGroupPartId">
      <summary>
            The part group part identifier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.RendererInfo.RendererMaterialMap">
      <summary>
            The renderer material map.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.RendererInfo.#ctor(System.Int32,ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IRendererMaterialMap)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.PartGroupScript.RendererInfo" /> struct.
            </summary>
      <param name="partGroupPartId">The part group part identifier.</param>
      <param name="part">The part script.</param>
      <param name="rendererMaterialMap">The renderer material map.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.PartGroupScript.MaterialPartData">
      <summary>
            A class representing part specific data for the part group material.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MaterialPartData._outlined">
      <summary>
            A value indicating whether the part is outlined.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.MaterialPartData._selected">
      <summary>
            A value indicating whether the part is selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.MaterialPartData.#ctor(System.Int32,Assets.Scripts.Craft.PartGroupScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.PartGroupScript.MaterialPartData" /> class.
            </summary>
      <param name="index">The index of the part in the part group.</param>
      <param name="partGroup">The part group.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.MaterialPartData.Index">
      <summary>
            Gets the index of the part in the part group.
            </summary>
      <value>
            The index of the part in the part group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.MaterialPartData.Outlined">
      <summary>
            Gets or sets a value indicating whether the part is outlined.
            </summary>
      <value>
        <c>true</c> if the part is outlined; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.MaterialPartData.PartGroup">
      <summary>
            Gets the part group.
            </summary>
      <value>
            The part group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.MaterialPartData.Selected">
      <summary>
            Gets or sets a value indicating whether the part is selected.
            </summary>
      <value>
        <c>true</c> if the part is selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.PartGroupScript.ShaderPropertyIds">
      <summary>
            The shader property IDs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.ShaderPropertyIds.PartData">
      <summary>
            The part data shader property ID.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap">
      <summary>
            The renderer info for the part group combined mesh.
            </summary>
      <seealso cref="T:ModApi.Craft.Parts.IRendererMaterialMap" />
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap._tempRenderEnabledState">
      <summary>
            The original enabled state of the renderer before the current temporary render process began.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap._tempRenderInProgress">
      <summary>
            A value indicating whether or not a temporary render is in progress.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap._tempRenderOriginalLayer">
      <summary>
            The original layer the renderer game object was in before the current temporary render process began.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap._tempRenderOriginalMaterial">
      <summary>
            The original material of the renderer before the current temporary render process began.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.#ctor(UnityEngine.MeshRenderer,UnityEngine.Mesh,UnityEngine.Material)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap" /> class.
            </summary>
      <param name="renderer">The renderer.</param>
      <param name="mesh">The mesh.</param>
      <param name="material">The material.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.ExcludeFromDragModel">
      <summary>
            Gets a value indicating whether to exclude this renderer from the drag model.
            </summary>
      <value>
        <c>true</c> if the renderer should be excluded from the drag model; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.ExcludeFromMeshCombine">
      <summary>
            Gets a value indicating whether the renderer should be excluding from mesh combining.
            </summary>
      <value>
        <c>true</c> if the renderer should be excluding from mesh combining; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.HasCustomMaterial">
      <summary>
            Gets a value indicating whether this renderer has one or more custom materials.
            </summary>
      <value>
        <c>true</c> if this renderer has one or more custom materials; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.Mesh">
      <summary>
            Gets the mesh component.
            </summary>
      <value>
            The mesh component.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.OriginalMaterials">
      <summary>
            Gets the original materials.
            </summary>
      <value>
            The original materials.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.PartMaterialScript">
      <summary>
            Gets the part material script.
            </summary>
      <value>
            The part material script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.Renderer">
      <summary>
            Gets the renderer component.
            </summary>
      <value>
            The renderer component.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.Destroy">
      <summary>
            Destroys the renderer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.EndTempRender">
      <summary>
            Ends the current temporary render process (if any).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.ReplaceOriginalMaterials(UnityEngine.Material,System.Boolean)">
      <summary>
            Replaces the original materials with the specified material.
            </summary>
      <param name="material">The material for which to replace the original materials.</param>
      <param name="setAsCurrent">If set to <c>true</c>, the new material will be set as the current active material.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.SetRendererMaterial(UnityEngine.Material[])">
      <summary>
            Sets the renderer material.
            </summary>
      <param name="materials">The materials.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.SetRendererMaterial(UnityEngine.Material)">
      <summary>
            Sets the renderer material.
            </summary>
      <param name="material">The material.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.PartGroupScript.PartGroupRendererMaterialMap.StartTempRender(System.Int32,UnityEngine.Material)">
      <summary>
            Tells the renderer to prepare for a temporary render using the specified layer and material.
            This is used to temporarily change the layer and material of a part renderer, allowing it to
            easily return to its prior state with a call to EndTempRender().
            </summary>
      <param name="layer">The layer in to which to move the renderer's game object.</param>
      <param name="material">The material to use for the temporary render.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.CollisionIgnoreScript">
      <summary>
            Script that ignores collisions between parts in a craft that are penetrating each other at start.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.CollisionIgnoreScript._fixedUpdateRan">
      <summary>
            The _fixed update ran
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.CollisionIgnoreScript._isTrigger">
      <summary>
            The _is trigger
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.CollisionIgnoreScript._tempRigidbody">
      <summary>
            The _temp rigidbody
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.CollisionIgnoreScript.OnTriggerEnter(UnityEngine.Collider)">
      <summary>
            Called when [trigger enter].
            </summary>
      <param name="other">The other.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.CollisionIgnoreScript.FixedUpdate">
      <summary>
            Unity FixedUpdate method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.CollisionIgnoreScript.Start">
      <summary>
            Use this for initialization
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.CollisionIgnoreScript.Update">
      <summary>
            Update is called once per frame
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.EmptyFuelSource">
      <summary>
            An empty fuel source that can never contain any fuel.
            </summary>
      <seealso cref="T:ModApi.Craft.Parts.IFuelSource" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.EmptyFuelSource._cache">
      <summary>
            Singleton instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.EmptyFuelSource.#ctor(ModApi.Craft.Propulsion.FuelType)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.EmptyFuelSource" /> class.
            </summary>
      <param name="fuelType">Type of the fuel.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.EmptyFuelSource.#ctor">
      <summary>
            Prevents a default instance of the <see cref="T:Assets.Scripts.Craft.Parts.EmptyFuelSource" /> class from being created.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.FuelTransferMode">
      <summary>
            Gets or sets the transfer mode.
            </summary>
      <value>
            The transfer mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.FuelType">
      <summary>
            Gets the type of the fuel.
            </summary>
      <value>
            The type of the fuel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.IsDestroyed">
      <summary>
            Gets a value indicating whether this instance is destroyed.
            </summary>
      <value>
        <c>true</c> if this instance is destroyed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.IsEmpty">
      <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
      <value>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.Position">
      <summary>
            Gets the position of the fuel source in the reference frame.
            </summary>
      <value>
            The position of the fuel source in the reference frame.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.Priority">
      <summary>
            Gets the priority of the fuel source.
            </summary>
      <value>
            The priority.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.SubPriority">
      <summary>
            Gets the sub-priority of the fuel source.
            </summary>
      <value>
            The sub-priority.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.SupportsFuelTransfer">
      <summary>
            Gets a value indicating whether the fuel source supports fuel transfer.
            </summary>
      <value>
        <c>true</c> if the fuel source supports fuel transfer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.TotalCapacity">
      <summary>
            Gets or sets the total capacity, which is the sum of all fuel tanks.
            </summary>
      <value>
            The total capacity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.EmptyFuelSource.TotalFuel">
      <summary>
            Gets or sets the total fuel, which is the sum of all fuel tanks.
            </summary>
      <value>
            The fuel.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.EmptyFuelSource.GetOrCreate(ModApi.Craft.Propulsion.FuelType)">
      <summary>
            Gets an empty fuel source for the specified fuel type. If the fuel source has not been created yet,
            it will be created and cached for subsequent calls.
            </summary>
      <param name="fuelType">Type of the fuel.</param>
      <returns>The empty fuel source.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.EmptyFuelSource.AddFuel(System.Single)">
      <summary>
            Adds the specified amount of fuel.
            </summary>
      <param name="amount">The amount of fuel to add.</param>
      <returns>
            The amount of fuel added. This will be the same as amount unless the fuel source
            was too full to accommodate the requested amount without overflowing.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.EmptyFuelSource.RemoveFuel(System.Single)">
      <summary>
            Removes the specified amount of fuel.
            </summary>
      <param name="amount">The amount of fuel to remove.</param>
      <returns>
            The amount of fuel removed. This will be the same as the amount argument unless the fuel
            source had less fuel than the requested amount.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData">
      <summary>
            The cargo bay modifier data.
            </summary>
      <seealso cref="!:PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.CargpBayScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData._open">
      <summary>
            The open flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData._openAngle">
      <summary>
            The open angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData._openSpeed">
      <summary>
            The open speed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData._startOpen">
      <summary>
            Whether the part should start open
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData.Open">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData" /> is open.
            </summary>
      <value>
        <c>true</c> if open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData.OpenAngle">
      <summary>
            Gets or sets the open angle.
            </summary>
      <value>
            The open angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData.OpenSpeed">
      <summary>
            Gets or sets the open speed.
            </summary>
      <value>
            The open speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData.StartOpen">
      <summary>
            Gets or sets a value indicating whether the part should start open
            </summary>
      <value>
        <c>true</c> if [start open]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayData.SetStartOpen(System.Boolean,System.Boolean)">
      <summary>
            Sets the start open.
            </summary>
      <param name="startOpen">if set to <c>true</c> [start open].</param>
      <param name="immediate">if set to <c>true</c> [immediate].</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript">
      <summary>
            Script for the cargo bay modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.CargoBayData&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript._audio">
      <summary>
            The audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript._doors">
      <summary>
            The doors
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript._fuselage">
      <summary>
            The fuselage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript._openAmount">
      <summary>
            The current open amount.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.ModApi#GameLoop#Interfaces#IDesignerUpdate#DesignerUpdate(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Update method that is only called in the designer scene.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.OnActivated">
      <summary>
            Called when a part is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.UpdateDoorsInDesigner(System.Boolean)">
      <summary>
            Updates the doors in designer.
            </summary>
      <param name="immediate">if set to <c>true</c> then immediately update the door angle.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.UpdateHinges">
      <summary>
            Updates the hinges.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CommonStart(System.Boolean)">
      <summary>
            Common start method.
            </summary>
      <param name="flightScene">if set to <c>true</c> [flight scene].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CommonUpdate(System.Single)">
      <summary>
            Common update method.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.OnFuselageMeshesUpdated(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript)">
      <summary>
            Called when the fuselage meshes have been updated.
            </summary>
      <param name="fuselageScript">The fuselage script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.UpdateDoorHinge(Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor,Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData)">
      <summary>
            Updates the attach points.
            </summary>
      <param name="door">The door.</param>
      <param name="fuselage">The fuselage.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor">
      <summary>
            Manages a single door of the cargo bay.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor._cargoBay">
      <summary>
            The cargo bay
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor._door">
      <summary>
            The door transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor._hinge">
      <summary>
            The hinge transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor._openAmount">
      <summary>
            The current amount the door is open
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor._rotationRoot">
      <summary>
            The rotation root
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor._targetRotation">
      <summary>
            The target rotation
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor.#ctor(Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript,UnityEngine.Transform,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor" /> class.
            </summary>
      <param name="cargoBay">The cargo bay.</param>
      <param name="door">The door.</param>
      <param name="side">The side.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor.Side">
      <summary>
            Gets a value indicating the side this cargo bay is on. Positive 1 indicates one side,
            and Negative 1 indicates the opposite side.
            </summary>
      <value>
            The side.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor.SetOpenAmount(System.Single)">
      <summary>
            Sets the open amount.
            </summary>
      <param name="amount">The amount.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CargoBayScript.CargoBayDoor.UpdateHinge(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Updates the hinge.
            </summary>
      <param name="rotationAxis">The rotation axis.</param>
      <param name="localPosition">The local position.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData">
      <summary>
            The command pod modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._activationGroupNames">
      <summary>
            The list of activation group names.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._activationGroupStates">
      <summary>
            The activation group states. True indicates the group is active, otherwise false.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._controlsStateElement">
      <summary>
            The controls state element, which is obtained when the command pod data is restored from state XML. This element is
            only needed until the CommandPodScript creates its controls object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._craftConfigType">
      <summary>
            The craft configuration type assigned to this command pod.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._craftConfiguration">
      <summary>
            The craft configuration information.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._currentStage">
      <summary>
            The current stage number.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._editActivationGroups">
      <summary>
            The edit activation groups button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._pilotSeatRotation">
      <summary>
            The pilot seat rotation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._primaryButton">
      <summary>
            The primary button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData._reorientCraftOnConfigChange">
      <summary>
            A value indicating whether the craft should be re-oriented when the craft configuration changes
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData" /> class.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.CraftConfigChangedHandler">
      <summary>
            Delegate for handling the <see cref="E:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.CraftConfigChanged" /> event.
            </summary>
      <param name="newMode">The new craft configuration.</param>
      <param name="oldMode">The old craft configuration.</param>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.CraftConfigChanged">
      <summary>
            Occurs when the command pod's craft configuration has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.ActivationGroupNames">
      <summary>
            Gets the activation group names.
            </summary>
      <value>
            The activation group names.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.ActivationGroupStates">
      <summary>
            Gets the activation group states.
            </summary>
      <value>
            The activation group states.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.CraftConfiguration">
      <summary>
            Gets the craft configuration assigned to this command pod.
            </summary>
      <value>
            The craft configuration assigned to this command pod.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.CurrentStage">
      <summary>
            Gets or sets the current stage number. This is the stage index + 1. A value of zero indicates no
            stages have activated yet.
            </summary>
      <value>
            The current stage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.PilotSeatRotation">
      <summary>
            Gets or sets the pilot seat rotation.
            </summary>
      <value>
            The pilot seat rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.ReOrientCraftOnConfigChange">
      <summary>
            Gets a value indicating whether the craft should be re-oriented when the craft configuration changes.
            </summary>
      <value>
        <c>true</c> if the craft should be re-oriented when the craft configuration changes; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.GenerateStateXml(System.Boolean)">
      <summary>
            Generates the XElement to fully describe the state of this modifier for serialization purposes.
            </summary>
      <param name="optimizeXml">if set to <c>true</c> then remove attributes that are equal to their default values.</param>
      <returns>
            The XElement to fully describe this object for serialization purposes.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.RestoreFromState(System.Xml.Linq.XElement,System.Boolean)">
      <summary>
            Restores the modifier state information from the specified XML element.
            </summary>
      <param name="stateElement">The state element from which to restore.</param>
      <param name="restoreAll">If <c>true</c>, all state properties will be restored with missing values restored as <c>null</c>.
            If <c>false</c>, only state properties specified in the state XML will be restored and missing values will be ignored.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.SetCraftConfiguration(ModApi.Craft.ICraftConfiguration,System.Nullable{System.Boolean})">
      <summary>
            Sets the craft configuration.
            </summary>
      <param name="newConfig">The new configuration.</param>
      <param name="reorientCraft">If set to <c>true</c> the craft and all parts will be rotated from the current configuration to the new one.  If <c>null</c>, reorientation will happen depending upon the command pod's <see cref="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.ReOrientCraftOnConfigChange" /> property.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.CreateScriptComponent(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Creates the Unity MonoBehaviour for the part modifier and associates it with a game object.
            </summary>
      <param name="partScript">The part script.</param>
      <returns>
            The created part modifier script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.OnCreated(System.Xml.Linq.XElement)">
      <summary>
            Called when the part modifier is created.
            This is where the default values are read from the part modifier definition and loaded as the modifier's default values.
            </summary>
      <param name="partModifierXml">The XML that defines the part modifier and its default values.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.OnInitialized">
      <summary>
            Called after the modifier has been fully initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.CreateCraftConfig(ModApi.Craft.CrafConfigurationType)">
      <summary>
            Creates the craft configuration of the given type.
            </summary>
      <param name="type">The type.</param>
      <returns>The craft configuration of the given type</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodData.OnCraftConfigChanged(ModApi.Craft.CrafConfigurationType,ModApi.Craft.CrafConfigurationType)">
      <summary>
            Called when the craft configuration type has changed.
            </summary>
      <param name="newType">The new config type.</param>
      <param name="oldType">The old config type.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript">
      <summary>
            Script for the command pod modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.CommandPodData&gt;" />
      <seealso cref="T:ModApi.Craft.Parts.ICommandPod" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript._activeCommandPodActivationGroupChangedChangedMigrator">
      <summary>
            The active command pod activation group changed changed event proxy
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript._activeCommandPodChangedMigrator">
      <summary>
            The active command pod changed event proxy
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript._controls">
      <summary>
            The controls for this command pod.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript._pidPitch">
      <summary>
            The pitch pid controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript._pidYaw">
      <summary>
            The yaw pid controller.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ActivationGroupChanged">
      <summary>
            Occurs when an activation group has changed for this <see cref="T:ModApi.Craft.Parts.ICommandPod" /> instance.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ControlsChanged">
      <summary>
            Occurs when the command pod's controls have changed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ActivationGroupReplicationMode">
      <summary>
            The activation group replication mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ActivationGroupReplicationMode.None">
      <summary>
            Activation groups will not be replicated.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ActivationGroupReplicationMode.ChangesOnly">
      <summary>
            Only changes will be replicated.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ActivationGroupReplicationMode.All">
      <summary>
            All activation groups will be replicated when replication is enabled.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ActivationGroupNames">
      <summary>
            Gets the activation group names.
            </summary>
      <value>
            The activation group names.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.BatteryFuelSource">
      <summary>
            Gets or sets the battery fuel source.
            </summary>
      <value>
            The battery fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.Controls">
      <summary>
            Gets the controls in use by this command pod.
            </summary>
      <value>
            The controls in use by this command pod.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.CraftConfiguration">
      <summary>
            Gets the craft configuration associated with this command pod.
            </summary>
      <value>
            The craft configuration.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.CurrentStage">
      <summary>
            Gets the current stage number. This is the stage index + 1. A value of zero indicates no
            stages have activated yet.
            </summary>
      <value>
            The current stage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.GetStageActivationPermission">
      <summary>
            Gets or sets an optional function that the command pod will use to check if it can
            advance to the next stage. This can be used to limit the stage activation for
            whatever reason, such as in the flight tutorial where we don't want the player running
            through stage activations before they're ready. In normal circumstances, this should be
            null.
            The function must return a true to allow stage activation, or false to prevent it.
            The int parameter is the stage that is requesting activation.
            </summary>
      <value>
            The anonymous function.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.JetFuelSource">
      <summary>
            Gets or sets the jet fuel source.
            </summary>
      <value>
            The jet fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.MonoFuelSource">
      <summary>
            Gets or sets the mono fuel source.
            </summary>
      <value>
            The mono fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.NumStages">
      <summary>
            Gets the number stages.
            </summary>
      <value>
            The number stages.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.Part">
      <summary>
            Gets the part.
            </summary>
      <value>
            The part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.PilotSeatOrientation">
      <summary>
            Gets the pilot seat transform.  Up axis pointing in the upwards direction of the craft, which is the roll axis.
            Right is the pitch axis. Forward is the yaw axis.
            </summary>
      <value>
            The pilot seat transform
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ReplicateActivationGroups">
      <summary>
            Gets a value indicating whether this command pod will replicate activation groups from the active pod when this command pod isn't active.
            </summary>
      <value>
        <c>true</c> if this command pod will replicate activation groups from the active command pod when this pod isn't active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ReorientControlsOnChanges">
      <summary>
            Gets or sets a value indicating whether controls under this command pod should re-orient themselves when the craft/controls change.
            </summary>
      <value>
        <c>true</c> controls under this command pod should re-orient themselves when the craft/controls change; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ReplicateControls">
      <summary>
            Gets or sets a value indicating whether this command pod will replicate inputs from the active pod when this command pod isn't active.
            </summary>
      <value>
        <c>true</c> if this command pod will replicate inputs from the active command pod when this pod isn't active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ActivateStage">
      <summary>
            Activates the current stage.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.CreateControls(System.Xml.Linq.XElement)">
      <summary>
            Creates the controls.
            </summary>
      <param name="controlsStateElement">The controls state element.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.GenerateStateXml(System.Xml.Linq.XElement)">
      <summary>
            Generates the state XML.
            </summary>
      <param name="xml">The XML.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.GetActivationGroupState(System.Int32)">
      <summary>
            Gets the activation group state.
            </summary>
      <param name="activationGroup">The activation group.</param>
      <returns>The state of the activation group. True indicates the group is active.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.OnDesignerPullout(ModApi.Craft.Assembly)">
      <summary>
            Called when a part this modifier is attached to is pulled out in the designer.  This is called before DesignerStart() and while the previous part is still selected.
            </summary>
      <param name="assembly">The assembly this modifier's part is within (will contain all parts if contained in a sub-assembly).</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.OnNodeLoaded">
      <summary>
            Called after the craft that this modifier belongs to has been node has been loaded, and assigned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.OnPartDestroyed">
      <summary>
            Called when the part owning this modifier is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.SetActivationGroupState(System.Int32,System.Boolean)">
      <summary>
            Sets the activation group state.
            </summary>
      <param name="activationGroup">The activation group.</param>
      <param name="state">if set to <c>true</c> then activate the group. Otherwise deactivate the group.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.SetPilotSeatRotation(UnityEngine.Vector3)">
      <summary>
            Sets the pilot seat rotation.
            </summary>
      <param name="eulerAngles">The world euler angles.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.SetPilotSeatRotationToDefault">
      <summary>
            Sets the pilot seat rotation to default.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.SynchronizeActivationGroups(ModApi.Craft.Parts.ICommandPod,ModApi.Craft.Parts.ICommandPod)">
      <summary>
            Synchronizes the activation groups from the source to the destination command pod.
            </summary>
      <param name="source">The command pod to synchronize activation groups from.</param>
      <param name="dest">The command pod to synchronize activation groups to.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ActivatePartsInActivationGroup(System.Int32,System.Boolean)">
      <summary>
            Activates / deactivates the parts in the activation group.
            </summary>
      <param name="activationGroup">The activation group that changed.</param>
      <param name="state">The new state of the activation group.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.OnActiveCommandPodActivationGroupChanged(ModApi.Craft.Parts.ICommandPod,System.Int32,System.Boolean)">
      <summary>
            Called when an activation group changes for the active command pod in our craft.
            </summary>
      <param name="source">The source.</param>
      <param name="activationGroup">The activation group.</param>
      <param name="state">if set to <c>true</c> [state].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.OnActiveCommandPodChanged(ModApi.Craft.ICraftNode,ModApi.Craft.Parts.ICommandPod,ModApi.Craft.Parts.ICommandPod)">
      <summary>
            Called when the active command pod has changed.
            </summary>
      <param name="source">The source.</param>
      <param name="newPod">The new pod.</param>
      <param name="oldPod">The old pod.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.RaiseCraftControlsChangedEvent">
      <summary>
            Raises the craft controls changed event.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.SetActiveCommandPod">
      <summary>
            Sets the active command pod.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.SetReorientControls(System.Boolean)">
      <summary>
            Sets the <see cref="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ReplicateControls" /> value.
            </summary>
      <param name="reorient">if set to <c>true</c> [reorient].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.SetReplicateActivationGroups(Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ActivationGroupReplicationMode)">
      <summary>
            Sets the replicate activation group replication mode.
            </summary>
      <param name="mode">The activation group replication mode.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.SetReplicateControls(System.Boolean)">
      <summary>
            Sets the <see cref="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ReplicateControls" /> value.
            </summary>
      <param name="replicate">if set to <c>true</c><see cref="P:Assets.Scripts.Craft.Parts.Modifiers.CommandPodScript.ReplicateControls" /> will be set to <c>true</c>, otherwise; <c>false</c>.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData">
      <summary>
            The cross feed modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData._attachPointA">
      <summary>
            The index for attach point A
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData._attachPointB">
      <summary>
            The index for attach point B
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData._mode">
      <summary>
            The cross feed's current mode.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.CrossFeedMode">
      <summary>
            The available cross feed fuel transfer modes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.CrossFeedMode.Disabled">
      <summary>
            The cross feed modifier will not transfer any fuel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.CrossFeedMode.Normal">
      <summary>
            The cross feed modifier will move fuel from A to B, unless A is empty or B is topped off.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.CrossFeedMode.Reversed">
      <summary>
            The cross feed modifier will move fuel from B to A, unless B is empty or A is topped off.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.CrossFeedMode.Equalize">
      <summary>
            The cross feed modifier will equalize fuel between the two fuel sources.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.AttachPointA">
      <summary>
            Gets the index for attach point A.
            </summary>
      <value>
            The index for attach point A.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.AttachPointB">
      <summary>
            Gets the index for attach point B.
            </summary>
      <value>
            The index for attach point B.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.Mode">
      <summary>
            Gets or sets the mode.
            </summary>
      <value>
            The mode.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData.OnPropertyChangedInDesigner">
      <summary>
            Called when an importnat property has changed in the designer.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedScript">
      <summary>
            The script for the fuel cross feed modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.CrossFeedData&gt;" />
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CrossFeedScript.GetFuelTanks(Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript@,Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript@)">
      <summary>
            Updates the fuel tank references.
            </summary>
      <param name="source">The source.</param>
      <param name="target">The target.</param>
      <returns>True if valid tanks were found, otherwise, false.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.DetacherData">
      <summary>
            The detacher modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.DetacherScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DetacherData._force">
      <summary>
            The force
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DetacherData._targetAttachPoints">
      <summary>
            The names of the target attach points to break when activated.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DetacherData._targetAttachPointsList">
      <summary>
            The target attach points list
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DetacherData.Force">
      <summary>
            Gets the force.
            </summary>
      <value>
            The force.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DetacherData.TargetAttachPointNames">
      <summary>
            Gets the comma separated list of attach points to break when activating.
            </summary>
      <value>
            The target attach point.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DetacherData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.DetacherScript">
      <summary>
            The script for the detacher modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.DetacherData&gt;" />
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DetacherScript.OnActivated">
      <summary>
            Called when a part is activated via staging.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.DockingColliderScript">
      <summary>
            Script for a docking trigger collider that detects when it interacts with another docking trigger collider.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingColliderScript.OnTriggerEnter(UnityEngine.Collider)">
      <summary>
            Unity OnTriggerEnter method.
            </summary>
      <param name="other">The other.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.DockingPortData">
      <summary>
            Script for the docking port modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript&gt;" />
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript">
      <summary>
            Script for the docking port modifier script.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.DockingPortData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.ResetTime">
      <summary>
            The amount of time to wait before a docking port can dock after undocking.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript._alignmentTime">
      <summary>
            The amount of time the docking ports have been aligned correctly.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript._dockingCollider">
      <summary>
            The docking collider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript._dockResetTimer">
      <summary>
            The timer that prevents a docking port from re-docking immediately after undocking.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript._inspectorDockingStatusPercentage">
      <summary>
            The percentage of docking complete shown in the inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript._magneticAngularForce">
      <summary>
            The current angular force of the magnetic joint.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript._magneticJoint">
      <summary>
            The magnetic joint that pulls the docking ports together when docking.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript._magneticJointForce">
      <summary>
            The current force of the magnetic joint.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript._otherDockingPort">
      <summary>
            The other docking port that is currently in the process of being docked with.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.DockingAttachPoint">
      <summary>
            Gets the docking attach point.
            </summary>
      <value>
            The docking attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.DockingTime">
      <summary>
            Gets the time the docking port was docked. If the docking port was docked initially, then this time will be zero.
            </summary>
      <value>
            The docking time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.InspectorDockingStatusPercentage">
      <summary>
            Gets the inspector docking status percentage.
            </summary>
      <value>
            The inspector docking status percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.IsColliderReadyForDocking">
      <summary>
            Gets or sets a value indicating whether the docking port's collider is ready for docking.
            </summary>
      <value>
        <c>true</c> if docking port's collider is ready for docking; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.IsDocked">
      <summary>
            Gets a value indicating whether the docking port is currently docked.
            </summary>
      <value>
        <c>true</c> if this docking port is docked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.IsDocking">
      <summary>
            Gets a value indicating whether this instance is docking.
            </summary>
      <value>
        <c>true</c> if this instance is docking; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.IsReadyForDocking">
      <summary>
            Gets a value indicating whether this instance is ready for docking.
            </summary>
      <value>
        <c>true</c> if this instance is ready for docking; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.IsUndocking">
      <summary>
            Gets a value indicating whether this docking port is undocking.
            </summary>
      <value>
        <c>true</c> if this instance is undocking; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.OtherDockingPort">
      <summary>
            Gets the other docking port.
            </summary>
      <value>
            The other docking port.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.GetStatus">
      <summary>
            Gets the status of the docking port.
            </summary>
      <returns>The status.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.OnDeactivated">
      <summary>
            Called when a part is deactivated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.OnPhysicsChanged(System.Boolean)">
      <summary>
            Called when physics has been enabled or disabled for the craft.
            </summary>
      <param name="enabled">if set to <c>true</c> enabled.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.OnTouchDockingPort(Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript)">
      <summary>
            Called when this docking port trigger collider has touched another docking port's trigger.
            </summary>
      <param name="otherDockingPort">The other docking port.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.Undock">
      <summary>
            Undocks this docking port.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.CreateJoint(ModApi.Craft.IBodyScript,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Rigidbody,UnityEngine.Vector3)">
      <summary>
            Creates the joint.
            </summary>
      <param name="jointBody">The joint body.</param>
      <param name="jointPosition">The joint position in local space to the jointBody.</param>
      <param name="jointAxis">The joint axis in local space to the jointBody.</param>
      <param name="secondaryAxis">The secondary axis.</param>
      <param name="connectedBody">The connected body.</param>
      <param name="connectedPosition">The joint position in local space tot he connected body.</param>
      <returns>
            The configurable joint.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.CompleteDockConnection">
      <summary>
            Completes the dock connection.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.CreateDockingPartConnection(Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript,ModApi.Craft.ICraftScript)">
      <summary>
            Creates the docking part connection.
            </summary>
      <param name="otherPort">The other port.</param>
      <param name="craftScript">The craft script.</param>
      <returns>The part connection.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.DestroyMagneticJoint(System.Boolean)">
      <summary>
            Destroys the magnetic joint.
            </summary>
      <param name="readyForDocking">if set to <c>true</c> then set the docking ports to ready for docking.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.Dock(Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript)">
      <summary>
            Docks this port with the other port.
            </summary>
      <param name="otherPort">The other port.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.GetJointPosition">
      <summary>
            Gets the joint position in the body's local coordinates.
            </summary>
      <returns>The joint position.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.GetJointWorldPosition">
      <summary>
            Gets the joint position in world coordinates.
            </summary>
      <returns>The joint position.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript.SetMagneticJointForces(System.Single,System.Single)">
      <summary>
            Sets the magnetic joint's forces.
            </summary>
      <param name="jointForce">The joint force.</param>
      <param name="angularForce">The angular force.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData">
      <summary>
            The electric motor modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData._attachPointIndex">
      <summary>
            The attach point index
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData._brakeTorque">
      <summary>
            The brake torque
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData._powerUsagePerTorque">
      <summary>
            The power usage per torque
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData._rpm">
      <summary>
            The target rotations per minute
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData._soundVolume">
      <summary>
            The sound volume
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData._staticResistance">
      <summary>
            The static resistance.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData._torque">
      <summary>
            The torque
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData.AttachPointIndex">
      <summary>
            Gets or sets the index of the attach point.
            </summary>
      <value>The index of the attach point.</value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData.BrakeTorque">
      <summary>
            Gets or sets the brake torque.
            </summary>
      <value>The brake torque.</value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData.PowerUsagePerTorque">
      <summary>
            Gets the power usage per torque.
            </summary>
      <value>
            The power usage per torque.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData.Rpm">
      <summary>
            Gets or sets the RPM.
            </summary>
      <value>
            The RPM.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData.SoundVolume">
      <summary>
            Gets the volume of the sound.
            </summary>
      <value>
            The sound.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData.StaticResistance">
      <summary>
            Gets or sets the static resistance.
            </summary>
      <value>
            The static resistance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData.Torque">
      <summary>
            Gets or sets the torque.
            </summary>
      <value>
            The torque.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData.GetDefaultInputId">
      <summary>
            Gets the default input identifier for this modifier.
            </summary>
      <returns>
            The default input identifier for this modifier.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript">
      <summary>
            Script for the electric motor.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._audio">
      <summary>
            The audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._battery">
      <summary>
            The battery fuel source.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._bodyRelativeAngularVelocity">
      <summary>
            The relative angular velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._brakeInput">
      <summary>
            The brake input
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._brakeTorque">
      <summary>
            The brake torque
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._connectedRigidBody">
      <summary>
            The connected rigid body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._connectedWheel">
      <summary>
            The connected wheel, if any.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._controller">
      <summary>
            The input controller
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._currentRPM">
      <summary>
            The current RPM
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._currentTorque">
      <summary>
            The current torque
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._joint">
      <summary>
            The joint
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._jointRelativeAngularVelocity">
      <summary>
            The joint relative angular velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._maxBrakeTorque">
      <summary>
            The maximum brake torque
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._maxMotorTorque">
      <summary>
            The maximum torque
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._motorInput">
      <summary>
            The target angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._motorTorque">
      <summary>
            The motor torque
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._powerUsage">
      <summary>
            The current power usage in watts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._rigidBody">
      <summary>
            The rigid body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._speed">
      <summary>
            The speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._targetAngularVelocity">
      <summary>
            The target angular velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript._visualMesh">
      <summary>
            The visual mesh to update with the rotation
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.MaxPowerConsumption">
      <summary>
            Gets the maximum power consumption.
            </summary>
      <value>
            The maximum power consumption.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.GetJointRelativeAngularVelocity">
      <summary>
            Gets the angular velocity relative to the joint
            </summary>
      <returns>The angular velocity relative to the joint</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.CheckJoint">
      <summary>
            Checks the joint.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.SetJointDrive(System.Single,UnityEngine.Vector3)">
      <summary>
            Sets the joint drive and related stuff.
            </summary>
      <param name="driveTorque">The drive torque.</param>
      <param name="targetAngularVelocity">The target angular velocity.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.Setup(System.Boolean)">
      <summary>
            Sets up stuff
            </summary>
      <param name="inFlight">if set to <c>true</c> [in flight].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.SetupJoint">
      <summary>
            Sets up the joint.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ElectricMotorScript.SetupWithWheel(Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript)">
      <summary>
            Sets up this motor with a wheel.
            </summary>
      <param name="resizableWheelScript">The resizable wheel script.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.FairingData">
      <summary>
            The fairing modifier data.
            </summary>
      <seealso cref="!:PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.FairingScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingData._fairingBase">
      <summary>
            The fairing base flag. Set to true only for the base part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingData._jettisoned">
      <summary>
            The jettisoned flag. Set to true after they have been jettisoned.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingData._jettisonSpin">
      <summary>
            The angular speed at which the fairings will spin after being jettisoned. It's to make them
            look cool when they are jettisoned. For fun.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingData._jettisonVelocity">
      <summary>
            The speed at which the fairings are jettisoned away from the craft.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingData.FairingBase">
      <summary>
            Gets a value indicating whether this is the fairing base.
            </summary>
      <value>
        <c>true</c> if this is the fairing base; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingData.Jettisoned">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.FairingData" /> is jettisoned.
            </summary>
      <value>
        <c>true</c> if jettisoned; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingData.JettisonSpin">
      <summary>
            Gets the angular speed multiplier at which the fairings will spin after being jettisoned.
            </summary>
      <value>
            The jettison spin.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingData.JettisonVelocity">
      <summary>
            Gets the speed at which the fairings are jettisoned away from the craft.
            </summary>
      <value>
            The jettison velocity.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript">
      <summary>
            Manages jettisoning of fairing shells and combines them together into a single group.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript._direction">
      <summary>
            The direction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript._drag">
      <summary>
            The drag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript._dragTable">
      <summary>
            The drag table
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript._fairings">
      <summary>
            The fairings
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript._rigidBody">
      <summary>
            The rigid body
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript.RigidBody">
      <summary>
            Gets the rigid body.
            </summary>
      <value>
            The rigid body.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript.Transform">
      <summary>
            Gets the root transform.
            </summary>
      <value>
            The root transform.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript.AddFairing(Assets.Scripts.Craft.Parts.Modifiers.FairingScript)">
      <summary>
            Adds the specified fairing to be jettisoned as debris.
            </summary>
      <param name="fairing">The fairing.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript.Initialize(ModApi.Craft.ICraftScript,UnityEngine.Vector3)">
      <summary>
            Initializes the specified craft script.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="direction">The direction.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript.Jettison(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
            Jettisons the fairings together in a single object.
            </summary>
      <param name="bodyVelocity">The body velocity.</param>
      <param name="angularVelocity">The angular velocity.</param>
      <param name="jettisonSpeed">The jettison speed.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript.ApplyDrag">
      <summary>
            Calculates and applies the drag to the body.
            TODO: It would be nice if this could be refactored and shared with the BodyScript code.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingDebrisScript.FixedUpdate">
      <summary>
            Unity FixedUpdate method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.FairingScript">
      <summary>
            Script for the fairing modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.FairingData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingScript._disconnect">
      <summary>
            The disconnect flag set when the fairing experiences a hard collision.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FairingScript._jettisonNextFrame">
      <summary>
            The jettison next frame flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.LeftCollider">
      <summary>
            Gets the left collider.
            </summary>
      <value>
            The left collider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.LeftSide">
      <summary>
            Gets the left side.
            </summary>
      <value>
            The left side.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.RightCollider">
      <summary>
            Gets the right collider.
            </summary>
      <value>
            The right collider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.RightSide">
      <summary>
            Gets the right side.
            </summary>
      <value>
            The right side.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.GetConnectedFairings(ModApi.Craft.Parts.PartData,System.Collections.Generic.List{Assets.Scripts.Craft.Parts.Modifiers.FairingData},System.Boolean)">
      <summary>
            Gets the connected fairings.
            </summary>
      <param name="part">The part.</param>
      <param name="fairings">The fairings.</param>
      <param name="includeBase">if set to <c>true</c> [include base].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.OnActivated">
      <summary>
            Called when a part is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.OnCollision(ModApi.Craft.Parts.IPartFlightCollision)">
      <summary>
            Called when a part has been involved in a collision.
            </summary>
      <param name="partCollision">The part collision.</param>
      <returns>
            True if the modifier has handled the collision and no further action should be taken. Return false
            if the collision should continue.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.CreateFairingDebris(UnityEngine.Vector3)">
      <summary>
            Creates the fairing debris.
            </summary>
      <param name="direction">The direction.</param>
      <returns>The fairing debris.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.GetFairingBase">
      <summary>
            Gets the fairing base that is connected to this fairing.
            </summary>
      <returns>The fairing base, or null if cannot be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FairingScript.InitiateJettison">
      <summary>
            Called on the fairing base to jettison all attached fairing pieces.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData">
      <summary>
            The fuel tank modifier data.
            </summary>
      <seealso cref="!:PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData._autoFuelType">
      <summary>
            The automatic fuel type flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData._capacity">
      <summary>
            The capacity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData._fuel">
      <summary>
            The fuel tank's current amount of fuel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData._fuelType">
      <summary>
            The fuel type ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData._fuelTypeDescription">
      <summary>
            The fuel type description
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData._fuelTypeReadOnly">
      <summary>
            The fuel type as read-only, which is displayed when the fuel tank is using the auto fuel tank flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData._priority">
      <summary>
            The priority
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData._subPriority">
      <summary>
            The sub priority
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.FuelTankDataDelegate">
      <summary>
            The delegate for fuel tank events.
            </summary>
      <param name="fuelTank">The fuel tank.</param>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.FuelTypeChanged">
      <summary>
            Occurs when the fuel type has changed in the designer.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.AutoFuelType">
      <summary>
            Gets a value indicating whether to automatically select the fuel type based on the type of rocket engine
            that is connected to this tank.
            </summary>
      <value>
        <c>true</c> if auto fuel type is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.Capacity">
      <summary>
            Gets or sets the maximum fuel capacity, in liters/kilojoules.
            </summary>
      <value>
            The capacity in liters/kilojoules.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.Fuel">
      <summary>
            Gets or sets the amount of fuel, in liters/kilojoules.
            </summary>
      <value>
            The amount of fuel remaining.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.FuelType">
      <summary>
            Gets the type of the fuel.
            </summary>
      <value>
            The type of the fuel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.Priority">
      <summary>
            Gets the priority.
            </summary>
      <value>
            The priority.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.SubPriority">
      <summary>
            Gets or sets the sub priority.
            </summary>
      <value>
            The sub priority.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.CalculateInitialFuel(System.Single,System.Single)">
      <summary>
            Calculates the initial fuel levels in the designer.
            </summary>
      <param name="volume">The volume in liters.</param>
      <param name="percentage">The percentage of that volume to use for fuel.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.ChangeFuelType(ModApi.Craft.Propulsion.FuelType)">
      <summary>
            Changes the type of fuel.
            </summary>
      <param name="fuelType">Type of the fuel.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.RestoreFromState(System.Xml.Linq.XElement,System.Boolean)">
      <summary>
            Restores the modifier state information from the specified XML element.
            </summary>
      <param name="stateElement">The state element from which to restore.</param>
      <param name="restoreAll">If <c>true</c>, all state properties will be restored with missing values restored as <c>null</c>.
            If <c>false</c>, only state properties specified in the state XML will be restored and missing values will be ignored.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.OnCreated(System.Xml.Linq.XElement)">
      <summary>
            Called when the part modifier is created.
            This is where the default values are read from the part modifier definition and loaded as the modifier's default values.
            </summary>
      <param name="partModifierXml">The XML that defines the part modifier and its default values.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.GetSpinnerValues(System.Collections.Generic.List{System.String})">
      <summary>
            Gets the fuel type options to display in designer
            </summary>
      <param name="fuelTypes">The fuel types to display.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.OnAutoFuelTypeChanged">
      <summary>
            Called when the automatic fuel type has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.OnPropertyChangedInDesigner(System.Boolean)">
      <summary>
            Called when an important property has changed in the designer.
            </summary>
      <param name="updateFuelType">if set to <c>true</c> then update the fuel type for this part and its symmetric parts.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankData.UpdateFuelType">
      <summary>
            Updates the fuel type to the designer visible fuel type
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScriptDelegate">
      <summary>
            Delegate for fuel tank events.
            </summary>
      <param name="fuelTank">The fuel tank.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript">
      <summary>
            Script for the fuel tank modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.FuelTankData&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript._viewTankSet">
      <summary>
            The view tank set flag. Determines if the user is currently viewing inspector controls for the selected fuel
            tank or its craft fuel source.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript._craftFuelSource">
      <summary>
            The craft fuel source that contains this fuel tank.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript._fuelTransferMode">
      <summary>
            The fuel transfer mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript._inFlightScene">
      <summary>
            The in flight scene flag.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.CraftFuelSourceChanged">
      <summary>
            Occurs when the craft fuel source containing this fuel tank has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.CraftFuelSource">
      <summary>
            Gets or sets the fuel source that contains this fuel tank.
            </summary>
      <value>
            The fuel tank set.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.FuelTransferMode">
      <summary>
            Gets or sets the transfer mode.
            </summary>
      <value>
            The transfer mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.FuelType">
      <summary>
            Gets the type of the fuel.
            </summary>
      <value>
            The type of the fuel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.IsDestroyed">
      <summary>
            Gets a value indicating whether this instance is destroyed.
            </summary>
      <value>
        <c>true</c> if this instance is destroyed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.IsEmpty">
      <summary>
            Gets a value indicating whether this fuel tank is empty.
            </summary>
      <value>
        <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.Position">
      <summary>
            Gets the position of the fuel source in the reference frame.
            </summary>
      <value>
            The position of the fuel source in the reference frame.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.Priority">
      <summary>
            Gets the priority of the fuel source.
            </summary>
      <value>
            The priority.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.SubPriority">
      <summary>
            Gets the sub-priority of the fuel source.
            </summary>
      <value>
            The sub-priority.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.SupportsFuelTransfer">
      <summary>
            Gets a value indicating whether the fuel source supports fuel transfer.
            </summary>
      <value>
        <c>true</c> if the fuel source supports fuel transfer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.TotalCapacity">
      <summary>
            Gets the maximum fuel capacity of the fuel source.
            </summary>
      <value>
            The maximum fuel capacity of the fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.TotalFuel">
      <summary>
            Gets the amount of fuel remaining in the fuel source.
            </summary>
      <value>
            The amount of fuel remaining.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.UsesMachNumber">
      <summary>
            Gets a value indicating whether indicating if the object makes use of the mach number
            setting.
            </summary>
      <value>
        <c>true</c> if the object uses mach number; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.InspectorFuelSource">
      <summary>
            Gets the fuel source for the inspector window.
            </summary>
      <value>
            The fuel source for the inspector window.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.GetAmountLabel(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Gets the label that represents how much fuel is in the tank.
            </summary>
      <param name="fuelSource">The fuel source.</param>
      <returns>
            The amount of fuel.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.AddFuel(System.Single)">
      <summary>
            Adds the specified amount of fuel
            </summary>
      <param name="amount">The amount of fuel to add.</param>
      <returns>
            The amount of fuel added. This will be the same as amount unless the fuel tank
            was too full to accommodate the requested amount without overflowing.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.CalculateSubPriority(System.Boolean)">
      <summary>
            Calculates the sub priority of the fuel tank.
            </summary>
      <param name="reversed">if set to <c>true</c> then reverse the calculation.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.FlightEnd">
      <summary>
            End method called when the part is being removed from the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.OnFuelTransferred">
      <summary>
            Called when a fuel source has transferred fuel during flight.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.OnGeneratePerformanceAnalysisModel(ModApi.Ui.Inspector.GroupModel,ModApi.Ui.Inspector.InspectorModel)">
      <summary>
            Generates an inspector model for performance analysis in the designer.
            </summary>
      <param name="groupModel">The performance group model.</param>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.OnPartDestroyed">
      <summary>
            Called when the part owning this modifier is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.RemoveFuel(System.Single)">
      <summary>
            Removes the specifeid amount of the fuel from the tank.
            </summary>
      <param name="amount">The amount of fuel.</param>
      <returns>
            The amount of fuel removed. This will be the same as the amount argument unless the fuel
            tank had less fuel than the requested amount.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.FuelTankScript.GenerateInspectorModel(ModApi.Ui.Inspector.IGroupModel,ModApi.Ui.Inspector.InspectorModel,System.Boolean)">
      <summary>
            Generates the inspector model.
            </summary>
      <param name="group">The group.</param>
      <param name="model">The model.</param>
      <param name="flightScene">if set to <c>true</c> [flight scene].</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh">
      <summary>
            Contains data for a mesh that can be manipulated by the fuselage modifier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh._meshDataCache">
      <summary>
            The mesh data cache.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh._tileable">
      <summary>
            A value indicating if the mesh should support textures tileable on the y-axis.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh._updated">
      <summary>
            The flag that indicates if the adaptive mesh has had its Update method called at least once.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.#ctor(UnityEngine.MeshFilter,System.Boolean,System.Boolean,System.Boolean,UnityEngine.MeshCollider)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh" /> class.
            </summary>
      <param name="meshFilter">The mesh filter.</param>
      <param name="anchorsEnabled">if set to <c>true</c> [anchors enabled].</param>
      <param name="tileableTexture">A value indicating if the mesh should support textures tileable on the y-axis.</param>
      <param name="useSimpleRadialScaling">if set to <c>true</c> then use simple radial scaling.</param>
      <param name="meshCollider">The mesh collider, or null if the adaptive mesh does not have one.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshCollider">
      <summary>
            Gets the mesh collider, or null if this adaptive mesh does not have one.
            </summary>
      <value>
            The mesh collider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshFilter">
      <summary>
            Gets the mesh filter.
            </summary>
      <value>
            The mesh filter.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.UseSimpleRadialScaling">
      <summary>
            Gets a value indicating whether to use simple radial scaling for vertices, which does not support
            corner radiuses and also does not preserve fixed offsets to the radial edge. Vertices are simply scaled
            from their original position by multiplying by a scalar.
            </summary>
      <value>
        <c>true</c> if [use simple radial scaling]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.Vertices">
      <summary>
            Gets the vertices.
            </summary>
      <value>
            The vertices.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.Update(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData,Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript)">
      <summary>
            Updates the adaptive mesh with the properties specified in the fuselage data.
            </summary>
      <param name="data">The fuselage data.</param>
      <param name="meshDefinition">The mesh definition.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.Update(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript,UnityEngine.Vector2,UnityEngine.Vector2,System.Single[],UnityEngine.Vector3,System.Single)">
      <summary>
            Updates the adaptive mesh with the specified parameters.
            </summary>
      <param name="meshDefinition">The mesh definition.</param>
      <param name="topScale">The top scale.</param>
      <param name="bottomScale">The bottom scale.</param>
      <param name="cornerRadiuses">The corner radiuses.</param>
      <param name="offset">The offset.</param>
      <param name="normalSmoothingAngle">The normal smoothing angle.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.GetMeshDataCache">
      <summary>
            Gets the mesh data cache.
            </summary>
      <returns>The mesh cache data.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache">
      <summary>
            A class containing cached mesh data, used for frequently updating an adaptive mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache._CacheSize">
      <summary>
            The cache size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache._currentIndex">
      <summary>
            The current index for the static cache data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache._indexByAge">
      <summary>
            The index by age array, tracking the age of each static cache data index.
            Older entries are further towards the end of the array.
            The most recently used index is at the front of the array.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache._normals">
      <summary>
            The normals array cache.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache._tangents">
      <summary>
            The tangent array cache.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache._tempArray1">
      <summary>
            The temp array 1 array cache.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache._tempArray2">
      <summary>
            The temp array 2 array cache.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache._uvs">
      <summary>
            The UV list cache.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache._vertices">
      <summary>
            The vertex array cache.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.#ctor(System.Int32[],UnityEngine.Vector2[],UnityEngine.Vector2[],UnityEngine.Vector3[],System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache" /> class.
            </summary>
      <param name="triangles">The triangles for the adaptive mesh.</param>
      <param name="uvs">The original UVs for the adaptive mesh.</param>
      <param name="uv2s">The original second set of UVs for the adaptive mesh.</param>
      <param name="normals">The normals.</param>
      <param name="vertexCount">The vertex count for the adaptive mesh.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.Normals">
      <summary>
            Gets the normals array for the mesh.
            Note: this is a reusable array. Expect it to contain junk data until updated. Do not expect data to persist from frame to frame.
            </summary>
      <value>
            The normals array for the mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.OriginalNormals">
      <summary>
            Gets the original normals.
            </summary>
      <value>
            The original normals.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.OriginalUV2s">
      <summary>
            Gets the original second set of UVs.
            </summary>
      <value>
            The original second set of UVs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.OriginalUVs">
      <summary>
            Gets the original UVs for the adaptive mesh.
            </summary>
      <value>
            The original UVs for the adaptive mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.Tangents">
      <summary>
            Gets the tangents array for the mesh.
            Note: this is a reusable array. Expect it to contain junk data until updated. Do not expect data to persist from frame to frame.
            </summary>
      <value>
            The tangents array for the mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.TempArray1">
      <summary>
            Gets the first temporary array for the mesh.
            Note: this is a reusable array. Expect it to contain junk data until updated. Do not expect data to persist from frame to frame.
            </summary>
      <value>
            The first temporary array for the mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.TempArray2">
      <summary>
            Gets the second temporary array for the mesh.
            Note: this is a reusable array. Expect it to contain junk data until updated. Do not expect data to persist from frame to frame.
            </summary>
      <value>
            The second temporary array for the mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.Triangles">
      <summary>
            Gets the triangles for the adaptive mesh.
            </summary>
      <value>
            The triangles for the adaptive mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.UVs">
      <summary>
            Gets the UV list for the mesh.
            Note: this is a reusable list. Expect it to contain junk data until updated. Do not expect data to persist from frame to frame.
            </summary>
      <value>
            The UV list for the mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.VertexCount">
      <summary>
            Gets the vertex count for the adaptive mesh.
            </summary>
      <value>
            The vertex count for the adaptive mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.Vertices">
      <summary>
            Gets the vertex array for the mesh.
            Note: this is a reusable array. Expect it to contain junk data until updated. Do not expect data to persist from frame to frame.
            </summary>
      <value>
            The vertex array for the mesh.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.Update">
      <summary>
            Updates the cache object to point to the correct cached data for this vertex count.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh.MeshDataCache.Initialize(System.Int32,System.Int32)">
      <summary>
            Initializes the specified index of the static data cache.
            </summary>
      <param name="index">The index to initialize.</param>
      <param name="vertexCount">The vertex count.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex">
      <summary>
            Contains an original vertex position and its index into the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex._cornerPositions">
      <summary>
            Enumerates the initial positions of the corners. Can also be thought of
            as a ways to uniquely identify each corner.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex.#ctor(UnityEngine.Vector2,System.Single,System.Nullable{System.Single},System.Int16,System.Int16,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex" /> class.
            </summary>
      <param name="v">The v.</param>
      <param name="depth">The depth.</param>
      <param name="anchor">The anchor.</param>
      <param name="cornerIndex">Index of the corner.</param>
      <param name="index">The index.</param>
      <param name="useSimpleRadialScaling">if set to <c>true</c> then use simple radial scaling.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex.Anchor">
      <summary>
            Gets the anchor.
            </summary>
      <value>
            The anchor.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex.CornerIndex">
      <summary>
            Gets the index of the corner.
            </summary>
      <value>
            The index of the corner.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex.Depth">
      <summary>
            Gets the depth.
            </summary>
      <value>
            The depth.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex.Extrusion">
      <summary>
            Gets the extrusion for this vertex.
            </summary>
      <value>
            The inset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex.Index">
      <summary>
            Gets the index.
            </summary>
      <value>
            The index.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex.SquareVertexPosition">
      <summary>
            Gets the vertex position, after it has been pushed out to the extents of the square. This
            is obtained by moving the vertex out until one (or both) of its coordinates equals 1.
            </summary>
      <value>
            The original vertex.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex.UpdateVertex(UnityEngine.Vector3[],UnityEngine.Vector2,UnityEngine.Vector3,System.Single,System.Boolean)">
      <summary>
            Updates the position of this vertex in the specified vertex array.
            </summary>
      <param name="vertices">The mesh's vertices.</param>
      <param name="crossSectionScale">The scale of the cross section containing this vertex.</param>
      <param name="crossSectionOffset">The offset of the cross section containing this vertex.</param>
      <param name="cornerRadius">The radius of the corner containing this vertex.</param>
      <param name="useSimpleRadialScaling">if set to <c>true</c> then use simple radial scaling.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveVertex.IsVertexInCornerRadius(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2i)">
      <summary>
            Determines whether should be affected by the corner radius for the specified corner with the specified
            corner circle position.
            </summary>
      <param name="v">The vertex.</param>
      <param name="circleCenterPosition">The circle center position.</param>
      <param name="cornerId">The corner position.</param>
      <returns>
        <c>true</c> if the vertex is in the corner radius; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageColliderScript">
      <summary>
            Script for a fuselage collider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageColliderScript._designerMesh">
      <summary>
            The collider mesh to use in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageColliderScript._flightMesh">
      <summary>
            The collider mesh to use in the flight.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageColliderScript.AdaptiveMesh">
      <summary>
            Gets the adaptive mesh.
            </summary>
      <value>
            The adaptive mesh.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageColliderScript.OnFuselageInitialized">
      <summary>
            Called when the fuselage is being initialized.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType">
      <summary>
            Enumeration for possible fuselage types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType.Body1">
      <summary>
            The normal fuselage mesh type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType.Cone1">
      <summary>
            The nose cone fuselage type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType.Inlet1">
      <summary>
            The inlet fuselage type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType.Detacher1">
      <summary>
            The detacher fuselage type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType.Fairing1">
      <summary>
            The fairing fuselage type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType.FairingNoseCone1">
      <summary>
            The fairing nose cone type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType.CargoBay1">
      <summary>
            The cargo bay type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType.JetEngineShroud1">
      <summary>
            The jet engine shroud type.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData">
      <summary>
            Fuselage modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.MinimumScale">
      <summary>
            The minimum scale for one end when the other is zero.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ShellThickness">
      <summary>
            The shell thickness.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._autoResize">
      <summary>
            The automatic resize flag. If set, then the fuselage will auto resize to match the fuselage it's connecting to.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._bottomScale">
      <summary>
            The rear scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._buoyancy">
      <summary>
            The buoyancy
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._cornerRadiuses">
      <summary>
            The corner radiuses.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._deadWeight">
      <summary>
            The dead weight.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._designerPartProperties">
      <summary>
            The designer part properties
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._flattenNormals">
      <summary>
            The flatten normals options.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._fuelPercentage">
      <summary>
            The fuel percentage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._meshType">
      <summary>
            The fuselage mesh type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._normalSmoothingAngle">
      <summary>
            The maximum angle to smooth normals between vertices.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._offset">
      <summary>
            The offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._subpartIndex">
      <summary>
            The subpart index of this fuselage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._supportsXZOffset">
      <summary>
            The supports xz offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolAutoAdaptBottom">
      <summary>
            The flag that determines if the bottom of the fuselage should be auto adapted when connected to another fuselage piece.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolAutoAdaptTop">
      <summary>
            The flag that determines if the top of the fuselage should be auto adapted when connected to another fuselage piece.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolIgnore">
      <summary>
            The flag that determines if the fuselage tool should ignore this part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolResizeBottom">
      <summary>
            The flag that determines if the bottom radius of the fuselage piece can be resized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolResizeHeight">
      <summary>
            The flag that determines if the height of the fuselage piece can be resized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolResizeRadius">
      <summary>
            The flag that determines if the radius of the fuselage piece can be resized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolResizeTop">
      <summary>
            The flag that determines if the top radius of the fuselage piece can be resized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolShapeBottom">
      <summary>
            The flag that determines if the bottom of the fuselage piece can be reshaped.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolShapeTop">
      <summary>
            The flag that determines if the top of the fuselage piece can be reshaped.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._toolSupportsAddSection">
      <summary>
            The flag that determines if the fuselage supports the add section feature in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData._topScale">
      <summary>
            The flag that determines if the top radius of the fuselage piece can be resized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData" /> class.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.FlattenNormalsOptions">
      <summary>
            Options for flattening normals on the fuselage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.FlattenNormalsOptions.None">
      <summary>
            Don't flatten normals on the fuselage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.FlattenNormalsOptions.Top">
      <summary>
            Flatten normals on the top of the fuselage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.FlattenNormalsOptions.Bottom">
      <summary>
            Flatten normals on the bottom of the fuselage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.FlattenNormalsOptions.Both">
      <summary>
            Flatten normals on both the top and bottom
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.AutoResize">
      <summary>
            Gets or sets a value indicating whether the mesh should auto resize when connected.
            </summary>
      <value>
        <c>true</c> if should auto resize when connected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.BottomScale">
      <summary>
            Gets or sets the scale of the rear.
            </summary>
      <value>
            The scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.Buoyancy">
      <summary>
            Gets the buoyancy.
            </summary>
      <value>
            The buoyancy.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.CornerRadiuses">
      <summary>
            Gets the corner radiuses. 0-3 are top corner radiuses. 4-7 are bottom corner radiuses.
            </summary>
      <value>
            The corner radiuses.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.DeadWeight">
      <summary>
            Gets the added dead weight, which the user can specify to increase
            the weight of the fuselage block for manipulating the CoM of the plane.
            </summary>
      <value>
            The added weight.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.FlattenNormals">
      <summary>
            Gets the flatten normals options.
            </summary>
      <value>
            The flatten normals options.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.FuelPercentage">
      <summary>
            Gets or sets the fuel percentage, which is the percentage of total available volume used to store fuel.
            </summary>
      <value>
            The fuel percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.InletSlant">
      <summary>
            Gets or sets the slant. Only used by the fuselage inlet.
            </summary>
      <value>
            The slant.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.InletThicknessFront">
      <summary>
            Gets or sets the thickness of the inlet at the front. Only used by the fuselage inlet.
            </summary>
      <value>
            The inlet thickness at the front.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.InletThicknessRear">
      <summary>
            Gets or sets the thickness of the inlet at the rear. Only used by the fuselage inlet.
            </summary>
      <value>
            The inlet thickness rear.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.InletTrimSize">
      <summary>
            Gets or sets the trim thickness. Only used by the fuselage inlet.
            </summary>
      <value>
            The trim thickness at the rear.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.InnerVolume">
      <summary>
            Gets the max amount of volume (in cubic meters) of the fuselage inside the outer shell.
            </summary>
      <value>
            The inner volume.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.Mass">
      <summary>
            Gets the mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.MeshType">
      <summary>
            Gets the type of the fuselage mesh.
            </summary>
      <value>
            The type of the fuselage mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.NormalSmoothingAngle">
      <summary>
            Gets the maximum normal smoothing angle.
            </summary>
      <value>
            The maximum normal smoothing angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.Offset">
      <summary>
            Gets or sets the offset between the origin of the part and the top. -Offset is the offset between
            the origin of the part and the bottom. 2 * Offset is the total distance between the bottom and top.
            </summary>
      <value>
            The offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.SubpartIndex">
      <summary>
            Gets the subpart index of this fuselage.
            </summary>
      <value>
            The subpart index of this fuselage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.SupportsAddSection">
      <summary>
            Gets a value indicating whether the fuselage supports the add section feature in the designer.
            </summary>
      <value>
        <c>true</c> if it supports add section feature in the designer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.SupportsXZOffset">
      <summary>
            Gets a value indicating whether X/Z offset is supported.
            </summary>
      <value>
        <c>true</c> if X/Z offset is supported; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ToolAutoAdaptBottom">
      <summary>
            Gets a value indicating whether the top of the fuselage should be auto adapted when connected to another fuselage piece
            </summary>
      <value>
        <c>true</c> if it can; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ToolAutoAdaptTop">
      <summary>
            Gets a value indicating whether the bottom of the fuselage should be auto adapted when connected to another fuselage piece
            </summary>
      <value>
        <c>true</c> if it can; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ToolIgnore">
      <summary>
            Gets a value indicating whether the fuselage tools should ignore this part.
            </summary>
      <value>
        <c>true</c> if the tools should ignore this part; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ToolResizeBottom">
      <summary>
            Gets or sets a value indicating whether the bottom radius of the fuselage piece can be resized.
            </summary>
      <value>
        <c>true</c> if it can; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ToolResizeHeight">
      <summary>
            Gets or sets a value indicating whether the height of the fuselage piece can be resized.
            </summary>
      <value>
        <c>true</c> if it can; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ToolResizeRadius">
      <summary>
            Gets a value indicating whether the radius of the fuselage piece can be resized.
            </summary>
      <value>
        <c>true</c> if it can; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ToolResizeTop">
      <summary>
            Gets or sets a value indicating whether the top radius of the fuselage piece can be resized.
            </summary>
      <value>
        <c>true</c> if it can; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ToolShapeBottom">
      <summary>
            Gets a value indicating whether the bottom of the fuselage piece can be reshaped.
            </summary>
      <value>
        <c>true</c> if it can; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ToolShapeTop">
      <summary>
            Gets a value indicating whether top of the fuselage piece can be reshaped.
            </summary>
      <value>
        <c>true</c> if it can; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.TopScale">
      <summary>
            Gets or sets the scale of the front.
            </summary>
      <value>
            The scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.Volume">
      <summary>
            Gets the total volume of the fuselage in cubic meters.
            </summary>
      <value>
            The total volume.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.DesignStart">
      <summary>
            Start method only called in the design scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.OnDesignerCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.FrustumVolume(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Frustums the volume.
            </summary>
      <param name="height">The height.</param>
      <param name="radiusTopA">The width1.</param>
      <param name="radiusTopB">The height1.</param>
      <param name="radiusBottomA">The width2.</param>
      <param name="radiusBottomB">The height2.</param>
      <param name="topSquareness">The ratio of the squareness of the top. 100% squareness indicates the corner radiuses are set in such a
            way the surface has completely square edges and should use rectangular area instead of elliptical area. 0% indicates it is completely
            round and should use elliptical area. Anything in between is a blend in between.</param>
      <param name="bottomSquareness">The bottom squareness.</param>
      <returns>
            The volume of the frustum.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.CalculateVolume(System.Single)">
      <summary>
            Calculates the volume.
            </summary>
      <param name="shellThickness">The shell thickness.</param>
      <returns>The volume.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.ClampScale(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
            Clamps the scale to within the valid range, to make sure both scales aren't zero.
            </summary>
      <param name="scale">The scale.</param>
      <param name="otherScale">The other scale.</param>
      <returns>The validly clamped scale.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.GetDesignerFuelLabel">
      <summary>
            Gets the designer fuel label.
            </summary>
      <returns>
            The formatted fuel label.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.OnDeadWeightChanged">
      <summary>
            Called when the dead weight has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.OnFuelPercentageChanged">
      <summary>
            Called when the fuel percentage is changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData.OnFuelTypeChanged(Assets.Scripts.Craft.Parts.Modifiers.FuelTankData)">
      <summary>
            Called when the fuel type has changed.
            </summary>
      <param name="fuelTank">The fuel tank.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes">
      <summary>
            Contains the set of available fuselage mesh prefabs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes._colliderMeshes">
      <summary>
            The collider meshes
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes._prefabs">
      <summary>
            The meshes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes.#ctor(ModApi.IResourceLoader)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes" /> class.
            </summary>
      <param name="resourceLoader">The resource loader.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes.Exists(System.String)">
      <summary>
            Determines whether the mesh with the ID exists.
            </summary>
      <param name="meshId">The mesh identifier.</param>
      <returns>
        <c>true</c> if the mesh exists; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes.GetColliderMesh(System.String)">
      <summary>
            Gets the collider mesh with the specified name.
            </summary>
      <param name="name">The name.</param>
      <returns>The collider mesh.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes.GetMeshesForFuselageType(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshType)">
      <summary>
            Gets the type of the meshes for fuselage.
            </summary>
      <param name="fuselageMeshType">Type of the fuselage mesh.</param>
      <returns>The list of mesh IDs.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes.GetMeshName(System.String)">
      <summary>
            Gets the name of the mesh.
            </summary>
      <param name="meshId">The mesh ID.</param>
      <returns>The name of the mesh.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes.InstantiateMesh(System.String)">
      <summary>
            Instantiates a new mesh of the specified type.
            </summary>
      <param name="meshId">The mesh identifier.</param>
      <returns>The instantiated mesh definition.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageMeshes.LoadColliderMesh(System.String)">
      <summary>
            Loads the collider mesh.
            </summary>
      <param name="name">The name.</param>
      <returns>The mesh.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript">
      <summary>
            Script for the fuselage modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IDesignerLateUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.MaxLength">
      <summary>
            The maximum length
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.MaxRange">
      <summary>
            The maximum range
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.MinOffsetHeight">
      <summary>
            The minimum height
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript._adaptiveMeshes">
      <summary>
            The adaptive meshes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript._attachPointSurface">
      <summary>
            The surface attach point.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript._colliders">
      <summary>
            The collider meshes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript._meshDefinition">
      <summary>
            The mesh definition
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript._pendingDesignerMeshUpdate">
      <summary>
            A value indicating if a mesh update is currently pending while running in the designer.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.FuselageScriptDelegate">
      <summary>
            Delegate for fuselage script events.
            </summary>
      <param name="fuselageScript">The fuselage script.</param>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.MeshesUpdated">
      <summary>
            Occurs when the meshes are updated.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.AttachPointBottom">
      <summary>
            Gets the bottom attach point.
            </summary>
      <value>
            The bottom attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.AttachPointRotate">
      <summary>
            Gets the front attach point.
            </summary>
      <value>
            The front attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.AttachPointTop">
      <summary>
            Gets the top attach point.
            </summary>
      <value>
            The top attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.Backwards">
      <summary>
            Gets a value indicating whether this fuselage has been rotated so that its attach points are in the reverse direction
            from what is expected. A fuselage is backwards if its forward vector is pointing along the negative X,Y, or Z axes.
            </summary>
      <value>
        <c>true</c> if backwards; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.ClampedSlant">
      <summary>
            Gets the slant, but makes sure that it's clamped to a max value that won't allow the mesh to penetrate itself. He-he.
            </summary>
      <value>
            The clamped slant.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.MarkerBottom">
      <summary>
            Gets a transform that is located at the bottom of the fuselage. Returns null if not in the designer.
            </summary>
      <value>
            The transform located at the bottom of the fuselage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.MarkerTop">
      <summary>
            Gets a transform that is located at the top of the fuselage. Returns null if not in the designer.
            </summary>
      <value>
            The transform located at the top of the fuselage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.MeshDefinition">
      <summary>
            Gets the current mesh definition.
            </summary>
      <value>
            The mesh definition.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.UpdateAttachPointRotatePosition">
      <summary>
            Gets or sets a value indicating whether to update the rotating attach point's position.
            </summary>
      <value>
        <c>true</c> if the rotating attach point's position should be updated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.ModApi#GameLoop#Interfaces#IDesignerLateUpdate#DesignerLateUpdate(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            LateUpdate method that is only called in the designer scene.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.GetLoadAttachPoint(System.String)">
      <summary>
            Gets the load attach point for the specified tag.
            </summary>
      <param name="tag">The tag.</param>
      <returns>The attach point, or null if it doesn't exist.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.OnAddedToCraftInDesigner(System.Boolean)">
      <summary>
            Called when the part is added to the craft in the designer.
            </summary>
      <param name="isSubassembly">if set to <c>true</c> then this part is contained in a new subassembly.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.OnConnectedToPart(ModApi.Craft.Parts.PartConnectedEventData)">
      <summary>
            Called when this part is connected to another part in the designer.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.OnMeshChanged">
      <summary>
            Called when the mesh has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.OnSymmetry(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
      <param name="originalPart">The original part.</param>
      <param name="created">if set to <c>true</c> then the part has been created. False indicates the part is being updated.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.QueueDesignerMeshUpdate">
      <summary>
            Queues a mesh update when running in the designer (will occur in late update).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.TryUpdateOffset(UnityEngine.Vector3)">
      <summary>
            Tries to set the offset to the specified vector.
            </summary>
      <param name="offset">The offset.</param>
      <returns>
            True if the offset is valid, or false if the offset is not.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.TryUpdateScale(UnityEngine.Vector2,System.Boolean)">
      <summary>
            Tries to update the scale.
            </summary>
      <param name="scale">The scale.</param>
      <param name="isTopScale">if set to <c>true</c> then set the top scale, otherwise set the bottom.</param>
      <returns>
            The resulting scale.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.UpdateAttachPoints">
      <summary>
            Updates the attach points.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.UpdateColliderMesh">
      <summary>
            Updates the collider mesh.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.UpdateFuel">
      <summary>
            Updates the fuel capacity.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.UpdateMeshes">
      <summary>
            Updates the meshes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.ClampOffset(UnityEngine.Vector3)">
      <summary>
            Clamps the fuselage offset to within the allowable ranges.
            </summary>
      <param name="offset">The offset.</param>
      <returns>The clamped offset.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.GetMaxFuelCapacity(System.Single)">
      <summary>
            Gets the maximum fuel capacity (liters or KW) possible for this fuselage piece its total area.
            </summary>
      <param name="storageOverhead">The percentage of volume that cannot be used to hold fuel.</param>
      <returns>The maximum fuel capacity.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.LoadMesh">
      <summary>
            Loads the fuselage mesh.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.SetAttachPointPosition(ModApi.Craft.Parts.AttachPoint,UnityEngine.Vector3)">
      <summary>
            Sets the attach point position.
            </summary>
      <param name="attachPoint">The attach point.</param>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.UpdateAdaptiveMesh(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.AdaptiveMesh)">
      <summary>
            Updates the adaptive mesh.
            </summary>
      <param name="adaptiveMesh">The adaptive mesh.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript.UpdateRenderers(System.Boolean)">
      <summary>
            Updates part material with the renderers contained in the current mesh definition.
            </summary>
      <param name="add">if set to <c>true</c> then add the renderers in the mesh definition.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript">
      <summary>
            Script for defining a fuselage mesh.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript._anchorsEnabled">
      <summary>
            The anchors enabled
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript._depthCurve">
      <summary>
            The curve used to determine the cross section scale of vertices when building the mesh. The input
            is the vertex depth (Y coordinate), and the output is a 0 to 1, which indicates what percentage of the
            scale is computed from the rear scale versus the front scale. Zero indicates 100% rear scale,
            and 0% front scale, and 1 indicates the opposite. Everywhere in between is a linear blend
            between the two.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript._flattenBottomNormals">
      <summary>
            The flatten bottom normals flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript._flattenTopNormals">
      <summary>
            The flatten top normals flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript._meshType">
      <summary>
            The mesh type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript._name">
      <summary>
            The name of the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript._useSimpleRadialScaling">
      <summary>
            The use simple radial scaling flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript.AnchorsEnabled">
      <summary>
            Gets a value indicating whether anchors are enabled.
            </summary>
      <value>
        <c>true</c> if [anchors enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript.DepthCurve">
      <summary>
            Gets the depth curve
            </summary>
      <value>
            The depth curve.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript.FlattenBottomNormals">
      <summary>
            Gets or sets a value indicating whether to zero the y-coordinate of the normals of the vertices
            on the bottom of the mesh (y = -1).
            </summary>
      <value>
        <c>true</c> if bottom normals should be flattened; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript.FlattenTopNormals">
      <summary>
            Gets or sets a value indicating whether to zero  the y-coordinate of the normals of the vertices
            on the top of the mesh (y = 1).
            </summary>
      <value>
        <c>true</c> if top normals should be flattened; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript.FuselageMeshType">
      <summary>
            Gets the type of the fuselage mesh.
            </summary>
      <value>
            The type of the fuselage mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript.Id">
      <summary>
            Gets or sets the identifier.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript.Name">
      <summary>
            Gets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Fuselage.MeshDefinitionScript.UseSimpleRadialScaling">
      <summary>
            Gets a value indicating whether to use simple radial scaling for vertices, which does not support
            corner radiuses and also does not preserve fixed offsets to the radial edge. Vertices are simply scaled
            from their original position by multiplying by a scalar.
            </summary>
      <value>
        <c>true</c> if simple radial scaling should be used; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CoverEngineData">
      <summary>
            The cover engine modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.CoverEngineScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CoverEngineData._coverEngine">
      <summary>
            The cover engine flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.CoverEngineData.CoverEngine">
      <summary>
            Gets a value indicating whether to cover the engine automatically when connected in the designer.
            </summary>
      <value>
        <c>true</c> to cover the engine; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.CoverEngineScript">
      <summary>
            Script attached to an interstage fuselage to ensure it covers an engine
            when placed below one and when the engine is connected to another fuselage piece
            above it.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.CoverEngineScript._fuselage">
      <summary>
            The fuselage
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CoverEngineScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CoverEngineScript.OnConnectedToPart(ModApi.Craft.Parts.PartConnectedEventData)">
      <summary>
            Called when this part is connected to another part in the designer.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.CoverEngineScript.GetConnectedEngine(ModApi.Craft.Parts.PartConnectedEventData)">
      <summary>
            Gets the connected engine.
            </summary>
      <param name="e">The e.</param>
      <returns>The engine, or null if there is not one.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.GravityScript">
      <summary>
            Script for applying gravity in the refernce frame.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GravityScript._rigidBody">
      <summary>
            The rigid body
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.GravityScript.GravityForce">
      <summary>
            Gets or sets the gravity force.
            </summary>
      <value>
            The gravity force.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GravityScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GravityScript.FixedUpdate">
      <summary>
            Unity FixedUpdate method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GravityScript.OnCollisionEnter(UnityEngine.Collision)">
      <summary>
            Unity CollisionEnter method.
            </summary>
      <param name="collision">The collision.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData">
      <summary>
            The gyroscope modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData._electricalConsumption">
      <summary>
            The electrical consumption in kilowatts
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData._mass">
      <summary>
            The mass of the gyroscope.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData._power">
      <summary>
            The force
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData._powerScale">
      <summary>
            The power scale.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData.ElectricalConsumption">
      <summary>
            Gets the electrical consumption in kilowatts.
            </summary>
      <value>
            The electrical consumption in kilowatts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData.Power">
      <summary>
            Gets the gyroscopic power (force)
            </summary>
      <value>
            The gyroscopic power (force)
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData.CalculateInternalMass(System.Single)">
      <summary>
            Calculates the internal gyro mass.
            </summary>
      <param name="internalRadius">The internal radius.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData.SetBasePower(System.Single)">
      <summary>
            Sets the base power.
            </summary>
      <param name="power">The power.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData.GetPowerLabel">
      <summary>
            Gets the power label.
            </summary>
      <returns>The power label string.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript">
      <summary>
            Script for the gyroscope
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.GyroscopeData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript._battery">
      <summary>
            The battery fuel source.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript._fuselage">
      <summary>
            The fuselage, if one exists.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript._inputPitch">
      <summary>
            The pitch input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript._inputRoll">
      <summary>
            The roll input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript._inputYaw">
      <summary>
            The yaw input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript._internalGyro">
      <summary>
            The internal gyro
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript._powerConsumption">
      <summary>
            The power consumption
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.HideInternal">
      <summary>
            Hides the internal gyroscope model, if one exists.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.OnPartDestroyed">
      <summary>
            Called when the part owning this modifier is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.ShowInternal">
      <summary>
            Shows the internal gyroscope model, if one exists.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.Designer_SelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the selected part is changed.
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.GetMaximumGyroRadius(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageData)">
      <summary>
            Gets the maximum gyro radius for the given fuselage.
            </summary>
      <param name="fuselage">The fuselage.</param>
      <returns>The maximum gyro radius for the given fuselage.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.SetInternalRadius(System.Single)">
      <summary>
            Sets the internal gyro radius, if one exists.
            </summary>
      <param name="radius">The radius.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.GyroscopeScript.UpdatedFuselage(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript)">
      <summary>
            Called when the fuselage is updated.
            </summary>
      <param name="fuselageScript">The fuselage script.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerType">
      <summary>
            An enumeration defining the different types of input controllers.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerType.Standard">
      <summary>
            A positive axis will be multiplied by the max value. A negative axis will be multiplied by the min value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerType.LerpFullAxis">
      <summary>
            The output value will be linearly interpolated between the min and max values assuming an input axis of -1 to 1.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerType.LerpPositiveAxis">
      <summary>
            The output value will be linearly interpolated between the min and max values assuming an input axis of 0 to 1.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerType.LerpNegativeAxis">
      <summary>
            The output value will be linearly interpolated between the min and max values assuming an input axis of -1 to 0.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InvertType">
      <summary>
            The input controller invert types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InvertType.Axis">
      <summary>
            The axis is inverted.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InvertType.Output">
      <summary>
            The output is inverted.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData">
      <summary>
            The input controller modifier data
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.InputControllerScript&gt;" />
      <seealso cref="!:PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.InputControllerScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._AllInputNames">
      <summary>
            The collection of all input names.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._EmptyEnumerableInt">
      <summary>
            The empty integer enumerable.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._activationGroup">
      <summary>
            The activation group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._currentValue">
      <summary>
            The current value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._designerInputOptions">
      <summary>
            The comma separated list of designer input options.
            These should be comma separated. They specify the list of selectable input options in the part properties panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._ignorePartActivationState">
      <summary>
            Gets a value indicating whether the part must be active for the input controller to be active.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._input">
      <summary>
            The input axis.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._inputAxisRange">
      <summary>
            The input axis range if a custom range has been configured (otherwise <c>null</c>).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._inputAxisRangeDesigner">
      <summary>
            The input axis range text input for adjusting the input axis range in the designer part properties.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._invert">
      <summary>
            Invert output?
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._invertOnMirror">
      <summary>
            Should this invert on mirror?
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._invertType">
      <summary>
            Invert type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._max">
      <summary>
            Maximum output.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._min">
      <summary>
            Minimum output.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._overrideInput">
      <summary>
            The override input axis.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._showActivationGroup">
      <summary>
            Show activation group option.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._showInputAxis">
      <summary>
            Show input axis option.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._showInvert">
      <summary>
            Show invert option.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._type">
      <summary>
            The type of the input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData._zeroOnDeactivate">
      <summary>
            Zero on deactivate.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.ActivationGroup">
      <summary>
            Gets the activation group.
            </summary>
      <value>
            The activation group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.CurrentValue">
      <summary>
            Gets or sets the current value.
            </summary>
      <value>
            The current value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.IgnorePartActivationState">
      <summary>
            Gets a value indicating whether the part must be active for the input controller to be active.
            </summary>
      <value>
        <c>true</c> if the input controller may be active when the part is inactive; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.Input">
      <summary>
            Gets the input axis.
            </summary>
      <value>
            The input axis.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.InputAxisRange">
      <summary>
            Gets the input axis range if a custom range has been configured (otherwise <c>null</c>).
            </summary>
      <value>
            The input axis range if a custom range has been configured (otherwise <c>null</c>).
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.Invert">
      <summary>
            Gets or sets a value indicating whether this inverts output
            </summary>
      <value>
        <c>true</c> if invert; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.InvertOnMirror">
      <summary>
            Gets a value indicating whether to invert on mirror.
            </summary>
      <value>
        <c>true</c> if [invert on mirror]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.InvertType">
      <summary>
            Gets the type of the invert.
            </summary>
      <value>
            The type of the invert.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.MaxValue">
      <summary>
            Gets the maximum value.
            </summary>
      <value>
            The maximum value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.MinValue">
      <summary>
            Gets the minimum value.
            </summary>
      <value>
            The minimum value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.OverrideInput">
      <summary>
            Gets the override input axis.
            </summary>
      <value>
            The override input axis.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.Type">
      <summary>
            Gets the input controller type.
            </summary>
      <value>
            The input controller type.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.ZeroOnDeactivate">
      <summary>
            Gets a value indicating whether the input controller zeros out when deactivated.
            </summary>
      <value>
        <c>true</c> if the input controller zeros out when deactivated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.GenerateStateXml(System.Boolean)">
      <summary>
            Generates the XElement to fully describe the state of this modifier for serialization purposes.
            </summary>
      <param name="optimizeXml">if set to <c>true</c> then remove attributes that are equal to their default values.</param>
      <returns>
            The XElement to fully describe this object for serialization purposes.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.GetAssociatedActivationGroups">
      <summary>
            Gets the activation groups associated with the modifier.
            </summary>
      <returns>
            The set of activation groups that are associated with the modifier.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.RestoreFromState(System.Xml.Linq.XElement,System.Boolean)">
      <summary>
            Restores the modifier state information from the specified XML element.
            </summary>
      <param name="stateElement">The state element from which to restore.</param>
      <param name="restoreAll">If <c>true</c>, all state properties will be restored with missing values restored as <c>null</c>.
            If <c>false</c>, only state properties specified in the state XML will be restored and missing values will be ignored.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.UpdateDesignerInputs(System.Collections.Generic.List{System.String})">
      <summary>
            Updates the designer input options.
            </summary>
      <param name="inputs">The list of inputs to update.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.UpdateDesignerInputs(System.Collections.Generic.List{System.String},System.Linq.Expressions.Expression{System.Func{ModApi.Craft.CraftControls,System.Object}}[])">
      <summary>
            Updates the designer input options using the specified list of craft controls.
            </summary>
      <param name="inputs">The list of inputs to update.</param>
      <param name="controlSelectors">The control selector expressions used to specify the controls to add to the inputs list.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData.UpdateInputAxisRange(System.String)">
      <summary>
            Updates the input axis range when updated via the designer part properties.
            </summary>
      <param name="value">The input axis range value.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput">
      <summary>
            A class wrapping in input used by an input controller.
            </summary>
      <seealso cref="T:ModApi.Craft.Parts.Input.IInputControllerInput" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput._activationGroupId">
      <summary>
            The activation group identifier for this input (if this input targets an activation group).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput._enabled">
      <summary>
            A value indicating whether this input is enabled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput._getInput">
      <summary>
            The delegate used to get the input.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput._targetInstance">
      <summary>
            The input delegate target instance.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput._targetModifierId">
      <summary>
            The target modifier id (if targeting a modifier).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput._targetModifierIsScript">
      <summary>
            A value indicating whether the target modifier property is on the
            modifier script (<c>true</c>) or the modifier data class (<c>false</c>).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput._targetProperty">
      <summary>
            The target property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput._targetPropertyName">
      <summary>
            The target property name.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput._targetType">
      <summary>
            The target type.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.#ctor">
      <summary>
            Prevents a default instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput" /> class from being created.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.ActivationGroupId">
      <summary>
            Gets the activation group identifier for this input (if this input targets an activation group).
            </summary>
      <value>
            The activation group identifier for this input (if this input targets an activation group).
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.Enabled">
      <summary>
            Gets a value indicating whether this input is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.TargetType">
      <summary>
            Gets the type of the target.
            </summary>
      <value>
            The type of the target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.Value">
      <summary>
            Gets the value of the input.
            </summary>
      <value>
            The value of the input.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.Create(System.String)">
      <summary>
            Creates the specified input.
            </summary>
      <param name="inputName">The name of the input.</param>
      <returns>The requested input or <c>null</c> if an input could not be created.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.IsValidInput(ModApi.Craft.Parts.PartModifierScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Determines whether the specified part modifier is a valid input target for the specified part.
            </summary>
      <param name="modifier">The part modifier that is a potential input target.</param>
      <param name="part">The part for which to check for a valid input.</param>
      <returns>
        <c>true</c> if the modifier is a valid input target for the specified part; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.RefreshInput(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Refreshes the input.
            This verifies if the current input is valid and, if not, tries to find and setup a new valid input.
            </summary>
      <param name="partScript">The part script associated with the input controller that uses this input.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.CreateActivationGroupInputDelegate(ModApi.Craft.CraftControls)">
      <summary>
            Creates the activation group input delegate.
            </summary>
      <param name="controls">The controls which are the ultimate (but not direct) target of the delegate.</param>
      <returns>The requested delegate.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInput.CreateInputDelegate(System.Object,System.Reflection.PropertyInfo)">
      <summary>
            Creates the input delegate.
            </summary>
      <param name="target">The ultimate (but maybe not direct) target of the delegate.</param>
      <param name="property">The property of the target to use for the input.</param>
      <returns>The requested delegate.</returns>
      <exception cref="T:System.NotSupportedException">Only float, double, and boolean properties are supported as input controller inputs.</exception>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputConstant">
      <summary>
            In input controller input that provides a constant value.
            </summary>
      <seealso cref="T:ModApi.Craft.Parts.Input.IInputControllerInput" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputConstant._value">
      <summary>
            The constant input value.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputConstant.#ctor(System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputConstant" /> class.
            </summary>
      <param name="value">The constant input value.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputConstant.Enabled">
      <summary>
            Gets a value indicating whether this input is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputConstant.Value">
      <summary>
            Gets or sets the value of the input.
            </summary>
      <value>
            The value of the input.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper">
      <summary>
            A wrapper class that wraps in input controller input that supposedly
            targets a part modifier implementing the input controller input interface.
            </summary>
      <seealso cref="T:ModApi.Craft.Parts.Input.IInputControllerInput" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper._initialized">
      <summary>
            A value indicating whether this wrapper has been initialized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper._input">
      <summary>
            The input being wrapped.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper._modifierId">
      <summary>
            The modifier identifier.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper" /> class.
            </summary>
      <param name="modifierId">The modifier identifier.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper.Enabled">
      <summary>
            Gets a value indicating whether this input is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper.Input">
      <summary>
            Gets the input being wrapped.
            </summary>
      <value>
            The input being wrapped.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper.ModifierId">
      <summary>
            Gets the modifier identifier.
            </summary>
      <value>
            The modifier identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper.Value">
      <summary>
            Gets the value of the input.
            </summary>
      <value>
            The value of the input.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputPartModifierWrapper.RefreshInput(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Refreshes the input.
            This verifies if the current input is valid and, if not, tries to find and setup a new valid input.
            </summary>
      <param name="partScript">The part script associated with the input controller that uses this input.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange">
      <summary>
            A class defining a range of axis input values for an input controller input.
            This is used to remap the axis value from this range into the -1 to 1 range.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange._StringSplitCharacters">
      <summary>
            The string split characters used when reading the XML values.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange._invertResult">
      <summary>
            A value indicating whether the result should be inverted.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange._maxRangeInverse">
      <summary>
            The one over the range between the zero and the max value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange._maxValue">
      <summary>
            The maximum value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange._minRangeInverse">
      <summary>
            The one over the range between the zero and the min value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange._minValue">
      <summary>
            The minimum value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange._zeroValue">
      <summary>
            The zero value.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange.#ctor(System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange" /> class.
            </summary>
      <param name="min">The minimum value.</param>
      <param name="zero">The zero value.</param>
      <param name="max">The maximum value.</param>
      <param name="invert">A value indicating whether the result should be inverted.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange.Create(System.Xml.Linq.XAttribute)">
      <summary>
            Creates the input range from the specified XML attribute.
            </summary>
      <param name="xml">The XML attribute from which to create the input range.</param>
      <returns>The input range read from the XML attribute or <c>null</c> if it could not be read.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange.Create(System.String)">
      <summary>
            Creates the input range from the specified comma separated string.
            </summary>
      <param name="value">The comma separated string from which to create the input range.</param>
      <returns>The input range read from the comma separated string or <c>null</c> if it could not be read.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange.HasValues">
      <summary>
            Determines whether this instance has any values defined (<c>false</c> if min/max/zero are all zero).
            </summary>
      <returns>
        <c>true</c> if this instance has any values defined (<c>false</c> if min/max/zero are all zero); otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange.RemapInput(System.Single)">
      <summary>
            Remaps the specified input into the -1 to 1 range based on this range's settings.
            </summary>
      <param name="input">The input value to be remapped.</param>
      <returns>The remapped input value.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerInputRange.SaveXml(System.String)">
      <summary>
            Saves the range to an XML attribute.
            </summary>
      <param name="attributeName">The name of the attribute to create.</param>
      <returns>The XML attribute representing the range.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript">
      <summary>
            Script for the input controller
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerData&gt;" />
      <seealso cref="T:ModApi.Craft.Parts.Input.IInputController" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript._craftControlsChangedMigrator">
      <summary>
            The event migrator for the craft's ControlsChanged event.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript._initialized">
      <summary>
            A value indicating whether or not the modifier has been initialized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript._overrideInput">
      <summary>
            The override input.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript._primaryInput">
      <summary>
            The primary input.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.Active">
      <summary>
            Gets a value indicating whether the control associated with the input controller is currently active.
            </summary>
      <value>
        <c>true</c> if the control associated with the input controller is currently active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.InputId">
      <summary>
            Gets the input identifier.
            </summary>
      <value>
            The input identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.OverrideInput">
      <summary>
            Gets the override input.
            </summary>
      <value>
            The override input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.PrimaryInput">
      <summary>
            Gets the primary input.
            </summary>
      <value>
            The primary input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.Value">
      <summary>
            Gets the current value of the control associated with the input controller.
            </summary>
      <value>
            The current value of the control associated with the input controller.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
      <exception cref="T:System.NotSupportedException">InputControllerType.{data.Type}</exception>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.OnPartDestroyed">
      <summary>
            Called when the part owning this modifier is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.OnSymmetry(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
      <param name="originalPart">The original part.</param>
      <param name="created">if set to <c>true</c> then the part has been created. False indicates the part is being updated.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.Initialize">
      <summary>
            Initializes the input controller script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.OnCommandPodControlsChanged(ModApi.Craft.Parts.ICommandPod,System.Boolean)">
      <summary>
            Called when the craft's controls have changed.
            </summary>
      <param name="source">The source.</param>
      <param name="adjustControlsToCom">If set to <c>true</c> then the controls should be adjusted to the craft's CoM.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.OnCraftLoadedOrChanged">
      <summary>
            Called when the craft is loaded or changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.OnMovedToNewCraft(ModApi.Craft.ICraftScript,ModApi.Craft.ICraftScript)">
      <summary>
            Called when the input controller's part is moved to a new craft.
            </summary>
      <param name="oldCraft">The old craft.</param>
      <param name="newCraft">The new craft.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.UpdateInput(ModApi.Craft.Parts.Input.IInputControllerInput)">
      <summary>
            Updates the input.
            </summary>
      <param name="input">The input to update.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Input.InputControllerScript.UpdateInputs">
      <summary>
            Updates all inputs for this controller (primary/secondary).
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData">
      <summary>
            A part modifier that activates stages, parts, or activation groups
            based on an input controller value falling within a sepecified range.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData._activationType">
      <summary>
            The activation type of the activator.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData._currentState">
      <summary>
            The current state of the activator.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData._rangeEnd">
      <summary>
            The max input value for the range at which the activator triggers.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData._rangeStart">
      <summary>
            The min input value for the range at which the activator triggers.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData._target">
      <summary>
            The target of the activator.
            A target of -1 indicates that this activator triggers stage activations.
            A target of 0 indicates that this activator triggers part activation/deactivation of the modifier's part.
            A target greater than 0 indicates that this activator triggers activation group activation/deactivation
            of the activation group with the same id as the target value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData._updateMethod">
      <summary>
            The update method of the activator.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorType">
      <summary>
            An enumeration defining the types of activators.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorType.Activate">
      <summary>
            This indicates that activation should occur when the input value is within the specified range
            and deactivation should occur when the input value is outside of the specified range.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorType.ActivateOnly">
      <summary>
            This indicates that activation should occur when the input value is within the specified range
            and deactivation should never be triggered by this modifier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorType.Deactivate">
      <summary>
            This indicates that deactivation should occur when the input value is within the specified range
            and activation should occur when the input value is outside of the specified range.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorType.DeactivateOnly">
      <summary>
            This indicates that deactivation should occur when the input value is within the specified range
            and activation should never be triggered by this modifier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorType.Toggle">
      <summary>
            This indicates that whenever the input value moves in or out of the specified range,
            the activation should be toggled.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorUpdateMethod">
      <summary>
            An enumeration defining the update style of the activator.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorUpdateMethod.OneTime">
      <summary>
            This indicates that the activator is a one-time use modifier.
            The first time the activator triggers, it will self-destruct.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorUpdateMethod.OnChange">
      <summary>
            This indicates that the activator triggers whenever a change occurs.
            (The input moves from outside to inside the range or vice-versa).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivatorUpdateMethod.Continuous">
      <summary>
            This indicates that the activator triggers continuously.
            This makes it impossible to manually control the state of the activation target
            because this modifier will trigger a state update every frame.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivationTarget">
      <summary>
            Gets the target of the activator.
            A target of -1 indicates that this activator triggers stage activations.
            A target of 0 indicates that this activator triggers part activation/deactivation of the modifier's part.
            A target greater than 0 indicates that this activator triggers activation group activation/deactivation
            of the activation group with the same id as the target value.
            </summary>
      <value>
            The target of the activator.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.ActivationType">
      <summary>
            Gets the activation type of the activator.
            </summary>
      <value>
            The activation type of the activator.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.CurrentState">
      <summary>
            Gets or sets a value indicating whether the input value falls within the activator's specified range.
            </summary>
      <value>
        <c>true</c> if the input value falls within the activator's specified range; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.RangeEnd">
      <summary>
            Gets the min input value for the range at which the activator triggers.
            </summary>
      <value>
            The min input value for the range at which the activator triggers.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.RangeStart">
      <summary>
            Gets the max input value for the range at which the activator triggers.
            </summary>
      <value>
            The max input value for the range at which the activator triggers.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.UpdateMethod">
      <summary>
            Gets the update method of the activator.
            </summary>
      <value>
            The update method of the activator.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.GetDefaultInputId">
      <summary>
            Gets the default input identifier for this modifier.
            </summary>
      <returns>
            The default input identifier for this modifier.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData.GetTargetLabel(System.Int32)">
      <summary>
            Gets the target label in the designer part properties.
            </summary>
      <param name="target">The target of the activator.</param>
      <returns>The target label in the designer part properties.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript">
      <summary>
            A part modifier script that activates stages, parts, or activation groups
            based on an input controller value falling within a sepecified range.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript._input">
      <summary>
            The input controller for the activator.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript._updateState">
      <summary>
            The delegate used to update the current activation state.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript.UpdateStateDelegate">
      <summary>
            The delegate definintion for a method used to update the current activation state.
            </summary>
      <param name="state">If set to <c>true</c>, the input value currently falls within the specified range.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript.ActivateStage(System.Boolean)">
      <summary>
            The method used for activating stages.
            </summary>
      <param name="state">A value indicating whether the input value falls within the specified range.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript.Log(System.String)">
      <summary>
            Logs the specified message.
            </summary>
      <param name="message">The message to log.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript.RemoveModifier">
      <summary>
            Removes the modifier from the part (and destroys it).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript.UpdateActivationGroupState(System.Boolean)">
      <summary>
            The method used for updating the state of an activation group.
            </summary>
      <param name="state">A value indicating whether the input value falls within the specified range.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.InputBasedActivatorScript.UpdatePartActivationState(System.Boolean)">
      <summary>
            The method used for updating the activation state of the part.
            </summary>
      <param name="state">A value indicating whether the input value falls within the specified range.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData">
      <summary>
            The joint rotator modifier data
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._allowFreeSpin">
      <summary>
            The allow free spin flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._angle">
      <summary>
            The current angle of the rotator.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._attachPointIndex">
      <summary>
            The attach point index
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._baseMode">
      <summary>
            The base mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._currentAngle">
      <summary>
            The current angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._damperMultiplier">
      <summary>
            The damper multiplier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._lastRange">
      <summary>
            The range after last time it changed. Used for refreshing speed "Disabled" UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._maxRange">
      <summary>
            The maximum range
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._maxSpeed">
      <summary>
            The maximum speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._minRange">
      <summary>
            The minimum range
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._range">
      <summary>
            The range of rotation in degrees
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._soundVolume">
      <summary>
            The sound volume
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData._speed">
      <summary>
            The speed of rotation
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.BaseMode">
      <summary>
            The base mode enum
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.BaseMode.Normal">
      <summary>
            The normal base mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.BaseMode.Extended">
      <summary>
            The extended base mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.BaseMode.None">
      <summary>
            No base mode
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.AllowFreeSpin">
      <summary>
            Gets or sets a value indicating whether [allow free spin].
            </summary>
      <value>
        <c>true</c> if [allow free spin]; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.Angle">
      <summary>
            Gets or sets the angle.
            </summary>
      <value>
            The angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.AttachPointIndex">
      <summary>
            Gets or sets the index of the attach point.
            </summary>
      <value>The index of the attach point.</value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.CurrentAngle">
      <summary>
            Gets or sets the current angle.
            </summary>
      <value>
            The current angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.DamperMultiplier">
      <summary>
            Gets or sets the damper multiplier.
            </summary>
      <value>
            The damper multiplier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.MaxSpeed">
      <summary>
            Gets or sets the maximum speed.
            </summary>
      <value>The maximum speed.</value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.MeshBaseMode">
      <summary>
            Gets the base mode.
            </summary>
      <value>
            The base mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.Range">
      <summary>
            Gets or sets the range.
            </summary>
      <value>
            The range.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.SoundVolume">
      <summary>
            Gets the volume of the sound.
            </summary>
      <value>
            The sound.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.Speed">
      <summary>
            Gets or sets the speed.
            </summary>
      <value>
            The speed.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.GetDefaultInputId">
      <summary>
            Gets the default input identifier for this modifier.
            </summary>
      <returns>
            The default input identifier for this modifier.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript">
      <summary>
            Script for the joint rotator
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._angle">
      <summary>
            The angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._audio">
      <summary>
            The audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._connectedRigidBody">
      <summary>
            The connected rigid body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._controller">
      <summary>
            The input controller
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._floppyJoint">
      <summary>
            The floppy joint flag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._freeSpin">
      <summary>
            The free spin flag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._joint">
      <summary>
            The joint
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._rigidBody">
      <summary>
            The rigid body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._speed">
      <summary>
            The speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._targetAngle">
      <summary>
            The target angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript._visualMesh">
      <summary>
            The visual mesh to update with the rotation
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.OnSymmetry(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
      <param name="originalPart">The original part.</param>
      <param name="created">if set to <c>true</c> then the part has been created. False indicates the part is being updated.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.SetBaseMeshesActiveByMode(Assets.Scripts.Craft.Parts.Modifiers.JointRotatorData.BaseMode)">
      <summary>
            Sets the base meshes active/inactive according to the base mode passed in.
            </summary>
      <param name="baseMode">The base mode.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.CheckJoint">
      <summary>
            Checks the joint.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.Setup(System.Boolean)">
      <summary>
            Sets up stuff
            </summary>
      <param name="inFlight">if set to <c>true</c> [in flight].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.JointRotatorScript.SetupJoint">
      <summary>
            Sets up the joint.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData">
      <summary>
            The landing leg modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript&gt;" />
      <seealso cref="!:PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.Density">
      <summary>
            The density of the landing leg
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData._currentExtensionPosition">
      <summary>
            The current position of the landing leg extension
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData._currentRotation">
      <summary>
            The current rotation of the landing leg pivot
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData._deployedAngle">
      <summary>
            The angle which we rotate towards when deployed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData._deployedExtensionY">
      <summary>
            The extension y position when deployed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData._deploySpeed">
      <summary>
            The speed at which we rotate towards the deployed angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData._scale">
      <summary>
            The scale
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.CurrentExtensionPosition">
      <summary>
            Gets or sets the current position of the landing leg extension
            </summary>
      <value>
            The current angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.CurrentRotation">
      <summary>
            Gets or sets the current rotation of the landing leg pivot
            </summary>
      <value>
            The current angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.DeployedAngle">
      <summary>
            Gets or sets the extended angle.
            </summary>
      <value>
            The extended angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.DeployedExtensionY">
      <summary>
            Gets the extended angle.
            </summary>
      <value>
            The extended angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.DeploySpeed">
      <summary>
            Gets the deploy speed.
            </summary>
      <value>
            The deploy speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.PropertiesOpen">
      <summary>
            Gets or sets a value indicating whether the designer part properties are open.
            </summary>
      <value>
        <c>true</c> if the designer part properties are open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.Scale">
      <summary>
            Gets or sets the scale of the landing leg.
            </summary>
      <value>
            The scale of the landing leg.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.CalculateVolume">
      <summary>
            Calculates the volume of the landing leg
            </summary>
      <returns>volume of the landing leg</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.UpdateScale">
      <summary>
            Updates the scale of this part and mirrored copies
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegData.UpdateMirroredAngles">
      <summary>
            Updates the angle of any mirrored copies of this part
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript">
      <summary>
            Script for the landing leg
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.LandingLegData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IDesignerUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript._closedExtensionPosition">
      <summary>
            The closed extension position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript._closedRotation">
      <summary>
            The closed angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript._deployedExtensionPosition">
      <summary>
            The deployed extension position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript._deployedRotation">
      <summary>
            The deployed angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript._extension">
      <summary>
            The extender
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript._landingLeg">
      <summary>
            The landing leg, for scaling
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript._moving">
      <summary>
            Flag set when the landing leg is extending or retracting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript._pivot">
      <summary>
            The pivot transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript._pivotRelativeCoM">
      <summary>
            The landing relative center of mass
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript.ModApi#GameLoop#Interfaces#IDesignerUpdate#DesignerUpdate(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Update method that is only called in the design scene.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript.UpdateScale">
      <summary>
            Updates the scale of the landing leg
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LandingLegScript.UpdateCenterOfMass">
      <summary>
            Updates the rigidbody center of mass and alerts the craft to the change.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.LightData">
      <summary>
            The part modifier data for the light part.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.LightScript&gt;" />
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LightData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.LightScript">
      <summary>
            The part modifier script for the light part.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.LightData&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LightScript._light">
      <summary>
            The light component.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LightScript.Light">
      <summary>
            Gets the light component.
            </summary>
      <value>
            The light component.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LightScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LightScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LightScript.InitializeLight">
      <summary>
            Initializes the light.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LightScript.InitializeLightColor">
      <summary>
            Initializes the color of the light.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript">
      <summary>
            Script that handles looping audio with support for start/stop sounds.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._audioLooping">
      <summary>
            The running audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._audioStart">
      <summary>
            The start audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._audioStop">
      <summary>
            The stop audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._basePitch">
      <summary>
            The base pitch for the audio sources.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._baseVolume">
      <summary>
            The base volume
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._clipLoop">
      <summary>
            The running clip
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._clipStart">
      <summary>
            The start clip
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._clipStop">
      <summary>
            The stop clip
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._distanceScale">
      <summary>
            The distance scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._initialized">
      <summary>
            The initialized flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._lerpRate">
      <summary>
            Multiplier used to determine how quickly to lerp towards the target volume.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._maxDistance">
      <summary>
            The maximum distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._minDistance">
      <summary>
            The minimum distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript._output">
      <summary>
            The output audio mixer group.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript.BasePitch">
      <summary>
            Gets or sets the base pitch.
            </summary>
      <value>
            The base pitch.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript.LerpRate">
      <summary>
            Gets or sets the lerp rate.
            </summary>
      <value>
            The lerp rate.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript.LoopVolume">
      <summary>
            Gets or sets the volume.
            </summary>
      <value>
            The volume.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript.Configure(System.Single,System.Single,System.Single)">
      <summary>
            Provides optional configuration for the audio. This must be called before the audio sources are created.
            If this method is not called, then default values will be used.
            </summary>
      <param name="basePitch">The base pitch.</param>
      <param name="baseVolume">The base volume.</param>
      <param name="distanceScale">The distance scale.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript.Initialize">
      <summary>
            Called when initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript.PlayStartSound(System.Single)">
      <summary>
            Plays the start sound.
            </summary>
      <param name="volume">The volume.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript.PlayStopSound(System.Single)">
      <summary>
            Plays the stop sound.
            </summary>
      <param name="volume">The volume.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript.UpdateLoopAudio(System.Single,System.Single)">
      <summary>
            Updates the loop audio with the target volume and pitch. The current volume
            will be lerped using the defined lerp rate.
            </summary>
      <param name="targetVolume">The volume.</param>
      <param name="targetPitch">The pitch.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.LoopingAudioScript.CreateAudioSource(UnityEngine.AudioClip,System.Boolean)">
      <summary>
            Creates the audio source.
            </summary>
      <param name="clip">The clip.</param>
      <param name="loop">if set to <c>true</c> then set the source to looping.</param>
      <returns>
            The audio source.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.ParachuteData">
      <summary>
            The parachute modifier data
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript&gt;" />
      <seealso cref="!:PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteData._size">
      <summary>
            The size of the parachute
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ParachuteData.Drag">
      <summary>
            Gets the drag.
            </summary>
      <value>
            The drag.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ParachuteData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ParachuteData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ParachuteData.Scale">
      <summary>
            Gets the scale.
            </summary>
      <value>
            The scale.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteData.CalculateChuteArea">
      <summary>
            Calculates the area of the chute in square meters.
            </summary>
      <returns>Chute area in square meters.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteData.GetStyleMeshName">
      <summary>
            Gets the name of the chute mesh for this.Style
            </summary>
      <returns>Name of the mesh for this.Style</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript">
      <summary>
            Script for the parachute
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.ParachuteData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._baseCollider">
      <summary>
            The base collider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._baseColliderDefaultYScale">
      <summary>
            The base collider default y scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._chute">
      <summary>
            The chute, cords and mesh
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._chuteBody">
      <summary>
            The chute body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._chuteCollider">
      <summary>
            The collider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._chutePackage">
      <summary>
            The chute package
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._chutePackageMesh">
      <summary>
            The chute package mesh
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._deployed">
      <summary>
            Is the chute currently deployed?
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._dragPercentage">
      <summary>
            The drag percentage, based on how in line with velocity the parachute is
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._inflateTime">
      <summary>
            The how long we have had to inflate
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._joint">
      <summary>
            The joint
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript._sound">
      <summary>
            The sound
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.DeployParachute">
      <summary>
            Deploys the parachute.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.OnActivated">
      <summary>
            Called when a part is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.OnPhysicsChanged(System.Boolean)">
      <summary>
            Called when physics has been enabled or disabled for the craft.
            </summary>
      <param name="enabled">if set to <c>true</c> enabled.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.RecalculateFrameState(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Called when a modifier should recalulate the reference frame sate (position/velocity) of any special, "unmanaged" game-objects.
            </summary>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
      <remarks>
            Any children of a craft should have their position updated without using the position delta.  However, any rigid-body other than
            the one associated with a <see cref="T:ModApi.Craft.IBodyScript" /> will need its velocity updated with the velocity delta.
            Any gameobject not under a craft should add both the position and velocity deltas to the current value to keep the same relative state.
            -
            Caution: This may be called either when the reference frame recenters, rotates, or when the node's orbit position/velocity is manually
            updated such as while warping.  If subscribing to GameViewScript.ReferenceFrameRecentered event, do not also add deltas in response
            to that or they'll be added in twice.
            </remarks>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.AnimateInflation">
      <summary>
            Animates the inflation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.ApplyDrag(System.Single)">
      <summary>
            Applies the drag.
            </summary>
      <param name="drag">The drag.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ParachuteScript.LoadChuteMesh(System.String)">
      <summary>
            Loads the chute mesh.
            </summary>
      <param name="name">The name.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.PistonData">
      <summary>
            The piston modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.PistonScript&gt;" />
      <seealso cref="!:PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.PistonScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData.DefaultRange">
      <summary>
            The default range
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData.DefaultSpeed">
      <summary>
            The default speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData.Density">
      <summary>
            The density of the piston
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData._currentPosition">
      <summary>
            The current position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData._cycle">
      <summary>
            The cycle flag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData._editMessage">
      <summary>
            The edit message
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData._extend">
      <summary>
            The extend flag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData._preventBreaking">
      <summary>
            Whether to prevent this piston from breaking from being stretched too far. Useful if you are nudging parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData._range">
      <summary>
            The range
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData._scale">
      <summary>
            The scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonData._speed">
      <summary>
            The speed
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.AttachPointIndex">
      <summary>
            Gets or sets the index of the attach point.
            </summary>
      <value>
            The index of the attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.CurrentPosition">
      <summary>
            Gets or sets the current position.
            </summary>
      <value>
            The current position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.Cycle">
      <summary>
            Gets a value indicating whether to cycle
            </summary>
      <value>
            The cycle flag.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.Extend">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.PistonData" /> is extend.
            </summary>
      <value>
        <c>true</c> if extend; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.MaxRange">
      <summary>
            Gets or sets the maximum range.
            </summary>
      <value>
            The maximum range.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.MaxSpeed">
      <summary>
            Gets or sets the maximum speed.
            </summary>
      <value>
            The maximum speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.PreventBreaking">
      <summary>
            Gets a value indicating whether to prevent this piston from breaking from being stretched too far. Useful if you are nudging parts.
            </summary>
      <value>
        <c>true</c> if [prevent breaking]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.Range">
      <summary>
            Gets the range.
            </summary>
      <value>
            The range.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.Scale">
      <summary>
            Gets or sets the scale of the piston
            </summary>
      <value>
            The scale of the piston
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonData.Speed">
      <summary>
            Gets the speed.
            </summary>
      <value>
            The speed.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonData.CalculateVolume">
      <summary>
            Calculates the volume of the piston
            </summary>
      <returns>volume of the piston</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonData.UpdateAttachPoint">
      <summary>
            Updates the attach point, accounting for scale
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonData.UpdateScale">
      <summary>
            Updates the scale
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonData.OnCreated(System.Xml.Linq.XElement)">
      <summary>
            Called when the part modifier is created.
            This is where the default values are read from the part modifier definition and loaded as the modifier's default values.
            </summary>
      <param name="partModifierXml">The XML that defines the part modifier and its default values.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonData.IsCakeALie">
      <summary>
            Determines edit message and returns whether edit message is visible
            </summary>
      <returns>
        <c>true</c> if edit message property should be visible; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.PistonScript">
      <summary>
            Script for the piston
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.PistonData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IDesignerUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._audio">
      <summary>
            The audio.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._bodyJoint">
      <summary>
            The body joint.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._breakTimer">
      <summary>
            The break timer, which tracks how long the piston has been in a situation where it should probably break.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._cycleTime">
      <summary>
            The cycle time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._expectedJointPosition">
      <summary>
            The expected joint position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._initializationComplete">
      <summary>
            The initialization complete
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._input">
      <summary>
            The input controller
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._joint">
      <summary>
            The joint
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._jointRigidbody">
      <summary>
            The joint rigidbody
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._moving">
      <summary>
            The moving flag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._partScale">
      <summary>
            The part scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._pistonExtenders">
      <summary>
            The piston extender shafts
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._pistonShaft">
      <summary>
            The piston shaft
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._pitch">
      <summary>
            The pitch to play the audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._speed">
      <summary>
            The speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._updatePistonShaft">
      <summary>
            The update piston shaft flag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.PistonScript._volume">
      <summary>
            The volume
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.ModApi#GameLoop#Interfaces#IDesignerUpdate#DesignerUpdate(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Update method that is only called in the design scene.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.OnSymmetry(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
      <param name="originalPart">The original part.</param>
      <param name="created">if set to <c>true</c> then the part has been created. False indicates the part is being updated.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.UpdateScale">
      <summary>
            Updates the scale of the piston
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.BreakJoint">
      <summary>
            Breaks the joint.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.FindAndSetupConnectionJoint">
      <summary>
            Finds and sets up the connection joint used for moving the attached parts
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.UpdateExtenderPositions">
      <summary>
            Updates the extender shaft positions.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.UpdateShaftExtension">
      <summary>
            Updates the piston shaft extension according to this.Data.CurrentPosition.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.PistonShaft">
      <summary>
            class for holding information for piston shafts
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.PistonShaft.#ctor(UnityEngine.Transform,UnityEngine.Vector3,System.Nullable{UnityEngine.Vector3})">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.PistonShaft" /> class.
            </summary>
      <param name="shaft">The shaft.</param>
      <param name="offset">The offset from the previous shaft position when extended.</param>
      <param name="localRetractedPosition">The local retracted position (assumed to be current position if null).</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.PistonShaft.Height">
      <summary>
            Gets the height of this piston extender's shaft.
            </summary>
      <value>
            The height of this piston extender's shaft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.PistonShaft.LocalRetractedPosition">
      <summary>
            Gets the local retracted position.
            </summary>
      <value>
            The local retracted position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.PistonShaft.Offset">
      <summary>
            Gets the offset.
            </summary>
      <value>
            The offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.PistonScript.PistonShaft.Transform">
      <summary>
            Gets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DesignerPropulsionHelper">
      <summary>
            Helper class for propulsion calculations in the designer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DesignerPropulsionHelper.SampleDrooAtmosphere(System.Double)">
      <summary>
            Samples the Droo atmosphere at the specified height.
            </summary>
      <param name="altitude">The altitude to sample.</param>
      <returns>
            The sample.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript">
      <summary>
            Script attached to a distortion effect particle system.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript._active">
      <summary>
            The flag that determines if the effect is currently active.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript._material">
      <summary>
            The material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript._maxDistortion">
      <summary>
            The maximum distortion
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript._minDistortion">
      <summary>
            The minimum distortion
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript._ps">
      <summary>
            The particle system.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript._qualityEnabled">
      <summary>
            The flag that determines if the current quality settings allow this effect.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript._requested">
      <summary>
            The flag that determines if this effect has been requested to activate.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript.Activate">
      <summary>
            Activates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript.Deactivate">
      <summary>
            Deactivates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript.FlightUpdate(System.Single)">
      <summary>
            Called on FlightUpdate.
            </summary>
      <param name="intensity">The intensity.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript.OnHeatDistortionQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.VisualEffectsQualitySettings.HeatDistortionQuality})">
      <summary>
            Called when the heat distortion quality has changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:ModApi.Settings.Core.Events.SettingChangedEventArgs&lt;ModApi.Settings.VisualEffectsQualitySettings.HeatDistortionQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript.UpdateActiveState">
      <summary>
            Updates the active state of the effect.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.DistortionEffectScript.UpdateFromQuality(ModApi.Settings.VisualEffectsQualitySettings.HeatDistortionQuality)">
      <summary>
            Updates from quality.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineActuatorScript">
      <summary>
            Script for a single actuator in an engine. The actuator rotates the meshes of the hinges
            and arms that control the gimbaling of an engine. This is all purely visual.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineActuatorScript._cylinder">
      <summary>
            The cylinder moves in and out.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineActuatorScript._hinge1">
      <summary>
            The first hinge
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineActuatorScript._hinge2">
      <summary>
            The second hinge
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineActuatorScript._target">
      <summary>
            The target connection point for the actuator.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineActuatorScript.UpdateRotations">
      <summary>
            Updates the rotations of the actuator.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon">
      <summary>
            Provides common functionality for engines such as input handling and fuel consumption.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._active">
      <summary>
            The active flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._audio">
      <summary>
            The audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._bypassInputControllers">
      <summary>
            A value indicating if input controllers can be bypassed for better performance.
            This will ignore input controllers for throttle/pitch/roll/yaw and get inputs directly from the command pod controls.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._canGimbalRoll">
      <summary>
            The flag that determines if the engine can gimbal roll.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._inputPitch">
      <summary>
            The pitch input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._inputRoll">
      <summary>
            The roll input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._inputThrottle">
      <summary>
            The throttle input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._inputYaw">
      <summary>
            The yaw input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._lastTargetThrottle">
      <summary>
            The last target throttle used.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._loopingAudioPitch">
      <summary>
            The looping audio pitch
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._modifier">
      <summary>
            The part modifier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._powerConsumption">
      <summary>
            The power consumption in kW
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._battery">
      <summary>
            The battery fuel source.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon._recalculateGimbalAxes">
      <summary>
            The flag set when the gimbal axes need to be recalculated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.#ctor(ModApi.Craft.Parts.PartModifierScript,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon" /> class.
            </summary>
      <param name="partModifier">The part modifier.</param>
      <param name="maxGimbalAngle">The maximum gimbal angle.</param>
      <param name="gimbalSpeed">The gimbal speed.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.GlobalDebugThrustScale">
      <summary>
            Gets or sets the global debug thrust scale.
            </summary>
      <value>
            The global debug thrust scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.Active">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon" /> is active.
            </summary>
      <value>
        <c>true</c> if active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.Audio">
      <summary>
            Gets the audio.
            </summary>
      <value>
            The audio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.CurrentThrust">
      <summary>
            Gets the current thrust.
            </summary>
      <value>
            The current thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.DistortionIntensity">
      <summary>
            Gets or sets the function that returns the current distortion intensity.
            </summary>
      <value>
            The distortion intensity value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.ElectricalConsumptionRate">
      <summary>
            Gets or sets the electrical consumption rate.
            </summary>
      <value>
            The electrical consumption rate.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.EngineThrottle">
      <summary>
            Gets or sets the throttle.
            </summary>
      <value>
            The throttle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.ExhaustThrottleOverride">
      <summary>
            Gets or sets the exhaust throttle override.
            </summary>
      <value>
            The exhaust throttle override.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.FuelConsumptionRate">
      <summary>
            Gets or sets the fuel consumption rate in L/s.
            </summary>
      <value>
            The fuel consumption rate.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.FuelSource">
      <summary>
            Gets or sets the fuel source.
            </summary>
      <value>
            The fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.HasFuel">
      <summary>
            Gets a value indicating whether this instance has fuel.
            </summary>
      <value>
        <c>true</c> if this instance has fuel; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.MaxGimbalAngle">
      <summary>
            Gets the maximum gimbal angle.
            </summary>
      <value>
            The maximum gimbal angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.MinThrottle">
      <summary>
            Gets or sets the minimum throttle.
            </summary>
      <value>
            The minimum throttle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.Nozzles">
      <summary>
            Gets the nozzles.
            </summary>
      <value>
            The nozzles.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.PartScript">
      <summary>
            Gets the part script.
            </summary>
      <value>
            The part script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.Pitch">
      <summary>
            Gets or sets the pitch.
            </summary>
      <value>
            The pitch.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.PlayAudioWhileIdle">
      <summary>
            Gets or sets a value indicating whether to play engine audio while idle.
            </summary>
      <value>
        <c>true</c> if engine audio should play while idle; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.Roll">
      <summary>
            Gets or sets the roll.
            </summary>
      <value>
            The roll.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.SupportsDeactivation">
      <summary>
            Gets or sets a value indicating whether the engine can be deactivated after it has been activated.
            </summary>
      <value>
        <c>true</c> if the engine supports deactivation; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.ThrottleResponse">
      <summary>
            Gets or sets the throttle response, which determines how quickly the engine responds to
            throttle input. A value of 1.0 would allow the engine to reach 100% throttle in one second.
            Value of 0.5 would require two seconds to reach 100% throttle.
            </summary>
      <value>
            The throttle response.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.Yaw">
      <summary>
            Gets or sets the yaw.
            </summary>
      <value>
            The yaw.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.FlightFixedUpdate(System.Single,System.Single)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="nozzleThrust">The nozzle thrust.</param>
      <param name="maxTorque">The maximum torque.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.FlightUpdate(System.Single)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="smokeOpacity">The smoke opacity.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.OnActivated">
      <summary>
            Called when a part is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.OnFlightStart">
      <summary>
            Sets up the inputs.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.OnTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called when the time multiplier mode has changed.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.RecalculateGimbalAxes(UnityEngine.Transform)">
      <summary>
            Recalculates the gimbal axes.
            </summary>
      <param name="craftCom">The center of mass of the craft transform.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.UpdateInputs(System.Boolean)">
      <summary>
            Updates the control inputs.
            </summary>
      <param name="immediateThrottle">if set to <c>true</c> then set the throttle to the target immediately.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.WarpBurn(System.Single,System.Single,Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Performs a warp burn.
            </summary>
      <param name="nozzleThrust">The nozzle thrust.</param>
      <param name="deltaTime">The delta time.</param>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.ConsumeFuel(System.Single,System.Single)">
      <summary>
            Calculates and consumes the necessary fuel for the given time step.
            </summary>
      <param name="fuelRequired">The fuel required.</param>
      <param name="electricityRequired">The electricity required.</param>
      <returns>
            The percentage of required fuel that was available.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.ConsumeFuel(System.Single)">
      <summary>
            Calculates and consumes the necessary fuel for the given time step.
            </summary>
      <param name="deltaTime">The delta time.</param>
      <returns>
            The percentage of required fuel that was available.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.OnDeactivated">
      <summary>
            Called when a part is deactivated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon.UpdateEngineThrottle(System.Single,System.Boolean)">
      <summary>
            Updates the engine throttle.
            </summary>
      <param name="targetThrottle">The target throttle.</param>
      <param name="immediateThrottle">if set to <c>true</c> then set the throttle to the target immediately.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript">
      <summary>
            Script for a component in the an engine.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript._bottomAdjustment">
      <summary>
            Ajusts the bottom local y coordinate.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript._bottomLocalY">
      <summary>
            The end offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript._boundsSize">
      <summary>
            The bounds size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript._startLocalY">
      <summary>
            The start offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript._transform">
      <summary>
            The transform
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript.EndPosition">
      <summary>
            Gets the end position.
            </summary>
      <value>
            The end position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript.Length">
      <summary>
            Gets the length.
            </summary>
      <value>
            The length.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript.LengthScale">
      <summary>
            Gets the length scale.
            </summary>
      <value>
            The length scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript.Transform">
      <summary>
            Gets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript.SetStartPosition(UnityEngine.Vector3)">
      <summary>
            Sets the start position.
            </summary>
      <param name="startPosition">The position.</param>
      <returns>The new end position.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript.CalculateBounds">
      <summary>
            Calculates the bounds.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData">
      <summary>
            The engine modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.EngineScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._electricalConsumption">
      <summary>
            The electrical consumption in kilowatts
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._fuelConsumption">
      <summary>
            The fuel consumption in L/s.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._fuelConsumptionScale">
      <summary>
            The fuel consumption scale. Allows a player to increase/decrease fuel consumption to increase (or decrease)
            max thrust of the engine. This will allow players to increase their power at the cost of burning fuel
            more quickly. Also affects electrical consumption, if applicable.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._fuelType">
      <summary>
            The fuel type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._gimbalRange">
      <summary>
            The gimbal range.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._maxGimbalAngle">
      <summary>
            The max gimbal angle in degrees.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._maxTorque">
      <summary>
            The maximum torque the engine can apply when being used in a centerline configuration (aligned with CoM).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._seaLevelEfficiency">
      <summary>
            The sea level efficiency
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._supportsWarpBurn">
      <summary>
            Flag that determines if the engine supports warp burn.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._thrust">
      <summary>
            The thrust in Newtons.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData._vacuumEfficiency">
      <summary>
            The vacuum efficiency
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.ElectricalConsumption">
      <summary>
            Gets the electrical consumption in kilowatts
            </summary>
      <value>
            The electrical consumption.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.FuelConsumption">
      <summary>
            Gets the fuel consumption, in L/S
            </summary>
      <value>
            The fuel consumption.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.FuelType">
      <summary>
            Gets the type of the fuel.
            </summary>
      <value>
            The type of the fuel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.GimbalRange">
      <summary>
            Gets or sets the gimbal range.
            </summary>
      <value>
            The gimbal range.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.MaxGimbalAngle">
      <summary>
            Gets the maximum gimbal angle.
            </summary>
      <value>
            The maximum gimbal angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.MaxTorque">
      <summary>
            Gets the maximum torque for the engine. This is intended to be a small amount of torque to help stabilize unintentional
            roll in a craft. It is based off of the Merlin 1C Vacuum engine, and how it vectors its turbopump exhaust to provide a small
            amount of roll.
            </summary>
      <value>
            The maximum torque.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.SeaLevelEfficiency">
      <summary>
            Gets the sea level efficiency.
            </summary>
      <value>
            The sea level efficiency.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.SupportsWarpBurn">
      <summary>
            Gets a value indicating whether the engine supports warp burn.
            </summary>
      <value>
        <c>true</c> if the engine supports warp burn; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.Thrust">
      <summary>
            Gets the engine's thrust.
            Note: This has been scaled by Constants.MassScale.
            </summary>
      <value>
            The thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.VacuumEfficiency">
      <summary>
            Gets the vacuum efficiency.
            </summary>
      <value>
            The vacuum efficiency.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.GetIsp(System.Single,System.Single)">
      <summary>
            Gets the Isp of the engine given the fuel density and efficiency.
            </summary>
      <param name="fuelDensity">The fuel density.</param>
      <param name="thrustEfficiency">The thrust efficiency.</param>
      <returns>The Isp of the engine.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.OnInitialized">
      <summary>
            Called after the modifier has been fully initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineData.OnFuelConsumptionChanged">
      <summary>
            Called when the fuel consumption has changed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript">
      <summary>
            Script for a single nozzle in an engine.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._activated">
      <summary>
            The activated flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._distortionEffect">
      <summary>
            The distortion effect
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._distortionStartLifetime">
      <summary>
            The distortion start lifetime
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._engine">
      <summary>
            The engine
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._exhaustSystem">
      <summary>
            The exhaust system
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._forceNozzleTransform">
      <summary>
            The force nozzle transform, with rotation updated in FixedUpdate().
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._maxGimbalAngle">
      <summary>
            The maximum gimbal angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._maxThrust">
      <summary>
            The maximum thrust
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._pitchAxis">
      <summary>
            The pitch axis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._rollAxis">
      <summary>
            The roll axis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._smokeTrail">
      <summary>
            The smoke trail
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._targetRotation">
      <summary>
            The target rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._visualNozzleTransform">
      <summary>
            The visual nozzle transform, rotation only updated in Update(). For force direction, see <see cref="!:this._forceNozzleTransform" /></summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript._yawAxis">
      <summary>
            The yaw axis
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.CanGimbalRoll">
      <summary>
            Gets a value indicating whether the nozzle is capable of rolling the craft. This is set to false when the
            nozzle is too near the center line of the craft and cannot contribute much to roll.
            </summary>
      <value>
        <c>true</c> if this instance can roll; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.CurrentThrust">
      <summary>
            Gets the current thrust.
            </summary>
      <value>
            The current thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.GimbalSpeed">
      <summary>
            Gets or sets the gimbal speed.
            </summary>
      <value>
            The gimbal speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.RigidBody">
      <summary>
            Gets or sets the rigid body to use for applying force.
            </summary>
      <value>
            The rigid body.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.Activate">
      <summary>
            Called when the engine is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.Deactivate">
      <summary>
            Called when the engine is deactivated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.DisableSmokeParticleSystem">
      <summary>
            Disables the smoke particle system.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.FlightUpdate(System.Single,System.Single,System.Single,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
            Called on FlightUpdate by the engine.
            </summary>
      <param name="smokeThrottle">The smoke throttle.</param>
      <param name="exhaustThrottle">The exhaust throttle.</param>
      <param name="distortion">The distortion intensity.</param>
      <param name="surfaceVelocity">The surface velocity.</param>
      <param name="smokeOpacity">The smoke opacity.</param>
      <param name="light">The light intensity from 0 to 1.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.Initialize(Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineCommon)">
      <summary>
            Initializes the specified engine.
            </summary>
      <param name="engine">The engine.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.OnTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called when the time multiplier mode has changed.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.RecalculateGimbalAxes(UnityEngine.Transform)">
      <summary>
            Recalculates the gimbal axes.
            </summary>
      <param name="craftCom">The center of mass of the craft transform.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.UpdateNozzle(System.Single,Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Called on fixed update by the engine.
            </summary>
      <param name="thrust">The thrust.</param>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineNozzleScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript">
      <summary>
            The script for the engine modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.EngineData&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript._actuators">
      <summary>
            The actuators
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript._currentEfficiency">
      <summary>
            The current efficiency of the engine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript._engineCommon">
      <summary>
            The engine common object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript._fuelTank">
      <summary>
            The fuel tank this engine is connected to.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript._inFlightScene">
      <summary>
            The in flight scene flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript._maxNozzleThrust">
      <summary>
            The nozzle thrust percentage
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.CurrentEfficiency">
      <summary>
            Gets the current efficiency of the engine from 0-1.
            </summary>
      <value>
            The current efficiency.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.CurrentMassFlowRate">
      <summary>
            Gets the mass flow rate of the engine.
            </summary>
      <value>
            The mass flow rate in kg/s.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.CurrentThrust">
      <summary>
            Gets the current thrust of the engine.
            </summary>
      <value>
            The current thrust in scaled Newtons.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.Down">
      <summary>
            Gets down vector of this engine.
            </summary>
      <value>
            The down vector.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.FuelSource">
      <summary>
            Gets the fuel source.
            </summary>
      <value>
            The fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#FuelSource">
      <summary>
            Gets the fuel source.
            </summary>
      <value>
            The fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.MaximumMassFlowRate">
      <summary>
            Gets the maximum mass flow rate of the engine in kg/s.
            </summary>
      <value>
            The maximum mass flow rate in kg/s.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#MaximumThrust">
      <summary>
            Gets the maximum thrust of the engine in scaled Newtons.
            </summary>
      <value>
            The thrust in scaled Newtons.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#Part">
      <summary>
            Gets the part.
            </summary>
      <value>
            The part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#RemainingFuel">
      <summary>
            Gets the remaining fuel.
            </summary>
      <value>
            The remaining fuel in kg.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.SupportsWarpBurn">
      <summary>
            Gets a value indicating whether this engine supports burning during time warp.
            </summary>
      <value>
        <c>true</c> if this engine supports burning during time warp; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.ThrottleResponse">
      <summary>
            Gets the throttle response, which determines how quickly the engine responds to
            throttle input. A value of 1.0 would allow the engine to reach 100% throttle in one second.
            Value of 0.5 would require two seconds to reach 100% throttle.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.FuelTank">
      <summary>
            Gets or sets the fuel tank this engine is connected to.
            </summary>
      <value>
            The fuel tank.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.FlightEnd">
      <summary>
            Called when the script is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.GetEfficiencyAtCurrentAtmosphericPressure">
      <summary>
            Gets the efficiency at current atmospheric pressure.
            </summary>
      <returns>Efficiency at current atmospheric pressure.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnActivated">
      <summary>
            Called when a part is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnConnectedToPart(ModApi.Craft.Parts.PartConnectedEventData)">
      <summary>
            Called when this part is connected to another part in the designer.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnModifiersCreated">
      <summary>
            Called after all of the part's modifiers have been created.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnPartDestroyed">
      <summary>
            Called when the part owning this modifier is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.UpdateAutoFuelTypeFuelTanks">
      <summary>
            Updates the auto-fuel-type fuel tanks connected to this engine.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnCraftFuelSourceChanged(System.Object,System.EventArgs)">
      <summary>
            Called when the fuel tank's craft fuel source has changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.OnTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called when the time multiplier mode has changed.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.ProcessWarpMode(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Processes the engine for warp mode, if applicable.
            </summary>
      <param name="frame">The frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineScript.RefreshFuelSource">
      <summary>
            Refreshes the fuel source from the fuel tank this engine is connected to.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineUtilities">
      <summary>
            Engine utilities.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineUtilities.ConnectedWithFuelLine(ModApi.Craft.Parts.PartConnection,ModApi.Craft.Parts.PartData,ModApi.Craft.Parts.PartData)">
      <summary>
            Determines if the two parts are connected with a fuel line.
            </summary>
      <param name="partConnection">The part connection.</param>
      <param name="part">The part.</param>
      <param name="otherPart">The other part.</param>
      <returns>True if they are connected, otherwise false.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineUtilities.GetFuelTank(ModApi.Craft.Parts.IPartScript,System.Int32)">
      <summary>
            Gets the fuel tank from the part connection at the specified attach point. If a fuel tank is not connected at that attach
            point, then this will also search fuel line parts until it finds the first fuel tank.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="attachPoint">The attach point.</param>
      <returns>The fuel tank, or null if one could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineUtilities.GetFuelTank(ModApi.Craft.Parts.PartData,ModApi.Craft.Parts.PartData)">
      <summary>
            Gets the fuel tank from the starting part. If the starting part is not a fuel tank, then
            its part connections will be searched for parts connected via fuel lines until it can
            find a fuel tank, or return null if there are none.
            </summary>
      <param name="startingPart">The part to check first for a fuel tank.</param>
      <param name="ignorePart">An optional part to ignore from searching.</param>
      <returns>The fuel tank or null if none could be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineUtilities.UpdateAutoFuelTypeFuelTanks(Assets.Scripts.Craft.Parts.Modifiers.FuelTankData,ModApi.Craft.Propulsion.FuelType)">
      <summary>
            Updates the fuel type for fuel tanks set to "auto" fuel type. This method starts at the fuel tank connected
            to the part at the specified attach point. It will recursively find connected auto-fuel-type fuel tanks
            and update them until it cannot find any more.
            </summary>
      <param name="fuelTank">The fuel tank.</param>
      <param name="fuelType">Type of the fuel.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineUtilities.GetFuelTankRecursive(ModApi.Craft.Parts.PartData,ModApi.Craft.Parts.PartData,ModApi.Craft.PartLookup@)">
      <summary>
            Recursive method that searches for the first fuel tank connectedt to the original part. The visited parts lookup
            is created only if necessary.
            </summary>
      <param name="part">The part.</param>
      <param name="originalPart">The original part.</param>
      <param name="visitedParts">The visited parts.</param>
      <returns>The connected fuel tank, or null if none could be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineUtilities.UpdateAutoFuelTypeFuelTanksRecursive(ModApi.Craft.Parts.PartData,ModApi.Craft.PartLookup,ModApi.Craft.Propulsion.FuelType)">
      <summary>
            Recursive method to update auto-fuel-type fuel tanks to the specified fuel type.
            </summary>
      <param name="part">The part.</param>
      <param name="visitedParts">The visited parts.</param>
      <param name="fuelType">Type of the fuel.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustInfoScript">
      <summary>
            Script attached to a game object in a nozzle prefab to include information for the exhaust system.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustInfoScript._throatRadius">
      <summary>
            The throat radius
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustInfoScript.ThroatRadius">
      <summary>
            Gets the throat radius.
            </summary>
      <value>
            The throat radius.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript">
      <summary>
            Script for engine exhaust visual effects.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.MinExpansionRatio">
      <summary>
            The minimum expansion ratio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._alpha">
      <summary>
            The alpha
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._color">
      <summary>
            The color
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._colorFadeAlpha">
      <summary>
            The color fade alpha
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._colorFadeStart">
      <summary>
            The color fade start
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._exhaustLength">
      <summary>
            The exhaust length
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._exhaustMaterial">
      <summary>
            The exhaust material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._exhaustMesh">
      <summary>
            The exhaust mesh
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._exhaustTransform">
      <summary>
            The transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._expansionRatio">
      <summary>
            The expansion ratio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._intensity">
      <summary>
            The intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._nozzleEmission">
      <summary>
            The nozzle emission
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._nozzleEmissionMaterial">
      <summary>
            The nozzle emission material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._nozzleRadius">
      <summary>
            The nozzle radius
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._particleEffectLength">
      <summary>
            The particle effect length
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._particleEffectSize">
      <summary>
            The particle effect size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._particleSystem">
      <summary>
            The particle system
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._particleSystemTransform">
      <summary>
            The particle system transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._throttle">
      <summary>
            The throttle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript._throttleResponse">
      <summary>
            The throttle response
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.Alpha">
      <summary>
            Gets or sets the alpha.
            </summary>
      <value>
            The alpha.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.BaseIntensity">
      <summary>
            Gets or sets the base intensity.
            </summary>
      <value>
            The base intensity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.Color">
      <summary>
            Gets or sets the color.
            </summary>
      <value>
            The color.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.DetailIntensity">
      <summary>
            Gets or sets the detail intensity.
            </summary>
      <value>
            The detail intensity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.ExhaustLength">
      <summary>
            Gets or sets the length of the exhaust.
            </summary>
      <value>
            The length of the exhaust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.ExpansionRatio">
      <summary>
            Gets or sets the expansion ratio.
            </summary>
      <value>
            The expansion ratio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.GameObject">
      <summary>
            Gets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.MaxExpansionRatio">
      <summary>
            Gets or sets the maximum expansio ratio scale.
            </summary>
      <value>
            The maximum expansio ratio scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.NozzleRadius">
      <summary>
            Gets or sets the nozzle radius.
            </summary>
      <value>
            The nozzle radius.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.ParticleScale">
      <summary>
            Gets or sets the particle scale.
            </summary>
      <value>
            The particle scale.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.SetActive(System.Boolean)">
      <summary>
            Sets the active state of the exhaust system.
            </summary>
      <param name="active">if set to <c>true</c> then set the system active.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.UpdateExhaust(System.Single)">
      <summary>
            Updates the exhaust system with the specified throttle.
            </summary>
      <param name="throttle">The throttle.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ExhaustSystemScript.UpdateProperties(System.Single,System.Single,System.Single)">
      <summary>
            Updates the properties.
            </summary>
      <param name="intensity">The intensity.</param>
      <param name="expansionRatio">The expansion ratio.</param>
      <param name="exhaustLength">Length of the exhaust.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.IAnalyzePerformance">
      <summary>
            Interface for a part that allows it support performance analysis in the designer.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.IAnalyzePerformance.UsesMachNumber">
      <summary>
            Gets a value indicating whether indicating if the object makes use of the mach number
            setting.
            </summary>
      <value>
        <c>true</c> if the object uses mach number; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.IAnalyzePerformance.OnGeneratePerformanceAnalysisModel(ModApi.Ui.Inspector.GroupModel,ModApi.Ui.Inspector.InspectorModel)">
      <summary>
            Generates an inspector model for performance analysis in the designer.
            </summary>
      <param name="groupModel">The performance group model.</param>
      <param name="model">The inspector model.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.IExhaustSystem">
      <summary>
            Interface for an exhaust system.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.IExhaustSystem.GameObject">
      <summary>
            Gets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.IExhaustSystem.SetActive(System.Boolean)">
      <summary>
            Sets the active state of the exhaust system.
            </summary>
      <param name="active">if set to <c>true</c> then set the system active.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.IExhaustSystem.UpdateExhaust(System.Single)">
      <summary>
            Updates the exhaust.
            </summary>
      <param name="throttle">The throttle.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletData">
      <summary>
            The inlet modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.InletScript&gt;" />
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript">
      <summary>
            The script for the inlet modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript._inletAir">
      <summary>
            The inlet air to provide air to.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript._maxArea">
      <summary>
            The maximum area
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript._occlusion">
      <summary>
            The current amount of occlusion
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript._occlusionSampler">
      <summary>
            The occlusion sampler
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript._openDirection">
      <summary>
            The direction the opening of the inlet is facing, in local coordinates.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.FlightEnd">
      <summary>
            End method called when the part is being removed from the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.ConfigureForFlight">
      <summary>
            Configures the inlet for flight.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.CreateOcclusionSampler(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript,System.Boolean)">
      <summary>
            Creates the occlusion sampler.
            </summary>
      <param name="fuselage">The fuselage.</param>
      <param name="reversed">if set to <c>true</c> then set up for the reversed scenario.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.FindInletAir">
      <summary>
            Finds the inlet air to use.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.InletScript.FindJetEngine(ModApi.Craft.Parts.PartData,ModApi.Craft.PartLookup)">
      <summary>
            Recursive method that finds the jet engine connected directly or indirectly (through
            multiple inlets) to this inlet.
            </summary>
      <param name="part">The part.</param>
      <param name="partsVisited">The parts visited.</param>
      <returns>
            The jet engine script, or null if there are none connected.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript">
      <summary>
            The script that manages styles, visuals, and animations on the jet engine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._afterburner">
      <summary>
            The afterburner
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._afterburnerAudio">
      <summary>
            The afterburner audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._colliderCore">
      <summary>
            The collider for the core.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._componentsRoot">
      <summary>
            The mesh core
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._coreEnd">
      <summary>
            The core end
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._coreMiddle">
      <summary>
            The core middle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._coreRoot">
      <summary>
            The mesh core
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._coreStart">
      <summary>
            The core start
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._fan">
      <summary>
            The fan
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._fanCoreFront">
      <summary>
            The fan core front
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._fanCoreRear">
      <summary>
            The fan core rear
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._fanMainFront">
      <summary>
            The fan main front
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._fanSpeed">
      <summary>
            The fan speed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._fuselage">
      <summary>
            The fuselage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._inletConeParent">
      <summary>
            The cone parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._jet">
      <summary>
            The jet script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._nozzle">
      <summary>
            The nozzle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._subPartFan">
      <summary>
            The sub part fan
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._subPartInletCone">
      <summary>
            The sub part inlet cone
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._subPartNozzle">
      <summary>
            The sub part nozzle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript._variableNozzleScript">
      <summary>
            The variable nozzle script
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.AfterburnerAudio">
      <summary>
            Gets the afterburner audio.
            </summary>
      <value>
            The afterburner audio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.PartScript">
      <summary>
            Gets the part script.
            </summary>
      <value>
            The part script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.AnimateComponents(System.Boolean,System.Single)">
      <summary>
            Animates the components of the engine.
            </summary>
      <param name="active">if set to <c>true</c> then the engine is active.</param>
      <param name="throttle">The engine throttle.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.Initialize(Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript,Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript)">
      <summary>
            Initializes the specified jet engine.
            </summary>
      <param name="jetEngine">The jet engine.</param>
      <param name="fuselage">The fuselage.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.UpdateComponents">
      <summary>
            Updates the components.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.UpdateStyles">
      <summary>
            Updates the styles.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.DestroySubPart(UnityEngine.GameObject)">
      <summary>
            Destroys the sub part.
            </summary>
      <param name="subPart">The sub part.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.LoadFan(System.String)">
      <summary>
            Loads the fan.
            </summary>
      <param name="fanId">The fan identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.LoadInletCone(System.String)">
      <summary>
            Loads the inlet cone.
            </summary>
      <param name="inletConeId">The inlet cone identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.LoadNozzle(System.String)">
      <summary>
            Loads the nozzle.
            </summary>
      <param name="nozzleId">The nozzle identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineComponentsScript.LoadSubPart(System.String,UnityEngine.Transform)">
      <summary>
            Loads the sub part.
            </summary>
      <param name="path">The path to the subpart's resource.</param>
      <param name="parent">The parent.</param>
      <returns>The loaded sub part's game object.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData">
      <summary>
            The jet engine modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.JetEngineScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._afterburnerThrottleStart">
      <summary>
            The afterburner throttle start
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._bypassRatio">
      <summary>
            The bypass ratio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._compressionRatio">
      <summary>
            The compression ratio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._hasAfterburner">
      <summary>
            The has afterburner flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._mass">
      <summary>
            The mass of the jet engine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._price">
      <summary>
            The price of the jet engine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._propulsionLabButton">
      <summary>
            The propulsion lab button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._shroudCurvature">
      <summary>
            The shroud curvature
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._shroudLength">
      <summary>
            The shroud length
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData._size">
      <summary>
            The size
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.AfterburnerThrottleStart">
      <summary>
            Gets the afterburner throttle start.
            </summary>
      <value>
            The afterburner throttle start.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.BypassRatio">
      <summary>
            Gets the bypass ratio.
            </summary>
      <value>
            The bypass ratio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.CompressionRatio">
      <summary>
            Gets the compression ratio.
            </summary>
      <value>
            The compression ratio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.CompressorLength">
      <summary>
            Gets the length of the compressor.
            </summary>
      <value>
            The length of the compressor.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.CoreRadius">
      <summary>
            Gets the core radius.
            </summary>
      <value>
            The core radius.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.FanArea">
      <summary>
            Gets the fan area.
            </summary>
      <value>
            The fan area.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.FanRadius">
      <summary>
            Gets the fan radius.
            </summary>
      <value>
            The fan radius.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.HasAfterburner">
      <summary>
            Gets a value indicating whether this instance has afterburner.
            </summary>
      <value>
        <c>true</c> if this instance has afterburner; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.ShroudCurvature">
      <summary>
            Gets the shroud curvature.
            </summary>
      <value>
            The shroud curvature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.ShroudLength">
      <summary>
            Gets the length of the shroud.
            </summary>
      <value>
            The length of the shroud.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.ThrottleResponse">
      <summary>
            Gets the throttle response.
            </summary>
      <value>
            The throttle response.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.CalculateMassAndPrice">
      <summary>
            Calculates the mass and price.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.OnPartStyleChanged">
      <summary>
            Called when the part style has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData.UpdateAndSyncComponents(System.Boolean)">
      <summary>
            Updates the engine and synchronize the changes with the symmetric parts.
            </summary>
      <param name="updateStyles">if set to <c>true</c> then update styles.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath">
      <summary>
            Class for helping with the jet engine math.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.R">
      <summary>
            The specific gas constant.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.CalculateAirPressure(System.Double,System.Double)">
      <summary>
            Calculates the air pressure.
            </summary>
      <param name="airDensity">The air density.</param>
      <param name="temperature">The temperature.</param>
      <returns>The air pressure.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.ProcessParams(Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Params)">
      <summary>
            Processes the parameters.
            </summary>
      <param name="p">The parameters to process.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.SafeSqrt(System.Double)">
      <summary>
            Returns the square root if the number is positive.
            </summary>
      <param name="x">The value.</param>
      <returns>The square root if the number is positive, otherwise it returns negative.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs">
      <summary>
            Inputs for jet engine math.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.AfterburnerTemp">
      <summary>
            Gets or sets the temperature of T06 at 100% afterburner throttle
            </summary>
      <value>
            The afterburner temperature in Kelvin.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.AmbientPressure">
      <summary>
            Gets or sets the ambient pressure.
            </summary>
      <value>
            The ambient pressure in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.AmbientTemperature">
      <summary>
            Gets or sets the ambient temperature.
            </summary>
      <value>
            The ambient temperature in K.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.BurnerTemp">
      <summary>
            Gets or sets the burner temperature of T04 at 100% throttle
            </summary>
      <value>
            The burner temperature in Kelvin.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.BypassRatio">
      <summary>
            Gets or sets the turbofan bypass ratio.
            </summary>
      <value>
            The beta.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.CompressorPressureRatio">
      <summary>
            Gets or sets the compressor pressure ratio.
            </summary>
      <value>
            The compressor pressure ratio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.CoreInletArea">
      <summary>
            Gets or sets the core inlet area.
            </summary>
      <value>
            The core inlet area in m2.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.FanPressureRatio">
      <summary>
            Gets or sets the fan pressure ratio.
            </summary>
      <value>
            The fan pressure ratio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.MachNumber">
      <summary>
            Gets or sets the mach number.
            </summary>
      <value>
            The mach number.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.Throttle">
      <summary>
            Gets or sets the throttle.
            </summary>
      <value>
            The throttle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Inputs.ThrottleAfterburner">
      <summary>
            Gets or sets the afterburner throttle.
            </summary>
      <value>
            The afterburner throttle.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs">
      <summary>
            Outputs for jet engine math.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.ExitVelocityCore">
      <summary>
            Gets or sets the exit of the core in m/s.
            </summary>
      <value>
            The exit velocity of the core.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.ExitVelocityFan">
      <summary>
            Gets or sets the exit velocity of the fan in m/s.
            </summary>
      <value>
            The exit velocity of the fan.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.FuelFlow">
      <summary>
            Gets or sets the fuel flow in kg/s.
            </summary>
      <value>
            The fuel flow.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.FuelToAirRatio">
      <summary>
            Gets or sets the fuel to air ratio.
            </summary>
      <value>
            The fuel to air ratio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.InletVelocity">
      <summary>
            Gets or sets the inlet velocity in m/s.
            </summary>
      <value>
            The inlet velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.Isp">
      <summary>
            Gets or sets the specific impulse in seconds.
            </summary>
      <value>
            The specific impulse.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.MassFlowCore">
      <summary>
            Gets or sets the core mass flow in kg/s.
            </summary>
      <value>
            The core mass flow.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.MassFlowFan">
      <summary>
            Gets or sets the fan mass flow in kg/s.
            </summary>
      <value>
            The fan mass flow.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.P01">
      <summary>
            Gets or sets the pressure in Pa at station 1 - Inlet.
            </summary>
      <value>
            The temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.P02">
      <summary>
            Gets or sets the pressure in Pa at station 2 - Compressor Inlet.
            </summary>
      <value>
            The temperature in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.P03">
      <summary>
            Gets or sets the pressure in Pa at station 3 - Compressor Outlet.
            </summary>
      <value>
            The temperature in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.P04">
      <summary>
            Gets or sets the pressure in Pa at station 4 - Turbine Inlet.
            </summary>
      <value>
            The temperature in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.P05">
      <summary>
            Gets or sets the pressure in Pa at station 5 - Turbine Outlet.
            </summary>
      <value>
            The temperature in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.P06">
      <summary>
            Gets or sets the pressure in Pa at station 1 - Nozzle Inlet
            </summary>
      <value>
            The temperature in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.P08">
      <summary>
            Gets or sets the pressure in Pa at station 1 - Fan Outlet.
            </summary>
      <value>
            The temperature in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.RamDrag">
      <summary>
            Gets or sets the ram drag in N.
            </summary>
      <value>
            The ram drag.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.SpecificThrust">
      <summary>
            Gets or sets the Thrust per air mass flow rate in N/kg/s.
            </summary>
      <value>
            The specific thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.T01">
      <summary>
            Gets or sets the temperature in Kelvin at station 1 - Inlet.
            </summary>
      <value>
            The temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.T02">
      <summary>
            Gets or sets the temperature in Kelvin at station 2 - Compressor Inlet.
            </summary>
      <value>
            The temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.T03">
      <summary>
            Gets or sets the temperature in Kelvin at station 3 - Compressor Outlet.
            </summary>
      <value>
            The temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.T04">
      <summary>
            Gets or sets the temperature in Kelvin at station 4 - Turbine Inlet.
            </summary>
      <value>
            The temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.T05">
      <summary>
            Gets or sets the temperature in Kelvin at station 5 - Turbine Outlet.
            </summary>
      <value>
            The temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.T06">
      <summary>
            Gets or sets the temperature in Kelvin at station 1 - Nozzle Inlet
            </summary>
      <value>
            The temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.T08">
      <summary>
            Gets or sets the temperature in Kelvin at station 1 - Fan Outlet.
            </summary>
      <value>
            The temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.ThrustCore">
      <summary>
            Gets or sets the core thrust in N.
            </summary>
      <value>
            The core thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.ThrustFan">
      <summary>
            Gets or sets the fan thrust in N.
            </summary>
      <value>
            The fan thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.ThrustNet">
      <summary>
            Gets or sets the net thrust in N.
            </summary>
      <value>
            The net thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.ThrustNetScaled">
      <summary>
            Gets the net thrust in scaled Newtons.
            </summary>
      <value>
            The scaled net thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Outputs.ThrustSpecificFuelConsumption">
      <summary>
            Gets or sets the fuel flow rate per thrust in kg/s/N.
            </summary>
      <value>
            The thrust specific fuel consumption.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Params">
      <summary>
            Inputs and outputs for jet engine math.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Params.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Params" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Params.Inputs">
      <summary>
            Gets or sets the inputs.
            </summary>
      <value>
            The inputs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineMath.Params.Output">
      <summary>
            Gets or sets the output.
            </summary>
      <value>
            The output.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript">
      <summary>
            The script for the jet engine modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineData&gt;" />
      <seealso cref="T:ModApi.Craft.Parts.Modifiers.Propulsion.IReactionEngine" />
      <seealso cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.IAnalyzePerformance" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._afterburnerThrottle">
      <summary>
            The afterburner throttle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._attachPointTop">
      <summary>
            The top attach point.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._brakeInput">
      <summary>
            The brake input.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._brakeValue">
      <summary>
            The current brake value
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._currentIsp">
      <summary>
            The current isp
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._currentMassFlowRate">
      <summary>
            The current mass flow rate
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._engineCommon">
      <summary>
            The engine common object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._fuselage">
      <summary>
            The fuselage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._inletEfficiency">
      <summary>
            The inlet efficiency, from 0 to 1.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._inverseFuelDensity">
      <summary>
            One divided by fuel density.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._jetComponents">
      <summary>
            The jet components
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._mathParams">
      <summary>
            The math parameters.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._requiredAirArea">
      <summary>
            The required air area.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._thrustCore">
      <summary>
            The thrust from the core.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._thrustCurrent">
      <summary>
            The current thrust
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._thrustFan">
      <summary>
            The thrust from the fan.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript._thrustMax">
      <summary>
            The maximum thrust
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#CurrentMassFlowRate">
      <summary>
            Gets the mass flow rate of the engine.
            </summary>
      <value>
            The mass flow rate in kg/s.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#CurrentThrust">
      <summary>
            Gets the current thrust of the engine.
            </summary>
      <value>
            The current thrust in scaled Newtons.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.DirectAir">
      <summary>
            Gets the direct air for the jet engine. This includes air that is
            contributed to by inlets that are directly connected to this engine
            by inlets.
            </summary>
      <value>
            The direct air.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.FuelSource">
      <summary>
            Gets the fuel source.
            </summary>
      <value>
            The fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#FuelSource">
      <summary>
            Gets the fuel source.
            </summary>
      <value>
            The fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.MaximumMassFlowRate">
      <summary>
            Gets the maximum mass flow rate of the engine in kg/s.
            </summary>
      <value>
            The maximum mass flow rate in kg/s.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#MaximumThrust">
      <summary>
            Gets the maximum thrust of the engine in scaled Newtons.
            </summary>
      <value>
            The thrust in scaled Newtons.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#Part">
      <summary>
            Gets the part.
            </summary>
      <value>
            The part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#RemainingFuel">
      <summary>
            Gets the remaining fuel.
            </summary>
      <value>
            The remaining fuel in kg.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.SupportsWarpBurn">
      <summary>
            Gets a value indicating whether this engine supports burning during time warp.
            </summary>
      <value>
        <c>true</c> if this engine supports burning during time warp; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ThrottleResponse">
      <summary>
            Gets the throttle response, which determines how quickly the engine responds to
            throttle input. A value of 1.0 would allow the engine to reach 100% throttle in one second.
            Value of 0.5 would require two seconds to reach 100% throttle.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.UsesMachNumber">
      <summary>
            Gets a value indicating whether indicating if the object makes use of the mach number
            setting.
            </summary>
      <value>
        <c>true</c> if the object uses mach number; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.CalculateDesignerPerformance">
      <summary>
            Calculates the static thrust in the designer for stage analysis.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.FlightEnd">
      <summary>
            Called when the script is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnActivated">
      <summary>
            Called when a part is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnGeneratePerformanceAnalysisModel(ModApi.Ui.Inspector.GroupModel,ModApi.Ui.Inspector.InspectorModel)">
      <summary>
            Generates an inspector model for performance analysis in the designer.
            </summary>
      <param name="groupModel">The performance group model.</param>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnModifiersCreated">
      <summary>
            Called after all of the part's modifiers have been created.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnSymmetry(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
      <param name="originalPart">The original part.</param>
      <param name="created">if set to <c>true</c> then the part has been created. False indicates the part is being updated.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.PrepareForPartIcon">
      <summary>
            Called when the part is about to have its picture taken for the part icons. Try and look your best and say cheese!
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.UpdateComponentsInDesigner(System.Boolean)">
      <summary>
            Updates the components in designer.
            </summary>
      <param name="updateStyles">if set to <c>true</c> then update the styles.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnDestroy">
      <summary>
            Unity OnDestroy method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.GetStationString(System.Double,System.Double)">
      <summary>
            Gets the string representing pressure and temperature at the specified station.
            </summary>
      <param name="pressure">The pressure.</param>
      <param name="temperature">The temperature.</param>
      <returns>The station string.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.CalculateDesignerPerformance(System.Double,System.Double,System.Double)">
      <summary>
            Calculates the designer performance.
            </summary>
      <param name="airPressure">The air pressure.</param>
      <param name="airTemperature">The air temperature.</param>
      <param name="machNumber">The mach number.</param>
      <returns>
            The jet engine parameters.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.ConfigureAudio">
      <summary>
            Configures the audio.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.GenerateInspectorModel(ModApi.Ui.Inspector.GroupModel,System.Boolean)">
      <summary>
            Generates the inspector model.
            </summary>
      <param name="model">The model.</param>
      <param name="flightScene">if set to <c>true</c> if in the flight scene.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.GetInletEfficiency">
      <summary>
            Gets the required air string for the inspector model.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnPerformanceAnalysisEnvironmentChanged(System.Object,System.EventArgs)">
      <summary>
            Called when the performance analysis environment has changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.OnTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called when the time multiplier mode has changed.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.SaveAttachPointSnapshot">
      <summary>
            Saves a snapshot of the most relevant attach point's world position.
            </summary>
      <returns>The attach point snapshot.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.UpdatePerformance(System.Single,System.Double,System.Double,System.Double)">
      <summary>
            Updates the performance.
            </summary>
      <param name="throttle">The throttle.</param>
      <param name="machNumber">The mach number.</param>
      <param name="ambientPressure">The ambient pressure in Pa.</param>
      <param name="ambientTemperature">The ambient temperature in K.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.AttachPointSnapshot">
      <summary>
            Snapshot of an attach point at a specific position.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.AttachPointSnapshot.#ctor(ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.AttachPointSnapshot" /> class.
            </summary>
      <param name="attachPoint">The attach point.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.AttachPointSnapshot.AttachPoint">
      <summary>
            Gets or sets the attach point.
            </summary>
      <value>
            The attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.AttachPointSnapshot.DeltaPosition">
      <summary>
            Gets the delta between the saved world position and the attach points current world position.
            </summary>
      <value>
            The delta position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.JetEngineScript.AttachPointSnapshot.WorldPosition">
      <summary>
            Gets the world position.
            </summary>
      <value>
            The world position.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler">
      <summary>
            Samples for parts occluding/blocking a specified area.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._cellSize">
      <summary>
            The cell size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._currentCell">
      <summary>
            The current cell
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._debugObjects">
      <summary>
            The game objects used for debugging.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._localCenter">
      <summary>
            The local center
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._localDirection">
      <summary>
            The local direction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._numOccluded">
      <summary>
            The number occluded
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._numSampled">
      <summary>
            The number sampled
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._numSamplesPerDimension">
      <summary>
            The number samples per dimension
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._overlapSphereTestResults">
      <summary>
            The overlap sphere test results
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._spacingX">
      <summary>
            The spacing x
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._spacingY">
      <summary>
            The spacing y
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler._transform">
      <summary>
            The transform
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.#ctor(UnityEngine.Vector2,System.Int32,UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler" /> class.
            </summary>
      <param name="scale">The scale representing the width (x) and height (y).</param>
      <param name="numSamplesPerDimension">The number samples per dimension.</param>
      <param name="transform">The transform.</param>
      <param name="localCenter">The local center.</param>
      <param name="localDirection">The local direction.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.DebugModeEnabled">
      <summary>
            Gets or sets a value indicating whether debug mode is enabled.
            </summary>
      <value>
        <c>true</c> if debug mode is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.IgnoreList">
      <summary>
            Gets the colliders to ignore when checking for collisions.
            </summary>
      <value>
            The colliders to ignore.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.MaxDistance">
      <summary>
            Gets or sets the maximum distance to check for occlusion.
            </summary>
      <value>
            The maximum distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.Occlusion">
      <summary>
            Gets or sets the amount of occlusion, from 0 (no occlusion) to 1 (full occlusion).
            </summary>
      <value>
            The amount of occlusion.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.SkipCorners">
      <summary>
            Gets or sets a value indicating whether to skip checking the corner samples for occlusion. This can be
            useful when trying to approximate a circular area.
            </summary>
      <value>
        <c>true</c> if corners should be skipped; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.Update">
      <summary>
            Update this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.CalculateCellPosition(UnityEngine.Vector2i)">
      <summary>
            Calculates the cell position.
            </summary>
      <param name="currentCell">The current cell.</param>
      <returns>The cell position.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.CreateDebugSphere(UnityEngine.Vector3,System.Single,System.Boolean)">
      <summary>
            Creates the debug sphere.
            </summary>
      <param name="startPosition">The start position.</param>
      <param name="diameter">The diameter.</param>
      <param name="occluded">if set to <c>true</c> [occluded].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.IsCornerCell">
      <summary>
            Determines whether the current cell is a corner.
            </summary>
      <returns>
        <c>true</c> if it is a corner cell; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.OcclusionSampler.SampleCell(UnityEngine.Vector2i)">
      <summary>
            Samples the cell.
            </summary>
      <param name="currentCell">The current cell.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ParticleExhaustSystemScript">
      <summary>
            Particle system based exhaust system.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ParticleExhaustSystemScript._exhaustParticleSystem">
      <summary>
            The exhaust particle system.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ParticleExhaustSystemScript._exhaustStartLifetime">
      <summary>
            The exhaust start lifetime
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ParticleExhaustSystemScript.GameObject">
      <summary>
            Gets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ParticleExhaustSystemScript.SetActive(System.Boolean)">
      <summary>
            Sets the active state of the exhaust system.
            </summary>
      <param name="active">if set to <c>true</c> then set the system active.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ParticleExhaustSystemScript.UpdateExhaust(System.Single)">
      <summary>
            Updates the exhaust.
            </summary>
      <param name="throttle">The throttle.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ParticleExhaustSystemScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.ParticleExhaustSystemScript.UpdateExhaustParticleSystem(UnityEngine.ParticleSystem,System.Single,System.Single)">
      <summary>
            Updates the particle system.
            </summary>
      <param name="ps">The ps.</param>
      <param name="maxLifetime">The maximum lifetime.</param>
      <param name="throttle">The throttle.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript">
      <summary>
            The script that manages styles, visuals, and animations on the rocket engine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._cornerRadiuses">
      <summary>
            The corner radiuses. Cached to prevent unnecessary garbage collection.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._actuators">
      <summary>
            The actuators
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._chamberCollider">
      <summary>
            The chamber collider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._exhaustSystem">
      <summary>
            The exhaust system
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._internals">
      <summary>
            The internals root
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._nozzleCollider">
      <summary>
            The nozzle collider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._nozzleMesh">
      <summary>
            The nozzle mesh
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._rocket">
      <summary>
            The jet script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._smokeTrail">
      <summary>
            The smoke trail
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._subPartAudio">
      <summary>
            The sub part audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._subPartChamber">
      <summary>
            The chamber sub part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._subPartCycle">
      <summary>
            The sub part cycle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._subPartExtension">
      <summary>
            The nozzle extension sub part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._subPartGimbals">
      <summary>
            The gimbals
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript._subPartNozzle">
      <summary>
            The nozzle sub part.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.ExhaustSystem">
      <summary>
            Gets the exhaust system.
            </summary>
      <value>
            The exhaust system.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.PartScript">
      <summary>
            Gets the part script.
            </summary>
      <value>
            The part script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.SmokeTrail">
      <summary>
            Gets the smoke trail.
            </summary>
      <value>
            The smoke trail.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.FlightStart">
      <summary>
            Sets up components for flight.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.Initialize(Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript)">
      <summary>
            Initializes the specified jet engine.
            </summary>
      <param name="rocketEngine">The rocket engine.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.UpdateActuators">
      <summary>
            Updates the actuators.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.UpdateComponents">
      <summary>
            Updates the components.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.UpdateStyles">
      <summary>
            Updates the styles.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.DestroySubPart(UnityEngine.GameObject)">
      <summary>
            Destroys the sub part.
            </summary>
      <param name="subPart">The sub part.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.LoadEngineComponent(Assets.Scripts.Craft.Parts.Modifiers.Propulsion.EngineComponentScript,System.String,System.String)">
      <summary>
            Loads the engine component, unless the component with the specified ID is already loaded, in which case it just returns
            the currently loaded engine component.
            </summary>
      <param name="engineComponent">The currently loaded engine component, or null if one is not loaded.</param>
      <param name="prefabPathPrefix">The prefab path prefix.</param>
      <param name="id">The identifier.</param>
      <returns>
            The loaded engine component.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.LoadGameObject(System.String,UnityEngine.Transform)">
      <summary>
            Loads the sub part.
            </summary>
      <param name="path">The path to the subpart's resource.</param>
      <param name="parent">The parent.</param>
      <returns>The loaded sub part's game object.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineComponentsScript.LoadSubPart(UnityEngine.GameObject,System.String,System.String)">
      <summary>
            Loads the sub part, unless the sub part with the specified ID is already loaded, in which case it just returns
            the currently loaded sub part.
            </summary>
      <param name="existingGameObject">The existing game object.</param>
      <param name="prefabPathPrefix">The prefab path prefix.</param>
      <param name="id">The identifier.</param>
      <returns>The sub part game object.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData">
      <summary>
            The rocket engine modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.RocketEngineData&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._chamberPressure">
      <summary>
            The chamber pressure
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._engineSubType">
      <summary>
            The engine sub type, which will override the settings from the _engineType if set.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._engineSubTypeId">
      <summary>
            The engine type name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._engineType">
      <summary>
            The engine type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._engineTypeId">
      <summary>
            The engine type name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._exhaustScale">
      <summary>
            The exhaust scale.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._fuelType">
      <summary>
            The fuel type identifier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._gimbalRange">
      <summary>
            The gimbal range.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._mass">
      <summary>
            The mass of the engine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._nozzleSize">
      <summary>
            The nozzle size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._nozzleThroatSize">
      <summary>
            The nozzle throat size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._nozzleTypeId">
      <summary>
            The nozzle type name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._price">
      <summary>
            The price of the engine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._propulsionLabButton">
      <summary>
            The propulsion lab button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._size">
      <summary>
            The size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData._supportsWarpBurn">
      <summary>
            Flag that determines if the engine supports warp burn.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.AltitudeCompensation">
      <summary>
            Gets the altitude compensation factor from 0-1, which indicates how much the nozzle compensates
            for atmospheric pressure. Zero indicates no altitude compensation and nozzle exit pressure is calculated
            normally. One indicates perfect compensation so that the exit pressure is always equal to the atmospheric
            pressure. Values in between lerp between chamber pressure and atmospheric pressure by this percentage.
            </summary>
      <value>
            The altitude compensation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.ChamberPressure">
      <summary>
            Gets the chamber pressure in Pa.
            </summary>
      <value>
            The chamber pressure in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.EngineSubTypeId">
      <summary>
            Gets the engine sub type identifier.
            </summary>
      <value>
            The engine sub type identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.EngineType">
      <summary>
            Gets the type of the engine. If the engine sub type is not null, then that will be returned. Otherwise
            the engine type will be returned.
            </summary>
      <value>
            The type of the engine.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.EngineTypeId">
      <summary>
            Gets the engine type identifier.
            </summary>
      <value>
            The engine type identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.ExhaustScale">
      <summary>
            Gets the exhaust scale.
            </summary>
      <value>
            The exhaust scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.ExtensionSize">
      <summary>
            Gets the size of the nozzle extension.
            </summary>
      <value>
            The size of the nozzle extension.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.FuelType">
      <summary>
            Gets the type of the fuel.
            </summary>
      <value>
            The type of the fuel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.GimbalRange">
      <summary>
            Gets or sets the gimbal range.
            </summary>
      <value>
            The gimbal range.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.NozzleAreaExit">
      <summary>
            Gets the area of the nozzle exit in m2.
            </summary>
      <value>
            The area of the nozzle exit in m2.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.NozzleAreaThroat">
      <summary>
            Gets the area of the nozzle throat in m2.
            </summary>
      <value>
            The area of the nozzle throat in m2.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.NozzleExitRadius">
      <summary>
            Gets the nozzle exit radius in m.
            </summary>
      <value>
            The nozzle exit radius in m.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.NozzleThroatRadius">
      <summary>
            Gets the nozzle throat radius in m.
            </summary>
      <value>
            The nozzle throat radius in m.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.NozzleType">
      <summary>
            Gets the type of the nozzle.
            </summary>
      <value>
            The type of the nozzle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.Size">
      <summary>
            Gets the size.
            </summary>
      <value>
            The size.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.SupportsWarpBurn">
      <summary>
            Gets a value indicating whether the engine supports warp burn.
            </summary>
      <value>
        <c>true</c> if the engine supports warp burn; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.TopRadius">
      <summary>
            Gets the top radius.
            </summary>
      <value>
            The top radius.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.FormatRatio(System.Single)">
      <summary>
            Formats the ratio.
            </summary>
      <param name="x">The x.</param>
      <returns>The ratio as a string.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.CalculateMassAndPrice(System.Single,System.Single)">
      <summary>
            Calculates the mass and price.
            </summary>
      <param name="normalizedMassFlow">The normalized mass flow in kg/s.</param>
      <param name="coreThrust">The core thrust.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.OnSymmetry(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="originalPart">The original part.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.UpdateEngineType(System.Boolean)">
      <summary>
            Updates the type of the engine.
            </summary>
      <param name="updateFuelType">if set to <c>true</c> then update the fuel type.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.OnInitialized">
      <summary>
            Called after the modifier has been fully initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.FormatChamberPressure(System.Single)">
      <summary>
            Formats the chamber pressure.
            </summary>
      <param name="percentage">The percentage.</param>
      <returns>The string for the chamber pressure in the designer.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.GetEngineSubTypes(System.Collections.Generic.List{System.String})">
      <summary>
            Gets the engine cycles.
            </summary>
      <param name="obj">The object.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.GetEngineTypes(System.Collections.Generic.List{System.String})">
      <summary>
            Gets the engine types.
            </summary>
      <param name="obj">The object.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.GetFuelTypes(System.Collections.Generic.List{System.String})">
      <summary>
            Gets the fuel types.
            </summary>
      <param name="obj">The object.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.GetNozzleTypes(System.Collections.Generic.List{System.String})">
      <summary>
            Gets the nozzle types.
            </summary>
      <param name="obj">The object.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.OnPartStyleChanged">
      <summary>
            Called when the part style has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData.UpdateAndSyncComponents">
      <summary>
            Updates the engine and synchronize the changes with the symmetric parts.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath">
      <summary>
            Contains methods for calculating different aspects of rocket engine thermodynamics.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.R">
      <summary>
            The universal gas constant (8,314.4621 J/kmol-K in SI units)
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateDynamicPerformance(Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Params,System.Double)">
      <summary>
            Calculates the dynamic performance of the engine based on air pressure and throttle.
            </summary>
      <param name="p">The rocket engine parameters.</param>
      <param name="airPressure">The air pressure in Pa.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateExhaustVelocity(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Calculates the nozzle exhaust velocity in m/s.
            </summary>
      <param name="pc">The chamber pressure in Pa.</param>
      <param name="pe">The nozzle exit pressure in Pa.</param>
      <param name="tc">The chamber temperature in K.</param>
      <param name="m">The average molecular weight of the exhaust gases.</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The nozzle exhaust velocity in m/s.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateExitPressure(System.Double,System.Double,System.Double)">
      <summary>
            Calculates the nozzle exit pressure in Pa.
            </summary>
      <param name="pc">The chamber pressure in Pa.</param>
      <param name="nm">The nozzle exit mach number.</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The nozzle exit pressure in Pa.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateMassFlow(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Calculates the mass flow in kg/s.
            </summary>
      <param name="at">The throat area in m2.</param>
      <param name="pt">The throat pressure in Pa.</param>
      <param name="tt">The throat temperature in K.</param>
      <param name="m">The average molecular weight of the exhaust gases.</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The mass flow rate in kg/s.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateMassFlowFromChamber(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Calculates the mass flow in kg/s directly from the chamber properties. This is a convenience method
            that calculates throat pressure and throat temperature before calculating mass flow.
            </summary>
      <param name="at">The throat area in m2.</param>
      <param name="pc">The chamber pressure in Pa.</param>
      <param name="tc">The chamber temperature in K.</param>
      <param name="m">The average molecular weight of the exhaust gases.</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The mass flow rate in kg/s.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateNozzleExitArea(System.Double,System.Double,System.Double)">
      <summary>
            Calculates the nozzle exit area in m2
            </summary>
      <param name="nm">The exit mach number.</param>
      <param name="at">The throat area.</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The nozzle exit area in m2.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateNozzleExitMachNumber(System.Double,System.Double,System.Double)">
      <summary>
            Calculates the exit mach number from the area ratio.
            </summary>
      <param name="at">The area of the throat in m2.</param>
      <param name="ae">The area of the nozzle exit in m2.</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The exit mach number</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateNozzleExitMachNumberFromPressure(System.Double,System.Double,System.Double)">
      <summary>
            Calculates the exit mach number, which is the ratio of the gas velocity to the local speed of sound.
            </summary>
      <param name="pc">The chamber pressure.</param>
      <param name="pa">The nozzle exit pressure (ambient pressure).</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The exit mach number.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateProductGenerationRate(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Calculates the solid mass flow.
            </summary>
      <param name="a">The burn rate coefficient.</param>
      <param name="pc">The chamber pressure.</param>
      <param name="n">The pressure exponent.</param>
      <param name="d">The propellant density.</param>
      <param name="ab">The burning surface area.</param>
      <returns>The product generation rate in kg/s.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateStaticPerformance(Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Params)">
      <summary>
            Calculates the performance characteristics of the rocket engine that will not change during the simulation.
            </summary>
      <param name="p">The rocket engine parameters.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateThroatArea(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Calculates the throat area in m2.
            </summary>
      <param name="q">The mass flow rate in kg/s.</param>
      <param name="pt">The throat pressure in P.</param>
      <param name="tt">The throat temperature in K.</param>
      <param name="m">The average molecular weight of the exhaust gases.</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The throat area</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateThroatPressure(System.Double,System.Double)">
      <summary>
            Calculates the throat pressure in Pa.
            </summary>
      <param name="pc">The chamber pressure in Pa.</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The throat pressure in Pa.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.CalculateThroatTemperature(System.Double,System.Double)">
      <summary>
            Calculates the throat temperature in K.
            </summary>
      <param name="tc">The chamber temperature.</param>
      <param name="k">The specific heat ratio.</param>
      <returns>The throat temperature in K.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance">
      <summary>
            Dynamic performance characteristics for the rocket engine.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.AirPressure">
      <summary>
            Gets the air pressure that was used when calculating the performance.
            </summary>
      <value>
            The air pressure in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.ExhaustVelocity">
      <summary>
            Gets or sets the exit velocity in m/s.
            </summary>
      <value>
            The exit velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.ExitArea">
      <summary>
            Gets or sets the exit area.
            </summary>
      <value>
            The exit area in m2.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.ExitMachNumber">
      <summary>
            Gets or sets the mach number.
            </summary>
      <value>
            The mach number.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.ExitPressure">
      <summary>
            Gets or sets the exit pressure.
            </summary>
      <value>
            The exit pressure in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.Power">
      <summary>
            Gets the power in Watts.
            </summary>
      <value>
            The power in Watts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.ThrustCore">
      <summary>
            Gets or sets the core thrust in N at 100% throttle.
            </summary>
      <value>
            The core thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.ThrustNet">
      <summary>
            Gets or sets the net thrust in N.
            </summary>
      <value>
            The net thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.ThrustNetScaled">
      <summary>
            Gets the net thrust in scaled Newtons.
            </summary>
      <value>
            The scaled net thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.DynamicPerformance.ThrustPressure">
      <summary>
            Gets or sets the thrust from the pressure difference in N at 100% throttle.
            </summary>
      <value>
            The thrust from pressure difference.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs">
      <summary>
            Inputs for rocket engine math.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.AltitudeCompensation">
      <summary>
            Gets or sets the altitude compensation factor from 0-1, which indicates how much the nozzle compensates
            for atmospheric pressure. Zero indicates no altitude compensation and nozzle exit pressure is calculated
            normally. One indicates perfect compensation so that the exit pressure is always equal to the atmospheric
            pressure. Values in between lerp between chamber pressure and atmospheric pressure by this percentage.
            </summary>
      <value>
            The altitude compensation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.ChamberPressure">
      <summary>
            Gets or sets the chamber pressure.
            </summary>
      <value>
            The chamber pressure in Pa.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.ChamberTemperature">
      <summary>
            Gets or sets the chamber temperature in K.
            </summary>
      <value>
            The chamber temperature in K.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.Efficiency">
      <summary>
            Gets or sets the efficiency, which is used to reduce actual performance from theoretical maximum performance.
            </summary>
      <value>
            The efficiency.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.ExitArea">
      <summary>
            Gets or sets the exit area.
            </summary>
      <value>
            The exit area in m2.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.ExitRadius">
      <summary>
            Gets the exit radius.
            </summary>
      <value>
            The exit radius in m.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.FuelMolecularWeight">
      <summary>
            Gets or sets the fuel's molecular weight in kg/kmol.
            </summary>
      <value>
            The fuel's molecular weight in kg/kmol.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.FuelSpecificHeatRatio">
      <summary>
            Gets or sets the ratio of specific heats.
            </summary>
      <value>
            The ratio of specific heats.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.ThroatArea">
      <summary>
            Gets or sets the throat area.
            </summary>
      <value>
            The throat area in m2.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Inputs.ThroatRadius">
      <summary>
            Gets the throat radius.
            </summary>
      <value>
            The throat radius in m.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Params">
      <summary>
            Inputs and calculated performance characteristics for rocket engine math.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Params.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Params" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Params.Dynamic">
      <summary>
            Gets the dynamic performance characteristics.
            </summary>
      <value>
            The dynamic performance characteristics.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Params.Inputs">
      <summary>
            Gets the inputs.
            </summary>
      <value>
            The inputs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Params.Static">
      <summary>
            Gets the static performance characteristics.
            </summary>
      <value>
            The static performance characteristics.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.Params.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.StaticPerformance">
      <summary>
            The performance characteristics that only need to be calculated once based on the inputs.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.StaticPerformance.MassFlow">
      <summary>
            Gets or sets the mass flow in kg/s.
            </summary>
      <value>
            The mass flow.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineMath.StaticPerformance.NormalizedMassFlow">
      <summary>
            Gets or sets the mass flow in kg/s calculated for a common fuel type so mass flows can
            be compared between different engines with different fuel types without being affected
            by the differing molecular weights. The common fuel type currently being used is water.
            </summary>
      <value>
            The mass flow.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript">
      <summary>
            The script for the rocket engine modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineData&gt;" />
      <seealso cref="T:ModApi.Craft.Parts.Modifiers.Propulsion.IReactionEngine" />
      <seealso cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.IAnalyzePerformance" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._attachPointTop">
      <summary>
            The top attach point.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._currentIsp">
      <summary>
            The current isp
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._currentMassFlowRate">
      <summary>
            The current mass flow rate in kg/s.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._engineCommon">
      <summary>
            The engine common object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._engineComponents">
      <summary>
            The engine components
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._fuelLitersPerKilogram">
      <summary>
            The inverse fuel density
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._fuelTank">
      <summary>
            The fuel tank this engine is connected to.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._inFlightScene">
      <summary>
            The in flight scene flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._params">
      <summary>
            The parameters
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._thrustCurrent">
      <summary>
            The current thrust
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript._thrustMax">
      <summary>
            The maximum thrust of the engine.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#CurrentMassFlowRate">
      <summary>
            Gets the mass flow rate of the engine.
            </summary>
      <value>
            The mass flow rate in kg/s.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#CurrentThrust">
      <summary>
            Gets the current thrust of the engine.
            </summary>
      <value>
            The current thrust in scaled Newtons.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.FuelSource">
      <summary>
            Gets the fuel source.
            </summary>
      <value>
            The fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#FuelSource">
      <summary>
            Gets the fuel source.
            </summary>
      <value>
            The fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.MaximumMassFlowRate">
      <summary>
            Gets the maximum mass flow rate of the engine in kg/s.
            </summary>
      <value>
            The maximum mass flow rate in kg/s.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#MaximumThrust">
      <summary>
            Gets the maximum thrust of the engine in scaled Newtons.
            </summary>
      <value>
            The thrust in scaled Newtons.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#Part">
      <summary>
            Gets the part.
            </summary>
      <value>
            The part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#Craft#Parts#Modifiers#Propulsion#IReactionEngine#RemainingFuel">
      <summary>
            Gets the remaining fuel.
            </summary>
      <value>
            The remaining fuel in kg.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.StaticPerformance">
      <summary>
            Gets the static performance.
            </summary>
      <value>
            The static performance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.SupportsWarpBurn">
      <summary>
            Gets a value indicating whether this engine supports burning during time warp.
            </summary>
      <value>
        <c>true</c> if this engine supports burning during time warp; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ThrottleResponse">
      <summary>
            Gets the throttle response, which determines how quickly the engine responds to
            throttle input. A value of 1.0 would allow the engine to reach 100% throttle in one second.
            Value of 0.5 would require two seconds to reach 100% throttle.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.UsesMachNumber">
      <summary>
            Gets a value indicating whether indicating if the object makes use of the mach number
            setting.
            </summary>
      <value>
        <c>true</c> if the object uses mach number; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.FuelTank">
      <summary>
            Gets or sets the fuel tank this engine is connected to.
            </summary>
      <value>
            The fuel tank.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.PerformanceAnalysisAirPressure">
      <summary>
            Gets the air pressure to use for performance analysis.
            </summary>
      <value>
            The performance analysis air pressure.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.CalculateDesignerPerformance">
      <summary>
            Calculates the performance in the designer's current performance environment.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.FlightEnd">
      <summary>
            Called when the script is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnActivated">
      <summary>
            Called when a part is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnConnectedToPart(ModApi.Craft.Parts.PartConnectedEventData)">
      <summary>
            Called when this part is connected to another part in the designer.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnGeneratePerformanceAnalysisModel(ModApi.Ui.Inspector.GroupModel,ModApi.Ui.Inspector.InspectorModel)">
      <summary>
            Generates an inspector model for performance analysis in the designer.
            </summary>
      <param name="groupModel">The performance group model.</param>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnModifiersCreated">
      <summary>
            Called after all of the part's modifiers have been created.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnPartDestroyed">
      <summary>
            Called when the part owning this modifier is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnSymmetry(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
      <param name="originalPart">The original part.</param>
      <param name="created">if set to <c>true</c> then the part has been created. False indicates the part is being updated.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.UpdateAutoFuelTypeFuelTanks">
      <summary>
            Updates the auto-fuel-type fuel tanks connected to this engine.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.UpdateComponentsInDesigner(System.Boolean,System.Boolean)">
      <summary>
            Updates the components in designer.
            </summary>
      <param name="updateFuel">if set to <c>true</c> then update fuel.</param>
      <param name="updateSymmetricParts">if set to <c>true</c> then update symmetric parts.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnDestroy">
      <summary>
            Unity OnDestroy method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.CalculateMassAndPrice">
      <summary>
            Calculates the mass and price.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.CalculateRocketPerformance(System.Double,System.Single)">
      <summary>
            Calculates the rocket performance.
            </summary>
      <param name="airPressure">The air pressure in Pa.</param>
      <param name="throttle">The throttle from 0-1.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.ConfigureAudio">
      <summary>
            Configures the audio.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.CreateInspectorModel(ModApi.Ui.Inspector.GroupModel,System.Func{System.Single},System.Boolean)">
      <summary>
            Creates the inspector model.
            </summary>
      <param name="model">The model.</param>
      <param name="throttle">The throttle.</param>
      <param name="flight">if set to <c>true</c> then the game is currently in the flight scene.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.InitializeExhaust">
      <summary>
            Initializes the exhaust.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.InitializeRocketParameters">
      <summary>
            Initializes the rocket parameters.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnCraftFuelSourceChanged(System.Object,System.EventArgs)">
      <summary>
            Called when the fuel tank's craft fuel source has changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnPerformanceAnalysisEnvironmentChanged(System.Object,System.EventArgs)">
      <summary>
            Called when the performance analysis environment has changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.OnTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called when the time multiplier mode has changed.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.RefreshFuelSource">
      <summary>
            Refreshes the fuel source from the fuel tank this engine is connected to.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.SaveAttachPointSnapshot">
      <summary>
            Saves a snapshot of the most relevant attach point's world position.
            </summary>
      <returns>
            The attach point snapshot.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.UpdateAttachPointRadius">
      <summary>
            Updates the attach point radius.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.AttachPointSnapshot">
      <summary>
            Snapshot of an attach point at a specific position.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.AttachPointSnapshot.#ctor(ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.AttachPointSnapshot" /> class.
            </summary>
      <param name="attachPoint">The attach point.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.AttachPointSnapshot.AttachPoint">
      <summary>
            Gets or sets the attach point.
            </summary>
      <value>
            The attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.AttachPointSnapshot.DeltaPosition">
      <summary>
            Gets the delta between the saved world position and the attach points current world position.
            </summary>
      <value>
            The delta position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.RocketEngineScript.AttachPointSnapshot.WorldPosition">
      <summary>
            Gets the world position.
            </summary>
      <value>
            The world position.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript">
      <summary>
            Script that animates a nozzles expansion and contraction. Assumes that all children can rotate on their
            Z-axis by a specific amount.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript._blades">
      <summary>
            The blades
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript._expansion">
      <summary>
            The current expansion.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript._initialized">
      <summary>
            The initialized
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript._maxAngle">
      <summary>
            The maximum angle of expansion.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript.SetExpansion(System.Single)">
      <summary>
            Sets the expansion.
            </summary>
      <param name="expansion">The expansion.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript.Initialize">
      <summary>
            Initializes the nozzle script.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript.Blade">
      <summary>
            Represents a single blade of the nozzle.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript.Blade.#ctor(UnityEngine.Transform)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript.Blade" /> class.
            </summary>
      <param name="blade">The blade.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript.Blade.OriginalRotation">
      <summary>
            Gets or sets the original euler rotation.
            </summary>
      <value>
            The original rotations.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript.Blade.Transform">
      <summary>
            Gets or sets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Propulsion.VariableNozzleAnimationScript.Blade.SetRotation(System.Single)">
      <summary>
            Sets the rotation of the blade.
            </summary>
      <param name="rotation">The rotation.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData">
      <summary>
            The data for reaction control nozzles
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData._fuelConsumptionRate">
      <summary>
            The fuel consumption rate
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData._multiDirection">
      <summary>
            The multi direction flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData._power">
      <summary>
            The power in newtons.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData._powerScale">
      <summary>
            The power scale
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData.FuelConsumptionRate">
      <summary>
            Gets the fuel consumption rate.
            </summary>
      <value>
            The fuel consumption rate.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData.MultiDirection">
      <summary>
            Gets a value indicating whether the RCS nozzle is capable of gimbaling in multiple directions.
            </summary>
      <value>
        <c>true</c> if supports gimbaling in multi direction; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData.Power">
      <summary>
            Gets the power.
            </summary>
      <value>
            The power.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript">
      <summary>
            Manages the reaction control nozzles
            </summary>
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightStart" />
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._centerOfThrust">
      <summary>
            The center of thrust
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._craftControlsChangedMigrator">
      <summary>
            The command pod changed event proxy
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._forceDirection">
      <summary>
            The force direction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._fuelSource">
      <summary>
            The fuel source
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._inputAxis">
      <summary>
            The input axis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._inputPitch">
      <summary>
            The pitch input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._inputRoll">
      <summary>
            The roll input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._inputTranslateForward">
      <summary>
            The input translate forward
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._inputTranslateRight">
      <summary>
            The input translate right
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._inputTranslateUp">
      <summary>
            The input translate up
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._inputYaw">
      <summary>
            The yaw input controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._multiDirectionVectors">
      <summary>
            The input direction vectors for multi-direction RCS nozzles.
            +Roll, -Roll, +Pitch, -Pitch, +Yaw, -Yaw, +Forward, -Forward, +Right, -Right, +Up, -Up
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._particleSystem">
      <summary>
            The particle system
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._particleSystemEmission">
      <summary>
            The particle system emission module.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._particleSystemMain">
      <summary>
            The particle system main module.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._rcnApplyForces">
      <summary>
            Whether this RCN should apply forces
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._rcnThrottle">
      <summary>
            The RCN throttle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._recalculateInputs">
      <summary>
            The recalculate inputs flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._sound">
      <summary>
            The sound
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript._translationMode">
      <summary>
            The translation mode state
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.RcnThrottle">
      <summary>
            Gets the RCN throttle.
            </summary>
      <value>
            The RCN throttle.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.OnPartDestroyed">
      <summary>
            Called when the part owning this modifier is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.ClampOptimalDirectionVector(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Clamps the optimal direction vector within the allowable range of
            rotation for the multi-directional RCS.
            </summary>
      <param name="v">The optimal direction vector in world space.</param>
      <param name="neutralDirection">The neutral direction of the RCS nozzle (ie - zero rotation) in world space.</param>
      <returns>
            The clamped direction vector in local space, or Vector.zero if the vector cannot provide a meaningful contribution after
            being clamped.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.ConfigureRcnBasedOnLocationAndOrientation">
      <summary>
            Configures the RCN based on location and orientation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.OnCommandPodControlsChanged(ModApi.Craft.Parts.ICommandPod,System.Boolean)">
      <summary>
            Called when this part's command pod's controls have changed.
            </summary>
      <param name="source">The source.</param>
      <param name="adjustControlsToCom">If set to <c>true</c> then the controls should be adjusted to the craft's CoM.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ReactionControlNozzleScript.UpdateInputControllers">
      <summary>
            Updates the input controllers.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelColliderScript">
      <summary>
            Provides collision information for the resizable wheel collider when suspension is disabled. This script is attached to the rigid body
            and updates the wheel when it is colliding with something. This replaces the wheel collider raycast that is normally used when a wheel
            has suspension.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelColliderScript.Collider">
      <summary>
            Gets or sets the collider.
            </summary>
      <value>
            The collider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelColliderScript.WheelCollider">
      <summary>
            Gets or sets the wheel collider.
            </summary>
      <value>
            The wheel collider.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelColliderScript.OnCollisionStay(UnityEngine.Collision)">
      <summary>
            Called when [collision stay].
            </summary>
      <param name="collision">The collision.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData">
      <summary>
            The resizable wheel modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.DefaultDamper">
      <summary>
            The default damper
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.DefaultDirection">
      <summary>
            The default direction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.DefaultSize">
      <summary>
            The default size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.DefaultSpring">
      <summary>
            The default spring
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.DefaultWidth">
      <summary>
            The default width.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._brakeTorque">
      <summary>
            The brake torque
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._damper">
      <summary>
            The _spring
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._direction">
      <summary>
            Motor setting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._enableSuspension">
      <summary>
            The enable suspension flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._gearRatio">
      <summary>
            The ratio of the engine "gear" to the wheel "gear". Higher values will give the engine more power to the wheels,
            but a lower max RPM. Lower values will give the engine lower power to the wheel, but will have a higher max RPM.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._maxAngularVelocity">
      <summary>
            The maximum angular velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._maxRpm">
      <summary>
            The maximum RPM of the engine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._size">
      <summary>
            The radius of the wheel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._slipForwardAsymptote">
      <summary>
            The slip forward asymptote
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._slipForwardExtremum">
      <summary>
            The slip forward extremum
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._slipSidewaysAsymptote">
      <summary>
            The slip sideways asymptote
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._slipSidewaysExtremum">
      <summary>
            The slip sideways extremum
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._spring">
      <summary>
            The _spring
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._torque">
      <summary>
            The torque
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._tractionForward">
      <summary>
            The forward traction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._tractionSideways">
      <summary>
            The sideways traction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._turningAngle">
      <summary>
            The turning angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._turningRate">
      <summary>
            The turning rate
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData._width">
      <summary>
            The width
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.WheelParametersChanged">
      <summary>
            Occurs when a wheel parameter has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.BrakeTorque">
      <summary>
            Gets the brake torque.
            </summary>
      <value>
            The brake torque.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.Damper">
      <summary>
            Gets the damper.
            </summary>
      <value>
            The damper.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.Direction">
      <summary>
            Gets or sets the direction.
            </summary>
      <value>
            The direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.EnableSuspension">
      <summary>
            Gets a value indicating whether [enable suspension].
            </summary>
      <value>
        <c>true</c> if [enable suspension]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.FrictionScale">
      <summary>
            Gets the friction scale, which increases with radius and thickness.
            </summary>
      <value>
            The friction scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.GearRatio">
      <summary>
            Gets the gear ratio.
            </summary>
      <value>
            The gear ratio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.Mass">
      <summary>
            Gets the extra mass for the part due to the modifier.
            </summary>
      <value>
            The extra mass for the part due to the modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.MaxAngularVelocity">
      <summary>
            Gets or sets the maximum angular velocity.
            </summary>
      <value>
            The maximum angular velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.MaxRpm">
      <summary>
            Gets the maximum RPM.
            </summary>
      <value>
            The maximum RPM.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.Radius">
      <summary>
            Gets the radius.
            </summary>
      <value>
            The radius.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.Scale">
      <summary>
            Gets the scale.
            </summary>
      <value>
            The scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.SlipForwardAsymptote">
      <summary>
            Gets or sets the slip forward asymptote.
            </summary>
      <value>
            The slip forward asymptote.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.SlipForwardExtremum">
      <summary>
            Gets or sets the slip forward extremum.
            </summary>
      <value>
            The slip forward extremum.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.SlipSidewaysAsymptote">
      <summary>
            Gets or sets the slip sideways asymptote.
            </summary>
      <value>
            The slip sideways asymptote.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.SlipSidewaysExtremum">
      <summary>
            Gets or sets the slip sideways extremum.
            </summary>
      <value>
            The slip sideways extremum.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.Spring">
      <summary>
            Gets the spring.
            </summary>
      <value>
            The spring.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.SuspensionDistance">
      <summary>
            Gets the suspension distance.
            </summary>
      <value>
            The suspension distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.SuspensionStiffness">
      <summary>
            Gets or sets the suspension stiffness.
            </summary>
      <value>
            The suspension stiffness.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.ThicknessScale">
      <summary>
            Gets the thickness.
            </summary>
      <value>
            The thickness.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.Torque">
      <summary>
            Gets the torque.
            </summary>
      <value>
            The torque.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.TractionForward">
      <summary>
            Gets the forward traction.
            </summary>
      <value>
            The forward traction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.TractionSideways">
      <summary>
            Gets the sideways traction.
            </summary>
      <value>
            The sideways traction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.TurningAngle">
      <summary>
            Gets the turning angle.
            </summary>
      <value>
            The turning angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.TurningRate">
      <summary>
            Gets or sets the turning rate.
            </summary>
      <value>
            The turning rate.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.RestoreFromState(System.Xml.Linq.XElement,System.Boolean)">
      <summary>
            Restores the modifier state information from the specified XML element.
            </summary>
      <param name="stateElement">The state element from which to restore.</param>
      <param name="restoreAll">If <c>true</c>, all state properties will be restored with missing values restored as <c>null</c>.
            If <c>false</c>, only state properties specified in the state XML will be restored and missing values will be ignored.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.OnCreated(System.Xml.Linq.XElement)">
      <summary>
            Called when the part modifier is created.
            This is where the default values are read from the part modifier definition and loaded as the modifier's default values.
            </summary>
      <param name="partModifierXml">The XML that defines the part modifier and its default values.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.CalculateMass(System.Single,System.Single)">
      <summary>
            Calculates the mass.
            </summary>
      <param name="radius">The radius.</param>
      <param name="width">The width.</param>
      <returns>The mass of the wheel with the specified dimensions.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData.InvokeWheelParametersChangedOnSymmetricPartModifiers(System.Boolean)">
      <summary>
            Invokes the wheel parameters changed even on this modifier and any symmetric part modifiers.
            </summary>
      <param name="synchronizePartModifiersFirst">if set to <c>true</c> [synchronize part modifiers before invoking wheel parameters changed].</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript">
      <summary>
            Script for the resizable wheel
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._battery">
      <summary>
            The battery
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._biomeData">
      <summary>
            The biome data for the craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._currentTurningAngle">
      <summary>
            The current turning angle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._functionalHealth">
      <summary>
            The functional effectiveness of the part based on how much damage it has taken.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._loaded">
      <summary>
            Flag that keeps track of if the craft has already been loaded.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._motorInput">
      <summary>
            The motor input.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._motorTorque">
      <summary>
            The engine torque.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._partConnection">
      <summary>
            The part connection.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._rpmToTorqueCurve">
      <summary>
            The RPM to torque curve
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._sound">
      <summary>
            The sound manager.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._sphereCollider">
      <summary>
            The sphere collider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._tireTrackRenderer">
      <summary>
            The tire track renderer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._torqueDirection">
      <summary>
            The direction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._trackContainer">
      <summary>
            The track container
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._trackWidth">
      <summary>
            The track width
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._turningRoot">
      <summary>
            The turning root.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._turnInput">
      <summary>
            The turn input.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._wc">
      <summary>
            The wheel collider object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._wheel">
      <summary>
            The wheel transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._wheelMeshCollider">
      <summary>
            The wheel mesh collider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._wheelMeshParent">
      <summary>
            The tire mesh parent.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript._wheelRoot">
      <summary>
            The wheel root.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.CurrentRpm">
      <summary>
            Gets the RPMs.
            </summary>
      <value>
            The RPM.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.Enabled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript" /> is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.ExternalMotorTorque">
      <summary>
            Gets or sets the external motor torque. Used when something is modifying our torque, such as the electric motor.
            </summary>
      <value>The motor torque override.</value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.Grounded">
      <summary>
            Gets a value indicating whether the gear are currently grounded.
            </summary>
      <value>
        <c>true</c> if [grounded]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.MaxRpm">
      <summary>
            Gets the maximum RPM.
            </summary>
      <value>
            The maximum RPM.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.SpringReductionCoefficient">
      <summary>
            Gets or sets the spring reduction coefficient, which can be used when a vehicle has many wheels on it.
            </summary>
      <value>
            The spring reduction coefficient.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.TurnActivationGroup">
      <summary>
            Gets the turn activation group.
            </summary>
      <value>
            The turn activation group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.TurningInput">
      <summary>
            Gets the turning input.
            </summary>
      <value>
            The turning input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.WheelDisconnected">
      <summary>
            Gets a value indicating whether the wheel is currently disconnected from any other parts.
            </summary>
      <value>
        <c>true</c> if [wheel disconnected]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.WheelCollider">
      <summary>
            Gets the wheel collider.
            </summary>
      <value>
            The wheel collider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.MaxPowerConsumption">
      <summary>
            Gets the maximum power consumption.
            </summary>
      <value>
            The maximum power consumption.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.TurningRate">
      <summary>
            Gets the turning rate in degrees per second.
            </summary>
      <value>
            The turning rate.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.AddBrakeTorque(System.Single)">
      <summary>
            Adds the brake torque.
            Note: this is NOT per-frame. When you add torque with this, it stays for whenever the brakes are used.
            </summary>
      <param name="brakeTorque">The brake torque.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.OnSymmetry(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
      <param name="originalPart">The original part.</param>
      <param name="created">if set to <c>true</c> then the part has been created. False indicates the part is being updated.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.RecalculateFrameState(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Called when a modifier should recalulate the reference frame sate (position/velocity) of any special, "unmanaged" game-objects.
            </summary>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
      <remarks>
            Any children of a craft should have their position updated without using the position delta.  However, any rigid-body other than
            the one associated with a <see cref="T:ModApi.Craft.IBodyScript" /> will need its velocity updated with the velocity delta.
            Any gameobject not under a craft should add both the position and velocity deltas to the current value to keep the same relative state.
            -
            Caution: This may be called either when the reference frame recenters, rotates, or when the node's orbit position/velocity is manually
            updated such as while warping.  If subscribing to GameViewScript.ReferenceFrameRecentered event, do not also add deltas in response
            to that or they'll be added in twice.
            </remarks>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.ActivateRimMesh(System.String)">
      <summary>
            Activates the rim mesh.
            </summary>
      <param name="name">The name.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.ActivateTireMesh(System.String)">
      <summary>
            Activates the tire mesh.
            </summary>
      <param name="name">The name.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.DisableSuspension">
      <summary>
            Disables the suspension.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.HandleDirectionFromSymmetry(ModApi.Design.SymmetryMode)">
      <summary>
            Handles the direction from symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.Initialize">
      <summary>
            Sets up some variables. Initialization stuff.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.RebuildWheel">
      <summary>
            Rebuilds the wheel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.UpdateWheel(System.Single)">
      <summary>
            Updates the wheel.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.UpdateWheelColliderSettings">
      <summary>
            Updates the wheel collider settings.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.ResizableWheelScript.WheelParametersChanged(System.Object,System.EventArgs)">
      <summary>
            Rebuilds the mesh.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript">
      <summary>
            Script for a smoke trail particle system.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.MaxParticlesPerFrame">
      <summary>
            The maximum particles per frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._color">
      <summary>
            The color of the particles.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._currentLight">
      <summary>
            The current light value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._emissionRate">
      <summary>
            The rate of particles emitted per second.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._emitParams">
      <summary>
            The cached emit parameters, to reduce GC
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._lastEmissionTime">
      <summary>
            The time stamp of the last emitted particle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._lastFrame">
      <summary>
            The last snapshot
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._maxLifetime">
      <summary>
            The maximum lifetime
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._maxParticleSize">
      <summary>
            The maximum particle size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._maxParticleSpeed">
      <summary>
            The maximum particle speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._moduleForce">
      <summary>
            The force module
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._moduleMain">
      <summary>
            The main module
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._partScript">
      <summary>
            The part script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._ps">
      <summary>
            The particle system
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._surfaceVelocity">
      <summary>
            The surface velocity for this frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._timeBetweenParticles">
      <summary>
            The amount of time between each particle, which is calculated based on the emission rate.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._timeManager">
      <summary>
            The time manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._totalTime">
      <summary>
            The total time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript._transform">
      <summary>
            The cached transform
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.Color">
      <summary>
            Gets or sets the color.
            </summary>
      <value>
            The color.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.EmissionEnabled">
      <summary>
            Gets or sets a value indicating whether emission is enabled.
            </summary>
      <value>
        <c>true</c> if emission is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.EmissionOpacity">
      <summary>
            Gets or sets the emission opacity, which is multiplied by the smoke trail's current
            color alpha to calculate the final opacity for new particles.
            </summary>
      <value>
            The emission opacity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.Intensity">
      <summary>
            Gets or sets the intensity.
            </summary>
      <value>
            The intensity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.Light">
      <summary>
            Gets or sets the light.
            </summary>
      <value>
            The light.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.RigidBody">
      <summary>
            Gets the rigid body.
            </summary>
      <value>
            The rigid body.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.FlightUpdate(UnityEngine.Vector3)">
      <summary>
            Unity Update method.
            </summary>
      <param name="surfaceVelocity">The surface velocity.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.LateUpdate">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.OnDestroy">
      <summary>
            Unity OnDestroy method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.OnReferenceFrameRecentered(ModApi.Flight.GameView.IReferenceFrame,UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Called when the reference frame has been re-centered.
            </summary>
      <param name="referenceFrame">The reference frame.</param>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.UpdateEventSubscriptions(System.Boolean)">
      <summary>
            Updates the event subscriptions.
            </summary>
      <param name="subscribe">if set to <c>true</c> then subscribe.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.EmissionFrame">
      <summary>
            Contains the position and velocity of the emitter at a single frame.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.EmissionFrame.Position">
      <summary>
            Gets or sets the position.
            </summary>
      <value>
            The position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.EmissionFrame.Time">
      <summary>
            Gets or sets the time-stamp of this frame.
            </summary>
      <value>
            The time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SmokeTrailScript.EmissionFrame.Velocity">
      <summary>
            Gets or sets the velocity.
            </summary>
      <value>
            The velocity.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData">
      <summary>
            The solar panel array modifier data
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.Density">
      <summary>
            The density of the solar array
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._deploySpeed">
      <summary>
            The deploy speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._efficiency">
      <summary>
            The solar cell efficiency percentage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._mainOpenPercentage">
      <summary>
            The current open percentage of the main panels
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._open">
      <summary>
            Should this solar panel array be open?
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._openingSideDepth">
      <summary>
            The depth of the opening side
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._rows">
      <summary>
            The number of rows of panels
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._rowSize">
      <summary>
            The number of panels in a row
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._scale">
      <summary>
            The scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._sideOpenPercentage">
      <summary>
            The current open percentage of the side panels[_openingSideIndex]
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData._startOpen">
      <summary>
            Whether the solar array should start open
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.DeploySpeed">
      <summary>
            Gets or sets the deploy speed.
            </summary>
      <value>
            The deploy speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.Efficiency">
      <summary>
            Gets the solar cell efficiency percentage
            </summary>
      <value>
            The solar cell efficiency percentage
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.MainOpenPercentage">
      <summary>
            Gets or sets the current open percentage of the main panels
            </summary>
      <value>
            The main open percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.Open">
      <summary>
            Gets or sets a value indicating whether this solar panel array should be open.
            </summary>
      <value>
        <c>true</c> if open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.OpeningSideDepth">
      <summary>
            Gets or sets the depth of the opening side.
            </summary>
      <value>
            The index of the opening side.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.Rows">
      <summary>
            Gets or sets how many rows of panels to generate
            </summary>
      <value>
            How many rows of panels to generate
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.RowSize">
      <summary>
            Gets or sets how many panels are in a row
            </summary>
      <value>
            How many panels are in a row
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.Scale">
      <summary>
            Gets or sets the scale of the piston
            </summary>
      <value>
            The scale of the piston
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.SideOpenPercentage">
      <summary>
            Gets or sets the current open percentage of the side panels[OpeningSideIndex]
            </summary>
      <value>
            The side open percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.StartOpen">
      <summary>
            Gets or sets a value indicating whether the solar array should start open
            </summary>
      <value>
        <c>true</c> if [start open]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.CalculateBaseVolume">
      <summary>
            Calculates the volume of the solar array base
            </summary>
      <returns>volume of the solar array base</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.CalculateSinglePanelArea">
      <summary>
            Calculates the area covered by a single panel in square meters
            </summary>
      <returns>The area covered by a single panel in square meters</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.CalculateSinglePanelVolume">
      <summary>
            Calculates the volume of a single solar panel.
            </summary>
      <returns>volume of a single solar panel</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.CalculateTotalPanelVolume">
      <summary>
            Calculates the total solar panel volume.
            </summary>
      <returns>volume of all solar panels</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.MirrorPanelCounts(Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData)">
      <summary>
            Mirrors the panel counts from the source modifier.
            </summary>
      <param name="source">The source modifier from which to mirror the panel counts.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.SetStartOpen(System.Boolean)">
      <summary>
            Sets the start open.
            </summary>
      <param name="startOpen">if set to <c>true</c> [start open].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData.UpdateScale">
      <summary>
            Updates the scale.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript">
      <summary>
            Script for the solar panel array
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._allHinges">
      <summary>
            All hinges
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._battery">
      <summary>
            The battery fuel source.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._clearNullHingesNextFrame">
      <summary>
            Whether to check for null hinges next frame
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._designDisplay">
      <summary>
            Whether we are displaying panels in designer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._extensionClosedPosition">
      <summary>
            The closed position of the extension piston
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._extensionOpenPosition">
      <summary>
            The open position of the extension piston
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._extensionPiston">
      <summary>
            The piston that extends when the panels open
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._firstHingeEulers">
      <summary>
            The first hinge Euler Angles
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._firstHingePosition">
      <summary>
            The first hinge position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._generatedVerticalPanels">
      <summary>
            The number of vertical panels that were generated
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._hinge">
      <summary>
            The hinge
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._hingeHolder">
      <summary>
            The hinge holder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._hingeHolderClosedPosition">
      <summary>
            The hinge holder closed position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._initialized">
      <summary>
            The initialized
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._leftmostPanelEdge">
      <summary>
            The left most panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._mainHingeEulers">
      <summary>
            The main hinge Euler Angles
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._mainHingePosition">
      <summary>
            The main hinge position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._mainHinges">
      <summary>
            The main hinges
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._mainPanelEulers">
      <summary>
            The main panel Euler Angles
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._mainPanelPosition">
      <summary>
            The main panel position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._meshes">
      <summary>
            The meshes transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._panelCollider">
      <summary>
            The collider for all panels
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._rechargeEfficiency">
      <summary>
            The recharge efficiency
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._rechargeRate">
      <summary>
            The recharge rate
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._rightmostPanelEdge">
      <summary>
            The right most panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._rotationAudio">
      <summary>
            The rotation audio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._sideHingeEulers">
      <summary>
            The side hinge Euler Angles
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._sideHingePosition">
      <summary>
            The side hinge position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._sidePanelEulers">
      <summary>
            The side panel Euler Angles
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._sidePanelPosition">
      <summary>
            The side panel position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._solarCoverLeft">
      <summary>
            The left solar array cover
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._solarCoverRight">
      <summary>
            The right solar array cover
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript._topOfPanels">
      <summary>
            The top of panels
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.ExtensionPistonTravelSpeed">
      <summary>
            Gets the extension piston travel speed.
            </summary>
      <value>
            The extension piston travel speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.HingeHolderTravelSpeed">
      <summary>
            Gets the hinge holder travel speed.
            </summary>
      <value>
            The hinge holder travel speed.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.DisplayPanels(System.Boolean)">
      <summary>
            Sets whether to display panels (in designer)
            </summary>
      <param name="display">if set to <c>true</c> [display].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.OnCollision(ModApi.Craft.Parts.IPartFlightCollision)">
      <summary>
            Called when a part has been involved in a collision.
            </summary>
      <param name="partCollision">The part collision.</param>
      <returns>
            True if the modifier has handled the collision and no further action should be taken. Return false
            if the collision should continue.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.UpdatePanelCount">
      <summary>
            Updates the panel count.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.UpdateScale">
      <summary>
            Updates the scale to match that in the Data
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.AddPanelLayer(System.Int32)">
      <summary>
            Adds the panel layer.
            </summary>
      <param name="rowSize">The number of panels in the rows.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.ApplyDrag">
      <summary>
            Applies the drag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.CalculateSolarArea">
      <summary>
            Calculates the total area of all extended solar panels in this array
            </summary>
      <returns>The total area of all extended solar panels in this array</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.ClearNullHinges">
      <summary>
            Clears the null hinges.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.GeneratePanels(System.Int32,System.Int32)">
      <summary>
            Generates the solar panels.
            </summary>
      <param name="rows">The number of rows of panels.</param>
      <param name="rowSize">The number of panels in a row.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.HandleColliders">
      <summary>
            Handles the colliders for solar panels, size, rotations, positions, etc.
            NOTE: use HandleColliders(bool) from Update or any similar recurring call where you have already calculated mainFullyOpen
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.HandleColliders(System.Boolean)">
      <summary>
            Handles the collider for solar panels, size, positions, etc.
            </summary>
      <param name="mainFullyOpen">if set to <c>true</c> [main fully open].</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.OpenToSavedPercentage">
      <summary>
            Opens solar panels to saved open percentage.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.Setup">
      <summary>
            Sets up some things... (variables like this._meshes, hinge holder, and does resource loading)
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelArrayScript.UpdateCenterOfMass">
      <summary>
            Updates the rigidbody center of mass and alerts the craft to the change.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData">
      <summary>
            The single solar panel modifier data
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.Density">
      <summary>
            The density of the solar panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData._efficiency">
      <summary>
            The solar cell efficiency percentage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData._length">
      <summary>
            The length
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData._width">
      <summary>
            The width
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.Efficiency">
      <summary>
            Gets the solar cell efficiency percentage
            </summary>
      <value>
            The solar cell efficiency percentage
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.Length">
      <summary>
            Gets or sets the width of the panel
            </summary>
      <value>
            The width of the panel
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.Width">
      <summary>
            Gets or sets the width of the panel
            </summary>
      <value>
            The width of the panel
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.CalculatePanelArea">
      <summary>
            Calculates the area covered by this panel in square meters
            </summary>
      <returns>The area covered by this panel in square meters</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.CalculatePanelVolume">
      <summary>
            Calculates the volume of this solar panel.
            </summary>
      <returns>volume of this solar panel</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData.UpdateScale">
      <summary>
            Updates the scale.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge">
      <summary>
            Solar Panel Hinge stuff.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge._deploySpeed">
      <summary>
            The deploy speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge._panelRenderer">
      <summary>
            The panel renderer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge._shouldBeOpen">
      <summary>
            The should be open
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge._sideHinges">
      <summary>
            The side hinges
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge._childrenOpened">
      <summary>
            The children opened
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.ClosedRotation">
      <summary>
            Gets or sets the closed rotation.
            </summary>
      <value>
            The closed rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.DeploySpeed">
      <summary>
            Gets or sets the deploy speed.
            </summary>
      <value>
            The deploy speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.IsBaseHinge">
      <summary>
            Gets or sets a value indicating whether this hinge is the base hinge.
            </summary>
      <value>
        <c>true</c> if this hinge is the base hinge; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.IsClosed">
      <summary>
            Gets a value indicating whether this instance is closed.
            </summary>
      <value>
        <c>true</c> if this instance is closed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.IsMainHinge">
      <summary>
            Gets or sets a value indicating whether this instance is a main hinge.
            </summary>
      <value>
        <c>true</c> if this instance is a main hinge; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.MainHingeChild">
      <summary>
            Gets or sets the main hinge child.
            </summary>
      <value>
            The main hinge child.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.OpenRotation">
      <summary>
            Gets or sets the open rotation.
            </summary>
      <value>
            The open rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.RendererEnabled">
      <summary>
            Gets or sets a value indicating whether [renderer enabled].
            </summary>
      <value>
        <c>true</c> if [renderer enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.RotatedLastFrame">
      <summary>
            Gets a value indicating whether this hinge has rotated in the last frame
            </summary>
      <value>
        <c>true</c> if rotated in the last frame; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.ShouldBeOpen">
      <summary>
            Gets or sets a value indicating whether [should be open].
            </summary>
      <value>
        <c>true</c> if [should be open]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.SideHinges">
      <summary>
            Gets or sets the side hinges.
            </summary>
      <value>
            The side hinges.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.AreChildrenFullyClosed">
      <summary>
            Determines whether the children are all fully closed
            </summary>
      <returns>
        <c>true</c> if [all children are fully closed]; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.AreSidesFullyClosed">
      <summary>
            Ares the side hinges fully closed.
            </summary>
      <returns>whether side hinges are fully closed</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.ArrayInitialize">
      <summary>
            Initializes the solar panel hinge, and it's child+side hinges
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.ArrayUpdate(System.Single)">
      <summary>
            Update from the solar array
            </summary>
      <param name="deltaTime">The time since last frame.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.GetClosedRotation">
      <summary>
            Gets the closed rotation.
            </summary>
      <returns>Closed Rotation</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.GetOpenRotation">
      <summary>
            Gets the open rotation.
            </summary>
      <returns>Open Rotation</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.SnapRotation(System.Single)">
      <summary>
            Snaps the rotation to open by openPercentage
            </summary>
      <param name="openPercentage">The open amount.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.CloseChildren">
      <summary>
            Closes the children.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelHinge.OpenChildren">
      <summary>
            Opens the children.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript">
      <summary>
            Script for the single solar panel
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript._battery">
      <summary>
            The battery fuel source
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript._mesh">
      <summary>
            The mesh
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript._panel">
      <summary>
            The mesh
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript._rechargeEfficiency">
      <summary>
            The recharge efficiency
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript._rechargeRate">
      <summary>
            The recharge rate
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.UpdateScale">
      <summary>
            Updates the scale to match that in the Data
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.MultiplyDetailUvs(System.Single,System.Single)">
      <summary>
            Multiplies the detail UVs x and y values.
            </summary>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Solar.SolarPanelScript.Setup">
      <summary>
            Sets up some things... (this._mesh, initial texture UV tiling)
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData">
      <summary>
            The suspension modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.DefaultDamper">
      <summary>
            The default damper
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.DefaultSpring">
      <summary>
            The default spring
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.Density">
      <summary>
            The density of the suspension.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData._damper">
      <summary>
            The damper setting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData._preventBreaking">
      <summary>
            Whether to prevent this suspension from breaking from being stretched too far.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData._size">
      <summary>
            The size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData._spring">
      <summary>
            The spring strength.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData._thickness">
      <summary>
            The thickness, relative to scale.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.AttachPointIndex">
      <summary>
            Gets or sets the index of the attach point.
            </summary>
      <value>
            The index of the attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.Damper">
      <summary>
            Gets the damper.
            </summary>
      <value>
            The damper.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.Mass">
      <summary>
            Gets the mass of this modifier which can add to the part's overall mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The extra mass for the part due to this modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.PreventBreaking">
      <summary>
            Gets a value indicating whether to prevent this piston from breaking from being stretched too far. Useful if you are nudging parts.
            </summary>
      <value>
        <c>true</c> if [prevent breaking]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.Price">
      <summary>
            Gets the price of the modifier.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.Scale">
      <summary>
            Gets the scale, based on thickness and size.
            </summary>
      <value>
            The scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.Size">
      <summary>
            Gets the size.
            </summary>
      <value>
            The size.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.Spring">
      <summary>
            Gets the spring.
            </summary>
      <value>
            The spring.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.Thickness">
      <summary>
            Gets the thickness, relative to scale.
            </summary>
      <value>
            The thickness, relative to scale.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.CalculateVolume">
      <summary>
            Calculates the volume of the suspension
            </summary>
      <returns>volume of the suspension</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionData.DesignerScaleChanged">
      <summary>
            Called when the scale is changed in the designer.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript">
      <summary>
            Script for the suspension.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.SuspensionData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript._attachPointsOriginalLocalPositions">
      <summary>
            The original local positions of attach points. Used for scaling.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript._bodyJoint">
      <summary>
            The body joint.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript._bottomPoint">
      <summary>
            The bottom point
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript._breakTimer">
      <summary>
            The break timer, which tracks how long the suspension has been in a situation where it should probably break.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript._joint">
      <summary>
            The joint.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript._shaft">
      <summary>
            The suspension shaft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript._spring">
      <summary>
            The spring transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript._suspension">
      <summary>
            The suspension transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript._topShaftMeshOrigin">
      <summary>
            The top shaft mesh origin transform.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript.OnSymmetry(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
      <param name="originalPart">The original part.</param>
      <param name="created">if set to <c>true</c> then the part has been created. False indicates the part is being updated.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript.UpdateScale">
      <summary>
            Updates the scale.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript.BreakJoint">
      <summary>
            Breaks the joint.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.SuspensionScript.ConfigureJoint">
      <summary>
            Configures the joint.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.TestPilotBuoyancyConfigScript">
      <summary>
            Provides access to a per rigid-body buoyancy scaler for each of the test-pilot's bodies.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotBuoyancyConfigScript._buoyancyScale">
      <summary>
            The buoyancy scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotBuoyancyConfigScript._centerOfBuoyancy">
      <summary>
            The local position where buoyancy forces should be applied.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotBuoyancyConfigScript.BuoyancyScale">
      <summary>
            Gets the buoyancy scale.
            </summary>
      <value>
            The buoyancy scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotBuoyancyConfigScript.CenterOfBuoyancy">
      <summary>
            Gets the local position where buoyancy forces should be applied.
            </summary>
      <value>
            The local position where buoyancy forces should be applied.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.TestPilotData">
      <summary>
            The test pilot modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotData._anchorFeet">
      <summary>
            The anchor feet flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotData.AnchorFeet">
      <summary>
            Gets or sets a value indicating whether to anchor the test pilot's feet down and make them immobile.
            </summary>
      <value>
        <c>true</c> if the test pilot's feet should be anchored down and made them immobile; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript">
      <summary>
            The script for the test pilot modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.TestPilotData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.PilotDragCoefficientTimesArea">
      <summary>
            The overall pilot's drag coefficient times area value.
            </summary>
      <remarks>The constant came from looking at what <see cref="T:Assets.Scripts.Craft.DragPhysics" /> calculated for the dummy, and averaging all the directions.</remarks>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollProtectionBegin">
      <summary>
            The earth acceleration g forces where rag-doll protection should be enabled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollProtectionEnd">
      <summary>
            The earth acceleration g forces where rag-doll protection can be disabled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.TensorScale">
      <summary>
            The tensor scale used to calm the bodies/joints of the rag-doll.  Without this, the rag-doll is simply unusable at lower quality physics settings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.WaterImpactVelocityEnableProtection">
      <summary>
            The maximum velocity the water can be impacted w/o enabling rag-doll protection.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._animatorEnabled">
      <summary>
            A value indicating whether the animator is active and animating the rag-doll.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._averageBoneMass">
      <summary>
            The average bone mass for the rag-doll. Used when attached state to calculate drag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._boneInfos">
      <summary>
            The list of <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollBoneInfo" /> for each bone in the rag-doll.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._detached">
      <summary>
            A value indicating whether the rag-doll is operating in a "detached" mode, and operating independently of its part's original rigid-body.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._dragCoefficientTimeAreaPerBody">
      <summary>
            The drag coefficient * area to be used when the rag-doll is attached to its part's rigid-body. Used to calculate drag in both attached/detached state.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._footAnchorJointLeft">
      <summary>
            The joint for the left foot, to anchor it down if we're configured to do so.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._footAnchorJointRight">
      <summary>
            The joint for the right foot, to anchor it down if we're configured to do so.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._jointToPart">
      <summary>
            The joint which connects the rag-doll to it's part's rigid-body when it is still attached.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._lastVelocity">
      <summary>
            The velocity on the last frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._qualitySetting">
      <summary>
            The rag-doll physics quality setting
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._ragdollAnimator">
      <summary>
            The rag-doll animator script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._ragdollProtectionEnabled">
      <summary>
            Value indicating whether the rag-doll is being "protected" due to extreme conditions.  Used to prevent its rag-doll
            joints from separating and destroying the craft and other bad stuff.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._ragdollRootRigidBody">
      <summary>
            The root rigid body that is part of the rag-doll.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript._updateGForceCalculations">
      <summary>
            A value indicating whether G force calculations should be updated or not.  It should be disabled at times to prevent erroneous calculations (such as when entering/exiting warp).
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagDollAnimation">
      <summary>
            Defines various rag-doll animations.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagDollAnimation.Static">
      <summary>
            The static pose w/arms to the side.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.Acceleration">
      <summary>
            Gets the acceleration.
            </summary>
      <value>
            The acceleration.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.InstantaneousEarthGs">
      <summary>
            Gets the instantaneous Earth Gs, which are the exact Gs experienced this frame.
            </summary>
      <value>
            The instantaneous earth gs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.SmoothEarthGs">
      <summary>
            Gets the Earth Gs, smoothed out so they are not as susceptible to large spikes from frame to frame.
            </summary>
      <value>
            The smoothed earth Gs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.SmoothEarthGsMax">
      <summary>
            Gets the maximum Earth gs experienced over the flight.
            </summary>
      <value>
            The maximum Earth gs experienced over the flight.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.FlightEnd">
      <summary>
            End method called when the part is being removed from the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnConnectedToPart(ModApi.Craft.Parts.PartConnectedEventData)">
      <summary>
            Called when this part is connected to another part in the designer.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnGenerateInspectorModel(ModApi.Ui.Inspector.PartInspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RecalculateFrameState(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Called when a modifier should re-calculate the reference frame sate (position/velocity) of any special, "unmanaged" game-objects.
            </summary>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
      <remarks>
            Any children of a craft should have their position updated without using the position delta.  However, any rigid-body other than
            the one associated with a <see cref="T:ModApi.Craft.IBodyScript" /> will need its velocity updated with the velocity delta.
            Any gameobject not under a craft should add both the position and velocity deltas to the current value to keep the same relative state.
            -
            Caution: This may be called either when the reference frame re-centers, rotates, or when the node's orbit position/velocity is manually
            updated such as while warping.  If subscribing to GameViewScript.ReferenceFrameRecentered event, do not also add deltas in response
            to that or they'll be added in twice.
            </remarks>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.GetColliderVolume(UnityEngine.Rigidbody)">
      <summary>
            Gets the collider volume attached to the specified rigid-body.
            </summary>
      <param name="body">The body that the collider is attached to.</param>
      <returns>The volume of the collider attached to the specified rigid-body.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.GetHumanState(System.Single)">
      <summary>
            Gets the probable state of a human having undergone the G-forces of this device.
            </summary>
      <param name="g">The g force acceleration.</param>
      <returns>
            The probable state as a string.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.CommonStart">
      <summary>
            Start tasks common to flight scene and designer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.DetachRagdoll">
      <summary>
            Detaches the rag-doll and enables custom gravity/drag/buoyancy.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.FixedUpdateAttached">
      <summary>
            Performs fixed-update tasks for when the rag-doll is attached to the craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.FixedUpdateDetached">
      <summary>
            Performs fixed-update tasks for when the rag-doll is detached from the craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.GetDragAccel(System.Single,UnityEngine.Vector3,System.Single,System.Single,System.Single)">
      <summary>
            Gets the drag acceleration vector for a rag-doll bone traveling through a fluid.
            </summary>
      <param name="velocityMag">The velocity magnitude of the object.</param>
      <param name="velocityNormalized">The normalized velocity of the object.</param>
      <param name="velocitySquared">The squared velocity of the object.</param>
      <param name="mass">The mass of the object.</param>
      <param name="fluidDensity">The fluid density the object is traveling through..</param>
      <returns>
            The drag acceleration vector.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.GetGsDisplayString(System.Single)">
      <summary>
            Gets the g force display string.
            </summary>
      <param name="earthGs">The earth gs.</param>
      <returns>The display string.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.MatchRagdollToPartVelocity">
      <summary>
            Matches the rag-doll's rigid-body velocities to this part's rigid-body velocities.
            </summary>
      <remarks>The rigid-body being matched to may be the root rigid-body in the rag-doll, which is intended.</remarks>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnCraftInitialized(ModApi.Craft.ICraftScript)">
      <summary>
            Called when our craft (or a new craft that we've been put into) has initialized.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnDestroy">
      <summary>
            Called when this instance is being destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnMovedToNewCraft(ModApi.Craft.ICraftScript,ModApi.Craft.ICraftScript)">
      <summary>
            Called when this part has been moved to a new craft.
            </summary>
      <param name="oldCraft">The old craft.</param>
      <param name="newCraft">The new craft.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnPhysicsChanged(System.Boolean,ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Called when the game's physics enabled/disabled state has changed.
            </summary>
      <param name="enabled">if set to <c>true</c> physics has been enabled; otherwise <c>false</c>.</param>
      <param name="reason">The reason.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnPhysicsDisabled(ModApi.Craft.ICraftNode,ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Called when physics has been disabled.
            </summary>
      <param name="source">The source.</param>
      <param name="reason">The reason.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnPhysicsEnabled(ModApi.Craft.ICraftNode,ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Called when physics has been enabled.
            </summary>
      <param name="source">The source.</param>
      <param name="reason">The reason.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnRagdollPhysicsQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.PhysicsQualitySettings.RagdollPhysicsQuality})">
      <summary>
            Called when the rag-doll physics quality has changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;PhysicsQualitySettings.RagdollPhysicsQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called when the time multiplier mode changed.
            </summary>
      <param name="e">The e.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnValidate">
      <summary>
            Called when an inspector property changes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnWaterEntered(ModApi.Craft.Parts.IPartWaterPhysics)">
      <summary>
            Called when the rag-doll has entered the water.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.OnWaterExited(ModApi.Craft.Parts.IPartWaterPhysics)">
      <summary>
            Called when the rag-doll has exited the water.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.SetGForceCalculationsEnabled(System.Boolean)">
      <summary>
            Enables/disables G Force calculations.
            </summary>
      <param name="enabled">if set to <c>true</c> G force calculations are enabled; otherwise <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.SetQuality(ModApi.Settings.Core.Setting{ModApi.Settings.PhysicsQualitySettings.RagdollPhysicsQuality})">
      <summary>
            Sets the rag-doll physics quality.
            </summary>
      <param name="ragdollPhysics">The rag-doll physics.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.SetRagdollAnimationState(System.Boolean,System.Nullable{Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagDollAnimation})">
      <summary>
            Enables/disables the rag-doll animation and optionally sets the animation (if enabling).
            </summary>
      <param name="enabled">if set to <c>true</c> the rag-doll animation is enabled.</param>
      <param name="anim">If enabling, assigns the specified animation.  Ignored if disabling.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.SetRagdollEnabled(System.Boolean)">
      <summary>
            Enables/disables the rag-doll physics (aka whether joints are simulated via physics and floppy).
            </summary>
      <param name="enabled">if set to <c>true</c> rag-doll physics are enabled, otherwise <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.SetRagdollKinematic(System.Boolean)">
      <summary>
            Sets the kinematic state of the test pilot's rag-doll rigidbodies and syncs the velocities of the rag-doll bones when disabling kinematic.
            </summary>
      <param name="kinematic">if set to <c>true</c> the rag-doll's rigidbodies will be set to kinematic otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.SetRagdollProtection(System.Boolean)">
      <summary>
            Enables/disables "anti-joint-explosion protection" for the rag-doll.
            </summary>
      <param name="enableProtection">if set to <c>true</c> the rag-doll will be protected from exploding apart, otherwise <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.SetRagdollVelocities(UnityEngine.Vector3)">
      <summary>
            Sets the velocity of all rag-doll rigid-bodies.
            </summary>
      <param name="velocity">The velocity to set the rag-doll bodies to.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.UpdateCraftEventSubscription(System.Boolean,ModApi.Craft.ICraftScript)">
      <summary>
            Subscribes/unsubscribes from events for the supplied craft.
            </summary>
      <param name="subscribe">if set to <c>true</c> events will be subscribed to, otherwise; <c>false</c>.</param>
      <param name="craft">The craft.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollBoneInfo">
      <summary>
            Information related to a single bone in the rag-doll.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollBoneInfo.Body">
      <summary>
            Gets or sets the rigid-body.
            </summary>
      <value>
            The rigid-body.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollBoneInfo.BuoyancyScaler">
      <summary>
            Gets or sets the buoyancy scaler.
            </summary>
      <value>
            The buoyancy scaler.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollBoneInfo.CenterOfBuoyancyOffset">
      <summary>
            Gets or sets the center of buoyancy offset.
            </summary>
      <value>
            The center of buoyancy offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollBoneInfo.Collider">
      <summary>
            Gets or sets the collider.
            </summary>
      <value>
            The collider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollBoneInfo.ColliderAsCapsule">
      <summary>
            Gets or sets a reference to this bone's collider as a <see cref="T:UnityEngine.CapsuleCollider" /> if it is one, or null if it isn't.
            </summary>
      <value>
            A reference to this bone's collider as a <see cref="T:UnityEngine.CapsuleCollider" /> if it is one, or null if it isn't..
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.TestPilotScript.RagdollBoneInfo.ColliderVolume">
      <summary>
            Gets or sets the collider volume.
            </summary>
      <value>
            The collider volume.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData">
      <summary>
            The wing modifier data.
            </summary>
      <seealso cref="T:ModApi.Craft.Parts.PartModifierData`1" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData._deflectionSpeed">
      <summary>
            The deflection speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData._designerAutoAxesInfo">
      <summary>
            The info regarding automatic axis assignment to be used for informational purposes in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData._end">
      <summary>
            The end size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData._input">
      <summary>
            The input id of the control surface.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData._invert">
      <summary>
            Whether the control surface has been inverted by the user.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData._maxDeflectionDegree">
      <summary>
            The maximum deflection of the control surface in degrees.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData._singleAxisWhenAuto">
      <summary>
            A value to identify whether only a single axis should be assigned when control surfaces are automatically assigned.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData._start">
      <summary>
            The start size.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.PropertyChangedHandler">
      <summary>
            Handler for property changed events.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.SingleAxisWhenAutoChanged">
      <summary>
            Occurs when the <see cref="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.SingleAxisWhenAuto" /> property changes.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.DeflectionSpeed">
      <summary>
            Gets the deflection speed.
            </summary>
      <value>
            The deflection speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.DesignerAutoAxesInfo">
      <summary>
            Gets or sets the info regarding automatic axis assignment to be used for informational purposes in the designer.
            </summary>
      <value>
            The info regarding automatic axis assignment to be used for informational purposes in the designer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.End">
      <summary>
            Gets or sets the end size of the control surface.
            </summary>
      <value>
            The end size of the control surface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.Input">
      <summary>
            Gets or sets the input identifier of the control surface.
            </summary>
      <value>
            The input identifier of the control surface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.Invert">
      <summary>
            Gets or sets a value indicating whether the control surface has been inverted by the user.
            </summary>
      <value>
        <c>true</c> if the control surface has been inverted by the user.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.Length">
      <summary>
            Gets the length.
            </summary>
      <value>
            The length.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.MaxDeflectionDegree">
      <summary>
            Gets or sets the maximum deflection of the control surface in degrees.
            </summary>
      <value>
            The maximum deflection of the control surface in degrees.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.SingleAxisWhenAuto">
      <summary>
            Gets or sets a value indicating whether to assign a single axis when control surfaces are automatically calculated.
            </summary>
      <value>
        <c>true</c> if only a single axis should be assigned when control surfaces are automatically calculated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.Start">
      <summary>
            Gets or sets the start size of the control surface.
            </summary>
      <value>
            The start size of the control surface.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.Create(ModApi.Craft.Parts.PartData,System.Int32,System.Int32,System.String,System.Int32,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData" /> class.
            </summary>
      <param name="partData">The part data.</param>
      <param name="start">The start of the control surface.</param>
      <param name="length">The length of the control surface.</param>
      <param name="input">The input identifier.</param>
      <param name="maxDeflectionDegree">The maximum deflection degree of the control surface.</param>
      <param name="invert">If set to <c>true</c>, the control surface is inverted.</param>
      <returns>The new control surface data.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.CreateScriptComponent(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Creates the Unity MonoBehaviour for the part modifier and associates it with a game object.
            </summary>
      <param name="partScript">The part script.</param>
      <returns>
            The created part modifier script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.DestroyScriptComponent(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Destroys the Unity MonoBehaviour and any associated game objects for the part modifier.
            </summary>
      <param name="partScript">The part script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.OnSingleAxisWhenAutoChanged(System.Boolean)">
      <summary>
            Called when the <see cref="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.SingleAxisWhenAuto" /> property changes.
            </summary>
      <param name="newVal">if set to <c>true</c> [new value].</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.AssignmentType">
      <summary>
            Determines how the control surface is assigned inputs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.AssignmentType.Auto">
      <summary>
            The automatic assignment type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.AssignmentType.Manual">
      <summary>
            The manual assignment type.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript">
      <summary>
            Script for control surface that is attached to a wing.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._autoAxisContributions">
      <summary>
            Vector3 containing -1, 0, or 1 for each axis (x=Pitch, y=Yaw, z=Roll) to identify which control inputs would be contributed to when used.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._collider">
      <summary>
            The collider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._craftControlsChangedMigrator">
      <summary>
            The command pod changed event proxy
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._currentInputValue">
      <summary>
            The current input value
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._deflectionAngle">
      <summary>
            The angle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._hingeAxis">
      <summary>
            The hinge axis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._input">
      <summary>
            The input controller for the control surface.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._inputAdjustment">
      <summary>
            The input adjustment
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._meshFilter">
      <summary>
            The mesh filter.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._recalculateInputs">
      <summary>
            The recalculate inputs flag
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.Collider">
      <summary>
            Gets the collider for the control surface.
            </summary>
      <value>
            The collider for the control surface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.ControlSurfacePhysics">
      <summary>
            Gets or sets the control surface physics.
            </summary>
      <value>
            The control surface physics.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.DeflectionAngle">
      <summary>
            Gets or sets the angle.
            </summary>
      <value>
            The angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.HingeAxis">
      <summary>
            Gets or sets the hinge axis.
            </summary>
      <value>
            The hinge axis.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.Mesh">
      <summary>
            Gets or sets the mesh.
            </summary>
      <value>
            The mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.MeshRenderer">
      <summary>
            Gets the mesh renderer.
            </summary>
      <value>
            The mesh renderer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.WingScript">
      <summary>
            Gets or sets the wing script.
            </summary>
      <value>
            The wing script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Update method that is only called in the flight scene when the game is not paused.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.OnPartDestroyed">
      <summary>
            Called when the part owning this modifier is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.OnRemoveModifier">
      <summary>
            Called when the modifier is removed from a part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.CalculateControlAxisContributions">
      <summary>
            Recalculates auto-configured axis contributions.
            </summary>
      <returns>
            Vector3 containing -1, 0, or 1 for each axis (x=Pitch or Strafe, y=Yaw or Up/Down, z=Roll or Forward/Back) to identify which control inputs would be contributed to when used.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.CreateControlSurfacePhysics">
      <summary>
            Creates the control surfaces.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.DisposeControlSurface">
      <summary>
            Disposes the control surface.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.GetAutoInputController(UnityEngine.Vector3,System.Int32@)">
      <summary>
            Gets an <see cref="T:ModApi.Craft.Parts.Input.IInputController" /> by automatically assigning the correct axis (or axes) based on location and orientation relative to the pilot oriented center of mass.
            </summary>
      <param name="axisContributions">The values which determine how much this control surface contributes to each axis.</param>
      <param name="inputAdjustment">Will contain any input adjustment, used to invert controls (1, -1).</param>
      <returns>
            The input.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.GetInputController(System.Linq.Expressions.Expression{System.Func{ModApi.Craft.CraftControls,System.Single}},System.Int32@)">
      <summary>
            Gets an <see cref="T:ModApi.Craft.Parts.Input.IInputController" /> using the supplied control expression which provides access to the desired <see cref="T:ModApi.Craft.CraftControls" /> property.
            </summary>
      <param name="control">The <see cref="T:ModApi.Craft.CraftControls" /> property to use.</param>
      <param name="inputAdjustment">Will contain any input adjustment, used to invert controls (1, -1).</param>
      <returns>The input.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.GetInputController(UnityEngine.Vector3,System.Int32@)">
      <summary>
            Gets an <see cref="T:ModApi.Craft.Parts.Input.IInputController" /> based on the control surface's data configuration in <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData" />.
            </summary>
      <param name="autoAxisContributions">The auto-generated values which determine how much this control surface contributes to each axis.  Only used if auto control surface type is used.</param>
      <param name="inputAdjustment">Will contain any input adjustment, used to invert controls (1, -1).</param>
      <returns>
            The input.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.GetInputValue">
      <summary>
            Gets the input value from the control surface's <see cref="T:ModApi.Craft.Parts.Input.IInputController" /> with the <see cref="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript._inputAdjustment" /> applied.
            </summary>
      <returns>The input value.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.OnCommandPodControlsChanged(ModApi.Craft.Parts.ICommandPod,System.Boolean)">
      <summary>
            Called when control surface's command pod's controls have changed.
            </summary>
      <param name="source">The source.</param>
      <param name="adjustControlsToCom">If set to <c>true</c> then the controls should be adjusted to the craft's CoM.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.OnSingleAxisWhenAutoChanged(Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData)">
      <summary>
            Called when the <see cref="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.SingleAxisWhenAuto" /> property changes.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.OnWingUpdated(Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript)">
      <summary>
            Called when the wing this control surface is attached to has updated.
            </summary>
      <param name="wing">The wing.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript.UpdateDesignerAutoControlInfo">
      <summary>
            Updates <see cref="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceData.DesignerAutoAxesInfo" /> property, used for informational purposes in the designer.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder">
      <summary>
            Builds a wing mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder._cubeNormals">
      <summary>
            The cube normals array.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder._cubeTriangles">
      <summary>
            The cube triangles array.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder._tempUVList24">
      <summary>
            A static list for temporarily storing mesh UVs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder._tempVertexArray24">
      <summary>
            A static list for temporarily storing 24 Vector3s.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder._tempVertexArray8">
      <summary>
            A static list for temporarily storing 8 Vector3s.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder._partMaterialScript">
      <summary>
            The part material script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder._wingScript">
      <summary>
            The wing script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.#ctor(Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript,ModApi.Craft.Parts.IPartMaterialScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder" /> class.
            </summary>
      <param name="wingScript">The wing script.</param>
      <param name="partMaterialScript">The part material script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.BuildColliderMesh">
      <summary>
            Builds the collider mesh.
            </summary>
      <returns>The collider mesh.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.BuildControlSurface(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript)">
      <summary>
            Builds the section of mesh.
            </summary>
      <param name="spanStart">The span start.</param>
      <param name="span">The span.</param>
      <param name="baseChord">The base chord.</param>
      <param name="tipChord">The tip chord.</param>
      <param name="sweepStart">The sweep start.</param>
      <param name="sweepEnd">The sweep end.</param>
      <param name="controlSurface">The control surface.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.BuildControlSurfaceHelper(System.Single,System.Single,Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript)">
      <summary>
            Builds the control surface helper.
            </summary>
      <param name="start">The start.</param>
      <param name="end">The end.</param>
      <param name="controlSurface">The control surface.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.BuildSectionMesh(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector3,System.Single,System.Boolean,UnityEngine.Vector2)">
      <summary>
            Builds the section of mesh.
            </summary>
      <param name="spanStart">The span start.</param>
      <param name="span">The span.</param>
      <param name="baseChord">The base chord.</param>
      <param name="tipChord">The tip chord.</param>
      <param name="sweepStart">The sweep start.</param>
      <param name="sweepEnd">The sweep end.</param>
      <param name="chordStart">The chord start.</param>
      <param name="chordEnd">The chord end.</param>
      <param name="center">The center.</param>
      <param name="uvw">The W component value of the first UV set.</param>
      <param name="collider">A value indicating if this mesh section is for a collider only.</param>
      <param name="uvOffset">The uv offset.</param>
      <returns>
            The resulting mesh for the wing section.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.UpdateMesh">
      <summary>
            Updates the mesh.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.CreateCubeMesh(UnityEngine.Vector3[],System.Single,System.Boolean,UnityEngine.Vector2)">
      <summary>
            Creates the cube mesh.
            </summary>
      <param name="p">The p.</param>
      <param name="uvw">The W component value of the first UV set.</param>
      <param name="collider">A value indicating if this mesh section is for a collider only.</param>
      <param name="uvOffset">The uv offset.</param>
      <returns>
            The mesh.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.CreateCubeNormals">
      <summary>
            Creates the cube normals array.
            </summary>
      <returns>The cube normals array</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.CreateCubeTriangles">
      <summary>
            Creates the cube triangles array.
            </summary>
      <returns>The cube triangles array.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.CreateTempUVList(System.Int32)">
      <summary>
            Creates a temporary list for storing UV coordinates.
            </summary>
      <param name="size">The size of the list.</param>
      <returns>The requested list.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingMeshBuilder.BuildSectionMeshHelper(System.Single,System.Single,Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript)">
      <summary>
            Builds the section mesh helper.
            </summary>
      <param name="start">The start.</param>
      <param name="end">The end.</param>
      <param name="controlSurface">The control surface.</param>
      <returns>
            The resulting mesh.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript">
      <summary>
            The script for the wing modifier.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierScript&lt;Assets.Scripts.Craft.Parts.Modifiers.WingData&gt;" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._showLiftVectorGlobal">
      <summary>
            A value indicating whether to show the lift vector for all wings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._colSphereGameObject">
      <summary>
            The center of lift sphere game object, for debugging.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._debugEnabled">
      <summary>
            The debug enabled flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._meshFilter">
      <summary>
            The mesh filter.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._occluded">
      <summary>
            The occluded flag, which is set to true when it has been determined that the wing is blocked
            by other parts and should not have any physics simulation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._part">
      <summary>
            The part game script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._suppressUpdateEvent">
      <summary>
            A value indicating whether the WingUpdated event should be suppressed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._vectorGizmosScale">
      <summary>
            The vector gizmos scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._wingCollider">
      <summary>
            The wing collider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._wingMeshBuilder">
      <summary>
            The wing mesh builder dependency.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript._wingTipAttachPoint">
      <summary>
            The wing tip attach point.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript" /> class.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingUpdatedDelegate">
      <summary>
            Delegate for handling a wing update event.
            </summary>
      <param name="wing">The wing.</param>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingUpdated">
      <summary>
            Occurs when the wing is updated.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType">
      <summary>
            The types of points in the wing.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType.RootLeadingEdge">
      <summary>
            The root leading edge.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType.RootTrailingEdge">
      <summary>
            The root trailing edge.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType.TipLeadingEdge">
      <summary>
            The tip leading edge.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType.TipTrailingEdge">
      <summary>
            The tip trailing edge.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType.TipPosition">
      <summary>
            The tip position.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.DrawCenterOfLiftBalls">
      <summary>
            Gets or sets a value indicating whether to draw center of lift balls.
            </summary>
      <value>
            If <c>true</c>, will draw the center of lift balls; otherwise, does not.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.DrawCenterOfLiftBallsProportionalToMagnitude">
      <summary>
            Gets or sets a value indicating whether to draw center of lift balls size as proportional to their lift magnitude.
            </summary>
      <value>
            If <c>true</c>, will draw the center of lift balls size as proportional to their lift magnitude; otherwise, does not.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.ShowLiftVectorGlobal">
      <summary>
            Gets or sets a value indicating whether to show the lift vector for all wings.
            </summary>
      <value>
        <c>true</c> if all wings should show their lift vector; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.AngleOfAttack">
      <summary>
            Gets or sets the angle of attack.
            </summary>
      <value>
            The angle of attack.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.ControlSurfaces">
      <summary>
            Gets the control surfaces. Control surfaces must be ordered from base to tip.
            </summary>
      <value>
            The control surfaces.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.DebugEnabled">
      <summary>
            Gets a value indicating whether debug is enabled for the wing script.
            </summary>
      <value>
        <c>true</c> if [debug enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.DihedralAngle">
      <summary>
            Gets the dihedral angle in degrees.
            </summary>
      <value>
            The dihedral angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.Forward">
      <summary>
            Gets the forward vector of the wing.  Points toward the leading edge.
            </summary>
      <value>
            The forward vector of the wing.  Points toward the leading edge.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.IsWingTipAttached">
      <summary>
            Gets a value indicating whether [is wing tip attached].
            </summary>
      <value>
        <c>true</c> if [is wing tip attached]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.JointCreakAudioSource">
      <summary>
            Gets or sets the joint creak audio source.
            </summary>
      <value>
            The joint creak audio source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.LiftUp">
      <summary>
            Gets the wing's lift "up" vector.  This aligns with the up vector of the airfoil.
            </summary>
      <value>
            The wing's lift "up" vector.  This aligns with the up vector of the airfoil.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.MaxFuelCapacity">
      <summary>
            Gets the maximum fuel capacity (liters) possible for this wing given its total area.
            </summary>
      <value>
            The maximum fuel capacity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.Mesh">
      <summary>
            Gets or sets the mesh.
            </summary>
      <value>
            The mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.OnRightSide">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript" /> is on the right side of the craft with respect to the pilot's position.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript" /> is on the right side of the craft with respect to the pilot's position; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.Right">
      <summary>
            Gets the right vector of the wing.  Points out toward the wing-tip.
            </summary>
      <value>
            The right vector of the wing.  Points out toward the wing-tip.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.RootLeadingEdge">
      <summary>
            Gets the root leading edge.
            </summary>
      <value>
            The root leading edge.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.RootTrailingEdge">
      <summary>
            Gets the root trailing edge.
            </summary>
      <value>
            The root trailing edge.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.ShowLiftVector">
      <summary>
            Gets a value indicating whether this wing's lift vector should be shown.
            </summary>
      <value>
        <c>true</c> if this wing's lift vector should be shown; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.SimulationSectionCount">
      <summary>
            Gets the simulation section count.
            </summary>
      <value>
            The simulation section count.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.TipLeadingEdge">
      <summary>
            Gets the tip leading edge.
            </summary>
      <value>
            The tip leading edge.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.TipTrailingEdge">
      <summary>
            Gets the tip trailing edge.
            </summary>
      <value>
            The tip trailing edge.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPhysicsScript">
      <summary>
            Gets the wing physics script.
            </summary>
      <value>
            The wing physics script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingRoot">
      <summary>
            Gets or sets the wing root.
            </summary>
      <value>
            The wing root.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingSweep">
      <summary>
            Gets the wing sweep.
            </summary>
      <value>
            The wing sweep.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.InvertAirfoil">
      <summary>
            Gets or sets a value indicating whether the airfoil.
            </summary>
      <value>
        <c>true</c> if [invert airfoil]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.Up">
      <summary>
            Gets the up vector for the wing.
            </summary>
      <value>
            The up vector for the wing.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.AddControlSurface(System.Int32,System.Int32,System.String,System.Int32,System.Boolean)">
      <summary>
            Adds the control surface to the wing.
            </summary>
      <param name="start">The start.</param>
      <param name="length">The length.</param>
      <param name="inputId">The input identifier.</param>
      <param name="maxDeflectionDegree">The maximum deflection degree.</param>
      <param name="invert">if set to <c>true</c> [invert].</param>
      <returns>
            The new control surface script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.DeleteControlSurface(Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript)">
      <summary>
            Deletes the control surface.
            </summary>
      <param name="controlSurfaceScript">The control surface script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.DrawCenterOfLiftOnWing">
      <summary>
            Draws the center of lift on wing.
            </summary>
      <returns>The position of the center of lift gizmo.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.DrawCenterOfLiftOnWing(System.Single@,Assets.Scripts.Craft.CraftScript)">
      <summary>
            Draws the center of lift on wing.
            </summary>
      <param name="magnitude">The magnitude.</param>
      <param name="alternateAircraftToDrawOn">The alternate aircraft to draw on.</param>
      <returns>The position of the center of lift gizmo.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.FindPylonPosition(UnityEngine.Vector3)">
      <summary>
            Finds the pylon position.
            </summary>
      <param name="worldPosition">The world position.</param>
      <returns>The pylon position in world coordinates.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.ModApi#GameLoop#Interfaces#IFlightUpdate#FlightUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Updates this instance.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.GetNextControlSurfaceSpot(System.Int32@,System.Int32@)">
      <summary>
            Gets the next spot for a control surface, which is after any existing control surfaces. Returns the
            starting point and the length of the spot.
            </summary>
      <param name="start">The start.</param>
      <param name="length">The length.</param>
      <returns>True if a spot was found, otherwise returns false.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading. It is possible that this method will be called
            more than once for a single part if the part has moved to a new craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.OnCraftStructureChanged(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the craft structure has changed.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.OnPartDestroyed">
      <summary>
            Called when the part owning this modifier is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.OnSymmetry(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Called when the part has been updated by symmetry.
            </summary>
      <param name="mode">The symmetry mode.</param>
      <param name="originalPart">The original part.</param>
      <param name="created">if set to <c>true</c> then the part has been created. False indicates the part is being updated.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.RegisterControlSurface(Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript)">
      <summary>
            Registers the control surface.
            </summary>
      <param name="controlSurfaceScript">The control surface script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.SnapWingPoint(UnityEngine.Vector3,Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType)">
      <summary>
            Snaps the wing point.
            </summary>
      <param name="position">The position.</param>
      <param name="wingPointType">Type of the wing point.</param>
      <returns>The snapped wing position.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.SortControlSurfaces">
      <summary>
            Sorts the control surfaces, ordered by distance from the base of the wing, ascending.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UnregisterControlSurface(Assets.Scripts.Craft.Parts.Modifiers.Wing.ControlSurfaceScript)">
      <summary>
            Unregisters the control surface.
            </summary>
      <param name="controlSurfaceScript">The control surface script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdateFuel">
      <summary>
            Updates the fuel capacity.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdateWingPoint(UnityEngine.Vector3,Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType)">
      <summary>
            Updates the wing point.
            </summary>
      <param name="position">The position.</param>
      <param name="wingPointType">Type of the wing point.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdateWingShape">
      <summary>
            Updates the wing shape.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.OnInitialized">
      <summary>
            Called when the part modifier script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.OnActiveSceneChanged(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
            Called when the active scene changes.
            </summary>
      <param name="newScene">The new scene.</param>
      <param name="oldScene">The old scene.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.SnapToGridEdge(System.Single)">
      <summary>
            Snaps to grid, edge based.
            </summary>
      <param name="value">The value.</param>
      <returns>The snapped value.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.StaticInitialize">
      <summary>
            (Re)Initializes static variables.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.IsOnRightSide">
      <summary>
            Checks to see if the wing is inverted relative to the craft's Up vector.
            </summary>
      <returns>
        <c>true</c> if the wing is inverted, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.OnDataInvertAirfoilChanged(System.Boolean,System.Boolean)">
      <summary>
            Called when the Wing's Data.InvertAirfoil property changed.
            </summary>
      <param name="newVal">The new value.</param>
      <param name="oldVal">The old value.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.RaiseWingUpdatedIfAppropriate">
      <summary>
            Raises the wing updated event, if appropriate.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdateEventSubscriptions(System.Boolean)">
      <summary>
            Updates the event subscriptions.
            </summary>
      <param name="subscribe">if set to <c>true</c> events will be subscribed to, otherwise; <c>false</c> to unsubscribe.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdateInverted">
      <summary>
            Updates the inverted.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdateLiftVectorLine">
      <summary>
            Updates the lift vector line.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdatePoint(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
            Updates the point, restraining it within the specified distance from its opposing point (i.e. - leading is opposite to trailing).
            </summary>
      <param name="position">The position.</param>
      <param name="currentPosition">The current position.</param>
      <param name="oppositePosition">The opposite position.</param>
      <param name="minDistance">The minimum distance.</param>
      <param name="maxDistance">The maximum distance.</param>
      <returns>
            The resulting position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdateWing">
      <summary>
            Updates the entire wing (shape, physics, etc.) after the wing has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdateWingPhysics">
      <summary>
            Updates the wing physics.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.UpdateWingPhysicsIfEnabled">
      <summary>
            Updates the wing physics if physics is enabled for this wing.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.WingData">
      <summary>
            The wing modifier data.
            </summary>
      <seealso cref="!:ModApi.Craft.Parts.PartModifierData&lt;Assets.Scripts.Craft.Parts.Modifiers.WingScript&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._airfoil">
      <summary>
            Gets or sets the airfoil.
            </summary>
      <value>
            The airfoil.
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._allowControlSurfaces">
      <summary>
            Gets or sets a value indicating whether [allow control surfaces].
            </summary>
      <value>
        <c>true</c> if [allow control surfaces]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._angleOfAttack">
      <summary>
            Gets or sets the angle of attack.
            </summary>
      <value>
            The angle of attack.
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._density">
      <summary>
            The density
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._fuelPercentage">
      <summary>
            Gets or sets the fuel percentage, which is the percentage of total available wing used to store fuel.
            </summary>
      <value>
            The fuel percentage.
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._hingeDistanceFromTrailingEdge">
      <summary>
            The hinge distance from trailing edge.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._invertAirfoil">
      <summary>
            Whether the airfoil has been inverted by the user.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._minSectionLength">
      <summary>
            Gets or sets the minimum length of a section, which is used to determine how many simulation sections are used
            in the wing physics. A larger value here will result in less sections, which means faster performance but potentially
            less accurate physics.
            </summary>
      <value>
            The minimum length of the section.
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._rootLeadingOffset">
      <summary>
            The root leading offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._rootTrailingOffset">
      <summary>
            Gets or sets the root trailing offset.
            </summary>
      <value>
            The root trailing offset.
            </value>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._tipLeadingOffset">
      <summary>
            The tip leading offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._tipPosition">
      <summary>
            The tip position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._tipTrailingOffset">
      <summary>
            The tip trailing offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData._wingPhysicsEnabled">
      <summary>
            Gets or sets a value indicating whether wing physics are enabled.
            </summary>
      <value>
        <c>true</c> if wing physics are enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.WingData.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Modifiers.WingData" /> class.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.WingData.PropertyChangedHandler">
      <summary>
            Handler for when part properties change.
            </summary>
      <param name="newVal">The new value.</param>
      <param name="oldVal">The old value.</param>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Modifiers.WingData.InvertAirfoilChanged">
      <summary>
            Occurs when the invert airfoil property has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.Airfoil">
      <summary>
            Gets or sets the airfoil.
            </summary>
      <value>
            The airfoil.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.AllowControlSurfaces">
      <summary>
            Gets or sets a value indicating whether [allow control surfaces].
            </summary>
      <value>
        <c>true</c> if [allow control surfaces]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.AngleOfAttack">
      <summary>
            Gets or sets the angle of attack.
            </summary>
      <value>
            The angle of attack.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.BaseChord">
      <summary>
            Gets the base chord.
            </summary>
      <value>
            The base chord.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.Density">
      <summary>
            Gets or sets the density.
            </summary>
      <value>
            The density.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.FuelPercentage">
      <summary>
            Gets or sets the fuel percentage.
            </summary>
      <value>
            The fuel percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.HingeDistanceFromTrailingEdge">
      <summary>
            Gets or sets the hinge distance from trailing edge.
            </summary>
      <value>
            The hinge distance from trailing edge.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.InvertAirfoil">
      <summary>
            Gets or sets a value indicating whether the user wants to invert the wing's airfoil.
            </summary>
      <value>
        <c>true</c> if the wing's airfoil should be inverted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.Mass">
      <summary>
            Gets the mass.
            Note: This mass is scaled by Constants.MassScale.
            </summary>
      <value>
            The mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.MinSectionLength">
      <summary>
            Gets or sets the minimum length of a section, which is used to determine how many simulation sections are used
            in the wing physics. A larger value here will result in less sections, which means faster performance but potentially
            less accurate physics.
            </summary>
      <value>
            The minimum length of the section.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.RootLeadingOffset">
      <summary>
            Gets or sets the root leading offset.
            </summary>
      <value>
            The root leading offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.RootTrailingOffset">
      <summary>
            Gets or sets the root trailing offset.
            </summary>
      <value>
            The root trailing offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.TipChord">
      <summary>
            Gets the tip chord.
            </summary>
      <value>
            The tip chord.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.TipLeadingOffset">
      <summary>
            Gets or sets the tip leading offset.
            </summary>
      <value>
            The tip leading offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.TipPosition">
      <summary>
            Gets or sets the tip position.
            </summary>
      <value>
            The tip position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.TipTrailingOffset">
      <summary>
            Gets or sets the tip trailing offset.
            </summary>
      <value>
            The tip trailing offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.WingArea">
      <summary>
            Gets the wing area.
            </summary>
      <value>
            The wing area.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.WingPhysicsEnabled">
      <summary>
            Gets or sets a value indicating whether wing physics are enabled.
            </summary>
      <value>
        <c>true</c> if wing physics are enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Modifiers.WingData.WingSpan">
      <summary>
            Gets the wing span.
            </summary>
      <value>
            The wing span.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Modifiers.WingData.OnDesignerInitialization(ModApi.Design.PartProperties.IDesignerPartPropertiesModifierInterface)">
      <summary>
            Called when the part modifier data is initialized in the designer scene.
            </summary>
      <param name="d">The designer part properties.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Modifiers.WingData.Airfoils">
      <summary>
            The list of available airfoils.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData.Airfoils.FlatBottom">
      <summary>
            The flat bottom airfoil.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData.Airfoils.SemiSymmetric">
      <summary>
            The semi symmetric.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Modifiers.WingData.Airfoils.Symmetric">
      <summary>
            The symmetric airfoil.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility">
      <summary>
            A utility for working with design time part collisions that should be ignored by the physics engine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.DefaultPartCollisionHandling">
      <summary>
            The default part collision handling method.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.MinimumCollisionDistance">
      <summary>
            The minimum collision distance.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility._collidersA">
      <summary>
            A temporary and reusable list of colliders for part A.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility._collidersB">
      <summary>
            A temporary and reusable list of colliders for part B.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderAttachPointType">
      <summary>
            An enumeration defining collider attach point types related to part collision ignore functionality.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderAttachPointType.Unknown">
      <summary>
            An unknown attach point type (used to indicate info is not yet cached.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderAttachPointType.Ignore">
      <summary>
            An attach point that should be ignored when it comes to part collision ignore logic.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderAttachPointType.DoNotIgnore">
      <summary>
            An attach point that should not be ignored when it comes to part collision ignore logic.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ApplyPartCollisions(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Applies the part collisions to be ignored for the specified part.
            </summary>
      <param name="part">The part for which to apply part collision ignore logic.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ApplyPartCollisions(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Applies the part collisions to be ignored for the specified craft.
            </summary>
      <param name="craft">The craft for which to apply part collision ignore logic.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.UpdatePartCollisions(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Updates the part collisions to be ignored for the specified craft.
            </summary>
      <param name="craft">The craft for which to update part collisions.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ApplyPartCollision(ModApi.Craft.Parts.PartCollision)">
      <summary>
            Applies the part collision logic for the specified part collision.
            </summary>
      <param name="collision">The part collision.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.GetCollisionHandlingMethod(ModApi.Craft.Parts.PartData,ModApi.Craft.Parts.PartData)">
      <summary>
            Gets the collision handling method to use between the two specified parts.
            </summary>
      <param name="partA">The part A.</param>
      <param name="partB">The part B.</param>
      <returns>The collision handling method to use between the two specified parts.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.UpdatePartCollisions(ModApi.Craft.Assembly,ModApi.Craft.Parts.PartData,ModApi.Craft.Parts.PartData,System.Collections.Generic.Dictionary{System.Int32,Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderInfo[]})">
      <summary>
            Updates the part collisions between the two specified parts.
            </summary>
      <param name="assembly">The assembly to which the parts belong.</param>
      <param name="partA">The part A.</param>
      <param name="partB">The part B.</param>
      <param name="colliderInfoLookup">A dicationary used to lookup and store cached collider info.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderInfo">
      <summary>
            A class containing some info related to a collider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderInfo.AttachPointType">
      <summary>
            The attach point type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderInfo.Collider">
      <summary>
            The collider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderInfo.Position">
      <summary>
            The position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderInfo.Rotation">
      <summary>
            The rotation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderInfo.Transform">
      <summary>
            The transform.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderInfo.#ctor(UnityEngine.Collider)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.PartCollisionIgnoreUtility.ColliderInfo" /> class.
            </summary>
      <param name="collider">The collider.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartFlightCollision">
      <summary>
            Contains information a collision involving a part in the flight scene.
            </summary>
      <seealso cref="T:ModApi.Craft.Parts.IPartFlightCollision" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartFlightCollision._cachcedNormalVelocity">
      <summary>
            The cached normal velocity.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartFlightCollision.#ctor(UnityEngine.Collision,UnityEngine.ContactPoint,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.PartFlightCollision" /> class.
            </summary>
      <param name="collision">The collision.</param>
      <param name="contact">The contact.</param>
      <param name="partScript">The part script.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartFlightCollision.Collision">
      <summary>
            Gets the Unity collision object.
            </summary>
      <value>
            The Unity collision object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartFlightCollision.Contact">
      <summary>
            Gets the Unity collision contact.
            </summary>
      <value>
            The Unity collision contact.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartFlightCollision.Impulse">
      <summary>
            Gets the impulse of the collision. This impulse is scaled down when relative velocity is very low. Check
            the Collision.impulse for the original impulse.
            </summary>
      <value>
            The impulse in Newton seconds.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartFlightCollision.IsGroundCollision">
      <summary>
            Gets a value indicating whether this is a collision with the ground.
            </summary>
      <value>
        <c>true</c> if this is a ground collision; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartFlightCollision.NormalVelocity">
      <summary>
            Gets the magnitude of the velocity that is aligned with the collision normal.
            </summary>
      <value>
            The normal velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartFlightCollision.OtherColliderLayer">
      <summary>
            Gets the other collider's layer.
            </summary>
      <value>
            The other collider layer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartFlightCollision.PartScript">
      <summary>
            Gets the part script owning the Contact.thisCollider.
            </summary>
      <value>
            The part script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartFlightCollision.RelativeVelocity">
      <summary>
            Gets the relative velocity between the colliders.
            </summary>
      <value>
            The relative velocity in m/s.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartHighlighterScript">
      <summary>
            The image effect component responsible for highlighting and outlining parts.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:ModApi.Craft.Parts.IPartHighlighter" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript.HighlightRenderLayer">
      <summary>
            The temporary render layer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._highlightColor">
      <summary>
            The highlight color
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._highlightedParts">
      <summary>
            The current list of highlighted parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._mainCamera">
      <summary>
            The main camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._materialCombine">
      <summary>
            The material used for the outline and highlight combining render.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._materialHighlightMask">
      <summary>
            The material for the highlight mask render.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._materialOutlineBlurPass1">
      <summary>
            The material used for the first blur pass on the outline texture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._materialOutlineBlurPass2">
      <summary>
            The material used for the second blur pass on the outline texture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._materialOutlineMask">
      <summary>
            The material for the outline mask render.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._outlineColor">
      <summary>
            The outline color.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._outlinedParts">
      <summary>
            The current list of outlined parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._partSelectionCamera">
      <summary>
            The part selection camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._shaderCombine">
      <summary>
            The shader responsible for combining the highlights and outlines with the main image.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._shaderHighlightMask">
      <summary>
            The shader responsible for creating the mask used when highlighting parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._shaderOutlineBlurPass1">
      <summary>
            The shader responsible for the first blur pass for the outlines.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._shaderOutlineBlurPass2">
      <summary>
            The shader responsible for the second blur pass for the outlines.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._shaderOutlineMask">
      <summary>
            The shader responsible for creating the mask used when outlining parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartHighlighterScript._tempPartGroupList">
      <summary>
            A temporary list used to store part groups when rendering the outline mask in the flight scene.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartHighlighterScript.Instance">
      <summary>
            Gets the part highlighter static instance.
            </summary>
      <value>
            The part highlighter static instance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartHighlighterScript.HighlightColor">
      <summary>
            Gets or sets the color of the highlight.
            </summary>
      <value>
            The color of the highlight.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartHighlighterScript.OutlineColor">
      <summary>
            Gets or sets the color of the outline.
            </summary>
      <value>
            The color of the outline.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartHighlighterScript.AddPartHighlight(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Adds the specified part to list of parts to be highlighted.
            </summary>
      <param name="part">The part to be highlighted.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartHighlighterScript.AddPartOutline(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Adds the specified part to list of parts to be outlined.
            </summary>
      <param name="part">The part to be outlined.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartHighlighterScript.RemovePartHighlight(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Removes the specified part from list of parts to be highlighted.
            </summary>
      <param name="part">The part to be removed.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartHighlighterScript.RemovePartOutline(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Removes the specified part from list of parts to be outlined.
            </summary>
      <param name="part">The part to be removed.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartHighlighterScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartHighlighterScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartHighlighterScript.OnRenderImage(UnityEngine.RenderTexture,UnityEngine.RenderTexture)">
      <summary>
            Called when the image is rendered.
            </summary>
      <param name="source">The source render texture.</param>
      <param name="destination">The destination render texture.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartHighlighterScript.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartLoader">
      <summary>
            A utility class used for loading part data at startup.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartLoader.LoadDesignerParts(System.Collections.Generic.IEnumerable{System.String},Jundroo.ModTools.ILoadedMod)">
      <summary>
            Loads the designer parts defined by the specified collection of designer part XML.
            </summary>
      <param name="designerPartXml">The collection of designer part XML to load.</param>
      <param name="mod">The mod from which the designer parts are being loaded or <c>null</c> for stock designer parts.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartLoader.LoadParts(System.Collections.Generic.IEnumerable{System.String},Jundroo.ModTools.ILoadedMod)">
      <summary>
            Loads the parts defined by the specified collection of part XML.
            </summary>
      <param name="partXml">The collection of part XML to load.</param>
      <param name="mod">The mod from which the parts are being loaded or <c>null</c> for stock parts.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartLoader.LoadDesignerParts(System.Collections.Generic.IEnumerable{System.Xml.Linq.XDocument},Jundroo.ModTools.ILoadedMod)">
      <summary>
            Loads the designer parts defined by the specified collection of designer part XML.
            </summary>
      <param name="designerPartXml">The collection of designer part XML to load.</param>
      <param name="mod">The mod from which the designer parts are being loaded or <c>null</c> for stock designer parts.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartLoader.LoadDesignerParts(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.String,Jundroo.ModTools.ILoadedMod)">
      <summary>
            Loads the designer parts defined by the specified collection of designer part XML.
            </summary>
      <param name="designerParts">The collection of designer part XML to load.</param>
      <param name="partId">The part ID for which the designer parts are being loaded or <c>null</c> if not associated with a single part.</param>
      <param name="mod">The mod from which the designer parts are being loaded or <c>null</c> for stock designer parts.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartMaterialScript">
      <summary>
            Script for setting the material of a part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._tempUVList">
      <summary>
            The cached and reusable UV list.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._foundAttachPoint">
      <summary>
            A value indicating whether the part has found an attach point while dragging in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._isCollidingInDesigner">
      <summary>
            The flag if the part is colliding in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._isDisconnected">
      <summary>
            The flag if the part is currently not connected to the main part in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._isHidden">
      <summary>
            The hidden flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._isHighlighted">
      <summary>
            A value indicating whether the part is highlighted by the mouse cursor in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._isSelected">
      <summary>
            The selected flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._overrideMaterials">
      <summary>
            The override materials.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._part">
      <summary>
            The part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._partGroupPartMaterialData">
      <summary>
            The part group part material data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._rendererMaps">
      <summary>
            The renderers for the part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._themeData">
      <summary>
            The theme associated with the part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._updateMaterial">
      <summary>
            A queuing mechanism used to force materials to update on next Update call.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript._visible">
      <summary>
            The visible flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.FoundAttachPoint">
      <summary>
            Gets or sets a value indicating whether the part has found an attach point while dragging in the designer.
            </summary>
      <value>
        <c>true</c> if the part has found an attach point while dragging in the designer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.IsCollidingInDesigner">
      <summary>
            Gets or sets a value indicating whether this part is colliding in the designer.
            </summary>
      <value>
        <c>true</c> if this part is colliding in the designer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.IsDisconnected">
      <summary>
            Gets or sets a value indicating whether part is disconnected.
            </summary>
      <value>
        <c>true</c> if disconnected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.IsHidden">
      <summary>
            Gets or sets a value indicating whether this instance is hidden.
            </summary>
      <value>
        <c>true</c> if this instance is hidden; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.IsHighlighted">
      <summary>
            Gets or sets a value indicating whether the part is highlighted.
            </summary>
      <value>
        <c>true</c> if the part is highlighted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.IsSelected">
      <summary>
            Gets or sets a value indicating whether the part is selected.
            </summary>
      <value>
        <c>true</c> if the part is selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.IsVisible">
      <summary>
            Gets or sets a value indicating whether this part material is visible.
            </summary>
      <value>
        <c>true</c> if the part is visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.MaterialIndexPrimary">
      <summary>
            Gets the primary material index.
            </summary>
      <value>
            The primary material index.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.MaterialIndexSecondary">
      <summary>
            Gets the secondary material index.
            </summary>
      <value>
            The secondary material index.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.OverrideMaterials">
      <summary>
            Gets or sets the override materials.
            </summary>
      <value>
            The override materials.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.PartGroup">
      <summary>
            Gets the part group to which this part belongs.
            </summary>
      <value>
            The part group to which this part belongs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.ModApi#Craft#Parts#IPartMaterialScript#PartGroup">
      <summary>
            Gets the part group to which this part belongs.
            </summary>
      <value>
            The part group to which this part belongs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaps">
      <summary>
            Gets the renderer maps.
            </summary>
      <value>
            The renderer maps.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.AddRenderer(UnityEngine.Renderer,System.Nullable{System.Boolean},System.Nullable{System.Boolean},UnityEngine.Material[])">
      <summary>
            Adds the renderer to the list of renderers for this part.
            </summary>
      <param name="renderer">The renderer to add.</param>
      <param name="excludeFromCombine">If set to <c>true</c>, the renderer will be excluded from mesh combining.</param>
      <param name="excludeFromDrag">If set to <c>true</c>, the renderer will be excluded from the drag model (unless the mesh is combined).</param>
      <param name="originalMaterials">The original materials.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.GetEligibleRenderersForCombine">
      <summary>
            Gets the renderers eligible for combining into a single mesh.
            </summary>
      <returns>The list of eligible renderers.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.Initialize(ModApi.Craft.ICraftScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Initializes the specified craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="partScript">The part script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.OnMovedToNewPartScript(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the part is moved to a new craft script.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.OnPartGroupInitialized(Assets.Scripts.Craft.PartGroupScript.MaterialPartData)">
      <summary>
            Called when the part group to which this part belongs is initialized.
            </summary>
      <param name="partMaterialData">The part group material data for this part.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RemoveRenderer(UnityEngine.Renderer)">
      <summary>
            Removes the renderer.
            </summary>
      <param name="renderer">The renderer.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RemoveRenderer(ModApi.Craft.Parts.IRendererMaterialMap)">
      <summary>
            Removes the renderer.
            </summary>
      <param name="renderer">The renderer to remove.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RestoreOriginalMaterials">
      <summary>
            Restores the original materials.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.SetMaterial(System.Int32,System.Int32)">
      <summary>
            Sets the material for the specified level.
            </summary>
      <param name="material">The id of the material to set.</param>
      <param name="level">The level at which the material is being set.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.UpdateTextureData">
      <summary>
            Updates the texture data for all renderers.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.UpdateTextureData(ModApi.Craft.Parts.IRendererMaterialMap,UnityEngine.Vector4)">
      <summary>
            Updates the texture data for the specified renderer.
            </summary>
      <param name="rendererMap">The renderer map for which to update texture data.</param>
      <param name="uvData">The texture UV data to apply to every vertex.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.ApplyMaterials(ModApi.Craft.Parts.IRendererMaterialMap)">
      <summary>
            Applies the part material settings to the specified renderer for all material levels.
            </summary>
      <param name="rendererMap">The renderer map.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.ApplyMaterials(System.Int32,ModApi.Craft.Parts.IRendererMaterialMap)">
      <summary>
            Applies the part material settings to the specified renderer for the specified material level.
            </summary>
      <param name="level">The level for which to apply material settings.</param>
      <param name="rendererMap">The renderer map.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.Awake">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.BuildTextureUVData(System.Int32)">
      <summary>
            Builds the texture UV data.
            </summary>
      <param name="subpartIndex">Index of the subpart.</param>
      <returns>The texture UV data to use for every vertex in a renderer.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.HasAttachedMaterials">
      <summary>
            Determines whether part uses special materials when attached.
            </summary>
      <returns>
        <c>true</c> if this part uses special materials when attached; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.HasCollisionMaterials">
      <summary>
            Determines whether part uses special materials when it is colliding with another part in the designer.
            </summary>
      <returns>
        <c>true</c> if this part uses special materials when it is colliding with another part in the designer; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.HasCustomMaterials">
      <summary>
            Determines whether this part has one or more custom materials.
            </summary>
      <returns>
        <c>true</c> if this part has one or more custom materials; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.HasHighlightedMaterials">
      <summary>
            Determines whether part uses special materials when highlighted.
            </summary>
      <returns>
        <c>true</c> if this part uses special materials when highlighted; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.HasSelectedMaterials">
      <summary>
            Determines whether part uses special materials when selected.
            </summary>
      <returns>
        <c>true</c> if this part uses special materials when selected; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.UpdateMaterial">
      <summary>
            Updates this material.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.UpdateTextureData(ModApi.Craft.Parts.IRendererMaterialMap)">
      <summary>
            Updates the texture data for the specified renderer.
            </summary>
      <param name="rendererMap">The renderer map for which to update texture data.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap">
      <summary>
            The map of a material to a renderer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap._currentMaterials">
      <summary>
            The current materials of the renderer (assuming they were last set by this object).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap._getMesh">
      <summary>
            The mesh getter function.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap._materialSwapBuffer">
      <summary>
            A temporary material array used to swapping out materials (avoids excessive garbage collection).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap._tempRenderEnabledState">
      <summary>
            The original enabled state of the renderer before the current temporary render process began.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap._tempRenderInProgress">
      <summary>
            A value indicating whether or not a temporary render is in progress.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap._tempRenderOriginalLayer">
      <summary>
            The original layer the renderer game object was in before the current temporary render process began.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap._tempRenderOriginalMaterials">
      <summary>
            The original materials of the renderer before the current temporary render process began.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.#ctor(Assets.Scripts.Craft.Parts.PartMaterialScript,UnityEngine.Renderer,UnityEngine.Material[],System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap" /> class.
            </summary>
      <param name="partMaterialScript">The part material script.</param>
      <param name="renderer">The renderer.</param>
      <param name="originalMaterials">The original materials.</param>
      <param name="excludeFromMeshCombine">A value indicating whether the renderer should be excluded from mesh combines.</param>
      <param name="excludeFromDrag">If set to <c>true</c>, the renderer will be excluded from the drag model (unless the mesh is combined).</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.ExcludeFromDragModel">
      <summary>
            Gets a value indicating whether to exclude this renderer from the drag model.
            </summary>
      <value>
        <c>true</c> if the renderer should be excluded from the drag model; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.ExcludeFromMeshCombine">
      <summary>
            Gets a value indicating whether the renderer should be excluding from mesh combining.
            </summary>
      <value>
        <c>true</c> if the renderer should be excluding from mesh combining; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.HasCustomMaterial">
      <summary>
            Gets a value indicating whether this instance has custom material.
            </summary>
      <value>
        <c>true</c> if this instance has custom material; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.Mesh">
      <summary>
            Gets the mesh component.
            </summary>
      <value>
            The mesh component.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.OriginalMaterials">
      <summary>
            Gets the original materials.
            </summary>
      <value>
            The original materials.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.PartMaterialScript">
      <summary>
            Gets the part material script.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.ModApi#Craft#Parts#IRendererMaterialMap#PartMaterialScript">
      <summary>
            Gets the part material script.
            </summary>
      <value>
            The part material script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.Renderer">
      <summary>
            Gets the renderer component.
            </summary>
      <value>
            The renderer component.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.Destroy">
      <summary>
            Destroys the renderer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.EndTempRender">
      <summary>
            Ends the current temporary render process (if any).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.ReplaceOriginalMaterials(UnityEngine.Material,System.Boolean)">
      <summary>
            Replaces the original materials with the specified material.
            </summary>
      <param name="material">The material for which to replace the original materials.</param>
      <param name="setAsCurrent">If set to <c>true</c>, the new material will be set as the current active material.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.SetRendererMaterial(UnityEngine.Material)">
      <summary>
            Sets the renderer material.
            </summary>
      <param name="material">The material.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.SetRendererMaterial(UnityEngine.Material[])">
      <summary>
            Sets the renderer materials.
            </summary>
      <param name="materials">The materials.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.StartTempRender(System.Int32,UnityEngine.Material)">
      <summary>
            Tells the renderer to prepare for a temporary render using the specified layer and material.
            This is used to temporarily change the layer and material of a part renderer, allowing it to
            easily return to its prior state with a call to EndTempRender().
            </summary>
      <param name="layer">The layer in to which to move the renderer's game object.</param>
      <param name="material">The material to use for the temporary render.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartMaterialScript.RendererMaterialMap.SetMaterials(UnityEngine.Material[],System.Boolean)">
      <summary>
            Sets the materials for the renderer to the specified materials.
            </summary>
      <param name="materials">The new materials for the renderer.</param>
      <param name="clearArray">If set to <c>true</c>, the material array will be nulled out after the materials are set.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartScript">
      <summary>
            The script attached to every instantiated part in the game.
            </summary>
      <seealso cref="T:ModApi.GameLoop.MonoBehaviourBase" />
      <seealso cref="T:ModApi.Craft.Parts.IPartScript" />
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightFixedUpdate" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._attachPointsGameObject">
      <summary>
            The attach points transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._bodyScript">
      <summary>
            The body script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._commandPod">
      <summary>
            The command pod currently controlling this part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._designerInteractionMode">
      <summary>
            The designer interaction mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._inertiaTensorColliders">
      <summary>
            The colliders to enable/disable during an inertia tensor calculation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._lastExplodeButtonClick">
      <summary>
            The time stamp of the last click on the explode part button in the inspector window.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._modifiers">
      <summary>
            The part modifiers.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._reentryEffectStrength">
      <summary>
            The reentry effect strength.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._reentryEffectStrengthOverride">
      <summary>
            A value indicating whether the reentry effect and vapor trail strengths should be update
            automatically or (if <c>true</c>), updated manually via the Unity editor inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._referenceFrame">
      <summary>
            The reference frame
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartScript._vaporTrailStrength">
      <summary>
            The vapor trail strength.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.PartScript.CommandPodChanged">
      <summary>
            Occurs when the part's command pod has changed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.PartScript.ConnectedToPart">
      <summary>
            Occurs when the part is connected to another part.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.PartScript.MovedToNewCraft">
      <summary>
            Occurs when this part is moved to a new craft.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.PartScript.PartDestroyed">
      <summary>
            Occurs when the part is destroyed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.AttachPointScripts">
      <summary>
            Gets the attach point scripts, which are only created and used in the designer.
            </summary>
      <value>
            The attach point scripts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.BatteryFuelSource">
      <summary>
            Gets the battery fuel for the part. The battery source exists on the part's command pod. If
            the part does not have a command pod it will return an empty fuel source. This property is
            for convenience so the caller does not need to check for null command pods or a null fuel source.
            </summary>
      <value>
            The battery fuel source for the part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.BodyScript">
      <summary>
            Gets or sets the part's body script.
            </summary>
      <value>
            The body script,
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.Colliders">
      <summary>
            Gets the collection of colliders used for the part.
            </summary>
      <value>
            The collection of colliders used for the part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.CollisionSoundsEnabled">
      <summary>
            Gets or sets a value indicating whether collision sounds are enabled for this part.
            </summary>
      <value>
        <c>true</c> if collision sounds are enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.CommandPod">
      <summary>
            Gets the command pod currently controlling this part.
            </summary>
      <value>
            The command pod.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.CraftScript">
      <summary>
            Gets the craft script that this part belongs to.
            </summary>
      <value>
            The craft script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.Data">
      <summary>
            Gets or sets the part data.
            </summary>
      <value>
            The part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.DesignerInteractionMode">
      <summary>
            Gets or sets the interaction mode for this part in the designer.
            </summary>
      <value>
            The designer interaction mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.Disconnected">
      <summary>
            Gets or sets a value indicating whether this part is disconnected from the craft.
            </summary>
      <value>
        <c>true</c> if disconnected from the craft; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.FluidDisplacementVolume">
      <summary>
            Gets the volume of fluid which would be displaced by this part if it were fully submerged.  This may just be the collider's volume, or something less for porous objects.
            </summary>
      <value>
            The volume of fluid which would be displaced by this part if it were fully submerged.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.GameObject">
      <summary>
            Gets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.ModApi#Flight#UI#INavSphereTarget#IsDestroyed">
      <summary>
            Gets a value indicating whether this instance is destroyed.
            </summary>
      <value>
        <c>true</c> if this instance is destroyed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.Modifiers">
      <summary>
            Gets the part modifiers.
            </summary>
      <value>
            The part modifiers.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.ModApi#Flight#UI#INavSphereTarget#Name">
      <summary>
            Gets the name of the orbit node.
            </summary>
      <value>
            The name of the orbit node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.ModApi#Flight#UI#INavSphereTarget#OrbitNode">
      <summary>
            Gets the orbit node associated with this nav sphere target.
            </summary>
      <value>
            The orbit node associated with this nav sphere target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.ModApi#Flight#UI#INavSphereTarget#Parent">
      <summary>
            Gets the parent planet.
            </summary>
      <value>
            The parent planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.PartGroup">
      <summary>
            Gets the part group.
            </summary>
      <value>
            The part group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.PartMaterialScript">
      <summary>
            Gets or sets the part material script.
            </summary>
      <value>
            The part material script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.ModApi#Flight#UI#INavSphereTarget#Position">
      <summary>
            Gets the position relative to it's parent.
            </summary>
      <value>
            The position the position relative to it's parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.PrimaryCollider">
      <summary>
            Gets the primary collider for the part.
            </summary>
      <value>
            The primary collider for the part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.ReEntryEffectStrength">
      <summary>
            Gets the get re entry effect strength. Values are between 0 and 1.
            </summary>
      <value>
            The visual effect strength.  Values are between 0 and 1.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.ModApi#Flight#UI#INavSphereTarget#SolarPosition">
      <summary>
            Gets the position of this planet relative to the closest sun.
            </summary>
      <value>
            The solar position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.SymmetrySlice">
      <summary>
            Gets or sets the symmetry slice, which will only be set in the Design scene.
            </summary>
      <value>
            The symmetry slice.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.Temperature">
      <summary>
            Gets or sets the current temperature, in Kelvin.
            </summary>
      <value>
            The part's current temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.ThermalMass">
      <summary>
            Gets the thermal mass.
            Note: This mass is scaled by Constants.MassScale.
            Note: This mass may be out of date because it is only updated
            when the craft structure changes. For our thermal models, it is
            close enough, even if it is a bit outdated.
            </summary>
      <value>
            The thermal mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.Transform">
      <summary>
            Gets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.VaporTrailStrength">
      <summary>
            Gets the vapor trail strength.
            </summary>
      <value>
            The vapor trail strength.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.ModApi#Flight#UI#INavSphereTarget#Velocity">
      <summary>
            Gets the velocity relative to it's parent.
            </summary>
      <value>
            The velocity relative to it's parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.WaterPhysics">
      <summary>
            Gets or sets the water physics for this part.
            </summary>
      <value>
            The water physics for this part.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.ConnectParts(ModApi.Craft.Parts.AttachPointScript,ModApi.Craft.Parts.AttachPointScript,System.Boolean)">
      <summary>
            Creates a part connection between the two parts. If a part connection already exists, it is updated with the new
            attachment between these two attach points.
            </summary>
      <param name="attachPointScriptA">The attach point A script.</param>
      <param name="attachPointScriptB">The attach point B script.</param>
      <param name="processingSymmetry">
            If set to <c>true</c>, then it indicates this part connection is the result of
            the processing symmetry.
            </param>
      <returns>
            The part connection.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.Activate">
      <summary>
            Called when the part is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.AssignToPartGroup(Assets.Scripts.Craft.PartGroupScript)">
      <summary>
            Assigns this part to the part group.
            </summary>
      <param name="partGroup">The part group.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.CreateAttachPoints">
      <summary>
            Creates the attach point scripts. Only executed in the designer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.Deactivate">
      <summary>
            Called when a part is deactivated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.ModApi#GameLoop#Interfaces#IFlightPostStart#FlightPostStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on
            this object but after running the current set of 'FlightStart' methods.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.GenerateInspectorModel">
      <summary>
            Generates an inspector model for this part.
            </summary>
      <returns>The inspector model.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.GetModifier``1">
      <summary>
            Gets the modifier script of the specified type, or null if it does not exist.
            </summary>
      <typeparam name="T">The modifier type.</typeparam>
      <returns>The modifier script, or null if it does not exist.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.GetModifiers``1">
      <summary>
            Gets the modifiers of the type.
            </summary>
      <typeparam name="T">The modifier type.</typeparam>
      <returns>The list of modifiers of the type.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.GetModifiersWithInterface``1">
      <summary>
            Gets the modifier scripts of the specified type, or null if it does not exist.
            </summary>
      <typeparam name="T">The modifier type.</typeparam>
      <returns>The modifier scripts, or null if it does not exist.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.GetModifierWithInterface``1">
      <summary>
            Gets the modifier script of the specified type, or null if it does not exist.
            </summary>
      <typeparam name="T">The modifier type.</typeparam>
      <returns>The modifier script, or null if it does not exist.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.HasModifier``1">
      <summary>
            Determines whether this instance has modifier.
            </summary>
      <typeparam name="T">The type of the modifier script.</typeparam>
      <returns>True if the part has the modifier, or false otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.Initialize(ModApi.Craft.Parts.PartData,ModApi.Craft.ICraftScript)">
      <summary>
            Initializes the specified craft.
            </summary>
      <param name="part">The part.</param>
      <param name="craftScript">The craft.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.InitializeColliders">
      <summary>
            Initializes (or re-initializes) the colliders for a part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnCommandPodChanged">
      <summary>
            Called when the command pod has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnCraftLoaded(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Called when the craft has finished loading.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="movedToNewCraft">If set to <c>true</c> an existing part is being moved to a new craft, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnDesignerPullout(ModApi.Craft.Assembly)">
      <summary>
            Called when a part is pulled out in the designer.  This is called before DesignerStart() and while the previous part is still selected.
            </summary>
      <param name="assembly">The assembly this part is within (will contain all parts if contained in a sub-assembly).</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnInertiaTensorCalculation(System.Boolean)">
      <summary>
            Called when the inertia tensor calculation is starting or ending.
            </summary>
      <param name="starting">if set to <c>true</c> then the calculation is about to start. Otherwise it is ending.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnModifiersCreated">
      <summary>
            Called after a part's modifiers have been created.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnMovedToNewCraft(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the part has been moved to a new craft script.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnNodeLoaded">
      <summary>
            Called after the craft that this part belongs to has been node has been loaded, and assigned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnPartDestroyed">
      <summary>
            Called when the part is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.RegisterInertiaTensorCollider(UnityEngine.GameObject,System.Boolean)">
      <summary>
            Registers the collider with the part script to ensure that it is enabled (or disabled) when the body calculates
            inertia tensors. After the inertia tensors are calculated, the enabled state of the collider will be restored.
            Inertia tensors should only be calculated on body creation, which happens when a craft is loaded and also when
            a craft breaks apart.
            </summary>
      <param name="colliderGameObject">The collider game object.</param>
      <param name="required">if set to <c>true</c> then the collider is required to be enabled. Otherwise, the
            collider is required to be disabled.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.TakeDamage(System.Single)">
      <summary>
            Deals the specified amount of damage to the part. If it exceeds its max allowable damage, it
            will explode.
            </summary>
      <param name="damage">The damage.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.UnregisterInertiaTensorCollider(UnityEngine.GameObject)">
      <summary>
            Unregisters the collider from inertia tensor calculation enabling/disabling.
            </summary>
      <param name="colliderGameObject">The collider game object.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.UpdateAttachPoints">
      <summary>
            Updates the attach points.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.UpdateReentryEffectValues(System.Single,System.Single)">
      <summary>
            Updates the reentry effect values.
            </summary>
      <param name="reentryEffectStrength">The reentry effect strength.</param>
      <param name="vaporTrailStrength">The vapor trail strength.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.CalculateDisplacementVolume">
      <summary>
            Calculates the displacement volume.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.InitializeMaterials">
      <summary>
            Initializes the materials for the part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.InitializeWaterPhysics">
      <summary>
            Initializes the water physics.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnExplodePartClicked">
      <summary>
            Called when the explode part button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnSetCameraFocus(ModApi.Ui.Inspector.IconButtonModel)">
      <summary>
            Called when setting the camera focus.
            </summary>
      <param name="button">The button.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.OnToggleTargetClicked">
      <summary>
            Called when the toggle target button has been clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.ReCalculateThermalMass">
      <summary>
            Recalculates the thermal mass.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.SelectCommandPodClicked">
      <summary>
            Called when the select command pod button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartScript.ToggleActivationStateFromInspector">
      <summary>
            Method to toggle the activation state from the inspector.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartScript.InertiaTensorCollider">
      <summary>
            Contains information about a collider that registered for inertia calculation.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.InertiaTensorCollider.EnabledStateToggled">
      <summary>
            Gets or sets a value indicating whether this collider was toggled during the inertia tensor calculation.
            </summary>
      <value>
        <c>true</c> if [enabled state toggled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.InertiaTensorCollider.GameObject">
      <summary>
            Gets or sets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartScript.InertiaTensorCollider.RequiredForCalculation">
      <summary>
            Gets or sets a value indicating whether the collider is required for calculation.
            </summary>
      <value>
        <c>true</c> if [required for calculation]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartStateColors">
      <summary>
            The object containing the color information for various part states.
            </summary>
      <seealso cref="T:UnityEngine.ScriptableObject" />
      <seealso cref="T:ModApi.Craft.Parts.IPartStateColors" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartStateColors._attached">
      <summary>
            The attached color for parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartStateColors._colliding">
      <summary>
            The colliding color for parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartStateColors._disconnectedPrimary">
      <summary>
            The primary disconnected color for parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartStateColors._disconnectedSecondary">
      <summary>
            The secondary disconnected color for parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartStateColors._highlighted">
      <summary>
            The highlighted color for parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartStateColors._selected">
      <summary>
            The selected color for parts.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartStateColors.Attached">
      <summary>
            Gets the attached color for parts.
            </summary>
      <value>
            The attached color for parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartStateColors.Colliding">
      <summary>
            Gets the colliding color for parts.
            </summary>
      <value>
            The colliding color for parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartStateColors.DisconnectedPrimary">
      <summary>
            Gets the primary disconnected color for parts.
            </summary>
      <value>
            The primary disconnected color for parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartStateColors.DisconnectedSecondary">
      <summary>
            Gets the secondary disconnected color for parts.
            </summary>
      <value>
            The secondary disconnected color for parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartStateColors.Highlighted">
      <summary>
            Gets the highlighted color for parts.
            </summary>
      <value>
            The highlighted color for parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartStateColors.Selected">
      <summary>
            Gets the selected color for parts.
            </summary>
      <value>
            The selected color for parts.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.PartWaterPhysics">
      <summary>
            Provides water physics for PartScripts
            </summary>
      <seealso cref="!:Assets.Scripts.Craft.WaterPhysics&lt;Assets.Scripts.Craft.Parts.PartWaterPhysics&gt;" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.PartWaterPhysics._partScript">
      <summary>
            The part script
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartWaterPhysics.#ctor(Assets.Scripts.Craft.Parts.PartScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.PartWaterPhysics" /> class.
            </summary>
      <param name="partScript">The body script.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartWaterPhysics.BodyScript">
      <summary>
            Gets the body script.
            </summary>
      <value>
            The body script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartWaterPhysics.PartScript">
      <summary>
            Gets the part script.
            </summary>
      <value>
            The part script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartWaterPhysics.PrecisionMode">
      <summary>
            Gets or sets the precision mode.
            </summary>
      <value>
            The precision mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.PartWaterPhysics.UnderWaterAmount">
      <summary>
            Gets or sets the amount that this body is under water, from 0 to 1.  Zero meaning not under water at all, and one meaning fully submerged.
            </summary>
      <value>
            The amount that this body is under water, from 0 to 1.  Zero meaning not under water at all, and one meaning fully submerged.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartWaterPhysics.Update">
      <summary>
            Updates the water physics for this object.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartWaterPhysics.CalculateMaxDisplacementVolume">
      <summary>
            Calculates the displacement volume of this part's collider.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.PartWaterPhysics.CalculateUnderwaterPercent">
      <summary>
            Calculates the underwater percent.
            </summary>
      <returns>The current under-water percent for this part.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Styles.PartStyle">
      <summary>
            A class containing information related to a part style.
            </summary>
      <seealso cref="T:ModApi.Craft.Parts.Styles.IPartStyle" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyle._data">
      <summary>
            The part style data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyle._textures">
      <summary>
            The collection of texture styles configured for this part style.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyle.#ctor(System.String,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{Assets.Scripts.Craft.Parts.Styles.PartTextureStyle},System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Styles.PartStyle" /> class.
            </summary>
      <param name="id">The style identifier.</param>
      <param name="partId">The part identifier.</param>
      <param name="subpartIndex">The subpart index.</param>
      <param name="displayName">The display name.</param>
      <param name="data">The style data.</param>
      <param name="textureStyles">The texture styles.</param>
      <param name="invalid">If set to <c>true</c>, this indicates if the <see cref="T:Assets.Scripts.Craft.Parts.Styles.PartStyle" /> is invalid.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyle.Data">
      <summary>
            Gets the part style data.
            </summary>
      <value>
            The part style data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyle.DisplayName">
      <summary>
            Gets the display name of the part style.
            </summary>
      <value>
            The display name of the part style.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyle.Id">
      <summary>
            Gets the identifier of the part style.
            </summary>
      <value>
            The identifier of the part style.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyle.Invalid">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Craft.Parts.Styles.PartStyle" /> is invalid.
            </summary>
      <value>
        <c>true</c> if invalid; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyle.PartId">
      <summary>
            Gets the part identifier.
            </summary>
      <value>
            The part identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyle.SubpartIndex">
      <summary>
            Gets the subpart index.
            </summary>
      <value>
            The subpart index.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyle.Textures">
      <summary>
            Gets the collection of texture styles configured for this part style.
            </summary>
      <value>
            The collection of texture styles configured for this part style.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyle.GetData``1(System.String,``0,System.Boolean)">
      <summary>
            Gets the style data with the specified key.
            </summary>
      <typeparam name="T">The type of the data to get.</typeparam>
      <param name="key">The data key.</param>
      <param name="defaultValue">The default value if the data could not be found.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged if the value cannot be found.</param>
      <returns>The requested data value.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyle.CloneWithSharedData(System.String,System.Boolean)">
      <summary>
            Clones the part style, sharing data (collection/dictionary instances) with the original part style.
            </summary>
      <param name="styleIdAndDisplayName">The style identifier and display name for the new cloned style.</param>
      <param name="invalid">A value indicating if the new cloned style is considered invalid (<c>true</c>).</param>
      <returns>The cloned part style.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyle.Update(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{Assets.Scripts.Craft.Parts.Styles.PartTextureStyle})">
      <summary>
            Updates the part style with the specified data.
            </summary>
      <param name="displayName">The display name.</param>
      <param name="data">The style data.</param>
      <param name="textureStyles">The texture styles.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript">
      <summary>
            A class that manages part styles.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:ModApi.Craft.Parts.Styles.IPartStyleManager" />
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureResourcesRootPath">
      <summary>
            The texture resources root path.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._emptyPartStyleList">
      <summary>
            An empty reusable list of part styles.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._emptyPartTextureStyleList">
      <summary>
            An empty reusable list of part texture styles.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._craftQualitySettings">
      <summary>
            The craft quality settings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._detailTextures">
      <summary>
            The collection of detail texture data keyed by their texture id.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._detailTextureSize">
      <summary>
            The size of the detail textures.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._normalMapTextureSize">
      <summary>
            The size of the normal map textures.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._normalTextures">
      <summary>
            The collection of normal map texture data keyed by their texture id.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._partStyles">
      <summary>
            The collection of part styles keyed by part ID.
            The value is stored as a list of part style sets, ordered sequentially by their subpart index.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._supportsModTextures">
      <summary>
            A value indicating whether the current device supports mod textures.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._textureArraysNeedRebuilt">
      <summary>
            A value indicating whether the texture arrays need rebuilt.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._texturePlatform">
      <summary>
            The texture platform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript._textureStyles">
      <summary>
            The collection of texture styles keyed by their style id.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureArraysChanged">
      <summary>
            Occurs when the texture arrays have changed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTexturePlatformType">
      <summary>
            An enumeration defining the different platforms as far as the textures are concerned.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTexturePlatformType.Standalone">
      <summary>
            The standalone platform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTexturePlatformType.Android">
      <summary>
            The Android platform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTexturePlatformType.iOS">
      <summary>
            The iOS platform.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTextureSize">
      <summary>
            An enumeration defining the valid part texture sizes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTextureSize._256">
      <summary>
            Low resolution.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTextureSize._512">
      <summary>
            Medium resolution.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTextureSize._1024">
      <summary>
            High resolution.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.DefaultDetailTextureId">
      <summary>
            Gets the default detail texture identifier.
            </summary>
      <value>
            The default detail texture identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.DefaultNormalMapTextureId">
      <summary>
            Gets the default normal map texture identifier.
            </summary>
      <value>
            The default normal map texture identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.DefaultStyle">
      <summary>
            Gets the default style.
            </summary>
      <value>
            The default style.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.DefaultTextureStyle">
      <summary>
            Gets the default texture style.
            </summary>
      <value>
            The default texture style.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.DetailTextures">
      <summary>
            Gets the detail texture array.
            </summary>
      <value>
            The detail texture array.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.DetailTexturesEnabled">
      <summary>
            Gets a value indicating whether detail textures are enabled.
            </summary>
      <value>
        <c>true</c> if detail textures are enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.DetailTextureSize">
      <summary>
            Gets the size of the detail textures.
            </summary>
      <value>
            The size of the detail textures.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.EditorMode">
      <summary>
            Gets a value indicating whether the script is running entirely in editor mode (not playing).
            </summary>
      <value>
        <c>true</c> if the script is running entirely in editor mode (not playing); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.ModTexturesLoaded">
      <summary>
            Gets a value indicating whether mod textures have been loaded.
            </summary>
      <value>
        <c>true</c> if mod textures have been loaded; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.NormalMapsEnabled">
      <summary>
            Gets a value indicating whether normal maps are enabled.
            </summary>
      <value>
        <c>true</c> if normal maps are enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.NormalMapTextures">
      <summary>
            Gets the normal map texture array.
            </summary>
      <value>
            The normal map texture array.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.NormalMapTextureSize">
      <summary>
            Gets the size of the normal map textures.
            </summary>
      <value>
            The size of the normal map textures.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.RuntimeCreation">
      <summary>
            Gets a value indicating whether the textures arrays are created at runtime.
            </summary>
      <value>
        <c>true</c> if the textures arrays are created at runtime; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.SupportsModTextures">
      <summary>
            Gets a value indicating whether the current device supports mod textures.
            </summary>
      <value>
        <c>true</c> if the current device supports mod textures; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TexturePlatform">
      <summary>
            Gets the texture platform.
            </summary>
      <value>
            The texture platform.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.Create(UnityEngine.GameObject)">
      <summary>
            Creates the style manager object.
            </summary>
      <param name="parent">The parent object.</param>
      <returns>The style manager.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.GetDetailTextureIndex(System.String)">
      <summary>
            Gets the index of the specified detail texture in the texture array.
            </summary>
      <param name="textureId">The texture identifier.</param>
      <returns>
            The index of the specified detail texture in the texture array.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.GetNormalMapTextureIndex(System.String)">
      <summary>
            Gets the index of the specified normal map texture in the texture array.
            </summary>
      <param name="textureId">The texture identifier.</param>
      <returns>
            The index of the specified normal map texture in the texture array.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.GetStyle(System.String,System.Int32,System.String)">
      <summary>
            Gets the specified style. If the style could not be found, a default style will be returned.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="subpartIndex">The subpart index.</param>
      <param name="styleId">The style identifier.</param>
      <returns>
            The specified style or a default style.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.GetStyles(System.String,System.Int32)">
      <summary>
            Gets the styles for the specified part.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="subpartIndex">The subpart index.</param>
      <returns>
            The styles for the specified part.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.GetTextureStyle(System.String)">
      <summary>
            Gets the specified texture style, or <c>null</c> if it could not be found.
            </summary>
      <param name="id">The style identifier.</param>
      <returns>
            The specified texture style, or <c>null</c> if it could not be found.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.GetTextureStyles(System.String,System.Int32,System.String)">
      <summary>
            Gets the specified texture styles.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="subpartIndex">The subpart index.</param>
      <param name="styleId">The style identifier.</param>
      <returns>
            The specified texture styles.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadPartStyleExtensions(System.String)">
      <summary>
            Loads the specified part style extensions.
            </summary>
      <param name="xml">The part style extensions XML.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadPartStyles(System.String,System.Xml.Linq.XElement)">
      <summary>
            Loads the part styles for the specified part and part styles XML.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="styleXml">The part styles XML.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadTextureStyles(System.String,Jundroo.ModTools.ILoadedMod)">
      <summary>
            Loads the texture styles from the specified XML.
            </summary>
      <param name="xml">The part texture styles XML.</param>
      <param name="mod">The mod from which the texture are being loaded or <c>null</c> for stock textures.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.RebuildTextureArrays">
      <summary>
            Rebuilds the texture arrays based on the currently loaded part styles.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.RebuildTextureArraysIfNecessary">
      <summary>
            Rebuilds the texture arrays (only if they are out of date) based on the currently loaded part styles.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.UpdateTextureSettings(Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTexturePlatformType,Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTextureSize,Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTextureSize)">
      <summary>
            Updates the texture settings.
            This updates settings but has no real effect until the texture arrays are rebuilt (using these new settings).
            </summary>
      <param name="platform">The platform.</param>
      <param name="detailSize">The detail texture size.</param>
      <param name="normalMapSize">The normal map texture size.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.ApplyQualitySettings">
      <summary>
            Applies the current quality settings.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.CreateMissingStyle(System.String,System.Int32,System.String)">
      <summary>
            Creates a missing style for the specified part with the specified id.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="subpartIndex">The subpart index.</param>
      <param name="styleId">The style identifier.</param>
      <returns>An invalid style for the specified part with the specified id.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.CreateTextureArray(System.Collections.Generic.IReadOnlyDictionary{System.String,Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo},System.String,Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTextureSize)">
      <summary>
            Creates the texture array with the specified list of textures.
            </summary>
      <param name="textures">The textures from which to create the texture array.</param>
      <param name="defaultId">The default texture identifier.</param>
      <param name="textureSize">The part texture sizes.</param>
      <returns>The created texture array.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.GetStyleSet(System.String,System.Int32)">
      <summary>
            Gets the style set for the specified part/subpart.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="subpartIndex">The subpart index.</param>
      <returns>The style set for the specified part/subpart or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadDefaultStyles">
      <summary>
            Loads the default styles.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadStockTextureStyles">
      <summary>
            Loads the stock texture styles.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadStyle(System.String,System.String,System.Int32,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{Assets.Scripts.Craft.Parts.Styles.PartTextureStyle},System.Boolean)">
      <summary>
            Loads the specified part style.
            </summary>
      <param name="styleId">The style identifier.</param>
      <param name="partId">The part identifier.</param>
      <param name="subpartIndex">The subpart index.</param>
      <param name="displayName">The display name.</param>
      <param name="data">The style data.</param>
      <param name="textureStyles">The texture styles.</param>
      <param name="isStyleExtension">A value indicating whether the style being loaded is a part style extension.</param>
      <returns>The part style.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadStyleSet(System.String,System.Xml.Linq.XElement)">
      <summary>
            Loads the part style set from the specified XML.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="xml">The XML from which to load the part style set.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadTexture(Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo)">
      <summary>
            Loads the specified texture.
            </summary>
      <param name="texture">The texture to load.</param>
      <returns>The loaded texture.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadTextureStyle(System.Xml.Linq.XElement,Jundroo.ModTools.ILoadedMod)">
      <summary>
            Loads the texture style from the specified XML.
            </summary>
      <param name="xml">The XML from which to load the texture style.</param>
      <param name="mod">The mod in which the textures are located or <c>null</c> for stock textures.</param>
      <returns>The texture style that was loaded.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.LoadTextureStyle(System.String,System.String,ModApi.Craft.Parts.Styles.PartTextureStyleOptions,System.String,System.String,System.String,System.String,Jundroo.ModTools.ILoadedMod)">
      <summary>
            Loads the specified part texture style.
            </summary>
      <param name="id">The style identifier.</param>
      <param name="displayName">The display name.</param>
      <param name="options">The options.</param>
      <param name="detailId">The detail texture identifier.</param>
      <param name="normalId">The normal map texture identifier.</param>
      <param name="detailPath">The path to the detail texture.</param>
      <param name="normalPath">The path to the normal map texture.</param>
      <param name="mod">The mod in which the textures are located or <c>null</c> for stock textures.</param>
      <returns>The part texture style that was loaded.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.OnTextureQualityChanged(System.Object,System.EventArgs)">
      <summary>
            Called when the texture quality changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.UnloadTexture(UnityEngine.Texture2D,Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo)">
      <summary>
            Unloads the specified texture.
            </summary>
      <param name="texture">The texture to unload.</param>
      <param name="info">The texture info.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.UnloadTextureArrays">
      <summary>
            Unloads the texture arrays.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.UpdateQualitySettings">
      <summary>
            Updates the quality settings.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.UpdateTextureArray(UnityEngine.Texture2DArray,UnityEngine.Texture2D,Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo,Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartTextureSize)">
      <summary>
            Updates the texture array with the specified texture.
            </summary>
      <param name="array">The texture array to update.</param>
      <param name="texture">The texture with which to update the texture array.</param>
      <param name="info">The texture information.</param>
      <param name="size">The texture size.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet">
      <summary>
            A collection of part styles for a specific part/subpart.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet._invalidStyles">
      <summary>
            The collection of invalid part styles in this set.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet._styleMap">
      <summary>
            The collection of part styles in this set, keyed by style id.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet._styles">
      <summary>
            The collection of part styles in this set.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet.#ctor(System.String,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet" /> class.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="subpartIndex">Subpart index.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet.InvalidStyles">
      <summary>
            Gets the collection of invalid styles in this part style set.
            </summary>
      <value>
            The collection of invalid styles in this part style set.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet.PartId">
      <summary>
            Gets the part identifier.
            </summary>
      <value>
            The part identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet.Styles">
      <summary>
            Gets the collection of styles in this part style set.
            </summary>
      <value>
            The collection of styles in this part style set.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet.SubpartIndex">
      <summary>
            Gets the subpart index.
            </summary>
      <value>
            The subpart index.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet.Add(Assets.Scripts.Craft.Parts.Styles.PartStyle)">
      <summary>
            Adds the specified style to the set.
            </summary>
      <param name="style">The style to add.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.PartStyleSet.GetStyle(System.String)">
      <summary>
            Gets the style with the specified ID from the style set.
            </summary>
      <param name="styleId">The style identifier.</param>
      <returns>The requested style or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo">
      <summary>
            A class containing information about a texture associated with one or more styles that have been loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo.#ctor(System.String,System.String,System.Int32,Jundroo.ModTools.ILoadedMod)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo" /> class.
            </summary>
      <param name="id">The texture identifier.</param>
      <param name="path">The texture resource path.</param>
      <param name="index">The index of the texture in the texture array.</param>
      <param name="mod">The mod in which the texture is located (or <c>null</c> for stock textures).</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo.Id">
      <summary>
            Gets the texture identifier.
            </summary>
      <value>
            The texture identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo.Index">
      <summary>
            Gets the index of the texture in the texture array.
            </summary>
      <value>
            The index of the texture in the texture array
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo.Mod">
      <summary>
            Gets the mod in which the texture is located (or <c>null</c> for stock textures).
            </summary>
      <value>
            The mod in which the texture is located (or <c>null</c> for stock textures).
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartStyleManagerScript.TextureInfo.Path">
      <summary>
            Gets or sets the path of the texture.
            </summary>
      <value>
            The path of the texture.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.Parts.Styles.PartTextureStyle">
      <summary>
            A class containing information related to a part texture style.
            </summary>
      <seealso cref="T:ModApi.Craft.Parts.Styles.IPartTextureStyle" />
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartTextureStyle.#ctor(System.String,System.String,ModApi.Craft.Parts.Styles.PartTextureStyleOptions,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Parts.Styles.PartTextureStyle" /> class.
            </summary>
      <param name="id">The style identifier.</param>
      <param name="displayName">The display name.</param>
      <param name="options">The options.</param>
      <param name="detailTextureId">The detail texture identifier.</param>
      <param name="normalMapTextureId">The normal map texture identifier.</param>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartTextureStyle.DetailTextureId">
      <summary>
            Gets the detail texture identifier.
            </summary>
      <value>
            The detail texture identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartTextureStyle.DisplayName">
      <summary>
            Gets the display name.
            </summary>
      <value>
            The display name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartTextureStyle.Id">
      <summary>
            Gets the identifier of the texture style.
            </summary>
      <value>
            The identifier of the texture style.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartTextureStyle.NormalMapTextureId">
      <summary>
            Gets the normal map texture identifier.
            </summary>
      <value>
            The normal map texture identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Parts.Styles.PartTextureStyle.Options">
      <summary>
            Gets the texture style options.
            </summary>
      <value>
            The texture style options.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Parts.Styles.PartTextureStyle.Update(System.String,ModApi.Craft.Parts.Styles.PartTextureStyleOptions,System.String,System.String)">
      <summary>
            Updates the part texture style with the specified data.
            </summary>
      <param name="displayName">The display name.</param>
      <param name="options">The options.</param>
      <param name="detailTextureId">The detail texture identifier.</param>
      <param name="normalMapTextureId">The normal map texture identifier.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.ReflectionProbeScript">
      <summary>
            The script for managing the craft reflection probe.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Craft.ReflectionProbeScript._defaultTexture">
      <summary>
            The default texture for the reflection probe.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.ReflectionProbeScript._mapViewManager">
      <summary>
            The map view manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.ReflectionProbeScript._planet">
      <summary>
            The planet reference.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.ReflectionProbeScript._probe">
      <summary>
            The reflection probe.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.ReflectionProbeScript._quadsphereCullingMask">
      <summary>
            The quadsphere culling mask for real time reflections.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.ReflectionProbeScript._realtimeReflections">
      <summary>
            The current real time reflections setting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.ReflectionProbeScript._scaledSpaceCullingMask">
      <summary>
            The scaled space culling mask for real time reflections.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.ApplyQualitySettings(ModApi.Settings.CraftQualitySettings.CraftReflectionsQuality)">
      <summary>
            Applies the quality settings.
            </summary>
      <param name="qualitySetting">The quality setting.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.OnMapViewForegroundStateChanged(System.Boolean)">
      <summary>
            Called when MapView's foreground state has changed.
            </summary>
      <param name="foreground">If set to <c>true</c> MapView is in the foreground and is visible, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.OnReflectionQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.CraftQualitySettings.CraftReflectionsQuality})">
      <summary>
            Called when the craft reflection quality changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;CraftQualitySettings.CraftReflectionsQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.OnValidate">
      <summary>
            This function is called when the script is loaded or a value is changed in the inspector (Called in the editor only) .
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.QuadSphereEnabledChanged(System.Object,ModApi.Planet.Events.PlanetQuadSphereEventArgs)">
      <summary>
            Called whenever the enabled state of the quadsphere changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Planet.Events.PlanetQuadSphereEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.ReflectionProbeScript.Update(System.Boolean)">
      <summary>
            Updates the reflection probe for the current situation and settings.
            </summary>
      <param name="quadsphereVisible">
        <c>true</c> if a quadsphere is visible.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Theme">
      <summary>
            A class containing functionality and materials related to a theme.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme._defaultPartMaterialInstances">
      <summary>
            The list of default part material instances.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme._disposed">
      <summary>
            A value indicating whether this instance has been disposed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme._inDesigner">
      <summary>
            A value indicating whether or not we are running in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme._materialColors">
      <summary>
            The material colors array.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme._materialData">
      <summary>
            The material data array.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme._partMaterialsChanged">
      <summary>
            Occurs when one or more part materials change.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme._themeData">
      <summary>
            The theme data
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.#ctor(ModApi.Craft.ThemeData)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.Theme" /> class.
            </summary>
      <param name="themeData">The theme data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:Assets.Scripts.Craft.Theme" /> class.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.Theme.PartMaterialsChanged">
      <summary>
            Occurs when one or more part materials change.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.Theme.PartMaterialsAttached">
      <summary>
            Gets the part materials for attached parts.
            </summary>
      <value>
            The part materials for attached parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Theme.PartMaterialsCollision">
      <summary>
            Gets the part materials for colliding parts.
            </summary>
      <value>
            The part materials for colliding parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Theme.PartMaterialsDefault">
      <summary>
            Gets the default part materials.
            </summary>
      <value>
            The part default materials.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Theme.PartMaterialsDisconnected">
      <summary>
            Gets the part materials for disconnected parts.
            </summary>
      <value>
            The part materials for disconnected parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Theme.PartMaterialsHidden">
      <summary>
            Gets the part materials for hidden parts.
            </summary>
      <value>
            The part materials for hidden parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Theme.PartMaterialsHighlighted">
      <summary>
            Gets the part materials for highlighted parts.
            </summary>
      <value>
            The part materials for highlighted parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Theme.PartMaterialsSelected">
      <summary>
            Gets the part materials for selected parts.
            </summary>
      <value>
            The part materials for selected parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.Theme.PartStateColors">
      <summary>
            Gets the part state coloring information.
            </summary>
      <value>
            The part state coloring information.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.GetMaterialIndex(System.Int32)">
      <summary>
            Gets the array index of the material, which is used by the part shader.
            </summary>
      <param name="materialId">The material identifier.</param>
      <returns>The array index of the material.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.RefreshAll">
      <summary>
            Refreshes all data related to the current theme.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.RefreshMaterialProperties">
      <summary>
            Refreshes the material properties.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.ReleaseDefaultPartMaterialInstance(UnityEngine.Material)">
      <summary>
            Releases an instance of the default part material.
            </summary>
      <param name="material">The material to release.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.RequestDefaultPartMaterialInstance">
      <summary>
            Requests a new instance of the default part material.
            </summary>
      <returns>
            A new instance of the default part material.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.UpdateThemeMaterial(System.Int32)">
      <summary>
            Updates the specified theme material based on the current state of the theme data.
            </summary>
      <param name="materialId">The material identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.UpdateThemeMaterial(System.Int32,UnityEngine.Color,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Updates the specified theme material.
            </summary>
      <param name="materialId">The material identifier.</param>
      <param name="color">The new color of the theme material.</param>
      <param name="smoothness">The new smoothness value of the theme material.</param>
      <param name="metallicness">The new metallicness value of the theme material.</param>
      <param name="detailStrength">The detail strength value of the theme material.</param>
      <param name="emissionStrength">The emission strength value of the theme material.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.LoadMaterial(System.String,System.Boolean)">
      <summary>
            Loads the specified part material.
            </summary>
      <param name="name">The name of the part material to load.</param>
      <param name="createCopy">If set to <c>true</c>, a copy of the material will be created and returned.</param>
      <returns>The requested part material.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.ApplyQualitySettings(ModApi.Settings.IGameQualitySettings)">
      <summary>
            Applies the quality settings to all materials.
            </summary>
      <param name="quality">The quality settings.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.ApplyQualitySettings(ModApi.Settings.IGameQualitySettings,UnityEngine.Material[])">
      <summary>
            Applies the quality settings to the specified materials.
            </summary>
      <param name="quality">The quality settings.</param>
      <param name="materials">The materials to which to apply the quality settings.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.CreateOrUpdateMaterials(UnityEngine.Material[],System.String)">
      <summary>
            Creates the part materials or updates them based on the current quality settings
            for the part materials that use the same texture setup as the default part materials.
            </summary>
      <param name="partMaterials">The part materials.</param>
      <param name="materialNameBase">The base name of the part material.</param>
      <returns>The new or updated part materials.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.CreateOrUpdateMaterials">
      <summary>
            Creates the part materials or updates them based on the current quality settings.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.DestroyMaterials(UnityEngine.Material[])">
      <summary>
            Destroys the specified materials.
            </summary>
      <param name="materials">The materials to destroy.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.GetPartMaterialQualitySuffix">
      <summary>
            Gets the part material suffix to use when loading part materials based on the current quality settings.
            </summary>
      <returns>The part material suffix based on the current quality settings.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.LoadPartStateColoringInfo">
      <summary>
            Loads the part state coloring information.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.OnQualitySettingsChanged(System.Object,System.EventArgs)">
      <summary>
            Called when the quality settings change.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.RefreshMaterial(System.Int32,System.Boolean)">
      <summary>
            Refreshes the specified material in the theme.
            </summary>
      <param name="materialId">The material identifier.</param>
      <param name="applyChange">If set to <c>true</c>, changes will be applied immediately.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.RefreshMaterials">
      <summary>
            Refreshes all the part materials in the theme.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.UpdateMaterialColors">
      <summary>
            Updates the color properties on materials where needed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.UpdateMaterialColors(UnityEngine.Material[],UnityEngine.Color)">
      <summary>
            Updates the primary color to the requested value for all specified materials.
            </summary>
      <param name="partMaterials">The part materials.</param>
      <param name="color">The color.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.UpdateMaterialProperties">
      <summary>
            Updates the material properties.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.Theme.UpdateMaterialProperties(UnityEngine.Material[])">
      <summary>
            Updates the material properties.
            </summary>
      <param name="materials">The materials.</param>
    </member>
    <member name="T:Assets.Scripts.Craft.Theme.ShaderPropertyIds">
      <summary>
            The shader property IDs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme.ShaderPropertyIds.MaterialColors">
      <summary>
            The material colors shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme.ShaderPropertyIds.MaterialData">
      <summary>
            The material data shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.Theme.ShaderPropertyIds.PartData">
      <summary>
            The part data shader property ID.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.ThemeManager">
      <summary>
            Class for managing themes that are instantiated and being used by CraftScripts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.ThemeManager._themeWrappers">
      <summary>
            The theme wrappers
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ThemeManager.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.ThemeManager" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ThemeManager.DestroyAllThemes">
      <summary>
            Destroys all themes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ThemeManager.OnApplicationFocus">
      <summary>
            Called when the application receives focus.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ThemeManager.ReleaseTheme(ModApi.Craft.ITheme)">
      <summary>
            Releases one request to a theme. When the number of requests of the theme has reached zero,
            it will be disposed.
            </summary>
      <param name="theme">The theme.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.ThemeManager.RequestTheme(ModApi.Craft.ThemeData)">
      <summary>
            Gets the theme associated with the ThemeData. If the theme does not exist, it will be created.
            Keeps track of how many requests have been made.
            </summary>
      <param name="themeData">The theme data.</param>
      <returns>The theme to initialize and register as active.</returns>
    </member>
    <member name="M:Assets.Scripts.Craft.ThemeManager.DestroyTheme(Assets.Scripts.Craft.ThemeManager.ThemeWrapper)">
      <summary>
            Destroys the theme.
            </summary>
      <param name="themeWrapper">The theme wrapper.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.ThemeManager.GetThemeWrapper(ModApi.Craft.ITheme)">
      <summary>
            Gets the theme wrapper, or null if it does not exist.
            </summary>
      <param name="theme">The theme.</param>
      <returns>The theme wrapper.</returns>
    </member>
    <member name="T:Assets.Scripts.Craft.ThemeManager.ThemeWrapper">
      <summary>
            Wraps a theme with other relevant data for managing references to the theme.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.ThemeManager.ThemeWrapper.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Craft.ThemeManager.ThemeWrapper" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.ThemeManager.ThemeWrapper.NumRequests">
      <summary>
            Gets or sets the number requests.
            </summary>
      <value>
            The number requests.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.ThemeManager.ThemeWrapper.Theme">
      <summary>
            Gets or sets the theme.
            </summary>
      <value>
            The theme.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.ThemeManager.ThemeWrapper.ThemeData">
      <summary>
            Gets or sets the theme data.
            </summary>
      <value>
            The theme data.
            </value>
    </member>
    <member name="T:Assets.Scripts.Craft.WaterPhysics`1">
      <summary>
            Base class to provide water physics functionality.
            </summary>
      <typeparam name="T">The WaterPhysics type.</typeparam>
      <seealso cref="T:ModApi.Craft.IWaterPhysics`1" />
    </member>
    <member name="F:Assets.Scripts.Craft.WaterPhysics`1._precisionMode">
      <summary>
            The precision mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.WaterPhysics`1._underWaterAmount">
      <summary>
            The under water amount
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.WaterPhysics`1.WaterEntered">
      <summary>
            Occurs when the body has entered the water.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.WaterPhysics`1.WaterExited">
      <summary>
            Occurs when the body has exited the water.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.WaterPhysics`1.WaterStay">
      <summary>
            Occurs while the body is in the water.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.WaterPhysics`1._waterEntered">
      <summary>
            Occurs when the water has been entered.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.WaterPhysics`1._waterExited">
      <summary>
            Occurs when the body has exited the water.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Craft.WaterPhysics`1._waterStay">
      <summary>
            Occurs while the body is in the water.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Craft.WaterPhysics`1.WaterState">
      <summary>
            Describes the current frame's water state.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.WaterPhysics`1.WaterState.Enter">
      <summary>
            Just entered the water.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.WaterPhysics`1.WaterState.Exit">
      <summary>
            Just exited the water.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.WaterPhysics`1.WaterState.Stay">
      <summary>
            Still in the water.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Craft.WaterPhysics`1.WaterState.Out">
      <summary>
            Not in water.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Craft.WaterPhysics`1.BodyScript">
      <summary>
            Gets the body script associated with this water physics object.
            </summary>
      <value>
            The body script associated with this water physics object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.WaterPhysics`1.DisplacedVolume">
      <summary>
            Gets or sets the volume currently displaced by the part.
            </summary>
      <value>
            The volume currently displaced by the part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.WaterPhysics`1.DisplacedVolumeScaled">
      <summary>
            Gets or sets the volume currently displaced by the object, scaled by each part's BuoyancyScale.
            </summary>
      <value>
            The volume currently displaced by the object, scaled by each part's BuoyancyScale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.WaterPhysics`1.IsFullySubmerged">
      <summary>
            Gets a value indicating whether this instance is fully submerged.
            </summary>
      <value>
        <c>true</c> if this instance is fully submerged; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.WaterPhysics`1.IsInWater">
      <summary>
            Gets a value indicating whether this instance is in water.
            </summary>
      <value>
        <c>true</c> if this instance is in water; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.WaterPhysics`1.PrecisionMode">
      <summary>
            Gets or sets the precision mode.
            </summary>
      <value>
            The precision mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.WaterPhysics`1.TotalDisplacementVolume">
      <summary>
            Gets or sets the total displacement volume of this object, i.e. the volume of fluid it would displace if it were fully submerged.  Normally equal to the it's collider volume unless it
            is porous...or "empty", like a rocket nozzle would be.
            </summary>
      <value>
            The total displacement volume of this part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.WaterPhysics`1.TotalDisplacementVolumeScaled">
      <summary>
            Gets or sets the total displacement volume, scaled by BuoyancyScale.
            </summary>
      <value>
            The total displacement volume of this part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Craft.WaterPhysics`1.UnderWaterAmount">
      <summary>
            Gets or sets the amount that this body is under water, from 0 to 1.  Zero meaning not under water at all, and one meaning fully submerged.
            </summary>
      <value>
            The amount that this body is under water, from 0 to 1.  Zero meaning not under water at all, and one meaning fully submerged.
            </value>
    </member>
    <member name="M:Assets.Scripts.Craft.WaterPhysics`1.Update">
      <summary>
            Updates the water physics for this object.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.WaterPhysics`1.GetState(System.Boolean,System.Boolean)">
      <summary>
            Gets the current WaterState (enter/exit/stay/out).
            </summary>
      <param name="isCurrentlyInWater">if set to <c>true</c> [is in water].</param>
      <param name="previouslyInWater">if set to <c>true</c> the body was previously in water, otherwise <c>false</c>.</param>
      <returns>
            The current water state.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Craft.WaterPhysics`1.InitializeBase">
      <summary>
            Initializes the base.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Craft.WaterPhysics`1.OnQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.PhysicsQualitySettings.WaterPhysicsQuality})">
      <summary>
            Called when the water physics quality is changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;PhysicsQualitySettings.WaterPhysicsQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.WaterPhysics`1.SendEvents(Assets.Scripts.Craft.WaterPhysics{`0}.WaterState,`0)">
      <summary>
            Sends the enter/exit/stay events associated with this WaterPhysics object.
            </summary>
      <param name="state">The state.</param>
      <param name="source">The source water physics object.</param>
    </member>
    <member name="M:Assets.Scripts.Craft.WaterPhysics`1.SetQuality(ModApi.Settings.PhysicsQualitySettings.WaterPhysicsQuality)">
      <summary>
            Sets the quality.
            </summary>
      <param name="newQuality">The <see cref="!:SettingChangedEventArgs&lt;PhysicsQualitySettings.WaterPhysicsQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Design.CraftConfiguration">
      <summary>
            Data related to general configuration of a craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftConfiguration.#ctor(ModApi.Craft.CrafConfigurationType,System.String,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.CraftConfiguration" /> class.
            </summary>
      <param name="type">The build mode identifier.</param>
      <param name="name">The name.</param>
      <param name="defaultPilotOrientation">The default pilot orientation.</param>
      <param name="partPulloutRotation">The part pullout rotation.</param>
    </member>
    <member name="P:Assets.Scripts.Design.CraftConfiguration.DefaultPilotOrientation">
      <summary>
            Gets the default pilot orientation.
            </summary>
      <value>
            The default pilot orientation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftConfiguration.Name">
      <summary>
            Gets the name of the configuration type.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftConfiguration.PartPulloutRotation">
      <summary>
            Gets the part pullout rotation; the rotation which is (optionally) applied to parts after they're pulled out.
            </summary>
      <value>
            The part pullout rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftConfiguration.Type">
      <summary>
            Gets the configuration type.
            </summary>
      <value>
            The configuration type.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.CraftConfiguration.OnDesignerPartPullout(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Assembly)">
      <summary>
            Called when a part being managed by this craft configuration is pulled out in the designer.  This is called before the part's DesignerStart() method is called, and while the previous part is still selected.
            </summary>
      <param name="partScript">The part script being pulled out.</param>
      <param name="assembly">The assembly this part is within (will contain all parts if contained in a sub-assembly).</param>
    </member>
    <member name="T:Assets.Scripts.Design.ActivationGroupsPanelScript">
      <summary>
            Script for the activation groups UI.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.ActivationGroupsPanelScript._content">
      <summary>
            The content, where the list items will be placed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ActivationGroupsPanelScript._highlightedParts">
      <summary>
            The highlighted parts
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ActivationGroupsPanelScript._invalidCharacters">
      <summary>
            The list of invalid characters for the name.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ActivationGroupsPanelScript._template">
      <summary>
            The list item template.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.ActivationGroupsPanelScript.CommandPod">
      <summary>
            Gets or sets the command pod.
            </summary>
      <value>
            The command pod.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.CreateListItem(System.Int32,System.String,UI.Xml.XmlElement)">
      <summary>
            Creates the part list item.
            </summary>
      <param name="activationGroup">The activation group.</param>
      <param name="name">The name.</param>
      <param name="parent">The parent transform.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.HighlightActivationGroup(System.Int32)">
      <summary>
            Highlights the parts in the activation group.
            </summary>
      <param name="activationGroup">The activation group.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.OnActivateOnStartChanged(System.Boolean,System.Int32)">
      <summary>
            Called when the activate on start flag has changed.
            </summary>
      <param name="state">if set to <c>true</c> then activate on start.</param>
      <param name="activationGroup">The activation group.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.OnFlyoutClosed(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout has closed.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.OnFlyoutOpening(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opening.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.OnNameChanged(System.String,System.Int32)">
      <summary>
            Called when the name has changed.
            </summary>
      <param name="name">The name.</param>
      <param name="activationGroup">The activation group.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.OnValidateInput(System.String,System.Int32,System.Char)">
      <summary>
            Called when the input is validated.
            </summary>
      <param name="text">The text.</param>
      <param name="charIndex">Index of the character.</param>
      <param name="addedChar">The added character.</param>
      <returns>The character.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.RefreshList">
      <summary>
            Refreshes the list.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.ActivationGroupsPanelScript.StopHighlightingParts">
      <summary>
            Stops highlighting parts.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.CraftPartsPanelScript">
      <summary>
            Script for the craft parts panel UI.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript.HiddenClass">
      <summary>
            The XML-layout class to use for the hidden button when toggled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._content">
      <summary>
            The content, where the list items will be placed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._highlightedPart">
      <summary>
            The highlighted part
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._items">
      <summary>
            The items
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._listItemPrefab">
      <summary>
            The list item prefab.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._partCountText">
      <summary>
            The part count text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._scrollRect">
      <summary>
            The scroll rect transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._selectedItem">
      <summary>
            The selected item
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._sortedItems">
      <summary>
            The sorted items
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._toggleAllButtonText">
      <summary>
            The toggle all button text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPartsPanelScript._searchFilter">
      <summary>
            The search filter
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.CraftAssembly">
      <summary>
            Gets the craft assembly.
            </summary>
      <value>
            The craft assembly.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.HighlightedPart">
      <summary>
            Gets or sets the highlighted part.
            </summary>
      <value>
            The highlighted part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.SelectedItem">
      <summary>
            Gets or sets the selected item.
            </summary>
      <value>
            The selected item.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.CreateListItem(ModApi.Craft.Parts.PartData,UI.Xml.XmlElement)">
      <summary>
            Creates the part list item.
            </summary>
      <param name="partData">The part data.</param>
      <param name="parent">The parent transform.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.FilterItems(System.String)">
      <summary>
            Filters the items.
            </summary>
      <param name="searchFilter">The search filter.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.GetItem(UI.Xml.XmlElement)">
      <summary>
            Gets the item.
            </summary>
      <param name="element">The element.</param>
      <returns>The item.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.GetPart(UI.Xml.XmlElement)">
      <summary>
            Gets the part.
            </summary>
      <param name="element">The element.</param>
      <returns>The part associated with the element.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.OnCraftLoaded">
      <summary>
            Called when a craft is loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.OnFlyoutClosing(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is closing.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.OnFlyoutOpening(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opening.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.OnHideButtonClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the hide button is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.OnListItemClicked(UI.Xml.XmlElement)">
      <summary>
            Called when a list item is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.OnMouseEnterListItem(UI.Xml.XmlElement)">
      <summary>
            Called when the mouse enters a list item.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.OnMouseExitListItem(UI.Xml.XmlElement)">
      <summary>
            Called when the mouse exits a list item.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the selected part has changed.
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.OnToggleAllVisibilityClicked">
      <summary>
            Called when the toggle all button visibility is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.RefreshList">
      <summary>
            Refreshes the list.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.UpdateHeader">
      <summary>
            Updates the header.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPartsPanelScript.UpdateListItem(Assets.Scripts.Design.CraftPartsPanelScript.ListItem,ModApi.Craft.Parts.PartData)">
      <summary>
            Updates the list item.
            </summary>
      <param name="item">The item.</param>
      <param name="part">The part.</param>
    </member>
    <member name="T:Assets.Scripts.Design.CraftPartsPanelScript.ListItem">
      <summary>
            Wraps a list item with information about the part it is representing.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.ListItem.Element">
      <summary>
            Gets or sets the element.
            </summary>
      <value>
            The element.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.ListItem.HideButton">
      <summary>
            Gets or sets the hide button.
            </summary>
      <value>
            The hide button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.ListItem.InteractionMode">
      <summary>
            Gets or sets the interaction mode.
            </summary>
      <value>
            The interaction mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.ListItem.PartId">
      <summary>
            Gets or sets the part identifier.
            </summary>
      <value>
            The part identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.ListItem.PartName">
      <summary>
            Gets or sets the name of the part.
            </summary>
      <value>
            The name of the part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.ListItem.RemoveFlag">
      <summary>
            Gets or sets a value indicating whether [remove flag].
            </summary>
      <value>
        <c>true</c> if [remove flag]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPartsPanelScript.ListItem.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.CraftPerformanceAnalysis">
      <summary>
            Provides performance analysis for the designer.
            </summary>
      <seealso cref="T:ModApi.Design.IPerformanceAnalysis" />
    </member>
    <member name="F:Assets.Scripts.Design.CraftPerformanceAnalysis._craftDetailsCollapsed">
      <summary>
            The craft details collapsed flag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPerformanceAnalysis._craftDetailsGroup">
      <summary>
            The craft details group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPerformanceAnalysis._currentOffset">
      <summary>
            The current offset of the panel, or null if it does not have one yet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPerformanceAnalysis._designer">
      <summary>
            The designer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPerformanceAnalysis._inspectorPanel">
      <summary>
            The inspector panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPerformanceAnalysis._recalculateDimensions">
      <summary>
            The recalculate dimensions flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPerformanceAnalysis._recalculateStagingAnalysis">
      <summary>
            The flag used to know if the staging analysis is outdated and needs to be recalculated.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPerformanceAnalysis._selectedStage">
      <summary>
            The selected stage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.CraftPerformanceAnalysis._stageAnalysis">
      <summary>
            The stage analysis
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.CraftPerformanceAnalysis" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="E:Assets.Scripts.Design.CraftPerformanceAnalysis.EnvironmentChanged">
      <summary>
            Occurs when some parameter of the performance analysis environment has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.AtmosphereSample">
      <summary>
            Gets the atmosphere sample.
            </summary>
      <value>
            The sample.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.MachNumber">
      <summary>
            Gets the mach number that the performance should be analyzed for.
            </summary>
      <value>
            The mach number.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.SelectedStageName">
      <summary>
            Gets the name of the selected stage.
            </summary>
      <value>
            The selected stage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.ShowMachNumber">
      <summary>
            Gets a value indicating whether to show the mach number slider.
            </summary>
      <value>
        <c>true</c> if show mach number; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.StageAnalysis">
      <summary>
            Gets the stage analysis.
            </summary>
      <value>
            The stage analysis.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.StageAnalysisBurnTime">
      <summary>
            Gets the stage analysis burn time.
            </summary>
      <value>
            The stage analysis burn time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.StageAnalysisDeltaV">
      <summary>
            Gets the stage analysis delta v.
            </summary>
      <value>
            The stage analysis delta v.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.StageAnalysisEndingTwr">
      <summary>
            Gets the stage analysis ending TWR.
            </summary>
      <value>
            The stage analysis ending TWR.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.StageAnalysisIsp">
      <summary>
            Gets the stage analysis isp.
            </summary>
      <value>
            The stage analysis isp.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.StageAnalysisNumEngines">
      <summary>
            Gets the stage analysis number engines.
            </summary>
      <value>
            The stage analysis number engines.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.StageAnalysisStartingTwr">
      <summary>
            Gets the stage analysis starting TWR.
            </summary>
      <value>
            The stage analysis starting TWR.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.StageAnalysisThrust">
      <summary>
            Gets the stage analysis thrust.
            </summary>
      <value>
            The stage analysis thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.StagePropellantMass">
      <summary>
            Gets the stage analysis propellant mass.
            </summary>
      <value>
            The stage analysis propellant mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.CraftScript">
      <summary>
            Gets the craft script.
            </summary>
      <value>
            The craft script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.CraftPerformanceAnalysis.CraftSize">
      <summary>
            Gets the size of the craft.
            </summary>
      <value>
            The size of the craft.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.ConfigureForVacuum">
      <summary>
            Configures the settings for a vacuum.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.OnDestroy">
      <summary>
            Called when the designer is being destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.OnStagingChanged">
      <summary>
            Called when the staging has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.RecalculateStaging">
      <summary>
            Recalculates the staging for the designer craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.ToggleInspectorPanel">
      <summary>
            Toggles the inspector panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.AdvanceStage(ModApi.Ui.Inspector.SpinnerModel,System.Int32)">
      <summary>
            Advances the stage.
            </summary>
      <param name="spinner">The spinner.</param>
      <param name="direction">The direction to advance.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.ClosePanel">
      <summary>
            Closes the panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.GenerateStagingAnalysisInspectorModel(ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Generates the staging analysis inspector model.
            </summary>
      <param name="group">The group.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.OnAltitudeChanged(System.Single)">
      <summary>
            Called when the altitude has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.OnCraftLoaded">
      <summary>
            Called when the craft has been loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.OnMachChanged(System.Single)">
      <summary>
            Called when the mach number has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when [selected part changed].
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.RecalculateStagingAnalysis">
      <summary>
            Recalculates the craft's staging analysis.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.RefreshInspectorPanel">
      <summary>
            Shows the inspector panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.CraftPerformanceAnalysis.UpdateStageAnalysisInspectorModel">
      <summary>
            Updates the stage analysis inspector model.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerCameraScript">
      <summary>
            Script for controlling the camera in the designer.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.DesignerCameraScript._designer">
      <summary>
            The designer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerCameraScript._targetPosition">
      <summary>
            The target position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerCameraScript._targetRotationAngles">
      <summary>
            The target rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerCameraScript._targetZoom">
      <summary>
            The target zoom
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerCameraScript.CameraFocusDelegate">
      <summary>
            Delegate for the camera focus event.
            </summary>
      <param name="partScript">The part script.</param>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerCameraScript.CameraMoveDelegate">
      <summary>
            Delegate for the camera moving event.
            </summary>
      <param name="rotation">The rotation.</param>
      <param name="pan">The pan.</param>
      <param name="zoomAmount">The zoom amount.</param>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerCameraScript.CameraViewDelegate">
      <summary>
            Delegate for the camera view event.
            </summary>
      <param name="viewDirection">The view direction.</param>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerCameraScript.CameraFocusOnPart">
      <summary>
            Occurs when the camera focuses on a part.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerCameraScript.CameraMoved">
      <summary>
            Occurs when the camera is moved.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerCameraScript.CameraViewDirectionSet">
      <summary>
            Occurs when the camera view direction is set.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerCameraScript.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerCameraScript.CameraTarget">
      <summary>
            Gets the camera target.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerCameraScript.CurrentZoom">
      <summary>
            Gets the current zoom.
            </summary>
      <value>
            The current zoom.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerCameraScript.Transform">
      <summary>
            Gets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerCameraScript.ViewDirection">
      <summary>
            Gets the view direction.
            </summary>
      <value>
            The view direction.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.FocusOnPart(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Moves the camera to focus on the specified part.
            </summary>
      <param name="partScript">The part script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.Initialize(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes the specified designer script.
            </summary>
      <param name="designerScript">The designer script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.Move(UnityEngine.Vector2)">
      <summary>
            Moves the specified direction.
            </summary>
      <param name="direction">The direction.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.Rotate(UnityEngine.Vector2)">
      <summary>
            Rotates the specified rotation.
            </summary>
      <param name="rotation">The amount in degrees to rotate around the x and y axes.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.ScreenPointToRay(UnityEngine.Vector2)">
      <summary>
            Create a ray from the screen coordinates.
            </summary>
      <param name="screenCoordinates">The screen coordinates.</param>
      <returns>The ray.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.SetTargetPosition(UnityEngine.Vector3,System.Single)">
      <summary>
            Sets the target position.
            </summary>
      <param name="position">The position.</param>
      <param name="duration">The amount of time to take animating to the new position.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.SetTargetRotation(UnityEngine.Vector2,System.Single)">
      <summary>
            Sets the target rotation.
            </summary>
      <param name="rotation">The rotation.</param>
      <param name="duration">The amount of time to take animating to the new rotation.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.SetTargetZoom(System.Single,System.Single)">
      <summary>
            Sets the target zoom.
            </summary>
      <param name="zoom">The zoom.</param>
      <param name="duration">The amount of time to take animating to the new zoom.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.SetViewDirection(ModApi.Design.DesignerCameraViewDirection,System.Single)">
      <summary>
            Sets the view direction.
            </summary>
      <param name="viewDirection">The view direction.</param>
      <param name="duration">The duration.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.Zoom(System.Single)">
      <summary>
            Zooms the specified amount.
            </summary>
      <param name="amount">The amount.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCameraScript.LimitRotation(UnityEngine.Vector2)">
      <summary>
            Limits the rotation angles between -180 and 180.
            </summary>
      <param name="rotation">The rotation.</param>
      <returns>The limited rotation.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerControls">
      <summary>
            Class that manages inputs for the craft controls.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerControls._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerControls._nullControls">
      <summary>
            The null controls object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerControls._throttleIncrement">
      <summary>
            The throttle increment.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerControls.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.DesignerControls" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerControls.Controls">
      <summary>
            Gets the craft controls.
            </summary>
      <value>
            The craft controls.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerControls.CommandPod">
      <summary>
            Gets the command pod.
            </summary>
      <value>
            The command pod.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerControls.ActivateStage">
      <summary>
            Activates the stage.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerControls.GetActivationGroupStatus(System.Int32)">
      <summary>
            Gets the activation group status.
            </summary>
      <param name="activationGroup">The activation group.</param>
      <returns>The activation group status.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerControls.SetCraft(ModApi.Craft.ICraftScript)">
      <summary>
            Sets the craft script.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerControls.ToggleActivationGroup(System.Int32)">
      <summary>
            Toggles the activation group.
            </summary>
      <param name="activationGroup">The activation group.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerControls.Update(System.Single)">
      <summary>
            Updates this instance.
            </summary>
      <param name="timeStep">The time step.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerControls.GetControlInput(ModApi.Input.IGameInput)">
      <summary>
            Gets the control input accounting for input overrides.
            </summary>
      <param name="input">The input to get.</param>
      <returns>The control input accounting for input overrides.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerCraftLoader">
      <summary>
            Handles loading of crafts from XML in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerCraftLoader._designer">
      <summary>
            The designer script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCraftLoader.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.DesignerCraftLoader" /> class.
            </summary>
      <param name="designer">The designer script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCraftLoader.LoadCraftImmediate(System.Xml.Linq.XElement,System.Boolean,System.Boolean,System.String)">
      <summary>
            Loads the craft with the specified XML.
            This will show no message dialogs or errors and will attempt to force the
            loading of craft with potential issues (version or mod requirements not met).
            Some errors may be logged and exceptions could be thrown for show-stopping errors.
            </summary>
      <param name="craftXml">The craft XML.</param>
      <param name="createUndoStep">A value indicating whether an undo step should be created when the craft is loaded.</param>
      <param name="centerCamera">A value indicating whether the camera should be centered on the craft when it is loaded.</param>
      <param name="postLoadMessage">The designer UI message to display (if any) when the craft is loaded.</param>
      <returns>The requested craft script.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCraftLoader.LoadCraftInteractive(System.String,System.Boolean,System.Boolean,System.String,System.Action{Assets.Scripts.Craft.CraftScript},System.Action)">
      <summary>
            Loads the craft with the specified ID.
            This may be an interactive process, with message dialogs or errors being shown before completing.
            As such, the craft may not be loaded immediately. In fact, the craft may not be loaded at all due to errors or cancellation.
            The success callback will be invoked if the craft was loaded successfully (not necessarily without issues though).
            The failure callback will be invoked for any show-stopping errors that were encountered or if the loading was canceled.
            </summary>
      <param name="craftId">The craft identifier.</param>
      <param name="createUndoStep">A value indicating whether an undo step should be created when the craft is loaded.</param>
      <param name="centerCamera">A value indicating whether the camera should be centered on the craft when it is loaded.</param>
      <param name="postLoadMessage">The designer UI message to display (if any) when the craft is loaded.</param>
      <param name="successCallback">The success callback.</param>
      <param name="failureCallback">The failure callback.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCraftLoader.LoadCraftInteractive(System.Xml.Linq.XElement,System.Boolean,System.Boolean,System.String,System.Action{Assets.Scripts.Craft.CraftScript},System.Action)">
      <summary>
            Loads the craft with the specified XML.
            This may be an interactive process, with message dialogs or errors being shown before completing.
            As such, the craft may not be loaded immediately. In fact, the craft may not be loaded at all due to errors or cancellation.
            The success callback will be invoked if the craft was loaded successfully (not necessarily without issues though).
            The failure callback will be invoked for any show-stopping errors that were encountered or if the loading was canceled.
            </summary>
      <param name="craftXml">The craft XML.</param>
      <param name="createUndoStep">A value indicating whether an undo step should be created when the craft is loaded.</param>
      <param name="centerCamera">A value indicating whether the camera should be centered on the craft when it is loaded.</param>
      <param name="postLoadMessage">The designer UI message to display (if any) when the craft is loaded.</param>
      <param name="successCallback">The success callback.</param>
      <param name="failureCallback">The failure callback.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCraftLoader.ShowErrorMessage(System.String,System.Action)">
      <summary>
            Shows the specified error message as a dialog with an 'Okay' button.
            After clicking the 'Okay' button, the specified action will be invoked (if any).
            </summary>
      <param name="message">The message to display in the dialog.</param>
      <param name="okayAction">The action to invoke after the user clicks the button (or <c>null</c> for no action).</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerCraftLoader.LoadCraft(ModApi.Craft.CraftData,System.Xml.Linq.XElement,System.Boolean,System.Boolean,System.String)">
      <summary>
            Loads the specified craft as a craft script, performing some optional post-loading actions.
            </summary>
      <param name="craftData">The craft data for which to load the craft script.</param>
      <param name="craftXml">The craft XML.</param>
      <param name="createUndoStep">A value indicating whether an undo step should be created when the craft is loaded.</param>
      <param name="centerCamera">A value indicating whether the camera should be centered on the craft when it is loaded.</param>
      <param name="postLoadMessage">The designer UI message to display (if any) when the craft is loaded.</param>
      <returns>The craft script that was loaded.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerFlyoutPanelScript">
      <summary>
            Base class for content displayed in flyouts in the designer scene.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyoutPanelScript.DesignerUi">
      <summary>
            Gets the designer UI reference.
            </summary>
      <value>
            The designer UI reference.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyoutPanelScript.Flyout">
      <summary>
            Gets the flyout.
            </summary>
      <value>
            The flyout.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerFlyoutPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerFlyouts">
      <summary>
            The default user interface flyouts used in the designer scene.
            </summary>
      <seealso cref="T:ModApi.Design.IFlyouts" />
    </member>
    <member name="F:Assets.Scripts.Design.DesignerFlyouts._flyouts">
      <summary>
            The flyouts
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.ActivationGroups">
      <summary>
            Gets the activation groups flyout.
            </summary>
      <value>
            The activation groups flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.All">
      <summary>
            Gets all the flyouts used in the designer.
            </summary>
      <value>
            All the flyouts used in the designer..
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.CraftParts">
      <summary>
            Gets the craft parts designer flyout.
            </summary>
      <value>
            The craft parts  designer flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.LoadCraft">
      <summary>
            Gets the load craft designer flyout.
            </summary>
      <value>
            The load craft designer flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.Menu">
      <summary>
            Gets the menu flyout.
            </summary>
      <value>
            The menu flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.PartList">
      <summary>
            Gets the part list designer flyout.
            </summary>
      <value>
            The part list designer flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.PartProperties">
      <summary>
            Gets the part properties designer flyout.
            </summary>
      <value>
            The part properties designer flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.StagingEditor">
      <summary>
            Gets the staging editor designer flyout.
            </summary>
      <value>
            The staging editor designer flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.Symmetry">
      <summary>
            Gets the symmetry designer flyout.
            </summary>
      <value>
            The symmetry designer flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerFlyouts.Tools">
      <summary>
            Gets the tools flyout.
            </summary>
      <value>
            The tools flyout.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerFlyouts.ClearFlyouts">
      <summary>
            Clears the flyouts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerFlyouts.RegisterFlyout(System.String,ModApi.Ui.IFlyout)">
      <summary>
            Registers the flyout.
            </summary>
      <param name="id">The identifier.</param>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerGizmosScript">
      <summary>
            Class that manages gizmos in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerGizmosScript.DefaultAlpha">
      <summary>
            The default alpha
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerGizmosScript.LineSize">
      <summary>
            The line size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerGizmosScript._designer">
      <summary>
            The designer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerGizmosScript._gizmos">
      <summary>
            The gizmos
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerGizmosScript._template">
      <summary>
            The template for a center gizmo.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.CenterOfLiftGizmoEnabled">
      <summary>
            Gets or sets a value indicating whether the center of thrust gizmo is enabled.
            </summary>
      <value>
        <c>true</c> if the center of thrust gizmo is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.CenterOfMassGizmoEnabled">
      <summary>
            Gets or sets a value indicating whether the center of thrust gizmo is enabled.
            </summary>
      <value>
        <c>true</c> if the center of thrust gizmo is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.CenterOfThrustGizmoEnabled">
      <summary>
            Gets or sets a value indicating whether the center of thrust gizmo is enabled.
            </summary>
      <value>
        <c>true</c> if the center of thrust gizmo is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.ReferenceStage">
      <summary>
            Gets the reference stage, which can be used to view the CoX gizmos in
            respect to a specific stage. If set to -1, then all stages will be viewed at
            once (the default behavior).
            </summary>
      <value>
            The current stage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.CraftAssembly">
      <summary>
            Gets the craft assembly.
            </summary>
      <value>
            The craft assembly.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.Initialize(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes the specified designer gizmos.
            </summary>
      <param name="designer">The designer gizmos.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.SetReferenceStage(System.Int32)">
      <summary>
            Sets the reference stage.
            </summary>
      <param name="stage">The stage.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.UpdateGizmoLines(Assets.Scripts.Design.DesignerGizmosScript.Gizmo)">
      <summary>
            Updates the gizmo lines.
            </summary>
      <param name="gizmo">The gizmo.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.CreateGizmo(System.String,UnityEngine.Color,System.Func{System.Boolean},System.Action{Assets.Scripts.Design.DesignerGizmosScript.Gizmo,System.Collections.Generic.IEnumerable{ModApi.Craft.Parts.PartData}})">
      <summary>
            Creates the gizmo with the specified color.
            </summary>
      <param name="name">The name.</param>
      <param name="color">The color.</param>
      <param name="enabled">The enabled.</param>
      <param name="recalculateAction">The update action.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.CreateGizmoLines(Assets.Scripts.Design.DesignerGizmosScript.Gizmo,UnityEngine.Color)">
      <summary>
            Creates the gizmo lines for CoM/CoL/CoT gizmos.
            </summary>
      <param name="gizmo">The gizmo.</param>
      <param name="color">The color.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.RecalculateCenterOfLiftGizmo(Assets.Scripts.Design.DesignerGizmosScript.Gizmo,System.Collections.Generic.IEnumerable{ModApi.Craft.Parts.PartData})">
      <summary>
            Updates the center of lift gizmo.
            </summary>
      <param name="gizmo">The gizmo.</param>
      <param name="parts">The parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.RecalculateCenterOfMassGizmo(Assets.Scripts.Design.DesignerGizmosScript.Gizmo,System.Collections.Generic.IEnumerable{ModApi.Craft.Parts.PartData})">
      <summary>
            Updates the center of mass gizmo.
            </summary>
      <param name="gizmo">The gizmo.</param>
      <param name="parts">The parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.RecalculateCenterOfThrustGizmo(Assets.Scripts.Design.DesignerGizmosScript.Gizmo,System.Collections.Generic.IEnumerable{ModApi.Craft.Parts.PartData})">
      <summary>
            Updates the center of thrust gizmo.
            </summary>
      <param name="gizmo">The gizmo.</param>
      <param name="parts">The parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.RecalculateGizmos">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerGizmosScript.Gizmo">
      <summary>
            The gizmo wrapper class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.Gizmo.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.DesignerGizmosScript.Gizmo" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.Gizmo.Enabled">
      <summary>
            Gets or sets the action which determines if the gizmo should be active.
            </summary>
      <value>
            The enabled action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.Gizmo.GameObject">
      <summary>
            Gets or sets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.Gizmo.Lines">
      <summary>
            Gets the lines.
            </summary>
      <value>
            The lines.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.Gizmo.Material">
      <summary>
            Gets or sets the material.
            </summary>
      <value>
            The material.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.Gizmo.RecalculateAction">
      <summary>
            Gets or sets the action that should be executed to update the position of the gizmo.
            </summary>
      <value>
            The update action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerGizmosScript.Gizmo.Valid">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.DesignerGizmosScript.Gizmo" /> is valid.
            </summary>
      <value>
        <c>true</c> if valid; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerGizmosScript.Gizmo.Destroy">
      <summary>
            Destroys the gizmo.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerPartList">
      <summary>
            Contains all parts available to be added by the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerPartList._partTypes">
      <summary>
            The part types
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.#ctor(ModApi.Craft.Parts.PartTypeList)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.DesignerPartList" /> class.
            </summary>
      <param name="partTypes">The part types.</param>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerPartList.Parts">
      <summary>
            Gets the parts.
            </summary>
      <value>
            The parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerPartList.SubassemblyDirectoy">
      <summary>
            Gets the subassembly directoy.
            </summary>
      <value>
            The subassembly directoy.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.AddDesignerPart(System.Xml.Linq.XElement)">
      <summary>
            Adds the designer part.
            </summary>
      <param name="designerPartElement">The designer part element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.CreateSubassembly(System.String,ModApi.Craft.Assembly,ModApi.Craft.ICraftScript)">
      <summary>
            Creates the subassembly.
            </summary>
      <param name="name">The name.</param>
      <param name="assembly">The assembly.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.DeleteSubassembly(ModApi.Craft.Parts.DesignerPart)">
      <summary>
            Deletes the subassembly.
            </summary>
      <param name="subassemblyPart">The subassembly part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.Load">
      <summary>
            Loads this instance.
            </summary>
      <returns>True if the list was loaded successfully, or false if it encountered an error.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.LoadCachedSubassemblies">
      <summary>
            Loads the cached subassemblies.
            This should only handle the loading of subassemblies that don't belong to the SubAssembly category (XML modded).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.LoadDesignerPart(System.Xml.Linq.XElement,Jundroo.ModTools.ILoadedMod)">
      <summary>
            Loads the designer part from the specified XML element.
            </summary>
      <param name="designerPartElement">The designer part XML element.</param>
      <param name="mod">The mod associated with the part or <c>null</c> for a default part.</param>
      <returns>The designer part.</returns>
      <exception cref="T:System.Exception">Thrown when a designer part cannot be loaded.</exception>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.AddSubassemblyPart(ModApi.Craft.Parts.DesignerPart)">
      <summary>
            Adds the subassembly part, and ensures that it is in sorted order.
            </summary>
      <param name="subassemblyPart">The subassembly part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.LoadXml(System.String)">
      <summary>
            Loads the XML.
            </summary>
      <param name="xml">The XML.</param>
      <returns>The list of parts loaded from the XML.</returns>
      <exception cref="T:System.Exception">Failed to load xml.</exception>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPartList.SaveSubassembly(ModApi.Craft.Parts.DesignerPart)">
      <summary>
            Saves the subassembly.
            </summary>
      <param name="subassembly">The subassembly to save.</param>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerPlatformScript">
      <summary>
            Script for the designer platform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerPlatformScript._designer">
      <summary>
            The designer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerPlatformScript._designerSettings">
      <summary>
            The designer settings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerPlatformScript._draggingParts">
      <summary>
            The dragging parts flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerPlatformScript._gridSize">
      <summary>
            The current grid size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerPlatformScript._mirrorPlane">
      <summary>
            The mirror plane transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerPlatformScript._platform">
      <summary>
            The platform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerPlatformScript._platformGridMaterial">
      <summary>
            The platform grid material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerPlatformScript._platformRenderer">
      <summary>
            The platform renderer
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerPlatformScript.MirrorPlaneEnabled">
      <summary>
            Gets or sets a value indicating whether the mirror plane is enabled.
            </summary>
      <value>
        <c>true</c> if the mirror plane is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.Initialize(ModApi.Design.IDesigner)">
      <summary>
            Initializes the background script.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.Start">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.CalculateCraftBounds(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Calculates the bounds for the designer platform. Copy-pasta'd from the CraftScript with a few small tweaks to include
            disconnected parts min y coordinate in the bounds calculation.
            </summary>
      <param name="craftScript">The craft script.</param>
      <returns>The bounds.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.OnDragPartSelectionEnded">
      <summary>
            Called when the drag part selection has ended.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.OnDragPartSelectionStarted">
      <summary>
            Called when the drag part selection has started.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the selected part changes.
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.Reposition(System.Boolean)">
      <summary>
            Repositions the now.
            </summary>
      <param name="animate">if set to <c>true</c> [animate].</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.RepositionAsync">
      <summary>
            Repositions the platform.
            </summary>
      <returns>The Unity enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.RepositionNextFrame">
      <summary>
            Called when the platform should reposition.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerPlatformScript.UpdateMirrorPlane">
      <summary>
            Updates the mirror plane position, rotation, and size.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerScript">
      <summary>
            Script for the designer.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:ModApi.Design.IDesigner" />
      <seealso cref="T:Assets.Scripts.Ui.IInputHandler" />
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript.PartHighlightLayerMask">
      <summary>
            The layer mask for shooting rays to determine if a part should be highlighted when the mouse overs over it.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript.PartPreventInteractionLayerMask">
      <summary>
            The layer mask for shooting rays to determine if any "blocking
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._activeCommandPod">
      <summary>
            The active command pod, which is the currently selected part's command pod, or the root command pod if no part is selected.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._activeTools">
      <summary>
            The active tools
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._baseTools">
      <summary>
            The currently registered "base" designer tools.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._cameraTool">
      <summary>
            The camera tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._capturedTool">
      <summary>
            The captured tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._controlSurfaceTool">
      <summary>
            The control surface tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._craft">
      <summary>
            The craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._craftContainer">
      <summary>
            The craft container.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._craftDesigns">
      <summary>
            The craft designs dependency.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._designerCamera">
      <summary>
            The designer camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._designerPlatform">
      <summary>
            The designer platform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._designerUi">
      <summary>
            The designer UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._dragCalculator">
      <summary>
            The drag calculator.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._fakeQuadSphereRenderer">
      <summary>
            The fake quad sphere renderer used to provide shader data for objects in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._fuselageShapeTool">
      <summary>
            The fuselage shape tool.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._fuselageTool">
      <summary>
            The fuselage tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._gizmos">
      <summary>
            The gizmos
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._highlightedPart">
      <summary>
            The highlighted part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._isInitialized">
      <summary>
            A value indicating whether the <see cref="T:Assets.Scripts.Design.DesignerScript" /> has been initialized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._lights">
      <summary>
            The lights
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._movePartTool">
      <summary>
            The move part tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._nonToolHasCapture">
      <summary>
            Identifies if a non-designer tool has captured input.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._nudgePartTool">
      <summary>
            The move part tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._paintTool">
      <summary>
            The paint tool.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._partTypes">
      <summary>
            The part types dependency.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._performanceAnalysis">
      <summary>
            The performance analysis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._rotatePartTool">
      <summary>
            The rotate part tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._screenshotTool">
      <summary>
            The screenshot tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._selectedPart">
      <summary>
            The selected part backing field.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._tools">
      <summary>
            The currently registered designer tools.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._userInterface">
      <summary>
            The user interface dependency.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerScript._wingAdjustmentTool">
      <summary>
            The wing adjustment tool
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerScript.ActiveToolChangedDelegate">
      <summary>
            Delegate for the active tool changed event.
            </summary>
      <param name="tool">The tool.</param>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerScript.ClickHandler">
      <summary>
            Handler for click-related events.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerScript.DesignerScriptHandler">
      <summary>
            General handler for <see cref="T:Assets.Scripts.Design.DesignerScript" /> events.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerScript.HandleInputDelegate">
      <summary>
            The delegate to handle designer inputs.
            </summary>
      <param name="handleDelegate">The handle delegate.</param>
      <returns>
        <c>true</c> if the input was handled, <c>false</c> otherwise.</returns>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerScript.ActiveToolChanged">
      <summary>
            Occurs when the active tool has changed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerScript.BeforeCraftUnloaded">
      <summary>
            Occurs just before a craft is unloaded. This also happens just before CraftLoaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerScript.Click">
      <summary>
            Occurs any time a click event is recieved (initial, update, end).
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerScript.CraftLoaded">
      <summary>
            Occurs when a craft has been loaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerScript.CraftStructureChanged">
      <summary>
            Occurs when the current craft structure has changed. For designer scripts, this event is preferred over the CraftScript's own
            CraftStructureChanged event. The Designer will manage disconnecting and reconnecting to the currently loaded CraftScript, so
            subscribers of this event won't have to worry about that.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerScript.Initialized">
      <summary>
            Occurs when this <see cref="T:Assets.Scripts.Design.DesignerScript" /> has been fully initialized.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerScript.SelectedPartChanged">
      <summary>
            Occurs when the selected part changes.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerScript._initialized">
      <summary>
            Occurs when this <see cref="T:Assets.Scripts.Design.DesignerScript" /> has been fully initialized.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.ActiveCraftConfiguration">
      <summary>
            Gets the active <see cref="T:ModApi.Craft.ICraftConfiguration" />, which is the config tied to the currently selected part, or the root command pod if no part is selected.
            </summary>
      <value>
            The active craft configuration.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.ActiveToolAllowsPartMovement">
      <summary>
            Gets a value indicating whether the active tool allows part movement.
            </summary>
      <value>
        <c>true</c> if the active tool allows part movement; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.AdvancedMode">
      <summary>
            Gets or sets a value indicating whether the designer is currently operating in advanced mode.
            </summary>
      <value>
        <c>true</c> if the designer is currently operating in advanced mode; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.AllowPartMovement">
      <summary>
            Gets or sets a value indicating whether part movement should be allowed.  Note: The currently active tool must also allow part movement for it to be enabled.
            </summary>
      <value>
        <c>true</c> if part movement should be allowed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.AllowPartSelection">
      <summary>
            Gets or sets a value indicating whether to allow part selection.
            </summary>
      <value>
        <c>true</c> if part selection is currently allowed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.CameraIsMoving">
      <summary>
            Gets a value indicating whether the camera is moving.
            </summary>
      <value>
        <c>true</c> if the camera is moving; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.CanPinch">
      <summary>
            Gets or sets a value indicating whether pinch gestures should be detected, or just ignored.
            </summary>
      <value>
        <c>true</c> if pinch gestures should be detected; otherwise, ignored <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.CapturedTool">
      <summary>
            Gets the captured tool if one is captured, otherwise; <c>null</c>.
            </summary>
      <value>
            The captured tool if one is captured, otherwise; <c>null</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.CraftDesigns">
      <summary>
            Gets the craft designs.
            </summary>
      <value>
            The craft designs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.CraftLoader">
      <summary>
            Gets the craft loader.
            </summary>
      <value>
            The craft loader.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.CraftScript">
      <summary>
            Gets the craft.
            </summary>
      <value>
            The craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.DesignerCamera">
      <summary>
            Gets the designer camera.
            </summary>
      <value>
            The camera controller.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.DesignerControls">
      <summary>
            Gets the designer controls.
            </summary>
      <value>
            The designer controls.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.DesignerPlatform">
      <summary>
            Gets the designer platform.
            </summary>
      <value>
            The designer platform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.DesignerUi">
      <summary>
            Gets the designer UI.
            </summary>
      <value>
            The designer UI.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.DesignerUiScript">
      <summary>
            Gets the designer UI script.
            </summary>
      <value>
            The designer UI script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.DisableCameraMovement">
      <summary>
            Gets or sets a value indicating whether to disable camera movement.
            </summary>
      <value>
        <c>true</c> if camera movement is disabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.DisableCameraZoom">
      <summary>
            Gets a value indicating whether to disable camera zoom.
            </summary>
      <value>
        <c>true</c> if camera zoom should be disabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.FingerAidEnabled">
      <summary>
            Gets a value indicating whether the finger aid is enabled.
            </summary>
      <value>
        <c>true</c> if [finger aid enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.FuselageShapeTool">
      <summary>
            Gets the fuselage shape tool.
            </summary>
      <value>
            The fuselage shape tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.FuselageTool">
      <summary>
            Gets the fuselage tool.
            </summary>
      <value>
            The fuselage tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.GameLoop">
      <summary>
            Gets the designer scene game loop manager.
            </summary>
      <value>
            The designer scene game loop manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.GameObject">
      <summary>
            Gets the game object the designer script is attached to.
            </summary>
      <value>
            The designer script game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.GizmoCamera">
      <summary>
            Gets the shared camera used by gizmos.
            </summary>
      <value>
            The shared camera used by gizmos.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.Gizmos">
      <summary>
            Gets the gizmos.
            </summary>
      <value>
            The gizmos.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.HighlightedPart">
      <summary>
            Gets or sets the highlighted part.
            </summary>
      <value>
            The highlighted part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.IsTutorialRunning">
      <summary>
            Gets a value indicating whether there is currently a tutorial running.
            </summary>
      <value>
        <c>true</c> if there is currently a tutorial running; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.Lights">
      <summary>
            Gets the lights.
            </summary>
      <value>
            The lights.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.MovePartTool">
      <summary>
            Gets the move part tool.
            </summary>
      <value>
            The move part tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.NudgePartTool">
      <summary>
            Gets the nudge part tool.
            </summary>
      <value>
            The nudge part tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.PaintTool">
      <summary>
            Gets the paint tool.
            </summary>
      <value>
            The paint tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.PerformanceAnalysis">
      <summary>
            Gets the performance analysis.
            </summary>
      <value>
            The performance analysis.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.RotatePartTool">
      <summary>
            Gets the rotate part tool.
            </summary>
      <value>
            The rotate part tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.SaveOnExit">
      <summary>
            Gets a value indicating whether to save the current craft to EditorCraftId when exiting the designer.
            </summary>
      <value>
        <c>true</c> if designer should save on exit; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.ScreenshotTool">
      <summary>
            Gets the screenshot tool.
            </summary>
      <value>
            The screenshot tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.SelectedPart">
      <summary>
            Gets the selected part.
            </summary>
      <value>
            The selected part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.ModApi#Design#IDesigner#Symmetry">
      <summary>
            Gets the symmetry utility.
            </summary>
      <value>
            The symmetry utility.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.Tools">
      <summary>
            Gets the tools.
            </summary>
      <value>
            The tools.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.UndoHistory">
      <summary>
            Gets the undo history.
            </summary>
      <value>
            The undo history.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerScript.UserInterface">
      <summary>
            Gets the user interface.
            </summary>
      <value>
            The user interface.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.AddPart(ModApi.Craft.Parts.DesignerPart,UnityEngine.Vector2)">
      <summary>
            Adds the part at the specified screen position.
            </summary>
      <param name="designerPart">The designer part.</param>
      <param name="screenPosition">The screen position.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.AddPart(ModApi.Craft.Parts.DesignerPart,UnityEngine.Vector3)">
      <summary>
            Adds the part at the specified position.
            </summary>
      <param name="designerPart">The designer part.</param>
      <param name="worldPosition">The world position.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.AddTool``1(``0)">
      <summary>
            Adds a new tool to be available for use in the designer.
            </summary>
      <typeparam name="T">The type of the designer tool.</typeparam>
      <param name="newTool">The new tool to add.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.BeginFlight">
      <summary>
            Begins the flight scene with the current design.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.CreateCraftBodyDatas">
      <summary>
            Creates and assigns the body-data for the designer craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.CreateNewCraft">
      <summary>
            Creates the new craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.CreateSubassembly(System.String,ModApi.Craft.Assembly)">
      <summary>
            Creates the subassembly.
            </summary>
      <param name="name">The name.</param>
      <param name="subassembly">The subassembly.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.CreateUndoStep(System.String)">
      <summary>
            Adds the craft in its current state as the most recent undo step.
            </summary>
      <param name="ignoreKey">If specified, then an undo will not be created if the last undo has the same ignore key.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.DeleteSelectedParts">
      <summary>
            Deletes the selected parts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.DeselectPart">
      <summary>
            De-selects the current part, if any is selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.DeselectTool(ModApi.Design.DesignerTool)">
      <summary>
            Deactivates the specified designer tool, which will no longer get input notifications.
            </summary>
      <param name="tool">The designer tool.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.DialogSave">
      <summary>
            Opens save dialog to save craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.DownloadCraft(System.String)">
      <summary>
            Downloads the craft.
            </summary>
      <param name="urlId">The URL ID for the craft.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.Exit">
      <summary>
            Exits the designer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.GenerateCraftXml(System.Boolean,System.Boolean)">
      <summary>
            Generates the craft's XML.
            </summary>
      <param name="undoStep">When set to true, this will skip the more intensive calculations which are not necessary when creating undo steps.</param>
      <param name="optimizeXml">If set to <c>true</c>, the generated craft XML will be optimized where possible.</param>
      <returns>
            The XElement containing the craft XML.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.GetTool``1">
      <summary>
            Gets the tool.
            </summary>
      <typeparam name="T">The type of the tool.</typeparam>
      <returns>
            The tool of the requested type if it has been registered; otherwise null.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.HandleHover(System.Nullable{UnityEngine.Vector2})">
      <summary>
            Handles hover events.
            </summary>
      <param name="hoverPosition">The hover position (or <c>null</c> if the hover was lost).</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.HandleInput(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The e.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.HandlePinch(ModApi.Input.Events.PinchEventArgs)">
      <summary>
            Handles the pinch.
            </summary>
      <param name="e">The pinch event.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.HandleScroll(ModApi.Input.Events.ScrollEventArgs)">
      <summary>
            Handles the scroll event.
            </summary>
      <param name="e">The event.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.HandleSelectedPartClicked(UnityEngine.RaycastHit)">
      <summary>
            Notifies the designer to handle an occurrence of the currently selected part being clicked.
            </summary>
      <param name="hit">The RaycastHit which resulted in the click.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.IsToolActive``1">
      <summary>
            Determines whether a tool of the specified type is active.
            </summary>
      <typeparam name="T">The type to check for.</typeparam>
      <returns>
        <c>true</c> if a tool of the specified type is active; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.IsToolActive(ModApi.Design.DesignerTool)">
      <summary>
            Determines whether the specified tool is active.
            </summary>
      <param name="toolToCheck">The tool to check.</param>
      <returns>
        <c>true</c> if the specified tool is active; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.LoadInitialCraft">
      <summary>
            Loads the initial craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.OnTutorialComplete">
      <summary>
            Called when the tutorial is completed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.OnTutorialStarted">
      <summary>
            Called when the tutorial has started.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.PlaySound(ModApi.Audio.AudioFile)">
      <summary>
            Plays the sound in the designer.
            </summary>
      <param name="audioFile">The audio file to play.</param>
      <returns>The audio source for the sound.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.ReconnectSelectedPart">
      <summary>
            Breaks all connections on the selected part and attempts to reconenct to any nearby parts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.Redo">
      <summary>
            Redo the next step in the undo history.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.Save(System.String,System.String)">
      <summary>
            Saves the craft.
            </summary>
      <param name="craftId">The craft identifier.</param>
      <param name="name">The name of the aircraft.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.SelectPart(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit},System.Boolean)">
      <summary>
            Selects the part.
            </summary>
      <param name="newPart">The value.</param>
      <param name="hit">The raycast hit that selected the part (if any).</param>
      <param name="justAdded">Whether the part was just added (created and immediately selected in the same frame).</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.SelectTool(ModApi.Design.DesignerTool)">
      <summary>
            Selects the tool.
            </summary>
      <param name="tool">The tool.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.SetCraft(Assets.Scripts.Craft.CraftScript,System.Boolean)">
      <summary>
            Sets the craft in the designer and removes any existing craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="positionAtExistingCraftPosition">if set to <c>true</c> then position at the existing craft position.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.SetDefaultGizmosForCurrentPart">
      <summary>
            Sets the currently selected part's gizmos to their default state as if it were initially clicked/selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.SetNonToolCapture(System.Boolean)">
      <summary>
            Sets whether a non-designer tool has exclusively captured input.
            </summary>
      <param name="captured">if set to <c>true</c> a non-designer tool has exclusively captured input.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.ShowMessage(System.String,System.Single)">
      <summary>
            Shows the message.
            </summary>
      <param name="message">The message.</param>
      <param name="time">The duration to display the message.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.Undo">
      <summary>
            Undo the last step in the undo history.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.PerformToolAction(System.Collections.Generic.List{ModApi.Design.DesignerTool},System.Action{ModApi.Design.DesignerTool})">
      <summary>
            Performs an action on the supplied set of tools.
            </summary>
      <param name="tools">The tools to perform the action on.</param>
      <param name="action">The action to perform on each tool.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.ActivateBaseTools">
      <summary>
            Activates the base tools.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.ActivateTool(ModApi.Design.DesignerTool)">
      <summary>
            Activates the specified designer tool (deactivating any non-base tools).
            </summary>
      <param name="toolToActivate">The tool to activate.</param>
      <returns>True if the tool was activated; otherwise false.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.ActivateTools(System.Collections.Generic.List{ModApi.Design.DesignerTool})">
      <summary>
            Activates the tools.
            </summary>
      <param name="toolsToActivate">The tools to activate.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.AddTool``1(``0,``0@)">
      <summary>
            Adds a new tool to be available for use in the designer.
            </summary>
      <typeparam name="T">The type of the designer tool.</typeparam>
      <param name="newTool">The new tool to add.</param>
      <param name="toolRef">The reference to the field where the tool should be store.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.ApplyCraftDesignerSettings(ModApi.Craft.DesignerSettingsData)">
      <summary>
            Applies the craft designer settings.
            </summary>
      <param name="designerSettings">The craft designer settings.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.ApplyShadowQualitySettings(ModApi.Settings.ShadowQualitySettings)">
      <summary>
            Applies the shadow quality settings.
            </summary>
      <param name="quality">The quality settings.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.DeactivateTool(ModApi.Design.DesignerTool)">
      <summary>
            Deactivates the specified designer tool, which will no longer get input notifications.
            </summary>
      <param name="toolToDeactivate">The tool to deactivate.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.DeactivateTools(System.Collections.Generic.List{ModApi.Design.DesignerTool})">
      <summary>
            Deactivates the tools.
            </summary>
      <param name="toolsToDeactivate">The tools to deactivate.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.EnablePartPropertiesHint(ModApi.Craft.Parts.PartModifierData)">
      <summary>
            Enables the part properties hint.
            </summary>
      <param name="modifier">The modifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.GetActiveCommandPod">
      <summary>
            Gets the active command pod, which is the currently selected part's command pod, or the root command pod if no part is selected.
            </summary>
      <returns>The active command pod.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.HandleToolInput(Assets.Scripts.Design.DesignerScript.HandleInputDelegate)">
      <summary>
            Handles the tool input.
            </summary>
      <param name="handleDelegate">The handle delegate.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.NudgePart(ModApi.Utilities.UnityTransform.TransformAxis,System.Single,System.Boolean)">
      <summary>
            Nudges the part by distance on the specified axis.
            </summary>
      <param name="axis">The axis.</param>
      <param name="distance">The distance.</param>
      <param name="activateTool">A value indicating if the tool should be activated (if not already).</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.OnCraftLoaded">
      <summary>
            Called when [craft loaded].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.OnCraftStructureChanged">
      <summary>
            Called when the craft structure changes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.OnSaveCraftDialogOkayButtonClicked(ModApi.Ui.InputDialogScript)">
      <summary>
            Called when okay button in the save dialog button has been clicked.
            </summary>
      <param name="inputDialog">The input dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.OnShadowSettingsChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.ShadowQualitySettings})">
      <summary>
            Called when shadow quality settings change.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingsChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.RotatePart(ModApi.Utilities.UnityTransform.TransformAxis,System.Single,System.Boolean)">
      <summary>
            Rotates the part by the number of degrees around the specified axis.
            </summary>
      <param name="axis">The axis.</param>
      <param name="rotationDegrees">The rotation degrees.</param>
      <param name="activateTool">A value indicating if the tool should be activated (if not already).</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.SaveCraft(System.String)">
      <summary>
            Saves the craft.
            </summary>
      <param name="craftId">The craft identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.SetCapturedTool(ModApi.Design.DesignerTool)">
      <summary>
            Sets the captured tool.
            </summary>
      <param name="designerTool">The designer tool.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.SetNextSymmetryMode">
      <summary>
            Sets the next symmetry mode for the selected part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.SetPreviousSymmetryMode">
      <summary>
            Sets the previous symmetry mode for the selected part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.StartLevel(System.String)">
      <summary>
            Starts the level.
            </summary>
      <param name="craftNodeName">Name of the craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerScript.UnloadCurrentCraft">
      <summary>
            Unloads the current craft.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerToolPanelScript">
      <summary>
            Script for a designer tool panel.
            </summary>
      <seealso cref="T:UI.Xml.XmlLayoutController" />
    </member>
    <member name="F:Assets.Scripts.Design.DesignerToolPanelScript._canvas">
      <summary>
            The canvas
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerToolPanelScript.DesignerUi">
      <summary>
            Gets the designer UI.
            </summary>
      <value>
            The designer UI.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerToolPanelScript.IsOpen">
      <summary>
            Gets a value indicating whether this tool is open.
            </summary>
      <value>
        <c>true</c> if this tool is open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerToolPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the panel.
            </summary>
      <param name="designerUi">The designer UI.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerToolPanelScript.OnClosed">
      <summary>
            Called when the panel is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerToolPanelScript.OnOpened">
      <summary>
            Called when the panel is opened.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerUiController">
      <summary>
            Controller for the designer XML UI.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._activeToolIcon">
      <summary>
            The active tool icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._craftMassText">
      <summary>
            The craft mass text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._craftPriceText">
      <summary>
            The craft price text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._designerUi">
      <summary>
            The designer UI
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._messageText">
      <summary>
            The message text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._messageTime">
      <summary>
            The message time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._partPropertiesHint">
      <summary>
            The part properties hint
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._redoButton">
      <summary>
            The redo button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._toggleFlyoutButtons">
      <summary>
            The toggle flyout buttons
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiController._undoButton">
      <summary>
            The undo button
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiController.Flyouts">
      <summary>
            Gets the flyouts.
            </summary>
      <value>
            The flyouts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiController.MainPanel">
      <summary>
            Gets the main panel.
            </summary>
      <value>
            The main panel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiController.PartPropertiesHintVisible">
      <summary>
            Gets or sets a value indicating whether the part properties hint is visible.
            </summary>
      <value>
        <c>true</c> if the part properties hint is visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the specified designer UI.
            </summary>
      <param name="designerUi">The designer UI.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the UI has been rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.OnToolIconChanged(UnityEngine.Sprite)">
      <summary>
            Called when the tool icon has changed.
            </summary>
      <param name="icon">The icon.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.ShowMessage(System.String,System.Single)">
      <summary>
            Shows the message.
            </summary>
      <param name="message">The message.</param>
      <param name="time">The time.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.UpdateCraftInfo">
      <summary>
            Updates the mass display.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.AddToggleFlyoutButton(UI.Xml.XmlElement,ModApi.Ui.IFlyout)">
      <summary>
            Adds the toggle flyout button.
            </summary>
      <param name="button">The button.</param>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.OnFlyoutCloseButtonClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the flyout close button is clicked.
            </summary>
      <param name="closeButtonElement">The close button element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.OnFlyoutClosing(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is closing.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.OnFlyoutOpening(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opening.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.OnPlayButtonClicked">
      <summary>
            Called when the play button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.OnRedoButtonClicked">
      <summary>
            Called when the redo button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.OnToggleFlyoutButtonClicked(UI.Xml.XmlElement)">
      <summary>
            Called when a toggle flyout button is clicked.
            </summary>
      <param name="xmlElement">The XML element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiController.OnUndoButtonClicked">
      <summary>
            Called when the undo button is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerUiController.ToggleFlyoutButton">
      <summary>
            Container class for a toggle flyout button and its flyout.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiController.ToggleFlyoutButton.ButtonElement">
      <summary>
            Gets or sets the button element.
            </summary>
      <value>
            The button element.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiController.ToggleFlyoutButton.Flyout">
      <summary>
            Gets or sets the flyout.
            </summary>
      <value>
            The flyout.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerUiScript">
      <summary>
            Script for the designer user interface.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiScript._designer">
      <summary>
            The designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiScript._designerUiController">
      <summary>
            The designer UI controller
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiScript._designerUiControllerGameObject">
      <summary>
            The designer UI controller game object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiScript._designerWidget">
      <summary>
            The designer widget.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerUiScript._selectedFlyout">
      <summary>
            The selected flyout.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.DesignerUiScript.SelectedFlyoutChanged">
      <summary>
            Occurs when the selected flyout has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiScript.Designer">
      <summary>
            Gets the designer reference.
            </summary>
      <value>
            The designer reference.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiScript.ModApi#Design#IDesignerUi#Designer">
      <summary>
            Gets the designer reference.
            </summary>
      <value>
            The designer reference.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiScript.DesignerUiController">
      <summary>
            Gets the designer UI controller.
            </summary>
      <value>
            The designer UI controller.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiScript.DesignerWidget">
      <summary>
            Gets the designer widget.
            </summary>
      <value>
            The designer widget.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiScript.Flyouts">
      <summary>
            Gets the default user interface flyouts used in the designer scene.
            </summary>
      <value>
            The default user interface flyouts used in the designer scene.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiScript.GhostViewEnabled">
      <summary>
            Gets or sets a value indicating whether [ghost view enabled].
            </summary>
      <value>
        <c>true</c> if [ghost view enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiScript.SelectedFlyout">
      <summary>
            Gets or sets the selected flyout.
            </summary>
      <value>
            The selected flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiScript.Transform">
      <summary>
            Gets the root transform for the designer user interface.
            </summary>
      <value>
            The root transform for the designer user interface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerUiScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.DesignerUiScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.CloseFlyout(ModApi.Ui.IFlyout)">
      <summary>
            Closes the flyout.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.Initialize">
      <summary>
            Initializes the designer UI.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.OnBeginFlightClicked">
      <summary>
            Called when the begin flight button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.SetMainPanelVisibility(System.Boolean)">
      <summary>
            Sets the main panel's visibility.
            </summary>
      <param name="visible">if set to <c>true</c> [visible].</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.ShowMessage(System.String,System.Single)">
      <summary>
            Shows the message.
            </summary>
      <param name="message">The message.</param>
      <param name="time">The time.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.ToggleFlyout(ModApi.Ui.IFlyout)">
      <summary>
            Toggles the flyout's visibility. If it is currently being shown, then it will be hidden. If it
            is currently hidden, then it will be shown.
            </summary>
      <param name="flyout">The flyout to toggle.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.OnCraftLoaded">
      <summary>
            Called when a craft has been loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerUiScript.OnDestroy">
      <summary>
            Called when the behavior is about to be destroyed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DesignerWidgetScript">
      <summary>
            Widget that handles routing touch inputs into the 3D world in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerWidgetScript.ResourceCleanupInterval">
      <summary>
            The resource cleanup interval
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerWidgetScript._designer">
      <summary>
            The designer root game object, set by inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerWidgetScript._isPressingButtonOrTouching">
      <summary>
            The _is pressing button or touching
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerWidgetScript._pointerHovering">
      <summary>
            A value indicating whether or not the pointer is currently hovering over this object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerWidgetScript._pointerHoveringLastFrame">
      <summary>
            A value indicating whether or not the pointer was hovering over this object on the last frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DesignerWidgetScript._timeOfLastResourceCleanup">
      <summary>
            The _time of last resource cleanup
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DesignerWidgetScript.FingerAid">
      <summary>
            Gets or sets the finger aid.
            </summary>
      <value>
            The finger aid.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerWidgetScript.AddPartFinish(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Adds the part finish.
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerWidgetScript.AddPartMove(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Adds the part move.
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerWidgetScript.AddPartStart(ModApi.Craft.Parts.DesignerPart,UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Starting point for adding a part that is pulled out from the part list.
            </summary>
      <param name="part">The part.</param>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerWidgetScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer is pressed.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerWidgetScript.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer enters this object.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerWidgetScript.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer exits this object.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerWidgetScript.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer is released.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerWidgetScript.LateUpdate">
      <summary>
            Unity LateUpdate method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DesignerWidgetScript.PerformResourceCleanupIfNecessary">
      <summary>
            Performs the resource cleanup if necessary.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DownloadCraftDialogScript">
      <summary>
            Script for the download craft dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Design.DownloadCraftDialogScript._craftId">
      <summary>
            The craft identifier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadCraftDialogScript._designerScript">
      <summary>
            The designer script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadCraftDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadCraftDialogScript._progressBar">
      <summary>
            The download progress bar
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadCraftDialogScript._request">
      <summary>
            The download request.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadCraftDialogScript._statusLabel">
      <summary>
            The download status label
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadCraftDialogScript.Create(UnityEngine.Transform,System.String)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent canvas use for this dialog.</param>
      <param name="craftId">The craft identifier.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadCraftDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadCraftDialogScript.OnCancelButtonClicked">
      <summary>
            Called when the cancel button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadCraftDialogScript.ShowError(System.String)">
      <summary>
            Shows the error.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadCraftDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadCraftDialogScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadCraftDialogScript.CompleteDownload">
      <summary>
            Completes the download.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadCraftDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout has been rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="T:Assets.Scripts.Design.DropZoneScript">
      <summary>
            Script for drop zones that show up while parts are being dragged around.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.DropZoneScript._selected">
      <summary>
            The selected flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.DropZoneScript.Selected">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.DropZoneScript" /> is selected.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.FuselageShapePanelScript">
      <summary>
            Script for the fuselage shape panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript.MaxSliderValue">
      <summary>
            The maximum slider value
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._addSectionRow">
      <summary>
            The add section row
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._cornerRadiuses">
      <summary>
            The corner radiuses
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._fuselagePanel">
      <summary>
            The fuselage panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._jointPanel">
      <summary>
            The joint panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._messageText">
      <summary>
            The message text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._sliders">
      <summary>
            The corner sliders.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._sliderUpdating">
      <summary>
            The slider is updating.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._spinnerDepth">
      <summary>
            The depth spinner
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._spinnerGridSize">
      <summary>
            The spinner grid size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._spinnerOffsetX">
      <summary>
            The offset x spinner
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._spinnerOffsetY">
      <summary>
            The offset y spinner
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._spinnerOffsetZ">
      <summary>
            The offset z spinner
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._spinnerWidth">
      <summary>
            The width spinner
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.FuselageShapePanelScript._tool">
      <summary>
            Gets the fuselage shape tool.
            </summary>
      <value>
            The fuselage shape tool.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnFuselageOffsetChanged">
      <summary>
            Called when the fuselage offset has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnOpened">
      <summary>
            Called when the flyout is opening.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnAddSectionClicked">
      <summary>
            Called when the add section button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnBackwardsClicked">
      <summary>
            Called when the backwards button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnDepthChanged(System.Single)">
      <summary>
            Called when the depth has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnForwardsClicked">
      <summary>
            Called when the forwards button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnFuselageSelected(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript)">
      <summary>
            Called when a fuselage is selected.
            </summary>
      <param name="fuselage">The fuselage.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnGridSizeChanged">
      <summary>
            Called when the grid size has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnGridSizeSpinnerChanged">
      <summary>
            Called when the grid snap changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnJointSelected(Assets.Scripts.Design.Tools.Fuselage.FuselageJoint)">
      <summary>
            Called when a joint is selected.
            </summary>
      <param name="joint">The joint.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnJointUpdated(Assets.Scripts.Design.Tools.Fuselage.FuselageJoint)">
      <summary>
            Called when the joint is updated.
            </summary>
      <param name="joint">The joint.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnSliderChanged(System.Int32,System.Single)">
      <summary>
            Called when the slider has changed.
            </summary>
      <param name="cornerIndex">Index of the corner.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.OnWidthChanged(System.Single)">
      <summary>
            Called when the width has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.RefreshJointSpinners">
      <summary>
            Updates the spinner values.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.RefreshUi">
      <summary>
            Refreshes the UI.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.SelectFuselage(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript,ModApi.Craft.Parts.AttachPointScript)">
      <summary>
            Selects the fuselage.
            </summary>
      <param name="fuselage">The fuselage.</param>
      <param name="attachPointScript">The attach point script.</param>
      <returns>
            Unity enumerator.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.SetSize(System.Single,System.Single)">
      <summary>
            Sets the size of the joint.
            </summary>
      <param name="x">The x size.</param>
      <param name="y">The y size.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.SetupOffsetSpinner(Assets.Scripts.Ui.SpinnerScript,System.Single,System.Single)">
      <summary>
            Setups the offset spinner.
            </summary>
      <param name="spinner">The spinner.</param>
      <param name="minValue">The minimum value.</param>
      <param name="maxValue">The maximum value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.SetupScaleSpinner(Assets.Scripts.Ui.SpinnerScript)">
      <summary>
            Setups the scale spinner.
            </summary>
      <param name="spinner">The spinner.</param>
    </member>
    <member name="M:Assets.Scripts.Design.FuselageShapePanelScript.UpdateSliderText(UnityEngine.UI.Slider,System.Single)">
      <summary>
            Updates the slider text.
            </summary>
      <param name="slider">The slider.</param>
      <param name="percentage">The percentage.</param>
    </member>
    <member name="T:Assets.Scripts.Design.HideScript">
      <summary>
            Script used for toggling objects invisible during screenshots.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.HideScript._displayOnlyWhenDragged">
      <summary>
            The display only when dragged flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.HideScript._hideDuringPartIcons">
      <summary>
            The hide during part icons flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.HideScript._hideDuringScreenshot">
      <summary>
            The hide during screenshot flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.HideScript.DisplayOnlyWhenDragged">
      <summary>
            Gets a value indicating whether to display only when dragged.
            </summary>
      <value>
        <c>true</c> if display only when dragged; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.HideScript.HideDuringPartIcons">
      <summary>
            Gets a value indicating whether to hide during part icons.
            </summary>
      <value>
        <c>true</c> if hide during part icons; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.HideScript.HideDuringScreenshot">
      <summary>
            Gets a value indicating whether to hide during screenshot.
            </summary>
      <value>
        <c>true</c> if hide during screenshot; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.LoadCraftPanelScript">
      <summary>
            Script for the load craft UI.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.LoadCraftPanelScript._content">
      <summary>
            The content, where the list items will be placed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.LoadCraftPanelScript._craftDesigns">
      <summary>
            The craft designs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.LoadCraftPanelScript._listItemPrefab">
      <summary>
            The list item prefab.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.LoadCraftPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.LoadCraftPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.LoadCraftPanelScript.CreateListItem(System.String,UI.Xml.XmlElement)">
      <summary>
            Creates the part list item.
            </summary>
      <param name="craftId">The craft identifier.</param>
      <param name="parent">The parent transform.</param>
    </member>
    <member name="M:Assets.Scripts.Design.LoadCraftPanelScript.FilterItems(System.String)">
      <summary>
            Filters the items.
            </summary>
      <param name="searchFilter">The search filter.</param>
    </member>
    <member name="M:Assets.Scripts.Design.LoadCraftPanelScript.OnDeleteItemClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the delete button is clicked.
            </summary>
      <param name="deleteButtonElement">The delete button element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.LoadCraftPanelScript.OnFlyoutOpening(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opening.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.LoadCraftPanelScript.OnListItemClicked(UI.Xml.XmlElement)">
      <summary>
            Called when a list item is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.LoadCraftPanelScript.RefreshList">
      <summary>
            Refreshes the list.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.MenuPanelScript">
      <summary>
            Script for the menu panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.EnsureNoTutorial">
      <summary>
            Checks if the tutorial is running and if it is then displays an error message to the user.
            </summary>
      <returns>True if the tutorial is not running, false otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnBugReportButtonClicked">
      <summary>
            Called when the bug report button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnDownloadCraftButtonClicked">
      <summary>
            Called when the download craft button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnExitButtonClicked">
      <summary>
            Called when exit button clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnLoadCraftButtonClicked">
      <summary>
            Called when load craft button clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnNewCraftButtonClicked">
      <summary>
            Called when the new craft button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnNewCraftDialogOkayButtonClicked(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when new craft dialog okay button is clicked.
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnPerformanceAnalyzerButtonClicked">
      <summary>
            Called when the performance analyzer button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnSaveCraftButtonClicked">
      <summary>
            Called when save craft button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnSettingsButtonClicked">
      <summary>
            Called when the settings button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MenuPanelScript.OnShareCraftButtonClicked">
      <summary>
            Called when the share craft button is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.MovePartPanelScript">
      <summary>
            The panel for the move part tool.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.MovePartPanelScript._designerSettings">
      <summary>
            The designer settings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.MovePartPanelScript._enableAutoResizeToggle">
      <summary>
            The enable automatic resize toggle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.MovePartPanelScript._enableAutoRotationToggle">
      <summary>
            The enable automatic rotation toggle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.MovePartPanelScript._enableGizmosToggle">
      <summary>
            The enable gizmos toggle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.MovePartPanelScript._refreshingPanel">
      <summary>
            The refreshing panel flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.MovePartPanelScript._showAttachPointsToggle">
      <summary>
            The show attach points toggle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.MovePartPanelScript._spinnerAngleSnap">
      <summary>
            The spinner angle snap
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.MovePartPanelScript._spinnerGridSize">
      <summary>
            The spinner grid size
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.OnOpened">
      <summary>
            Called when the panel is opened.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.OnAngleSnapChanged">
      <summary>
            Called when the angle snap changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.OnEnableAutoResizeChanged">
      <summary>
            Called when the enable automatic resize has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.OnEnableAutoRotationChanged">
      <summary>
            Called when the enable automatic rotation has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.OnEnableGizmosChanged">
      <summary>
            Called when the enable gizmos toggle has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.OnGridSizeChanged">
      <summary>
            Called when the angle snap changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the selected part has changed.
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.OnShowAttachPointsChanged">
      <summary>
            Called when the show attach points toggle has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.RefreshPanel">
      <summary>
            Refreshes the panel buttons/text/info/etc.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.MovePartPanelScript.ReselectPart">
      <summary>
            Reselects the part.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.NudgePartPanelScript">
      <summary>
            The panel to nudge parts.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.NudgePartPanelScript._content">
      <summary>
            The content
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.NudgePartPanelScript._messageText">
      <summary>
            The message text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.NudgePartPanelScript._spinnerGridSize">
      <summary>
            The spinner for grid size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.NudgePartPanelScript._spinnerMode">
      <summary>
            The spinner mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.NudgePartPanelScript._spinnerOrientation">
      <summary>
            The spinner orientation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.NudgePartPanelScript._spinnerX">
      <summary>
            The spinner x
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.NudgePartPanelScript._spinnerY">
      <summary>
            The spinner y
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.NudgePartPanelScript._spinnerZ">
      <summary>
            The spinner z
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.NudgePartPanelScript._tool">
      <summary>
            The tool
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.OnOpened">
      <summary>
            Called when the panel is opened.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.OnGizmoAdjusted(Assets.Scripts.Design.Tools.MovementTool)">
      <summary>
            Called when the gizmo has been adjusted.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.OnGridSizeChanged">
      <summary>
            Called when the grid size has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.OnGridSizeSpinnerChanged">
      <summary>
            Called when the angle snap changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.OnModeChanged(System.String)">
      <summary>
            Called when the mode has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.OnOrientationChanged(System.String)">
      <summary>
            Called when the orientation has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.OnPositionSpinnerChanged">
      <summary>
            Called when the grid snap changes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when [selected part changed].
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.OnSelfConnectedButtonClicked">
      <summary>
            Called when the self/connected movement button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.NudgePartPanelScript.RefreshPanel">
      <summary>
            Refreshes the panel buttons/text/info/etc.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.ColorButtonScript">
      <summary>
            The script for a color button on the paint flyout in the designer.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerDownHandler" />
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorButtonScript._glossOverlay">
      <summary>
            The gloss overlay
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorButtonScript._image">
      <summary>
            The image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorButtonScript._isSelected">
      <summary>
            A value indicating whether this button is selected.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorButtonScript._partMaterial">
      <summary>
            The part material associated with the button.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.ColorButtonScript.SelectedDelegate">
      <summary>
            The delegate used when the button is selected.
            </summary>
      <param name="colorButton">The color button that was selected.</param>
    </member>
    <member name="E:Assets.Scripts.Design.Paint.ColorButtonScript.Selected">
      <summary>
            Occurs when a color button is selected.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorButtonScript.Color">
      <summary>
            Gets the color.
            </summary>
      <value>
            The color.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorButtonScript.IsSelected">
      <summary>
            Gets or sets a value indicating whether this button is selected.
            </summary>
      <value>
        <c>true</c> if this button is selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorButtonScript.PartMaterial">
      <summary>
            Gets or sets the part material associated with the button.
            </summary>
      <value>
            The part material associated with the button.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorButtonScript.Initialize(UI.Xml.XmlElement)">
      <summary>
            Initializes the color button.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorButtonScript.UnityEngine#EventSystems#IPointerDownHandler#OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Handles the on pointer down event.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorButtonScript.Refresh">
      <summary>
            Refreshes the button based on the part material's current settings.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorButtonScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Handles the on pointer down event.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.ColorButtonsPanelScript">
      <summary>
            The script for the panel containing the color buttons on the paint flyout.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorButtonsPanelScript.ReservedColorCount">
      <summary>
            The reserved color count (the number of colors that are not shown in the UI).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorButtonsPanelScript._buttonTemplate">
      <summary>
            The button template.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorButtonsPanelScript._colorButtons">
      <summary>
            The list of color buttons.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorButtonsPanelScript._element">
      <summary>
            The xml element for this panel.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.ColorButtonsPanelScript.ColorSelectedDelegate">
      <summary>
            The delegate used when the selected color button changes.
            </summary>
      <param name="colorButton">The color button that was selected.</param>
    </member>
    <member name="E:Assets.Scripts.Design.Paint.ColorButtonsPanelScript.ColorSelected">
      <summary>
            Occurs when a color button is selected.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorButtonsPanelScript.SelectedColor">
      <summary>
            Gets the selected color button.
            </summary>
      <value>
            The selected color button.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorButtonsPanelScript.DeselectColor">
      <summary>
            De-selects any selected color button.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorButtonsPanelScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorButtonsPanelScript.OnThemeChanged(ModApi.Craft.ThemeData)">
      <summary>
            Called when the theme is changed.
            </summary>
      <param name="theme">The new theme.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorButtonsPanelScript.OnColorSelected(Assets.Scripts.Design.Paint.ColorButtonScript)">
      <summary>
            Called when a color button is selected.
            </summary>
      <param name="colorButtonScript">The color button that was selected (or <c>null</c> to de-select buttons).</param>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.ColorGradient">
      <summary>
            Color gradient handles interpolating between colors for a color picker.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorGradient.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Paint.ColorGradient" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorGradient.Colors">
      <summary>
            Gets the colors.
            </summary>
      <value>
            The colors.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorGradient.Shades">
      <summary>
            Gets the shades.
            </summary>
      <value>
            The shades.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorGradient.ShadesBetweenColors">
      <summary>
            Gets or sets the shades between colors.
            </summary>
      <value>
            The shades between colors.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorGradient.CalculateShades">
      <summary>
            Calculates the shades.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorGradient.GenerateTexture(System.Int32,System.Int32)">
      <summary>
            Generates the texture.
            </summary>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <returns>The generated texture.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorGradient.UpdateTexture(UnityEngine.Texture2D)">
      <summary>
            Updates the texture.
            </summary>
      <param name="texture">The texture to update.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorGradient.DrawPixels(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32,UnityEngine.Color)">
      <summary>
            Draws the pixels.
            </summary>
      <param name="texture">The texture.</param>
      <param name="left">The left.</param>
      <param name="top">The top.</param>
      <param name="right">The right.</param>
      <param name="bottom">The bottom.</param>
      <param name="color">The color.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.ColorGradient.Shade">
      <summary>
            Shade used by a color gradient.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorGradient.Shade.#ctor(UnityEngine.Vector3)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Paint.ColorGradient.Shade" /> class.
            </summary>
      <param name="color">The color.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorGradient.Shade.Color">
      <summary>
            Gets or sets the color.
            </summary>
      <value>
            The color.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorGradient.Shade.ColorGradient">
      <summary>
            Gets or sets the color gradient.
            </summary>
      <value>
            The color gradient.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorGradient.Shade.End">
      <summary>
            Gets or sets the end.
            </summary>
      <value>
            The end.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorGradient.Shade.Start">
      <summary>
            Gets or sets the x.
            </summary>
      <value>
            The x.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorGradient.Shade.Width">
      <summary>
            Gets the width.
            </summary>
      <value>
            The width.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.ColorPickerScript">
      <summary>
            Script for the color picker control.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorPickerScript._gradientImage">
      <summary>
            The gradient image component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorPickerScript._selectionIndicator">
      <summary>
            The selection image.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorPickerScript._texture">
      <summary>
            The texture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.ColorPickerScript._transform">
      <summary>
            The transform for this component.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.ColorPickerScript.ColorPickerDelegate">
      <summary>
            Delegate for color picker events.
            </summary>
      <param name="colorPickerScript">The color picker script.</param>
      <param name="shade">The shade.</param>
    </member>
    <member name="E:Assets.Scripts.Design.Paint.ColorPickerScript.UserSelectedColor">
      <summary>
            Occurs when the use selects a color.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorPickerScript.ColorGradient">
      <summary>
            Gets the color gradient.
            </summary>
      <value>
            The color gradient.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.ColorPickerScript.SelectedColor">
      <summary>
            Gets or sets the color of the selected.
            </summary>
      <value>
            The color of the selected.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.Cleanup">
      <summary>
            Cleans up this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.Initialize(UI.Xml.XmlElement)">
      <summary>
            Initializes the specified element.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.UnityEngine#EventSystems#IDragHandler#OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Handles the on pointer drag event.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.UnityEngine#EventSystems#IPointerDownHandler#OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Handles the on pointer down event.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.SelectClosestShade(UnityEngine.Color)">
      <summary>
            Selects the closest shade.
            </summary>
      <param name="color">The color.</param>
      <returns>The closest shade.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.SetColorGradient(Assets.Scripts.Design.Paint.ColorGradient)">
      <summary>
            Sets the color gradient.
            </summary>
      <param name="colorGradient">The color gradient.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Handles the on pointer drag event.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Handles the on pointer down event.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.HandleInput(UnityEngine.Vector2)">
      <summary>
            Handles the input.
            </summary>
      <param name="screenPosition">The screen position.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.SelectShade(Assets.Scripts.Design.Paint.ColorGradient.Shade)">
      <summary>
            Selects the shade.
            </summary>
      <param name="shade">The shade.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.ColorPickerScript.SetSelection(System.Int32)">
      <summary>
            Sets the selection to the index. Must be done after a frame so that rect transforms
            have a chance to update after initialization.
            </summary>
      <param name="index">The index.</param>
      <returns>The Unity enumerator.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.EditColorPanelScript">
      <summary>
            The UI panel containing the components used to edit a color in the paint flyout.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._colorInput">
      <summary>
            The color input
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._colorInputChanging">
      <summary>
            The flag that indicates the color input is changing from user input.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._detailSlider">
      <summary>
            The detail slider component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._detailSliderLabel">
      <summary>
            The detail slider label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._element">
      <summary>
            The element
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._emissionSlider">
      <summary>
            The emission slider component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._emissionSliderLabel">
      <summary>
            The emission slider label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._hueColorPicker">
      <summary>
            The hue color picker component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._metallicSlider">
      <summary>
            The metallic slider component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._metallicSliderLabel">
      <summary>
            The metallic slider label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._selectedColor">
      <summary>
            The selected color button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._shadeColorPicker">
      <summary>
            The shade color picker component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._smoothnessSlider">
      <summary>
            The smoothness slider component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._smoothnessSliderLabel">
      <summary>
            The smoothness slider label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.EditColorPanelScript._styleSpinner">
      <summary>
            The style spinner
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.EditColorPanelScript.ColorUpdatedDelegate">
      <summary>
            The delegate used when a color button is updated.
            </summary>
      <param name="colorButton">The color button that was updated.</param>
    </member>
    <member name="E:Assets.Scripts.Design.Paint.EditColorPanelScript.ColorUpdated">
      <summary>
            Occurs when a color is updated.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Paint.EditColorPanelScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.Paint.EditColorPanelScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.Cleanup">
      <summary>
            Cleans up this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.OnColorSelected(Assets.Scripts.Design.Paint.ColorButtonScript)">
      <summary>
            Called when a color button is selected.
            </summary>
      <param name="selectedColor">The color button that was selected.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.HueSelected(Assets.Scripts.Design.Paint.ColorPickerScript,Assets.Scripts.Design.Paint.ColorGradient.Shade)">
      <summary>
            Called when a hue is selected.
            </summary>
      <param name="colorPickerScript">The color picker script.</param>
      <param name="shade">The shade that was selected.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.InitializeHueColorPicker(UI.Xml.XmlLayout)">
      <summary>
            Initializes the hue color picker.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.InitializeShadeColorPicker(UI.Xml.XmlLayout)">
      <summary>
            Initializes the shade color picker.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.InitializeStyles">
      <summary>
            Initializes the styles.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.OnColorInputChanged(System.String)">
      <summary>
            Called when the color input has changed.
            </summary>
      <param name="colorString">The color string.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.OnDetailChanged(System.Single)">
      <summary>
            Called when the detail value is changed.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.OnEmissionChanged(System.Single)">
      <summary>
            Called when the emission value is changed.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.OnMetallicChanged(System.Single)">
      <summary>
            Called when the metallic value is changed.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.OnSmoothnessChanged(System.Single)">
      <summary>
            Called when the smoothness value is changed.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.OnStyleChanged(System.String)">
      <summary>
            Called when the style is changed.
            </summary>
      <param name="styleName">The name of the new style.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.RefreshColorPickers(UnityEngine.Color)">
      <summary>
            Refreshes the color pickers.
            </summary>
      <param name="color">The color.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.RefreshStyle(System.String)">
      <summary>
            Refreshes the style settings.
            </summary>
      <param name="styleName">The name of the selected style.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.ShadeSelected(Assets.Scripts.Design.Paint.ColorPickerScript,Assets.Scripts.Design.Paint.ColorGradient.Shade)">
      <summary>
            Called when a shade is selected.
            </summary>
      <param name="colorPickerScript">The color picker script.</param>
      <param name="shade">The shade that was selected.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.UpdateColorInput">
      <summary>
            Updates the color input.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.UpdateSelectedButton">
      <summary>
            Updates the selected button.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.EditColorPanelScript.UpdateSelectedButtonColor(UnityEngine.Color)">
      <summary>
            Updates the color of the selected button.
            </summary>
      <param name="color">The color.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Paint.PaintPanelScript">
      <summary>
            The script for the paint job flyout.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.Paint.PaintPanelScript._colorButtonsPanel">
      <summary>
            The color buttons panel script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.PaintPanelScript._designer">
      <summary>
            The designer script reference.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.PaintPanelScript._editColorPanel">
      <summary>
            The edit color panel script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Paint.PaintPanelScript._themeSpinner">
      <summary>
            The theme spinner
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.OnClosed">
      <summary>
            Called when the flyout is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.OnOpened">
      <summary>
            Called when the flyout is opening.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.OnColorSelected(Assets.Scripts.Design.Paint.ColorButtonScript)">
      <summary>
            Called when a color button is selected.
            </summary>
      <param name="colorButtonScript">The color button script that was selected.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.OnColorUpdated(Assets.Scripts.Design.Paint.ColorButtonScript)">
      <summary>
            Called when the color is updated.
            </summary>
      <param name="colorButton">The color button that was updated.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.OnTargetSpinnerChanged(System.String)">
      <summary>
            Called when the target spinner value has changed.
            </summary>
      <param name="target">The target name.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.OnThemeSpinnerChanged(System.String)">
      <summary>
            Called when the theme spinner value has changed.
            </summary>
      <param name="themeName">Name of the theme.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Paint.PaintPanelScript.RefreshUi">
      <summary>
            Refreshes the UI.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartCollisionDetector">
      <summary>
            A class used for detecting colliding parts in the designer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartCollisionDetector._selectedColliderIds">
      <summary>
            A hash set containing all colliders (including disabled ones) that can be found in the entire selection of selected parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartCollisionDetector._selectedColliderScripts">
      <summary>
            The collection of collider scripts contained in the current part selection.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartCollisionDetector._symmetricParts">
      <summary>
            The list of symmetric parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartCollisionDetector._tempCollisionTestResults">
      <summary>
            A temporary pre-allocated array used in part collision detection tests.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartCollisionDetector.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartCollisionDetector" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartCollisionDetector.PartCollisionTolerance">
      <summary>
            Gets or sets the part collision tolerance.
            </summary>
      <value>
            The part collision tolerance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartCollisionDetector.Enabled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.PartCollisionDetector" /> is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartCollisionDetector.SelectedParts">
      <summary>
            Gets the currently selected parts for which to detect collisions.
            </summary>
      <value>
            The currently selected parts.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartCollisionDetector.AddPartSelection(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Adds the part to the selection.
            </summary>
      <param name="part">The part to add to the selection.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartCollisionDetector.ClearPartSelection">
      <summary>
            Clears the part selection.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartCollisionDetector.DetectCollisions(System.Boolean)">
      <summary>
            Determines whether any of the selected parts are colliding with other parts in the designer.
            </summary>
      <param name="updateMaterials">If set to <c>true</c> material scripts will be updated to indicate whether there are part collisions.</param>
      <returns>A value indicating whether any of the selected parts are colliding with other parts in the designer.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartCollisionDetector.DetectCollisions(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Detects collisions for the specified parts.
            This will check the parts for collisions with other parts but not with one another.
            </summary>
      <param name="parts">The parts for which to test for collisions.</param>
      <returns>
        <c>true</c> if a collision was detected.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.PartListItemScript">
      <summary>
            Script for an item in the part list.
            </summary>
      <seealso cref="T:UnityEngine.EventSystems.IDragHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IBeginDragHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IEndDragHandler" />
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.PartListItemScript._draggingPart">
      <summary>
            The dragging part
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListItemScript._iconImage">
      <summary>
            The icon image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListItemScript._scrollDelta">
      <summary>
            The scroll delta
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartListItemScript.DesignerPart">
      <summary>
            Gets or sets the designer part.
            </summary>
      <value>
            The designer part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartListItemScript.IconSprite">
      <summary>
            Gets or sets the icon image.
            </summary>
      <value>
            The icon image.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartListItemScript.PartList">
      <summary>
            Gets or sets the part list.
            </summary>
      <value>
            The part list.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartListItemScript.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule before a drag is started.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListItemScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When dragging is occurring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListItemScript.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule when a drag is ended.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListItemScript.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the part enters the part.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListItemScript.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer exits the part.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListItemScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartListPanelScript">
      <summary>
            Script for the part list panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.PartListPanelScript._hoveredPartItem">
      <summary>
            The hovered part item
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListPanelScript._parts">
      <summary>
            The parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListPanelScript._popupElement">
      <summary>
            The popup element
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListPanelScript._popupTimer">
      <summary>
            The popup timer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListPanelScript._refreshSubassemblyList">
      <summary>
            The refresh subassembly flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListPanelScript._subassemblies">
      <summary>
            The subassemblies
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListPanelScript._subassemblyListItemPrefab">
      <summary>
            The subassembly list item prefab
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListPanelScript._templatePart">
      <summary>
            The template part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartListPanelScript._templatePartCategory">
      <summary>
            The template part category.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartListPanelScript.DesignerParts">
      <summary>
            Gets the designer parts.
            </summary>
      <value>
            The designer parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartListPanelScript.HoveredPartItem">
      <summary>
            Gets or sets the hovered part item.
            </summary>
      <value>
            The hovered part item.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.AddPart(Assets.Scripts.Design.PartListItemScript,UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Adds the part.
            </summary>
      <param name="partListItem">The part list item.</param>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.CreateSubassembly(System.String,ModApi.Craft.Assembly,ModApi.Craft.ICraftScript)">
      <summary>
            Creates the subassembly.
            </summary>
      <param name="name">The name.</param>
      <param name="subassembly">The subassembly.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.FinishedAddingPart(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when finished adding a new part.
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.MovePart(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Moves the part.
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.CreatePartListItem(ModApi.Craft.Parts.DesignerPart,UI.Xml.XmlElement)">
      <summary>
            Creates the part list item.
            </summary>
      <param name="part">The part.</param>
      <param name="parent">The parent element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.CreateSubassemblyListItem(ModApi.Craft.Parts.DesignerPart,UnityEngine.Transform)">
      <summary>
            Creates the part list item.
            </summary>
      <param name="subassembly">The subassembly.</param>
      <param name="parent">The parent transform.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.FilterSubassemblies(System.String)">
      <summary>
            Filters the subassemblies.
            </summary>
      <param name="searchFilter">The search filter.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.LoadPartListItems(System.String,UI.Xml.XmlElement)">
      <summary>
            Loads the part list items.
            </summary>
      <param name="categoryId">The category identifier.</param>
      <param name="contentParent">The content parent.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.OnDeleteSubassemblyClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the subassembly delete button is clicked.
            </summary>
      <param name="deleteButtonElement">The delete button element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.OnFlyoutClosed(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is closed.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.OnPartCategoryButtonClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the part category is clicked.
            </summary>
      <param name="xmlElement">The XML element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.PopulateSubbassemblyList">
      <summary>
            Populates the subassembly list.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.RefreshPartCategories">
      <summary>
            Refreshes the part categories UI, adding any categories that are missing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.RefreshUi">
      <summary>
            Refreshes the UI.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.UpdateInfoPopup(Assets.Scripts.Design.PartListItemScript)">
      <summary>
            Updates the information popup.
            </summary>
      <param name="partListItem">The part list item.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartListPanelScript.UpdatePartList(System.String)">
      <summary>
            Updates the part list.
            </summary>
      <param name="categoryId">The category identifier.</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.CenterButtonProperty">
      <summary>
            A class representing a part modifier's property that is represented in the designer by a centered button.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.PartProperties.ConfigurableProperty" />
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CenterButtonProperty.#ctor(System.Reflection.FieldInfo,ModApi.Craft.Parts.Attributes.DesignerPropertyAttribute)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartProperties.CenterButtonProperty" /> class.
            </summary>
      <param name="field">The field associated with the property.</param>
      <param name="attribute">The attribute for this configurable property.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CenterButtonProperty.RefreshUI">
      <summary>
            Refreshes the UI, updating it to reflect the current value of the property.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CenterButtonProperty.OnCreateUI(UnityEngine.GameObject,Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript)">
      <summary>
            Called when the UI for the property needs to be created.
            </summary>
      <param name="parent">The parent game object for the new UI elements.</param>
      <param name="flyout">The flyout.</param>
      <returns>
            The root game object for the property's UI.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CenterButtonProperty.OnClick">
      <summary>
            Called when the button is activated.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.CommandPodPartProperties">
      <summary>
            Designer part properties script for command pods.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript" />
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.StartChangePilotOrientationLabelText">
      <summary>
            The start change pilot orientation label text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.CommandPodPartProperties._changePilotOrientationButton">
      <summary>
            The change pilot orientation button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.CommandPodPartProperties._changePilotOrientationButtonLabel">
      <summary>
            The change pilot orientation button label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.CommandPodPartProperties._designer">
      <summary>
            The designer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.CommandPodPartProperties._hasPilotAdjustmentOcurred">
      <summary>
            A value indicating whether a pilot orientation adjustment has occurred since this currently selected part has been selected.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.CommandPodPartProperties._pilotOrientationAdjusterUpdateAction">
      <summary>
            The action to update the pilot orientation adjuster gizmo.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.CommandPodPartProperties._pilotOrientationAdjustor">
      <summary>
            The pilot orientation adjustor
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.CommandPodPartProperties._resetPilotOrientationButton">
      <summary>
            The reset pilot orientation button
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.Data">
      <summary>
            Gets the CommandPodData associated with this flyout.
            </summary>
      <value>
            The CommandPodData associated with this flyout.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnPartDeselected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the part is deselected.
            </summary>
      <param name="part">The part that has been deselected.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnPartSelected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when a part has been selected.
            </summary>
      <param name="part">The new part that has been selected.</param>
      <returns>
        <c>true</c> if the control handles this type of part, or <c>false</c> otherwise.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnPropertiesClosed">
      <summary>
            Called when part properties is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnPropertiesOpened">
      <summary>
            Called when part properties is opened.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnInitialized">
      <summary>
            Called when the script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnChangePilotOrientationbuttonClicked(System.Boolean)">
      <summary>
            Called when the _changePilotOrientationButton button has been clicked.
            </summary>
      <param name="isChecked">if set to <c>true</c> [is checked].</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Raises the <see cref="E:Click" /> event.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnPilotSeatAdjustmentEnded(Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor,UnityEngine.Vector3)">
      <summary>
            Called when a pilot seat adjustment has ended.
            </summary>
      <param name="source">The source.</param>
      <param name="finalEulerAngles">The final euler angles.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnPilotSeatAdjustmentStarted(Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor)">
      <summary>
            Called when a pilot seat adjustment has started.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.OnResetPilotSeatRotation">
      <summary>
            Called when the reset pilot seat button has been clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.CommandPodPartProperties.UpdatePilotOrientationAdjustorGizmo">
      <summary>
            Updates the pilot orientation adjustor gizmo.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.ConfigurableProperty">
      <summary>
            A base class for generic configurable properties on part modifiers.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.#ctor(System.Reflection.FieldInfo,ModApi.Craft.Parts.Attributes.DesignerPropertyAttribute)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartProperties.ConfigurableProperty" /> class.
            </summary>
      <param name="field">The field associated with the property.</param>
      <param name="attribute">The attribute for this configurable property.</param>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ConfigurableProperty.Attribute">
      <summary>
            Gets the attribute for this configurable property.
            </summary>
      <value>
            The attribute for this configurable property.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ConfigurableProperty.CurrentFieldTarget">
      <summary>
            Gets the field target object (object on which the field is defined).
            </summary>
      <value>
            The field target object (object on which the field is defined).
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ConfigurableProperty.CurrentPartModifier">
      <summary>
            Gets the current part modifier being configured.
            </summary>
      <value>
            The current part modifier being configured.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ConfigurableProperty.CurrentPartProperties">
      <summary>
            Gets the part properties script associated with the part modifier.
            </summary>
      <value>
            The part properties script associated with the part modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ConfigurableProperty.Field">
      <summary>
            Gets the field associated with the property.
            </summary>
      <value>
            The field associated with the property.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ConfigurableProperty.FieldName">
      <summary>
            Gets the name of the field.
            </summary>
      <value>
            The name of the field.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ConfigurableProperty.Row">
      <summary>
            Gets the row script for this property.
            </summary>
      <value>
            The row script for this property.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.CreateUI(UnityEngine.GameObject,Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript)">
      <summary>
            Creates the UI for the configurable property.
            </summary>
      <param name="parent">The parent game object for the new UI elements.</param>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.OnPartSelectionChanged(ModApi.Craft.Parts.PartModifierData,ModApi.Design.PartProperties.IDesignerPartProperties)">
      <summary>
            Called when the current part selection changes.
            </summary>
      <param name="partModifier">The part modifier of the selected part that is associated with this configurable property.</param>
      <param name="partProperties">The part properties script associated with the part modifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.RefreshUI">
      <summary>
            Refreshes the UI, updating it to reflect the current value of the property.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.SetPreferredHeight(System.Single)">
      <summary>
            Sets the height of the preferred of the UI element representing this property.
            </summary>
      <param name="height">The preferred height.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.GetValue">
      <summary>
            Gets the value of the property.
            </summary>
      <returns>The value of the property.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.OnCreateUI(UnityEngine.GameObject,Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript)">
      <summary>
            Called when the UI for the property needs to be created.
            </summary>
      <param name="parent">The parent game object for the new UI elements.</param>
      <param name="flyout">The flyout.</param>
      <returns>
            The root game object for the property's UI.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.OnPartDeselected">
      <summary>
            Called when a part using this configurable property has been deselected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.OnPartSelected">
      <summary>
            Called when a part using this configurable property has been selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ConfigurableProperty.SetValue(System.Object)">
      <summary>
            Sets the value of the property.
            </summary>
      <param name="value">The new value of the property.</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript">
      <summary>
            A script for controlling the part properties panel of the designer for generic part modifiers.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript._typePropertiesMap">
      <summary>
            The cached map of part modifier types and their associated list of configurable properties.
            The configurable properties are also stored in a lookup table keyed by modifier index.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript._designerSettings">
      <summary>
            The designer settings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript._headerLabel">
      <summary>
            The header label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript._properties">
      <summary>
            The list of configurable properties for the part modifier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript._tempPartModifiers">
      <summary>
            A temp variable used to retrieve part modifiers while avoiding garbage generation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript._transform">
      <summary>
            The transform for this component.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.CurrentPartModifier">
      <summary>
            Gets the current part modifier.
            </summary>
      <value>
            The current part modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.HeaderDeleteButton">
      <summary>
            Gets the header delete button.
            </summary>
      <value>
            The header delete button.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.CleanupCache">
      <summary>
            Cleanups the cache so it doesn't bleed objects into the designer scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.NeedsPartPropertiesScript(System.Type)">
      <summary>
            Gets a value indicating whether the specified part modifier type requires a part modifier properties script (has configurable properties).
            </summary>
      <param name="modifierType">The type of the part modifier.</param>
      <returns>
        <c>true</c> if the part modifier type needs a configuration script for its properties, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.GetProperty``1(System.Reflection.FieldInfo)">
      <summary>
            Gets the property for the specified field or <c>null</c> if an acceptable property can not be found.
            </summary>
      <typeparam name="T">The type of the field to retrieve.</typeparam>
      <param name="field">The field for which to retrieve the property.</param>
      <returns>The requested property or <c>null</c> if an acceptable property can not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.OnPartDeselected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the part is deselected.
            </summary>
      <param name="part">The part that has been deselected.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.OnPartSelected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when a part has been selected.
            </summary>
      <param name="part">The new part that has been selected.</param>
      <returns>
        <c>true</c> if the control handles this type of part, or <c>false</c> otherwise.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.OnPropertiesOpened">
      <summary>
            Called when part properties is opened.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.OnPropertyChanged(System.Reflection.FieldInfo)">
      <summary>
            Called when a part modifier property changes.
            </summary>
      <param name="field">The part modifier field that was changed.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.RefreshUI">
      <summary>
            Refreshes the UI, setting the game object to active it if is not already.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.SetVisibility(System.Reflection.FieldInfo,System.Boolean)">
      <summary>
            Sets the visibility of the specified field.
            </summary>
      <param name="field">The field for which to set visibility.</param>
      <param name="visible">If set to <c>true</c>, the field will be set to visible. If <c>false</c>, the field will be hidden.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.SetVisible(System.Boolean)">
      <summary>
            Sets the visibility of the panel.
            </summary>
      <param name="visible">If set to <c>true</c>, the part properties panel will be visible.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.UpdateVisibility(System.Reflection.FieldInfo)">
      <summary>
            Updates the visibility of the specified field (using the fields visibility function if one was defined.
            If the specified field is <c>null</c>, this will update the visibility of all fields for the current part modifier data.
            </summary>
      <param name="field">The field for which to update visibility or <c>null</c> to update visibility for all fields.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.OnInitialized">
      <summary>
            Called when the script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.GetConfigurablePropertiesList(System.Type)">
      <summary>
            Gets the list of configurable properties for the specified part modifier type.
            </summary>
      <param name="modifierType">The part modifier type for which to get the list of configurable properties.</param>
      <returns>The list of configurable properties for the specified part modifier type.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.CreateHeaderElement(System.String,System.Boolean)">
      <summary>
            Creates a header element.
            </summary>
      <param name="headerText">The header text.</param>
      <param name="startCollapsed">if set to <c>true</c> then start collapsed.</param>
      <returns>
            The header.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.CreateUI">
      <summary>
            Creates the UI for this part modifier type.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.InitializeConfigurablePropertiesList">
      <summary>
            Initializes the configurable properties list.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.InitializeHeaderText">
      <summary>
            Initializes the header text.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.HeaderScript">
      <summary>
            Script for a header in the part properties.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.HeaderScript._element">
      <summary>
            The element
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.HeaderScript.CollapseDelegate">
      <summary>
            Delegate for the collapsed event.
            </summary>
      <param name="headerScript">The header script.</param>
    </member>
    <member name="E:Assets.Scripts.Design.PartProperties.HeaderScript.OnCollapsedChanged">
      <summary>
            Occurs when the header's collapsed state has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.HeaderScript.Collapsed">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Design.PartProperties.HeaderScript" /> is collapsed.
            </summary>
      <value>
        <c>true</c> if collapsed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.HeaderScript.StartCollapsed">
      <summary>
            Gets or sets a value indicating whether to start collapsed.
            </summary>
      <value>
        <c>true</c> if should start collapsed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.HeaderScript.Collapse(System.Boolean)">
      <summary>
            Collapses or expands the header.
            </summary>
      <param name="collapse">if set to <c>true</c> [collapse].</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.HeaderScript.Initialize(UI.Xml.XmlElement)">
      <summary>
            Initializes the specified element.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.HeaderScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.HeaderScript.OnHeaderClicked">
      <summary>
            Called when the header is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.LabelProperty">
      <summary>
            A class representing a part modifier's property that is visible in the designer via a label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.LabelProperty._originalFontSize">
      <summary>
            The original font size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.LabelProperty._valueText">
      <summary>
            The label control.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.LabelProperty.#ctor(System.Reflection.FieldInfo,ModApi.Craft.Parts.Attributes.DesignerPropertyAttribute)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartProperties.LabelProperty" /> class.
            </summary>
      <param name="field">The field associated with the property.</param>
      <param name="attribute">The attribute for this configurable property.</param>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.LabelProperty.FontSize">
      <summary>
            Gets the size of the font.
            </summary>
      <value>
            The size of the font.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.LabelProperty.LabelValue">
      <summary>
            Gets or sets the label value.
            </summary>
      <value>
            The label value.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.LabelProperty.RefreshUI">
      <summary>
            Refreshes the UI, updating it to reflect the current value of the property.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.LabelProperty.RestoreFontSize">
      <summary>
            Restores the original size of the font.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.LabelProperty.SetFontSize(System.Single)">
      <summary>
            Sets the size of the font.
            </summary>
      <param name="size">The font size.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.LabelProperty.SetFontSize(System.Single,System.Single)">
      <summary>
            Sets the size of the font using auto-sizing.
            </summary>
      <param name="minSize">The minimum size.</param>
      <param name="maxSize">The maximum size.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.LabelProperty.OnCreateUI(UnityEngine.GameObject,Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript)">
      <summary>
            Called when the UI for the property needs to be created.
            </summary>
      <param name="parent">The parent game object for the new UI elements.</param>
      <param name="flyout">The flyout.</param>
      <returns>
            The root game object for the property's UI.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.PartPartProperties">
      <summary>
            The part properties script for parts...
            </summary>
      <seealso cref="T:ModApi.Design.PartProperties.PartPropertiesScript" />
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPartProperties._activationGroup">
      <summary>
            The activation group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPartProperties._activationGroupSpinner">
      <summary>
            The activation group spinner
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPartProperties._currentPartBodyData">
      <summary>
            The part body data
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPartProperties._partInfoMass">
      <summary>
            The part information mass
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPartProperties._partInfoPrice">
      <summary>
            The part information price
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPartProperties._partNameInput">
      <summary>
            The part name input
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPartProperties._partNamePlaceholder">
      <summary>
            The part name placeholder
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PartPartProperties.HandlesMultipleModifiers">
      <summary>
            Gets a value indicating whether this component handles multiple instances of the same part modifier
            or if one instance of this script should be created for every part modifier to be handled.
            </summary>
      <value>
        <c>true</c> if this component handles multiple instances of the same part modifier; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PartPartProperties.CurrentPart">
      <summary>
            Gets the current wing being edited.
            </summary>
      <value>
            The current wing being edited.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.OnPartDeselected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the part is deselected.
            </summary>
      <param name="part">The part that has been deselected.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.OnPartNameInputChanged(System.String)">
      <summary>
            Called when the part name input has changed.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.OnPartSelected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when a part has been selected.
            </summary>
      <param name="part">The new part that has been selected.</param>
      <returns>
            True if the control handles this type of part, or false otherwise.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.OnPropertiesClosed">
      <summary>
            Called when part properties is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.OnPropertiesOpened">
      <summary>
            Called when part properties is opened.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.SetVisible(System.Boolean)">
      <summary>
            Sets the visibility of the panel.
            </summary>
      <param name="visible">If set to <c>true</c>, the part properties panel will be visible.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.OnInitialized">
      <summary>
            Called when the script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.OnAdvanceActivationGroup(System.Int32)">
      <summary>
            Called when a button is clicked to advance the activation group.
            </summary>
      <param name="increment">The increment.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.UpdateActivationGroupName">
      <summary>
            Updates the name of the activation group.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPartProperties.UpdatePartInfo">
      <summary>
            Updates the part information.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript">
      <summary>
            The script for the part properties flyout in the designer UI.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript._contentRoot">
      <summary>
            The content root
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript._emptyPanel">
      <summary>
            The empty panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript._partProperties">
      <summary>
            The list of part properties scripts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript._partPropertyTypeLookup">
      <summary>
            The list of part property scripts keyed by modifier type and then by script type.
            This is used to keep track of how many scripts we got to handle each modifier
            (in the case of multiple modifiers of the same type on a part).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript._stylePartProperties">
      <summary>
            The style part properties.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript._visibleList">
      <summary>
            A reusable temporary list of visible part properties.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.OnPartSelectionCompleteDelegate">
      <summary>
            A delegate used when a part properties part selection has completed.
            </summary>
      <param name="visiblePartProperties">The visible part properties.</param>
    </member>
    <member name="E:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.PartSelectionComplete">
      <summary>
            Occurs when a part selection has complete.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.ChangesSinceLastUndoStep">
      <summary>
            Gets or sets a value indicating whether there have been part property changes since the last undo step.
            </summary>
      <value>
        <c>true</c> if there have been part property changes since the last undo step; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.OpenedViaUndoStep">
      <summary>
            Gets or sets a value indicating whether the panel was last opened via an undo step.
            </summary>
      <value>
        <c>true</c> if the panel was last opened via an undo step; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.PartProperties">
      <summary>
            Gets the part properties.
            </summary>
      <value>
            The part properties.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.StylePartProperties">
      <summary>
            Gets the style part properties.
            </summary>
      <value>
            The style part properties.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.Designer">
      <summary>
            Gets the designer reference.
            </summary>
      <value>
            The designer reference.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.CloneTemplateElement(System.String,UnityEngine.Transform,System.String)">
      <summary>
            Clones the template element.
            </summary>
      <param name="templateId">The template identifier.</param>
      <param name="parent">The parent.</param>
      <param name="name">The name.</param>
      <returns>
            The cloned element.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.RefreshUI">
      <summary>
            Refreshes the entire flyout UI.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.UpdateSymmetry">
      <summary>
            Forces an update of party symmetry data.
            Note: Symmetry gets automatically updated when the flyout closes.  Calling this is only necessary if symmetry needs to be
            updated when the flyout is still open.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.UpdateEmptyPanelLabel(System.String)">
      <summary>
            Updates the empty panel label.
            </summary>
      <param name="text">The text to be displayed or <c>null</c> if the panel should be hidden.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.UpdateSeenNotifications(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Updates the seen notifications for this part and its modifiers.
            </summary>
      <param name="part">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.AddPartPropertyScript(System.Type,System.Type,ModApi.Craft.Parts.Attributes.DesignerPartModifierAttribute)">
      <summary>
            Adds the part property script.
            </summary>
      <param name="modifierType">The type of the modifier handled by the script.</param>
      <param name="scriptType">The type of the script to add.</param>
      <param name="attribute">The designer attribute associated with the script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.CreatePanels">
      <summary>
            Creates the UI panels.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.CreateStylePartProperties(System.Int32)">
      <summary>
            Creates the style part properties panel for the specified subpart index.
            </summary>
      <param name="subpartIndex">The subpart index managed by the panel.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.OnFlyoutClosed(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is closed.
            </summary>
      <param name="flyout">The flyout that was closed.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.OnFlyoutOpening(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opening.
            </summary>
      <param name="flyout">The flyout being opened.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the selected part changes.
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript.UpdateSelectedPart(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Updates the selected part.
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.PartPropertiesUndoStep">
      <summary>
            A class representing an undo step that was created due to part properties changing.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.UndoStep" />
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesUndoStep.#ctor(System.Xml.Linq.XElement,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartProperties.PartPropertiesUndoStep" /> class.
            </summary>
      <param name="xml">The XML for the undo step.</param>
      <param name="partId">The part identifier for the part that had properties modified, resulting in this undo step.</param>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PartPropertiesUndoStep.PartId">
      <summary>
            Gets the part identifier for the part that had properties modified, resulting in this undo step.
            </summary>
      <value>
            The part identifier for the part that had properties modified, resulting in this undo step.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesUndoStep.OnRedoComplete(Assets.Scripts.Design.DesignerScript)">
      <summary>
            The method to be called when the redo step has been performed.
            </summary>
      <param name="designer">The designer reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesUndoStep.OnUndoComplete(Assets.Scripts.Design.DesignerScript)">
      <summary>
            The method to be called when the undo step has been performed.
            </summary>
      <param name="designer">The designer reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PartPropertiesUndoStep.ShowPartProperties(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Selects the part and shows the part properties panel.
            </summary>
      <param name="designer">The designer reference.</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor">
      <summary>
            Utility for adjusting the pilot seat transform of a command pod.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor._commandPod">
      <summary>
            The associated command pod
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor._pilotOrientationMesh">
      <summary>
            The pilot orientation avatar (
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor._rotateGizmo">
      <summary>
            The rotate gizmo, responsible for actually rotating things.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.#ctor(UnityEngine.Camera,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor" /> class.
            </summary>
      <param name="camera">The camera.</param>
      <param name="pilotMeshLayer">The rendering layer that the pilot mesh should go in.</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.ClickHandler">
      <summary>
            Handler for click events.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.ClickHandlerEulers">
      <summary>
            Handler for click events, which provide a euler angle.
            </summary>
      <param name="source">The source.</param>
      <param name="finalEulerAngles">The final euler angles.</param>
    </member>
    <member name="E:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.AdjustmentEnded">
      <summary>
            Occurs when an adjustment has ended.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.AdjustmentStarted">
      <summary>
            Occurs when an adjustment has started.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.IsAdjusting">
      <summary>
            Gets a value indicating whether this instance is adjusting.
            </summary>
      <value>
        <c>true</c> if this instance is adjusting; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.IsShowing">
      <summary>
            Gets a value indicating whether this instance is currently active and being displayed.
            </summary>
      <value>
        <c>true</c> if this instance is currently active and being displayed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the click.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.Start(ModApi.Craft.Parts.ICommandPod,System.Boolean,System.Boolean)">
      <summary>
            Starts the specified command pod.
            </summary>
      <param name="commandPod">The command pod.</param>
      <param name="disablePartHighlighting">if set to <c>true</c> [disable part highlighting].</param>
      <param name="showRotateGizmo">if set to <c>true</c> [show rotate gizmo].</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.Stop">
      <summary>
            Stops adjustment of the pilot transform and hides gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.OnPilotGizmoClickDown(Assets.Scripts.Tools.ObjectTransform.MovementGizmo{Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript},ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the rotate gizmo on the pilot seat has been pressed down.
            </summary>
      <param name="source">The source.</param>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.OnPilotGizmoClickUp(Assets.Scripts.Tools.ObjectTransform.MovementGizmo{Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript},ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the rotate gizmo on the pilot seat has been released.
            </summary>
      <param name="source">The source.</param>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PilotOrientationAdjustor.UpdatePilotOrientation">
      <summary>
            Updates the pilot orientation.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.PropertyRowScript">
      <summary>
            Script for a property row on the part properties.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PropertyRowScript._collapsed">
      <summary>
            The collapsed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.PropertyRowScript._visible">
      <summary>
            The visible
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PropertyRowScript.Collapsed">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.PartProperties.PropertyRowScript" /> is collapsed.
            </summary>
      <value>
        <c>true</c> if collapsed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.PropertyRowScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.PartProperties.PropertyRowScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PropertyRowScript.SetTooltip(System.String)">
      <summary>
            Sets the tooltip.
            </summary>
      <param name="tooltip">The tooltip.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.PropertyRowScript.UpdateVisibility">
      <summary>
            Updates the visibility.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.SliderProperty">
      <summary>
            A class representing a part modifier's property that is configurable in the designer via a slider control.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.SliderProperty._refreshingUI">
      <summary>
            A value indicating whether the UI is currently being refreshed programmatically.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.SliderProperty._stepValue">
      <summary>
            The value of each step of the slider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.SliderProperty._slider">
      <summary>
            The slider
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SliderProperty.#ctor(System.Reflection.FieldInfo,ModApi.Craft.Parts.Attributes.DesignerPropertyAttribute)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartProperties.SliderProperty" /> class.
            </summary>
      <param name="field">The field associated with the property.</param>
      <param name="attribute">The attribute for this configurable property.</param>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SliderProperty.LabelValue">
      <summary>
            Gets or sets the label value.
            </summary>
      <value>
            The label value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SliderProperty.MaxValue">
      <summary>
            Gets the maximum value for the slider.
            </summary>
      <value>
            The maximum value for the slider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SliderProperty.MinValue">
      <summary>
            Gets the minimum value for the slider.
            </summary>
      <value>
            The minimum value for the slider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SliderProperty.NumberOfSteps">
      <summary>
            Gets the number of steps for the slider.
            </summary>
      <value>
            The number of steps for the slider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SliderProperty.SliderAttribute">
      <summary>
            Gets the slider attribute associated with this property.
            </summary>
      <value>
            The slider attribute associated with this property.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SliderProperty.SliderValue">
      <summary>
            Gets or sets the slider value.
            </summary>
      <value>
            The slider value.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SliderProperty.RefreshUI">
      <summary>
            Refreshes the UI, updating it to reflect the current value of the property.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SliderProperty.UpdateSliderSettings(System.Single,System.Single,System.Int32)">
      <summary>
            Updates the slider settings.
            </summary>
      <param name="minValue">The minimum value for the slider.</param>
      <param name="maxValue">The maximum value for the slider.</param>
      <param name="numberOfSteps">The number of steps for the slider.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SliderProperty.OnCreateUI(UnityEngine.GameObject,Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript)">
      <summary>
            Called when the UI for the property needs to be created.
            </summary>
      <param name="parent">The parent game object for the new UI elements.</param>
      <param name="flyout">The flyout.</param>
      <returns>
            The root game object for the property's UI.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SliderProperty.OnValueChanged(System.Single)">
      <summary>
            A callback that executes when the slider's value is changed.
            </summary>
      <param name="value">The value of the slider.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SliderProperty.RefreshSliderLabel(System.Single)">
      <summary>
            Refreshes the slider label value.
            </summary>
      <param name="value">The value to be display in the label.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SliderProperty.UpdateSliderSettings(System.Single,System.Single,System.Int32,System.Boolean)">
      <summary>
            Updates the slider settings.
            </summary>
      <param name="minValue">The minimum value for the slider.</param>
      <param name="maxValue">The maximum value for the slider.</param>
      <param name="numberOfSteps">The number of steps for the slider.</param>
      <param name="refreshUI">If set to <c>true</c>, the UI will be refreshed after updating the slider.</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.SpinnerProperty">
      <summary>
            A class representing a part modifier's property that is configurable in the designer via a spinner control.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.SpinnerProperty._label">
      <summary>
            The property label.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.#ctor(System.Reflection.FieldInfo,ModApi.Craft.Parts.Attributes.DesignerPropertyAttribute)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartProperties.SpinnerProperty" /> class.
            </summary>
      <param name="field">The field associated with the property.</param>
      <param name="attribute">The attribute for this configurable property.</param>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.IsTextSpinner">
      <summary>
            Gets a value indicating whether this instance is text spinner.
            </summary>
      <value>
        <c>true</c> if this instance is text spinner; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.LabelValue">
      <summary>
            Gets or sets the label value.
            </summary>
      <value>
            The label value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.MaxValue">
      <summary>
            Gets the maximum value for the spinner.
            </summary>
      <value>
            The maximum value for the spinner.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.MinValue">
      <summary>
            Gets the minimum value for the spinner.
            </summary>
      <value>
            The minimum value for the spinner.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.NumericValue">
      <summary>
            Gets the numeric value of the spinner.
            This will throw an exception if this spinner is a text spinner.
            </summary>
      <value>
            The numeric value of the spinner.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.SpinnerAttribute">
      <summary>
            Gets the spinner attribute associated with the property.
            </summary>
      <value>
            The spinner attribute with the property.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.SpinnerScript">
      <summary>
            Gets or sets the spinner script.
            </summary>
      <value>
            The spinner script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.StepSize">
      <summary>
            Gets the step size for the spinner.
            </summary>
      <value>
            The step size for the spinner.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.TextValue">
      <summary>
            Gets the text value of the spinner.
            </summary>
      <value>
            The text value of the spinner.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.ModApi#Design#PartProperties#ISpinnerProperty#Values">
      <summary>
            Gets the values for a text spinner.
            </summary>
      <value>
            The values for a text spinner.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.UseValueLookup">
      <summary>
            Gets a value indicating whether a value lookup function should be used (text spinners only).
            </summary>
      <value>
        <c>true</c> if a value lookup function should be used (text spinners only); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.SpinnerProperty.Values">
      <summary>
            Gets the values for a text spinner.
            </summary>
      <value>
            The values for a text spinner.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.RefreshUI">
      <summary>
            Refreshes the UI, updating it to reflect the current value of the property.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.UpdateNumericSpinnerSettings(System.Decimal,System.Decimal,System.Decimal)">
      <summary>
            Updates the spinner settings for a numeric spinner.
            </summary>
      <param name="minValue">The minimum value for the spinner.</param>
      <param name="maxValue">The maximum value for the spinner.</param>
      <param name="stepSize">The step size for the spinner.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.UpdateValues">
      <summary>
            Updates the values available in the spinner.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.OnCreateUI(UnityEngine.GameObject,Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript)">
      <summary>
            Called when the UI for the property needs to be created.
            </summary>
      <param name="parent">The parent game object for the new UI elements.</param>
      <param name="flyout">The flyout.</param>
      <returns>
            The root game object for the property's UI.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.OnPartSelected">
      <summary>
            Called when a part using this configurable property has been selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.ChangeTextSpinnerValue(System.Int32)">
      <summary>
            Called when the button is activated.
            </summary>
      <param name="direction">The direction to move.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.FormatTextLabel(System.String)">
      <summary>
            Formats the text label.
            </summary>
      <param name="text">The text to be formatted.</param>
      <returns>The formatted text label.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.GetCurrentValueIndex">
      <summary>
            Gets the index of the current value.
            </summary>
      <returns>The index of the current value.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.GetDecimalValue">
      <summary>
            Gets the value of the property.
            </summary>
      <returns>The current value of the property.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.GetStringValueIndex(System.String)">
      <summary>
            Gets the index of the specified value.
            This will do all comparisons in lower case and againts the regular value, the label value, and the formatted label value.
            </summary>
      <param name="value">The value for which to get the index.</param>
      <returns>The index of the specified value.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.GetValueIndex(System.String,System.Boolean)">
      <summary>
            Gets the index of the specified value.
            </summary>
      <param name="value">The value for which to get the index.</param>
      <param name="ignoreCaseAndFormat">If set to <c>true</c>, comparisons will all be made in lowercase and against formatted and non-formatted values.</param>
      <returns>The index of the specified value.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.OnDecreaseClick">
      <summary>
            Called when the decrease button is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.OnIncreaseClick">
      <summary>
            Called when the increase button is activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.SetCurrentValue(ModApi.Design.PartProperties.IDesignerPartPropertiesDesignerInterface,System.Int32)">
      <summary>
            Sets the current value.
            </summary>
      <param name="modifier">The part modifier being configured.</param>
      <param name="valueIndex">The index of the value to be set.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.SetSpinnerTextLabel(System.String)">
      <summary>
            Sets the spinner text label.
            </summary>
      <param name="text">The label text.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.UpdateButtonStates">
      <summary>
            Updates the button states, disabling or enabled as needed with regard to min/max values.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.UpdateNumericSpinnerSettings(System.Decimal,System.Decimal,System.Decimal,System.Boolean)">
      <summary>
            Updates the spinner settings for a numeric spinner.
            </summary>
      <param name="minValue">The minimum value for the spinner.</param>
      <param name="maxValue">The maximum value for the spinner.</param>
      <param name="stepSize">The step size for the spinner.</param>
      <param name="refreshUI">If set to <c>true</c>, the UI will be refreshed after updating the spinner.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.SpinnerProperty.ValueManuallyChanged(System.String)">
      <summary>
            The callback that occurs when the spinner value is manually changed.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.StylePartProperties">
      <summary>
            The part properties script for styles.
            </summary>
      <seealso cref="T:ModApi.Design.PartProperties.PartPropertiesScript" />
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._customStyle">
      <summary>
            The custom style that was set before opening the part properties.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._customTextureStyle">
      <summary>
            The custom texture style that was set before opening the part properties.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._defaultStyleData">
      <summary>
            The default style data keyed by texture id.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._flyout">
      <summary>
            The flyout script owning this style part properties script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._header">
      <summary>
            The header label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._selectedPart">
      <summary>
            The selected part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._styleSpinner">
      <summary>
            The style spinner.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._styleSpinnerLabel">
      <summary>
            The style spinner label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._styleSpinnerVisible">
      <summary>
            A value indicating whether the style spinner is visible.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._textureDataVisible">
      <summary>
            A value indicating whether the texture style data is visible.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._textureOffsetXSpinner">
      <summary>
            The texture offset X spinner.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._textureOffsetYSpinner">
      <summary>
            The texture offset Y spinner.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._textureSpinnerVisible">
      <summary>
            A value indicating whether the texture style spinner is visible.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._textureStyleSpinner">
      <summary>
            The texture style spinner.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._textureStyleSpinnerLabel">
      <summary>
            The texture style spinner label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._textureTileXSpinner">
      <summary>
            The texture tiling X spinner.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.StylePartProperties._textureTileYSpinner">
      <summary>
            The texture tiling Y spinner.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.StylePartProperties.SubpartIndex">
      <summary>
            Gets the index of the subpart managed by this script.
            </summary>
      <value>
            The index of the subpart managed by this script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.OnPartDeselected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the part is deselected.
            </summary>
      <param name="part">The part that has been deselected.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.OnPartSelected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when a part has been selected.
            </summary>
      <param name="part">The new part that has been selected.</param>
      <returns>
            True if the control handles this type of part, or false otherwise.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.OnInitialized">
      <summary>
            Called when the script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.GetStyle(System.String)">
      <summary>
            Gets the part style by id.
            </summary>
      <param name="styleId">The style identifier.</param>
      <returns>The requested part style.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.GetStyleDisplayName(System.String)">
      <summary>
            Gets the display name of the specified style.
            </summary>
      <param name="styleId">The style identifier.</param>
      <returns>The display name of the specified style.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.GetTextureStyle(System.String)">
      <summary>
            Gets the texture style by id.
            </summary>
      <param name="styleId">The style identifier.</param>
      <returns>The requested texture style.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.GetTextureStyleDisplayName(System.String)">
      <summary>
            Gets the display name of the specified texture style.
            </summary>
      <param name="styleId">The style identifier.</param>
      <returns>The display name of the specified texture style.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.InitializeNumericSpinner(UI.Xml.XmlLayout,System.String,System.Action{System.Single})">
      <summary>
            Initializes a numeric spinner.
            </summary>
      <param name="layout">The XML layout object.</param>
      <param name="id">The identifier of the spinner.</param>
      <param name="onValueChanged">The onValueChanged callback.</param>
      <returns>The initialized spinner script.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.InitializeTextSpinner(UI.Xml.XmlLayout,System.String,System.Action{System.String},System.Func{System.String,System.String},Assets.Scripts.Ui.SpinnerScript@,TMPro.TextMeshProUGUI@)">
      <summary>
            Initializes a text spinner.
            </summary>
      <param name="layout">The XML layout object.</param>
      <param name="id">The identifier of the spinner.</param>
      <param name="onValueChanged">The onValueChanged callback.</param>
      <param name="onLabelRequested">The onLabelRequested callback.</param>
      <param name="spinner">The spinner.</param>
      <param name="label">The label.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.OnPartSelectionCompleted(System.Collections.Generic.IReadOnlyList{ModApi.Design.PartProperties.PartPropertiesScript})">
      <summary>
            Called when part selection has completed.
            This is only wired up to be called for the style part properties with subpart index zero.
            This avoids multiple UI elements (like headers) taking up space and providing no value.
            </summary>
      <param name="visiblePartProperties">The visible part properties.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.RaiseOnStyleChanged(ModApi.Craft.Parts.Styles.IPartStyle,ModApi.Craft.Parts.Styles.IPartStyle)">
      <summary>
            Raises the part style changed event for part modifiers.
            </summary>
      <param name="previousStyle">The previous style.</param>
      <param name="newStyle">The new style.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.RaiseOnTextureStyleChanged(ModApi.Craft.Parts.Styles.IPartTextureStyle,ModApi.Craft.Parts.Styles.IPartTextureStyle)">
      <summary>
            Raises the texture style changed event for part modifiers.
            </summary>
      <param name="previousStyle">The previous style.</param>
      <param name="newStyle">The new style.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.SetDefaultTextureTilingAndOffset(ModApi.Craft.Parts.Styles.PartStyleData)">
      <summary>
            Sets the default texture tiling and offset for the specified texture style.
            </summary>
      <param name="styleData">The style data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateDefaultTextureTilingAndOffset(ModApi.Craft.Parts.Styles.PartStyleData)">
      <summary>
            Updates the default texture tiling and offset of the specified style data using its current settings.
            </summary>
      <param name="styleData">The style data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateOffsetX(System.Single)">
      <summary>
            Called when the user changes the texture x-offset value.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateOffsetY(System.Single)">
      <summary>
            Called when the user changes the texture y-offset value.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdatePartMaterials">
      <summary>
            Updates the part materials based on the current part style data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateStyle(System.String)">
      <summary>
            Updates the current style.
            </summary>
      <param name="styleId">The style identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateStyleSpinner(System.Boolean)">
      <summary>
            Updates the style spinner.
            </summary>
      <param name="keepCurrentSelection">If set to <c>true</c>, the current selection will be kept even if it would not be an available value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateTextureDataVisibility(ModApi.Craft.Parts.Styles.PartStyleData)">
      <summary>
            Updates the visibility of the texture data controls.
            </summary>
      <param name="styleData">The current style data.</param>
      <returns>
        <c>true</c> if any of the controls are visible; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateTextureStyle(System.String)">
      <summary>
            Updates the current texture style.
            </summary>
      <param name="styleId">The style identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateTextureStyleSpinner(System.Boolean)">
      <summary>
            Updates the texture style spinner.
            </summary>
      <param name="keepCurrentSelection">If set to <c>true</c>, the current selection will be kept even if it would not be an available value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateTilingX(System.Single)">
      <summary>
            Called when the user changes the texture x-tiling value.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateTilingY(System.Single)">
      <summary>
            Called when the user changes the texture y-tiling value.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.StylePartProperties.UpdateVisibilities(ModApi.Craft.Parts.Styles.PartStyleData)">
      <summary>
            Updates the visibility of the style controls.
            </summary>
      <param name="styleData">The current style data.</param>
      <returns>
        <c>true</c> if any of the style controls are visible; <c>false</c> otherwise.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.TextInputProperty">
      <summary>
            A class representing a part modifier's property that is configurable in the designer via a spinner control.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.TextInputProperty._labelText">
      <summary>
            The property label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.TextInputProperty._valueInput">
      <summary>
            The property value input.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.TextInputProperty.#ctor(System.Reflection.FieldInfo,ModApi.Craft.Parts.Attributes.DesignerPropertyAttribute)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartProperties.TextInputProperty" /> class.
            </summary>
      <param name="field">The field associated with the property.</param>
      <param name="attribute">The attribute for this configurable property.</param>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.TextInputProperty.LabelValue">
      <summary>
            Gets or sets the label value.
            </summary>
      <value>
            The label value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.TextInputProperty.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.TextInputProperty.RefreshUI">
      <summary>
            Refreshes the UI, updating it to reflect the current value of the property.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.TextInputProperty.OnCreateUI(UnityEngine.GameObject,Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript)">
      <summary>
            Called when the UI for the property needs to be created.
            </summary>
      <param name="parent">The parent game object for the new UI elements.</param>
      <param name="flyout">The flyout.</param>
      <returns>
            The root game object for the property's UI.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.TextInputProperty.OnEndEdit(System.String)">
      <summary>
            Called when the user finishes editing the input field.
            </summary>
      <param name="value">The input field's new value.</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.ToggleButtonProperty">
      <summary>
            A class representing a part modifier's property that is configurable in the designer via a toggle button control.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.ToggleButtonProperty._label">
      <summary>
            The label control.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.ToggleButtonProperty._toggle">
      <summary>
            The toggle
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ToggleButtonProperty.#ctor(System.Reflection.FieldInfo,ModApi.Craft.Parts.Attributes.DesignerPropertyAttribute)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.PartProperties.ToggleButtonProperty" /> class.
            </summary>
      <param name="field">The field associated with the property.</param>
      <param name="attribute">The attribute for this configurable property.</param>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ToggleButtonProperty.ButtonAttribute">
      <summary>
            Gets the button attribute associated with this property.
            </summary>
      <value>
            The button attribute associated with this property.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ToggleButtonProperty.LabelValue">
      <summary>
            Gets or sets the label value.
            </summary>
      <value>
            The label value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.ToggleButtonProperty.ToggleValue">
      <summary>
            Gets or sets a value indicating whether the toggle button control is toggled on.
            </summary>
      <value>
        <c>true</c> if the toggle control value is true; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ToggleButtonProperty.RefreshUI">
      <summary>
            Refreshes the UI, updating it to reflect the current value of the property.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ToggleButtonProperty.OnCreateUI(UnityEngine.GameObject,Assets.Scripts.Design.PartProperties.PartPropertiesFlyoutScript)">
      <summary>
            Called when the UI for the property needs to be created.
            </summary>
      <param name="parent">The parent game object for the new UI elements.</param>
      <param name="flyout">The flyout.</param>
      <returns>
            The root game object for the property's UI.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ToggleButtonProperty.GetBooleanValue">
      <summary>
            Gets the current value as a boolean
            </summary>
      <returns>The boolean value.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.ToggleButtonProperty.OnValueChanged(System.Boolean)">
      <summary>
            Called when the value has changed.
            </summary>
      <param name="toggled">if set to <c>true</c> [toggled].</param>
    </member>
    <member name="T:Assets.Scripts.Design.PartProperties.WingPartProperties">
      <summary>
            The part properties script for the wing modifier.
            </summary>
      <seealso cref="T:ModApi.Design.PartProperties.PartPropertiesScript" />
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.WingPartProperties._addControlSurfaceButton">
      <summary>
            The script containing a reference to the add control surface button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.PartProperties.WingPartProperties._deleteButtons">
      <summary>
            The collection of control surface delete buttons that have been created, keyed by their associated scripts.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.WingPartProperties.HandlesMultipleModifiers">
      <summary>
            Gets a value indicating whether this component handles multiple instances of the same part modifier
            or if one instance of this script should be created for every part modifier to be handled.
            </summary>
      <value>
        <c>true</c> if this component handles multiple instances of the same part modifier; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.PartProperties.WingPartProperties.CurrentWing">
      <summary>
            Gets the current wing being edited.
            </summary>
      <value>
            The current wing being edited.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.WingPartProperties.OnPartDeselected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the part is deselected.
            </summary>
      <param name="part">The part that has been deselected.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.WingPartProperties.OnPartSelected(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when a part has been selected.
            </summary>
      <param name="part">The new part that has been selected.</param>
      <returns>
            True if the control handles this type of part, or false otherwise.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.WingPartProperties.OnInitialized">
      <summary>
            Called when the script is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.WingPartProperties.AddControlSurfaceButtonClicked">
      <summary>
            Called when the button is clicked to add a new control surface.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.WingPartProperties.AddDeleteButton(Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript)">
      <summary>
            Adds a delete button to the control surface UI.
            </summary>
      <param name="script">The control surface part property script.</param>
      <returns>The button that was added.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.WingPartProperties.DeleteButtonClicked(Assets.Scripts.Design.PartProperties.GenericPartPropertiesScript)">
      <summary>
            Called when a control surface delete button is clicked.
            </summary>
      <param name="script">The control surface part properties script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.PartProperties.WingPartProperties.UpdateControlSurfaces">
      <summary>
            Updates the control surfaces, adding delete buttons if they do not already have them.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.RotatePartPanelScript">
      <summary>
            The panel to rotate parts.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._content">
      <summary>
            The content
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._messageText">
      <summary>
            The message text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._sensitivitySlider">
      <summary>
            The rotation sensitivity slider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._sensitivityText">
      <summary>
            The roll sensitivity text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._spinnerMode">
      <summary>
            The spinner mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._spinnerOrientation">
      <summary>
            The spinner orientation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._spinnerSnap">
      <summary>
            The spinner snap
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._spinnerX">
      <summary>
            The spinner x
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._spinnerY">
      <summary>
            The spinner y
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._spinnerZ">
      <summary>
            The spinner z
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.RotatePartPanelScript._tool">
      <summary>
            The tool
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.OnOpened">
      <summary>
            Called when the panel is opened.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.OnAngleChanged">
      <summary>
            Called when the angle snap changes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.OnGizmoAdjusted(Assets.Scripts.Design.Tools.MovementTool)">
      <summary>
            Called when the gizmo has been adjusted.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.OnModeChanged(System.String)">
      <summary>
            Called when the mode has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.OnOrientationChanged(System.String)">
      <summary>
            Called when the orientation has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when [selected part changed].
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.OnSelfConnectedButtonClicked">
      <summary>
            Called when the self/connected movement button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.OnSensitivityChanged(System.Single)">
      <summary>
            Called when the sensitivity has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.OnSnapChanged">
      <summary>
            Called when the angle snap changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.RotatePartPanelScript.RefreshPanel">
      <summary>
            Refreshes the panel buttons/text/info/etc.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.ActivationTypeIcons">
      <summary>
            Utility method to load activation icons.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.ActivationTypeIcons._icons">
      <summary>
            The sprites
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.ActivationTypeIcons.GetActivationIcon(ModApi.Craft.Parts.StageActivationType)">
      <summary>
            Gets the activation icon.
            </summary>
      <param name="stageActivationType">Type of the stage activation.</param>
      <returns>The icon sprite.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.ActivationTypeIcons.LoadIcon(ModApi.Craft.Parts.StageActivationType)">
      <summary>
            Loads the sprite.
            </summary>
      <param name="stageActivationType">Type of the stage activation.</param>
      <returns>The sprite</returns>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.CategoryNodeScript">
      <summary>
            The script for a category in a stage in the stage editor.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.Staging.CategoryNodeScript._countText">
      <summary>
            The count text
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.CategoryNodeScript.ActivationType">
      <summary>
            Gets the type of the activation.
            </summary>
      <value>
            The type of the activation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.CategoryNodeScript.Empty">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Design.Staging.TreeNodeScript" /> is empty.
            </summary>
      <value>
        <c>true</c> if empty; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.CategoryNodeScript.AddPartNode(Assets.Scripts.Design.Staging.PartNodeScript)">
      <summary>
            Adds the part node.
            </summary>
      <param name="partNode">The part node.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.CategoryNodeScript.Initialize(Assets.Scripts.Design.Staging.StagingEditorScript,UI.Xml.XmlElement,ModApi.Craft.Parts.StageActivationType)">
      <summary>
            Initializes the specified stage activation type.
            </summary>
      <param name="stagingEditor">The staging editor.</param>
      <param name="element">The element.</param>
      <param name="stageActivationType">Type of the stage activation.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.CategoryNodeScript.RemovePartNode(Assets.Scripts.Design.Staging.PartNodeScript)">
      <summary>
            Removes the part node.
            </summary>
      <param name="partNode">The part node.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.CategoryNodeScript.UpdateContent">
      <summary>
            Updates the content of the node.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.PartNodeScript">
      <summary>
            Script for a part node in the stage editor.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.PartNodeScript.CategoryNode">
      <summary>
            Gets the category node.
            </summary>
      <value>
            The category node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.PartNodeScript.FlaggedForDeletion">
      <summary>
            Gets or sets a value indicating whether this item has been flagged for deletion.
            </summary>
      <value>
        <c>true</c> if it has been flagged for deletion; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.PartNodeScript.PartData">
      <summary>
            Gets or sets the part data.
            </summary>
      <value>
            The part data.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.PartNodeScript.HighlightParts(System.Boolean)">
      <summary>
            Highlights the parts.
            </summary>
      <param name="highlight">if set to <c>true</c> then enable highlight, otherwise disable it.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.PartNodeScript.Initialize(Assets.Scripts.Design.Staging.StagingEditorScript,UI.Xml.XmlElement,ModApi.Craft.Parts.PartData)">
      <summary>
            Initializes the specified part data.
            </summary>
      <param name="stagingEditor">The staging editor.</param>
      <param name="element">The element.</param>
      <param name="partData">The part data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.PartNodeScript.GetPartNodesRecursive(System.Collections.Generic.List{Assets.Scripts.Design.Staging.PartNodeScript})">
      <summary>
            Recurses through the tree and gets the part nodes.
            </summary>
      <param name="nodes">The nodes.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StageAnalyzer">
      <summary>
            Analyzes the stages of a rocket to calculate delta-V and other information that may be useful for the player.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageAnalyzer.Analyze(ModApi.Craft.ICraftScript,ModApi.Craft.StagingData,System.Int32,System.Int32)">
      <summary>
            Analyzes the staging for the craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="stagingData">The staging data.</param>
      <param name="startStageIndex">The starting stage index.</param>
      <param name="endStageIndex">The ending stage index, or zero to analyze all stages.</param>
      <returns>
            The stage analysis.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageAnalyzer.AnalyzeStage(System.Collections.Generic.List{Assets.Scripts.Design.Staging.StageAnalyzer.StageEngine},System.Collections.Generic.IReadOnlyList{ModApi.Craft.Parts.PartData})">
      <summary>
            Analyzes the stage.
            </summary>
      <param name="stageEngines">The stage engines.</param>
      <param name="parts">The parts.</param>
      <returns>The stage analysis.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageAnalyzer.FindSubStages(System.Collections.Generic.List{Assets.Scripts.Design.Staging.StageAnalyzer.StageEngine})">
      <summary>
            Finds the sub stages.
            </summary>
      <param name="stageEngines">The stage engines.</param>
      <returns>The list of sub stages.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageAnalyzer.GetTankEngineSet(Assets.Scripts.Design.Staging.StageAnalyzer.StageEngine,System.Collections.Generic.Dictionary{ModApi.Craft.Parts.IFuelSource,Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet})">
      <summary>
            Gets the tank engine set for the specified engine. If the tank engine set has not been created yet, this
            method will create it. If the engine has no more fuel tanks with fuel, then this will return null.
            </summary>
      <param name="engine">The engine.</param>
      <param name="tankEngineSets">The tank engine sets.</param>
      <returns>The tank engine set for the engine.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StageAnalyzer.StageEngine">
      <summary>
            Wraps an engine with additional information.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageAnalyzer.StageEngine.#ctor(ModApi.Craft.Parts.Modifiers.Propulsion.IReactionEngine)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Staging.StageAnalyzer.StageEngine" /> class.
            </summary>
      <param name="engine">The engine.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.StageEngine.Engine">
      <summary>
            Gets the engine.
            </summary>
      <value>
            The engine.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.StageEngine.Part">
      <summary>
            Gets the part.
            </summary>
      <value>
            The part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.StageEngine.Thrust">
      <summary>
            Gets or sets the engine thrust in scaled Newtons.
            </summary>
      <value>
            The engine thrust in scaled Newtons.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet">
      <summary>
            The set of engines drawing fuel from a single tank in a sub stage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet._fuelDensity">
      <summary>
            The fuel density in kg/L
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet.#ctor(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet" /> class.
            </summary>
      <param name="fuelSource">The fuel source.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet.Engines">
      <summary>
            Gets or sets the engines.
            </summary>
      <value>
            The engines.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet.FuelSource">
      <summary>
            Gets or sets the fuel source.
            </summary>
      <value>
            The fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet.RemainingFuel">
      <summary>
            Gets or sets the remaining fuel, in kg.
            </summary>
      <value>
            The remaining fuel in kg.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet.TotalFlowRate">
      <summary>
            Gets the total flow rate in kg/s
            Note: This is not scaled by MassScale
            </summary>
      <value>
            The total flow rate.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet.TotalThrust">
      <summary>
            Gets the total thrust, in N.
            Note: This is not scaled by MassScale
            </summary>
      <value>
            The total thrust.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageAnalyzer.TankEngineSet.CalculateBurnTime">
      <summary>
            Calculates the burn time.
            </summary>
      <returns>The burn time.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StageAnalyzer.SubStage">
      <summary>
            Contains data for a sub stage.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.SubStage.BurnTime">
      <summary>
            Gets or sets the burn time.
            </summary>
      <value>
            The burn time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.SubStage.FuelMassBurned">
      <summary>
            Gets or sets the fuel mass burned, in kg.
            Note: This is not scaled by MassScale
            </summary>
      <value>
            The fuel mass burned.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.SubStage.TotalFlowRate">
      <summary>
            Gets or sets the total flow rate for the sub stage in kg/s
            Note: This is not scaled by MassScale
            </summary>
      <value>
            The total flow rate.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageAnalyzer.SubStage.TotalThrust">
      <summary>
            Gets or sets the total thrust in kN.
            Note: This is not scaled by MassScale
            </summary>
      <value>
            The total thrust.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StageCalculator">
      <summary>
            Calculates the best guess for what stages a craft needs and automatically assigns a stage to all parts that activate.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageCalculator._activatingParts">
      <summary>
            The list of parts that activate.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageCalculator._commandPod">
      <summary>
            The command pod.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageCalculator._queue">
      <summary>
            The queue for doing a breadth first search.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageCalculator._visitedNodes">
      <summary>
            The visited nodes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageCalculator.#ctor(ModApi.Craft.Parts.ICommandPod)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Staging.StageCalculator" /> class.
            </summary>
      <param name="commandPod">The command pod.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageCalculator.CalculateStages(System.Collections.Generic.List{System.Int32})">
      <summary>
            Calculates the stages.
            </summary>
      <param name="userStages">The user added stages.</param>
      <returns>
            The staging data.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageCalculator.GetStages">
      <summary>
            Gets the stages.
            </summary>
      <returns>The staging data.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageCalculator.StageContainsEngines(ModApi.Craft.ActivationStage)">
      <summary>
            Checks if the stage contains any engines.
            </summary>
      <param name="stage">The stage.</param>
      <returns>
            True if the stage contains any engines.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageCalculator.StageContainsOtherActivationTypes(ModApi.Craft.ActivationStage,ModApi.Craft.Parts.StageActivationType)">
      <summary>
            Checks if the stage contains parts that do not match the specified activation type.
            </summary>
      <param name="stage">The stage.</param>
      <param name="activationType">Type of the activation.</param>
      <returns>True if there are parts that don't contain the activation type. False otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageCalculator.VisitNode(Assets.Scripts.Design.Staging.StageCalculator.PartWrapper)">
      <summary>
            Visits the node.
            </summary>
      <param name="part">The part.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StageCalculator.PartWrapper">
      <summary>
            Wrapper for a part with additional data for traversing the graph.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageCalculator.PartWrapper.Depth">
      <summary>
            Gets or sets the depth.
            </summary>
      <value>
            The depth.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageCalculator.PartWrapper.Part">
      <summary>
            Gets or sets the part.
            </summary>
      <value>
            The part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageCalculator.PartWrapper.Priority">
      <summary>
            Gets the priority of the part, based on its stage activation type. Higher priority
            should activate before lower priority.
            </summary>
      <value>
            The priority.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StageNodeScript">
      <summary>
            The script for a stage node in the stage editor.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._borderImage">
      <summary>
            The border image transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._categories">
      <summary>
            The categories in this stage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._countText">
      <summary>
            The count text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._deleteButton">
      <summary>
            The delete button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._emptyStageUI">
      <summary>
            The empty stage UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._infoBurnTime">
      <summary>
            The information burn time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._infoDeltaV">
      <summary>
            The information delta v
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._infoPanel">
      <summary>
            The information panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._infoThrustToWeightRatio">
      <summary>
            The information thrust to weight ratio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._selected">
      <summary>
            The selected flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StageNodeScript._stageNumber">
      <summary>
            The stage number
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageNodeScript.IsUserAddedStage">
      <summary>
            Gets or sets a value indicating whether this stage was manually added by the user.
            </summary>
      <value>
        <c>true</c> if this stage was manually added by the user; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageNodeScript.Selected">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.Staging.StageNodeScript" /> is selected.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageNodeScript.StageNumber">
      <summary>
            Gets or sets the stage number.
            </summary>
      <value>
            The stage number.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageNodeScript.AddChild(Assets.Scripts.Design.Staging.TreeNodeScript)">
      <summary>
            Adds the child.
            </summary>
      <param name="child">The child.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageNodeScript.AddPartNode(Assets.Scripts.Design.Staging.PartNodeScript)">
      <summary>
            Adds the part node.
            </summary>
      <param name="partNode">The part node.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageNodeScript.ApplyStaging">
      <summary>
            Applies the staging to the parts in the stage.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageNodeScript.Initialize(Assets.Scripts.Design.Staging.StagingEditorScript,UI.Xml.XmlElement)">
      <summary>
            Initializes the node.
            </summary>
      <param name="stagingEditor">The staging editor.</param>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageNodeScript.UpdateContent">
      <summary>
            Updates the content of the node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageNodeScript.UpdateStatistics(ModApi.Craft.StageAnalysis.Stage)">
      <summary>
            Updates the statistics for the stage.
            </summary>
      <param name="stageInfo">The stage information.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageNodeScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageNodeScript.GetOrCreateCategory(ModApi.Craft.Parts.StageActivationType)">
      <summary>
            Gets or creates the category.
            </summary>
      <param name="stageActivationType">Type of the stage activation.</param>
      <returns>The category node.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StageRearrangeInputHandlerScript">
      <summary>
            Script attached to a UI element to handle pointer events to know when the player is re-arranging stages.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerEnterHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerExitHandler" />
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StageRearrangeInputHandlerScript.PointerInside">
      <summary>
            Gets or sets a value indicating whether [pointer inside].
            </summary>
      <value>
        <c>true</c> if [pointer inside]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageRearrangeInputHandlerScript.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Pointer has entered UI element.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StageRearrangeInputHandlerScript.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Pointer has exited UI element.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StagingEditorPanelScript">
      <summary>
            Script for the panel that hosts the staging editor.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorPanelScript._removeEmptyStages">
      <summary>
            The remove empty stages flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorPanelScript._stagingEditor">
      <summary>
            The staging editor
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorPanelScript.OnCraftLoaded">
      <summary>
            Called when a craft has been loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorPanelScript.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed in the designer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorPanelScript.OnFlyoutOpening(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opening.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.StagingEditorScript">
      <summary>
            Script for the staging editor UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._autoScrollAmount">
      <summary>
            Used when the player is dragging a stage node to the top or bottom of the scroll view to automatically
            scroll the view so they can access stage nodes off screen.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._dragParent">
      <summary>
            The transform to use as the parent when dragging nodes around.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._dragSource">
      <summary>
            The tree node that is being dragged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._dropTarget">
      <summary>
            The staging node that the user is currently hovering over with the tree node they are currently dragging.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._infoTotalDeltaV">
      <summary>
            The information total delta v
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._infoTotalPanel">
      <summary>
            The information total panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._partNodes">
      <summary>
            The part nodes
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._performanceAnalysis">
      <summary>
            The performance analysis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._rearrangeIndicator">
      <summary>
            The rearrange indicator, used when the player is re-arranging staging buttons and gives
            them an indication that they will move a stage between two other stages.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._rearrangeTargetButton">
      <summary>
            The rearrange target stage node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._resetStagingButton">
      <summary>
            The reset staging button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._resetStagingButtonEnabled">
      <summary>
            The reset staging button enabled flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._scrollRect">
      <summary>
            The scroll
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._showDeltaV">
      <summary>
            The show delta v flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._stageNodes">
      <summary>
            The stage nodes
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._toggleDeltaVButton">
      <summary>
            The toggle delta v button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._treeNodeParent">
      <summary>
            The staging button parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._updateDeltaV">
      <summary>
            The flag set when the staging editor should update the delta v.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.StagingEditorScript._xmlLayout">
      <summary>
            The XML layout
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StagingEditorScript.DragParent">
      <summary>
            Gets the drag parent.
            </summary>
      <value>
            The drag parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StagingEditorScript.IsDragging">
      <summary>
            Gets a value indicating whether this instance is dragging.
            </summary>
      <value>
        <c>true</c> if this instance is dragging; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StagingEditorScript.ResetStagingButtonEnabled">
      <summary>
            Gets or sets a value indicating whether the reset staging button is enabled.
            </summary>
      <value>
        <c>true</c> if [reset staging button enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StagingEditorScript.ShowMessage">
      <summary>
            Gets or sets the show message action.
            </summary>
      <value>
            The show message action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.StagingEditorScript.UserInterface">
      <summary>
            Gets or sets the user interface.
            </summary>
      <value>
            The user interface.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.CloneTemplateElement(System.String,UnityEngine.Transform)">
      <summary>
            Clones the template element.
            </summary>
      <param name="templateId">The template identifier.</param>
      <param name="parent">The parent.</param>
      <returns>
            The cloned element.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.CreateCategoryNode(ModApi.Craft.Parts.StageActivationType)">
      <summary>
            Creates the category node.
            </summary>
      <param name="stageActivationType">Type of the stage activation.</param>
      <returns>The category node.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.Dragging(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the user is dragging a part stage button.
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.EndDrag(Assets.Scripts.Design.Staging.TreeNodeScript)">
      <summary>
            Ends the drag.
            </summary>
      <param name="treeNode">The tree node.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.EnterDropTarget(Assets.Scripts.Design.Staging.StageNodeScript,UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when a part button has been dragged over a stage button.
            </summary>
      <param name="stageNode">The stage node hovering on top of.</param>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.ExitDropTarget(Assets.Scripts.Design.Staging.StageNodeScript)">
      <summary>
            Called when a part button has been dragged away from a stage button.
            </summary>
      <param name="stagingButton">The staging button.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.GetPartNode(ModApi.Craft.Parts.PartData)">
      <summary>
            Gets the part node.
            </summary>
      <param name="part">The part.</param>
      <returns>The part node script.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.GetStageNode(System.Int32)">
      <summary>
            Gets the stage node, or null if it does not exist.
            </summary>
      <param name="stageNumber">The stage number (starting from 1).</param>
      <returns>
            The stage node script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.OnDeleteStageNodeClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the user has clicked a button to delete a stage node.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.OnLayoutRebuilt(UI.Xml.XmlLayoutController)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="controller">The xml layout controller.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.StartDrag(Assets.Scripts.Design.Staging.TreeNodeScript)">
      <summary>
            Starts the drag.
            </summary>
      <param name="treeNode">The tree node.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.UpdateStaging(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Updates the staging.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="removeEmptyStages">if set to <c>true</c> then remove empty stages (past the last used stage).</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.AddStageNode">
      <summary>
            Creates the stage node.
            </summary>
      <returns>
            The stage node.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.ApplyStaging">
      <summary>
            Applies the staging configuration in the editor to the parts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.CreatePartNode(ModApi.Craft.Parts.PartData)">
      <summary>
            Creates the part node.
            </summary>
      <param name="partData">The part data.</param>
      <returns>The part node.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.GetOrCreateStageNode(System.Int32)">
      <summary>
            Gets or creates a stage node for the specified stage number. It also creates empty stage nodes up
            to the specified stage number of they don't already exist.
            </summary>
      <param name="stageNumber">The stage number.</param>
      <returns>The stage node.</returns>
      <exception cref="T:System.ArgumentException">Attempting to create more than the maximum number of stages.</exception>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.OnAddStageButtonClicked">
      <summary>
            Called when the add stage button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.OnMouseEnterNode(UI.Xml.XmlElement)">
      <summary>
            Called when the mouse enters a tree node.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.OnMouseExitNode(UI.Xml.XmlElement)">
      <summary>
            Called when the mouse exits a tree node.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.OnPerformanceAnalysisEnvironmentChanged(System.Object,System.EventArgs)">
      <summary>
            Called when the performance analysis environment has changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.OnResetStagingButtonClicked">
      <summary>
            Called when reset staging button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.OnResetStagingConfirmClicked(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when the confirm button on the reset staging confirm dialog has been clicked..
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.OnToggleDeltaVButtonClicked">
      <summary>
            Called when the show delta v button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.RemoveStageNode(Assets.Scripts.Design.Staging.StageNodeScript)">
      <summary>
            Removes the stage node.
            </summary>
      <param name="stageNode">The stage node.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.UpdateStageNodeContent">
      <summary>
            Updates the content of the stage nodes and their children.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.UpdateStageNumbers">
      <summary>
            Updates the stage numbers for the stage nodes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.StagingEditorScript.UpdateStagingFromCraft(ModApi.Craft.StagingData,System.Boolean,System.Collections.Generic.List{System.Int32})">
      <summary>
            Refreshes the staging to match the craft's current staging configuration.
            </summary>
      <param name="stagingData">The staging data.</param>
      <param name="removeEmptyStages">if set to <c>true</c> then remove empty stages (past the last used stage).</param>
      <param name="userStages">The user added stages.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.TreeNodeDragHandlerScript">
      <summary>
            The script that can be attached to a tree node to allow the node to be dragged.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeDragHandlerScript._treeNode">
      <summary>
            The tree node
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeDragHandlerScript.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule before a drag is started.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeDragHandlerScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When dragging is occurring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeDragHandlerScript.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule when a drag is ended.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeDragHandlerScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.TreeNodeDropTargetScript">
      <summary>
            Drop target for a tree node that is being dragged.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerEnterHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerExitHandler" />
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeDropTargetScript._treeNode">
      <summary>
            The tree node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeDropTargetScript.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer enters this element.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeDropTargetScript.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer exits this element.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeDropTargetScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeDropTargetScript.GetStageNodeScript(Assets.Scripts.Design.Staging.TreeNodeScript)">
      <summary>
            Gets the stage node script.
            </summary>
      <param name="treeNode">The tree node.</param>
      <returns>The stage node.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.Staging.TreeNodeScript">
      <summary>
            The script for a node in the stage editor.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._arrow">
      <summary>
            The arrow, if the node has one.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._arrowRotation">
      <summary>
            The arrow's current rotation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._button">
      <summary>
            The button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._children">
      <summary>
            The children.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._dragElement">
      <summary>
            The game object in this node that will be cloned and shown as a preview
            when being dragged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._draggingObject">
      <summary>
            The object that is currently being dragged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._expanded">
      <summary>
            The expanded flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._grabDelta">
      <summary>
            The offset between the center of the drag element and where the user clicked.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._text">
      <summary>
            The text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Staging.TreeNodeScript._visible">
      <summary>
            The visible flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.Button">
      <summary>
            Gets the button.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.Empty">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Design.Staging.TreeNodeScript" /> is empty.
            </summary>
      <value>
        <c>true</c> if empty; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.Expanded">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.Staging.TreeNodeScript" /> is expanded.
            </summary>
      <value>
        <c>true</c> if expanded; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.IsDragging">
      <summary>
            Gets a value indicating whether this node is currently being dragged by the user.
            </summary>
      <value>
        <c>true</c> if this node is being dragged; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.Order">
      <summary>
            Gets or sets the order.
            </summary>
      <value>
            The order.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.Parent">
      <summary>
            Gets or sets the parent.
            </summary>
      <value>
            The parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.StageNode">
      <summary>
            Gets the stage node this node is assigned to, or null if it is not assigned.
            </summary>
      <value>
            The stage node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.StagingEditor">
      <summary>
            Gets or sets the staging editor.
            </summary>
      <value>
            The staging editor.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.Staging.TreeNodeScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.XmlElement">
      <summary>
            Gets the element.
            </summary>
      <value>
            The element.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Staging.TreeNodeScript.Children">
      <summary>
            Gets the children.
            </summary>
      <value>
            The children.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.AddChild(Assets.Scripts.Design.Staging.TreeNodeScript)">
      <summary>
            Adds the child.
            </summary>
      <param name="child">The child.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.GetPartNodes">
      <summary>
            Gets the part nodes.
            </summary>
      <returns>The list of part nodes.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.HighlightParts(System.Boolean)">
      <summary>
            Highlights the parts.
            </summary>
      <param name="highlight">if set to <c>true</c> then enable highlight, otherwise disable it.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the node is beginning a drag event.
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when [drag].
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when [end drag].
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.RemoveChild(Assets.Scripts.Design.Staging.TreeNodeScript)">
      <summary>
            Removes the child.
            </summary>
      <param name="child">The child.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.UpdateContent">
      <summary>
            Updates the content of the node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.GetPartNodesRecursive(System.Collections.Generic.List{Assets.Scripts.Design.Staging.PartNodeScript})">
      <summary>
            Recurses through the tree and gets the part nodes.
            </summary>
      <param name="nodes">The nodes.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.InitializeNode(Assets.Scripts.Design.Staging.StagingEditorScript,UI.Xml.XmlElement)">
      <summary>
            Initializes the node.
            </summary>
      <param name="stagingEditor">The staging editor.</param>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.AnimateArrow">
      <summary>
            Animates the arrow.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Staging.TreeNodeScript.OnClicked">
      <summary>
            Called when the button is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Symmetry">
      <summary>
            Contains methods for working with parts in symmetry mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Symmetry._Instance">
      <summary>
            The static instance.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Symmetry.Instance">
      <summary>
            Gets the static instance.
            </summary>
      <value>
            The static instance.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.DeleteSymmetricParts(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Deletes all symmetric parts corresponding to these parts and removes these parts from their current SymmetricSlice.
            </summary>
      <param name="partScripts">The part scripts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.DuplicateParts(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Duplicates the parts and their part connections.
            </summary>
      <param name="rootPart">The root part.</param>
      <returns>The cloned parts.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.EnumerateSymmetricPartScripts(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Enumerates all parts that are symmetric to the specified part script.
            </summary>
      <param name="partScript">The part script.</param>
      <returns>The enumerable list of parts.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ExecuteOnSymmetricPartModifiers``1(``0,System.Boolean,System.Action{``0})">
      <summary>
            Executes the specified action on all symmetric part modifiers and optionally on the specified modifier as well.
            </summary>
      <typeparam name="TModifier">The type of the modifier.</typeparam>
      <param name="modifier">The modifier.</param>
      <param name="includeSourceModifier">If set to <c>true</c>, the action will be executed on the specified modifier as well.</param>
      <param name="action">The action to execute for each symmetric modifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ExecuteOnSymmetricPartModifiers``2(``0,System.Boolean,``1,System.Action{``0,``1})">
      <summary>
            Executes the specified action on all symmetric part modifiers and optionally on the specified modifier as well.
            This takes a value parameter and passes that same parameter to all modifiers executing the action.
            </summary>
      <typeparam name="TModifier">The type of the modifier.</typeparam>
      <typeparam name="TValue">The type of the value.</typeparam>
      <param name="modifier">The modifier.</param>
      <param name="includeSourceModifier">If set to <c>true</c>, the action will be executed on the specified modifier as well.</param>
      <param name="value">The value to pass to the action.</param>
      <param name="action">The action to execute for each symmetric modifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.GenerateSymmetryXml(ModApi.Craft.Assembly)">
      <summary>
            Generates the XML.
            </summary>
      <param name="assembly">The assembly.</param>
      <returns>The Symmetry XML element.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.GetSymmetricPartModifier``1(``0,ModApi.Craft.Parts.PartData)">
      <summary>
            Gets the part modifier in part that is symmetric to the specified part modifier.
            </summary>
      <typeparam name="T">The part modifier type.</typeparam>
      <param name="sourceModifier">The non-symmetric part modifier.</param>
      <param name="symmetricPart">The symmetric part to check for a part modifier that is symmetric to the source modifier.</param>
      <returns>The symmetric part modifier or null if there are none.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.GetSymmetricPartScripts(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Gets the all parts that are symmetric to the specified part script.
            </summary>
      <param name="partScript">The part script.</param>
      <returns>The list of symmetric parts.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.LoadSymmetryXml(System.Xml.Linq.XElement,ModApi.Craft.Assembly)">
      <summary>
            Reads the XML and loads in the symmetric groups and slices.
            </summary>
      <param name="symmetryElement">The symmetry XML element.</param>
      <param name="assembly">The assembly to access parts from.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.RemovePartConnection(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.PartConnection)">
      <summary>
            Removes the part connection from all symmetric parts.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="partConnection">The part connection.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.RemovePartModifier(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.PartModifierData)">
      <summary>
            Removes the part modifier from all symmetric parts.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="partModifier">The part modifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.RemoveSymmetryGroup(ModApi.Design.ISymmetryGroup)">
      <summary>
            Removes symmetry from all parts in the group. This also removes all references to the symmetry group
            since only parts reference a symmetry slice and its symmetry group.
            </summary>
      <param name="symmetryGroup">The symmetry group.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.SetSymmetryMode(ModApi.Craft.Parts.IPartScript,ModApi.Design.SymmetryMode,ModApi.Design.IDesignerUi)">
      <summary>
            Sets the symmetry mode on the specified part.
            </summary>
      <param name="partScript">The part for which to set symmetry.</param>
      <param name="symmetryMode">The symmetry mode.</param>
      <param name="designerUi">The designer UI.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.SynchronizePartConnections(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Synchronizes the part connections of the part with its symmetric parts (if it has any).
            </summary>
      <param name="partScript">The part script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.SynchronizePartModifiers(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Synchronizes the part modifiers of the part with its symmetric parts (if it has any).
            </summary>
      <param name="partScript">The part script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.SynchronizeParts(ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Synchronizes the symmetric parts with the given part's properties
            Note: when new properties are added that should be synced, they need to be added manually
            </summary>
      <param name="partScript">The part script.</param>
      <param name="synchronizeModifiers">if set to <c>true</c> [synchronize modifiers].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.SynchronizePartStyles(ModApi.Craft.Parts.IPartScript,System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Synchronizes the part styles.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="symmetricParts">The symmetric parts. Use <c>null</c> to automatically determine symmetric parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.UpdatePartPositions(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Updates the position of the symmetric clones of the specified parts.
            </summary>
      <param name="parts">The parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.UpdateSymmetry(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript},ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Updates the symmetry of the parts after a part has been repositioned via the MovePartTool. This includes
            possibly creating new SymmetricGroups, SymmetricSlices, and new clones of the parts, which are linked
            via a SymmetryId guid.
            </summary>
      <param name="parts">The parts.</param>
      <param name="partScript">The part script that is being connected to the craft.</param>
      <param name="craftAttachPoint">The attach point on the craft that partScript is connecting to.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#DeleteSymmetricParts(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Deletes all symmetric parts corresponding to these parts and removes these parts from their current SymmetricSlice.
            </summary>
      <param name="partScripts">The part scripts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#DuplicateParts(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Duplicates the parts and their part connections.
            </summary>
      <param name="rootPart">The root part.</param>
      <returns>
            The cloned parts.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#EnumerateSymmetricPartScripts(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Enumerates all parts that are symmetric to the specified part script.
            </summary>
      <param name="partScript">The part script.</param>
      <returns>
            The enumerable list of parts.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#ExecuteOnSymmetricPartModifiers``1(``0,System.Boolean,System.Action{``0})">
      <summary>
            Executes the specified action on all symmetric part modifiers and optionally on the specified modifier as well.
            </summary>
      <typeparam name="TModifier">The type of the modifier.</typeparam>
      <param name="modifier">The modifier.</param>
      <param name="includeSourceModifier">If set to <c>true</c>, the action will be executed on the specified modifier as well.</param>
      <param name="action">The action to execute for each symmetric modifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#ExecuteOnSymmetricPartModifiers``2(``0,System.Boolean,``1,System.Action{``0,``1})">
      <summary>
            Executes the specified action on all symmetric part modifiers and optionally on the specified modifier as well.
            This takes a value parameter and passes that same parameter to all modifiers executing the action.
            </summary>
      <typeparam name="TModifier">The type of the modifier.</typeparam>
      <typeparam name="TValue">The type of the value.</typeparam>
      <param name="modifier">The modifier.</param>
      <param name="includeSourceModifier">If set to <c>true</c>, the action will be executed on the specified modifier as well.</param>
      <param name="value">The value to pass to the action.</param>
      <param name="action">The action to execute for each symmetric modifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#GenerateSymmetryXml(ModApi.Craft.Assembly)">
      <summary>
            Generates the XML.
            </summary>
      <param name="assembly">The assembly.</param>
      <returns>
            The Symmetry XML element.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#GetSymmetricPartModifier``1(``0,ModApi.Craft.Parts.PartData)">
      <summary>
            Gets the part modifier in part that is symmetric to the specified part modifier.
            </summary>
      <typeparam name="T">The part modifier type.</typeparam>
      <param name="sourceModifier">The non-symmetric part modifier.</param>
      <param name="symmetricPart">The symmetric part to check for a part modifier that is symmetric to the source modifier.</param>
      <returns>
            The symmetric part modifier or null if there are none.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#GetSymmetricPartScripts(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Gets the all parts that are symmetric to the specified part script.
            </summary>
      <param name="partScript">The part script.</param>
      <returns>
            The list of symmetric parts.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#LoadSymmetryXml(System.Xml.Linq.XElement,ModApi.Craft.Assembly)">
      <summary>
            Reads the XML and loads in the symmetric groups and slices.
            </summary>
      <param name="symmetryElement">The symmetry XML element.</param>
      <param name="assembly">The assembly to access parts from.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#RemovePartConnection(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.PartConnection)">
      <summary>
            Removes the part connection from all symmetric parts.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="partConnection">The part connection.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#RemovePartModifier(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.PartModifierData)">
      <summary>
            Removes the part modifier from all symmetric parts.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="partModifier">The part modifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#RemoveSymmetryGroup(ModApi.Design.ISymmetryGroup)">
      <summary>
            Removes symmetry from all parts in the group. This also removes all references to the symmetry group
            since only parts reference a symmetry slice and its symmetry group.
            </summary>
      <param name="symmetryGroup">The symmetry group.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#SetSymmetryMode(ModApi.Craft.Parts.IPartScript,ModApi.Design.SymmetryMode,ModApi.Design.IDesignerUi)">
      <summary>
            Sets the symmetry mode on the specified part.
            </summary>
      <param name="partScript">The part for which to set symmetry.</param>
      <param name="symmetryMode">The symmetry mode.</param>
      <param name="designerUi">The designer UI.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#SynchronizePartConnections(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Synchronizes the part connections of the part with its symmetric parts (if it has any).
            </summary>
      <param name="partScript">The part script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#SynchronizePartModifiers(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Synchronizes the part modifiers of the part with its symmetric parts (if it has any).
            </summary>
      <param name="partScript">The part script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#SynchronizeParts(ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Synchronizes the symmetric parts with the given part's properties
            Note: when new properties are added that should be synced, they need to be added manually
            </summary>
      <param name="partScript">The part script.</param>
      <param name="synchronizeModifiers">if set to <c>true</c> [synchronize modifiers].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#SynchronizePartStyles(ModApi.Craft.Parts.IPartScript,System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Synchronizes the part styles.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="symmetricParts">The symmetric parts. Use <c>null</c> to automatically determine symmetric parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#UpdatePartPositions(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Updates the position of the symmetric clones of the specified parts.
            </summary>
      <param name="parts">The parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.ModApi#Design#ISymmetry#UpdateSymmetry(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript},ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Updates the symmetry of the parts after a part has been repositioned via the MovePartTool. This includes
            possibly creating new SymmetricGroups, SymmetricSlices, and new clones of the parts, which are linked
            via a SymmetryId guid.
            </summary>
      <param name="parts">The parts.</param>
      <param name="partScript">The part script that is being connected to the craft.</param>
      <param name="craftAttachPoint">The attach point on the craft that partScript is connecting to.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.AddPartsToSymmetrySlice(ModApi.Design.ISymmetrySlice,System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Adds the parts to the symmetry slice.
            </summary>
      <param name="slice">The slice.</param>
      <param name="parts">The parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.CreateSymmetryGroup(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript},ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Creates the symmetry group.
            </summary>
      <param name="parts">The parts to put in the original slice in the new symmetry group.</param>
      <param name="sliceRootPart">The root part of the original symmetry slice.</param>
      <param name="targetAttachPoint">The target attach point.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.DeleteSymmetryGroup(ModApi.Design.ISymmetryGroup)">
      <summary>
            Deletes the symmetry group.
            </summary>
      <param name="group">The group.</param>
      <exception cref="T:System.Exception">Cannot delete symmetry group that still has parts.</exception>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.EnumerateSymmetricPartScripts(Assets.Scripts.Craft.Parts.PartScript)">
      <summary>
            Enumerates all parts that are symmetric to the specified part script.
            </summary>
      <param name="partScript">The part script.</param>
      <returns>The enumerable list of parts.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.FindCraftAttachPoint(ModApi.Craft.Parts.IPartScript,System.Collections.Generic.List{ModApi.Craft.Parts.PartConnection})">
      <summary>
            Looks at the specified part script and finds an attach point that connects it to the craft and
            also provides a collection of all part connections that connect it to the craft.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="craftConnections">The craft connections.</param>
      <returns>An attach point that connects it to the craft and a list of connections to the craft.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.GetAttachPointId(ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Gets the attach point ID, but first checks if the part is mirrored, and if it is then checks if the
            attach point should be swapped with another attach point.
            </summary>
      <param name="attachPoint">The attach point.</param>
      <returns>The ID of the attach point.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.NotifyPartModifiers(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Notifies the part modifiers.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="sourcePartScript">The source part script.</param>
      <param name="created">if set to <c>true</c> then the part has just been created.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.SynchronizePartModifiers(ModApi.Craft.Parts.IPartScript,System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Synchronizes the part modifiers of the part with its symmetric parts (if it has any).
            </summary>
      <param name="partScript">The part script.</param>
      <param name="symmetricParts">The symmetric parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.UpdateCommandPod(ModApi.Craft.Parts.PartData,ModApi.Craft.Parts.PartData)">
      <summary>
            Updates the command pod of the cloned part by checking if there is a symmetric equivalent
            of the source part's command pod.
            </summary>
      <param name="clonePart">The clone part.</param>
      <param name="sourcePart">The source part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Symmetry.UpdatePartSymmetry(ModApi.Design.ISymmetrySlice,System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript},ModApi.Craft.ICraftScript)">
      <summary>
            Updates the part symmetry. Checks if any parts need to be created and positions all parts
            in the symmetry group.
            </summary>
      <param name="sourceSlice">The source slice.</param>
      <param name="parts">The parts to update symmetry for.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="T:Assets.Scripts.Design.SymmetryGroup">
      <summary>
            Contains information about a group of parts in symmetry mode.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryGroup.#ctor(ModApi.Design.SymmetryMode,ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.SymmetryGroup" /> class.
            </summary>
      <param name="symmetryMode">The symmetry mode.</param>
      <param name="attachPoint">The attach point.</param>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryGroup.#ctor">
      <summary>
            Prevents a default instance of the <see cref="T:Assets.Scripts.Design.SymmetryGroup" /> class from being created.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetryGroup.AttachPoint">
      <summary>
            Gets the attach point.
            </summary>
      <value>
            The attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetryGroup.RootPart">
      <summary>
            Gets the root part.
            </summary>
      <value>
            The root part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetryGroup.Slices">
      <summary>
            Gets the slices.
            </summary>
      <value>
            The slices.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetryGroup.SymmetryMode">
      <summary>
            Gets the symmetry mode.
            </summary>
      <value>
            The symmetry mode.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryGroup.LoadSymmetryGroup(System.Xml.Linq.XElement,ModApi.Craft.Assembly)">
      <summary>
            Loads the symmetry group.
            </summary>
      <param name="xml">The XML containing the data describing the symmetry group.</param>
      <param name="assembly">The assembly to access for parts.</param>
      <exception cref="T:System.Exception">The group failed to load.</exception>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryGroup.GenerateXml">
      <summary>
            Generates the XML.
            </summary>
      <returns>The XML element.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.SymmetryPanelScript">
      <summary>
            Script for the symmetry panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.SymmetryPanelScript._bakeSymmetryButton">
      <summary>
            The bake symmetry button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.SymmetryPanelScript._messageText">
      <summary>
            The message text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.SymmetryPanelScript._options">
      <summary>
            The symmetry options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.SymmetryPanelScript._radialSpinner">
      <summary>
            The radial spinner panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.SymmetryPanelScript._selectRootButton">
      <summary>
            The select symmetric root button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.SymmetryPanelScript._spinnerPanel">
      <summary>
            The spinner panel
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.GetSelectedPartSymmetryMode">
      <summary>
            Gets the symmetry mode of the selected part.
            </summary>
      <returns>The symmetry mode of the selected part.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.OnBakeSymmetryButtonClicked">
      <summary>
            Called when the bake symmetry button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.OnBakeSymmetryConfirmed(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when the bake symmetry dialog is confirmed.
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.OnFlyoutClosing(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is closing.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.OnFlyoutOpening(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opening.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the selected part changed in the designer.
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.OnSelectRootButtonClicked">
      <summary>
            Called when the select root button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.OnSpinnerValueChanged(System.String)">
      <summary>
            Called when the spinner value has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.Refresh">
      <summary>
            Refreshes the UI from the currently selected designer part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.SetSymmetryModeOption(ModApi.Design.SymmetryMode)">
      <summary>
            Sets the symmetry mode option.
            </summary>
      <param name="symmetryMode">The symmetry mode.</param>
    </member>
    <member name="T:Assets.Scripts.Design.SymmetryPanelScript.SymmetryOption">
      <summary>
            Wraps a symmetry mode with UI display information.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetryPanelScript.SymmetryOption.#ctor(ModApi.Design.SymmetryMode,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.SymmetryPanelScript.SymmetryOption" /> class.
            </summary>
      <param name="mode">The mode.</param>
      <param name="name">The name.</param>
      <param name="description">The description.</param>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetryPanelScript.SymmetryOption.Description">
      <summary>
            Gets or sets the description.
            </summary>
      <value>
            The description.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetryPanelScript.SymmetryOption.Mode">
      <summary>
            Gets or sets the mode.
            </summary>
      <value>
            The mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetryPanelScript.SymmetryOption.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.SymmetrySlice">
      <summary>
            Contains information about a single slice in a symmetry group.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetrySlice.#ctor(ModApi.Design.ISymmetryGroup,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.SymmetrySlice" /> class.
            </summary>
      <param name="group">The group.</param>
      <param name="angle">The angle.</param>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetrySlice.Angle">
      <summary>
            Gets the angle for this slice.
            </summary>
      <value>
            The angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetrySlice.Parts">
      <summary>
            Gets the parts in the slice.
            </summary>
      <value>
            The parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetrySlice.SliceRootPart">
      <summary>
            Gets or sets the root part of the slice.
            </summary>
      <value>
            The root part of the slice.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.SymmetrySlice.SymmetryGroup">
      <summary>
            Gets the symmetry group.
            </summary>
      <value>
            The symmetry group.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetrySlice.GetPart(System.Guid)">
      <summary>
            Gets the part with the specified symmetry id.
            </summary>
      <param name="symmetryId">The symmetry identifier.</param>
      <returns>The part.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.SymmetrySlice.UpdatePartTransform(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Updates the position and rotation of the symmetric part based on the source part.
            </summary>
      <param name="sourcePart">The source part.</param>
      <param name="symmetricPart">The symmetric part.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.CameraTool">
      <summary>
            Tool for moving the designer camera around.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" />
    </member>
    <member name="F:Assets.Scripts.Design.Tools.CameraTool._pinchCameraStartPosition">
      <summary>
            The pinch camera start position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.CameraTool._pinching">
      <summary>
            The pinching
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.CameraTool._pinchTargetStartPosition">
      <summary>
            The pinch target start position
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.CameraTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.CameraTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.CameraTool.CameraIsMoving">
      <summary>
            Gets a value indicating whether [camera is moving].
            </summary>
      <value>
        <c>true</c> if [camera is moving]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.CameraTool.CanPinch">
      <summary>
            Gets a value indicating whether this instance can pinch.
            </summary>
      <value>
        <c>true</c> if this instance can pinch; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.CameraTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc).
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.CameraTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.CameraTool.HandlePinch(ModApi.Input.Events.PinchEventArgs)">
      <summary>
            Handles the pinch event.
            </summary>
      <param name="e">The pinch event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.CameraTool.HandleScroll(ModApi.Input.Events.ScrollEventArgs)">
      <summary>
            Handles the scroll wheel.
            </summary>
      <param name="e">The event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.CameraTool.HideFlyouts(System.Boolean)">
      <summary>
            Shows or hides the current flyout (if any).
            </summary>
      <param name="hide">If set to <c>true</c>, the current flyout will be hidden. If <c>false</c>, the selected flyout will be unhidden.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.DesignerToolBase">
      <summary>
            Base class for designer tools in this project.
            </summary>
      <seealso cref="T:ModApi.Design.DesignerTool" />
    </member>
    <member name="M:Assets.Scripts.Design.Tools.DesignerToolBase.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.DesignerToolBase.DesignerScript">
      <summary>
            Gets the designer script. Sometimes this is necessary when dealing with tools
            in our code base since we need functionality that doesn't make sense to expose
            in the Mod API.
            </summary>
      <value>
            The designer script.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Fuselage.FuselageBaseTool">
      <summary>
            Base class for fuselage designer tools.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.MovementTool" />
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageBaseTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.Fuselage.FuselageBaseTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageBaseTool.GizmosActive">
      <summary>
            Gets a value indicating whether the gizmos are active.
            </summary>
      <value>
        <c>true</c> if the gizmos are active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageBaseTool.GizmosParent">
      <summary>
            Gets the gizmos parent.
            </summary>
      <value>
            The gizmos parent.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageBaseTool.CreateGizmos(System.Boolean,System.Boolean)">
      <summary>
            Creates the gizmos.
            </summary>
      <param name="localOrientation">If set to <c>true</c> the transform local orientation is used, otherwise world orientation is used.</param>
      <param name="playGizmoFlyout">if set to <c>true</c> [play gizmo flyout].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageBaseTool.CreateGizmosParent(UnityEngine.Transform,System.Boolean)">
      <summary>
            Creates the gizmos parent.
            </summary>
      <param name="partTransform">The part transform.</param>
      <param name="playGizmoFlyout">if set to <c>true</c> [play gizmo flyout].</param>
      <returns>
            The gizmos parent.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageBaseTool.DestroyGizmos">
      <summary>
            Destroys the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageBaseTool.ProcessSelectedTransformChanged(UnityEngine.Transform,System.Boolean,System.Boolean)">
      <summary>
            Performs processing when the selected transform has changed.
            </summary>
      <param name="newTransform">The new transform.</param>
      <param name="justAddedPart">If set to <c>true</c> the transform belongs to a part which was just added, otherwise; <c>false</c>.</param>
      <param name="notifyGizmo">If set to <c>true</c> gizmos should be notified of the transform change, otherwise; <c>false</c>.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Fuselage.FuselageBoxScript">
      <summary>
            Script for the fuselage box.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageBoxScript._material">
      <summary>
            The material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageBoxScript._selected">
      <summary>
            The selected flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageBoxScript._startAlpha">
      <summary>
            The start alpha
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageBoxScript.IsSelected">
      <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
      <value>
        <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageBoxScript.SetSize(UnityEngine.Vector2)">
      <summary>
            Sets the size.
            </summary>
      <param name="size">The size.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageBoxScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageBoxScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Fuselage.FuselageCube">
      <summary>
            Class that draws a cube/prism around a fuselage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageCube._lines">
      <summary>
            The lines
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageCube.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.Fuselage.FuselageCube" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageCube.FuselageScript">
      <summary>
            Gets the fuselage script.
            </summary>
      <value>
            The fuselage script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageCube.Destroy">
      <summary>
            Destroys this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageCube.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageCube.UpdateLine(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Updates the line.
            </summary>
      <param name="i">The index.</param>
      <param name="start">The start point.</param>
      <param name="end">The end point.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint">
      <summary>
            Contains information and methods for dealing with the ends of fuselage pieces.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.AnchorPosition">
      <summary>
            Gets the anchor position, which will be the position of the anchor attach point for the first
            fuselage added.
            </summary>
      <value>
            The anchor position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.Fuselages">
      <summary>
            Gets the fuselages.
            </summary>
      <value>
            The fuselages.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.PartConnection">
      <summary>
            Gets the part connection.
            </summary>
      <value>
            The part connection.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.Scale">
      <summary>
            Gets the scale.
            </summary>
      <value>
            The scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.Transform">
      <summary>
            Gets or sets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.AdaptSecondFuselage(System.Boolean)">
      <summary>
            Adapts the second fuselage to the first fuselage. Used when the fuselage is being connected to another
            fuselage to auto-adapt its shape to match.
            </summary>
      <param name="updateOppositeSide">if set to <c>true</c> update the opposite side too.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.AddFuselage(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript,UnityEngine.Transform)">
      <summary>
            Adds the fuselage.
            </summary>
      <param name="fuselageScript">The fuselage script.</param>
      <param name="fuselageMarker">The fuselage marker.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.AddOtherFuselageToJoint(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript,ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Checks the attach point for any other fuselage and adds them to the joint.
            </summary>
      <param name="fuselageScript">The fuselage script.</param>
      <param name="attachPoint">The attach point.</param>
      <returns>
            The other fuselage, or null if there are none.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.ContainsFuselage(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript)">
      <summary>
            Determines whether the joint contains the specified fuselage.
            </summary>
      <param name="fuselage">The fuselage.</param>
      <returns>
        <c>true</c> if it contains the fuselage; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.GetCornerRadiuses">
      <summary>
            Gets the corner radiuses.
            </summary>
      <returns>The corner radiuses.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.SetCornerRadiuses(System.Single[])">
      <summary>
            Sets the corner radiuses.
            </summary>
      <param name="cornerRadiuses">The corner radiuses.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.SetDimensions(UnityEngine.Vector3,UnityEngine.Vector2,System.Boolean)">
      <summary>
            Sets the dimensions.
            </summary>
      <param name="position">The position.</param>
      <param name="size">The size.</param>
      <param name="undoInvalidChanges">if set to <c>true</c> then undo if any invalid changes are done.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.SetFuselagePosition(Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo,UnityEngine.Vector3)">
      <summary>
            Sets the fuselage position.
            </summary>
      <param name="fuselage">The fuselage.</param>
      <param name="position">The position.</param>
      <returns>False if the position is invalid.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.SetPosition(UnityEngine.Vector3,System.Boolean)">
      <summary>
            Sets the position of the joint.
            </summary>
      <param name="position">The position.</param>
      <param name="undoInvalidChanges">if set to <c>true</c> [undo invalid changes].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.SetSize(UnityEngine.Vector2)">
      <summary>
            Sets the size of this joint.
            </summary>
      <param name="size">The size.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.UpdateAttachedParts(System.Boolean,System.Boolean)">
      <summary>
            Checks all attach points for the fuselages in this joint and determines if any should have their part connections broken.
            If this joint is only for a single fuselage connected to a non-fuselage, then the non-fuselage part will be moved along with
            the attach point and maintain its connection.
            </summary>
      <param name="checkForBrokenConnections">if set to <c>true</c> then check for broken connections.</param>
      <param name="updateSymmetry">if set to <c>true</c> [update symmetry].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.UpdateMeshes">
      <summary>
            Updates the meshes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.CheckIfAttachPointsStillConnected(ModApi.Craft.Parts.AttachPoint,ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Checks if the attach points are still connected.
            </summary>
      <param name="ap1">The first attach point.</param>
      <param name="ap2">The other attach point.</param>
      <returns>True if still connected, false otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.GetCornerIndex(Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo,System.Int32,System.Boolean)">
      <summary>
            Gets the index of the corner, taking into account its rotation relative to this joint and if it is
            flipped and indexes should be inverted.
            </summary>
      <param name="fuselageInfo">The fuselage information.</param>
      <param name="globalCornerIndex">Index of the global corner.</param>
      <param name="flipped">if set to <c>true</c> then take into account the fuselage is flipped.</param>
      <returns>
            The corner index.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.AddFuselage(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript,UnityEngine.Transform,UnityEngine.Transform,System.Boolean)">
      <summary>
            Adds the fuselage.
            </summary>
      <param name="fuselage">The fuselage.</param>
      <param name="targetPoint">The target point.</param>
      <param name="anchorPoint">The anchor point.</param>
      <param name="anchorConnected">if set to <c>true</c> then it indicates anchor is connected to another part.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo">
      <summary>
            Contains information about a fuselage piece that is being used in the fuselage tool.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.AnchorConnected">
      <summary>
            Gets a value indicating whether the anchor is connected to another part.
            </summary>
      <value>
        <c>true</c> if anchor is connected to another part; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.AnchorPoint">
      <summary>
            Gets or sets the anchor point.
            </summary>
      <value>
            The anchor point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.AttachPoint">
      <summary>
            Gets the attach point.
            </summary>
      <value>
            The attach point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.CornerIndexOffset">
      <summary>
            Gets or sets the corner index offset.
            </summary>
      <value>
            The corner index offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.Flipped">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo" /> is flipped upside down relative to this joint.
            </summary>
      <value>
        <c>true</c> if flipped; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.FlipScaleXY">
      <summary>
            Gets a value indicating whether to swap the X/Y of the scale when applied to this fuselage.
            </summary>
      <value>
        <c>true</c> if [flip scale]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.Fuselage">
      <summary>
            Gets or sets the fuselage.
            </summary>
      <value>
            The fuselage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.IncompatibleRotation">
      <summary>
            Gets a value indicating whether the rotation is incompatible.
            </summary>
      <value>
        <c>true</c> if the rotation is incompatible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.InvertCornerIndexOrder">
      <summary>
            Gets a value indicating whether to invert corner index order.
            </summary>
      <value>
        <c>true</c> if it should invert corner index order; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.TargetPoint">
      <summary>
            Gets or sets the target point.
            </summary>
      <value>
            The target point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.UndoFrontScale">
      <summary>
            Gets or sets the undo front scale, which is used when a change to the fuselage needs to be undone.
            </summary>
      <value>
            The undo front scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.UndoOffset">
      <summary>
            Gets or sets the undo offset, which is used when a change to the fuselage needs to be undone.
            </summary>
      <value>
            The undo offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.UndoPosition">
      <summary>
            Gets or sets the undo position, which is used when a change to the fuselage needs to be undone.
            </summary>
      <value>
            The undo position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.UndoRearScale">
      <summary>
            Gets or sets the undo rear scale, which is used when a change to the fuselage needs to be undone.
            </summary>
      <value>
            The undo rear scale.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo.GetLoadPartConnection">
      <summary>
            Gets the part connection associated with the load attach point on the same end as this shell attach point.
            </summary>
      <returns>The part connection or null if there is none.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool">
      <summary>
            Tool for shaping fuselage parts.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" />
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.MaxSize">
      <summary>
            The maximum size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._activeGizmo">
      <summary>
            The active gizmo
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._collisionDetector">
      <summary>
            The part collision detector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._draggingBoxOffset">
      <summary>
            The offset between the cursor click and the box when dragging started.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._draggingFuselageBox">
      <summary>
            The flat set when the user is the dragging fuselage box.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._fuselageBox">
      <summary>
            The fuselage box.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._fuselageCube">
      <summary>
            The fuselage cube
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._gizmoBackward">
      <summary>
            The gizmo in the backward direction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._gizmoForward">
      <summary>
            The gizmo in the forward direction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._gizmoLeft">
      <summary>
            The gizmo in the left direction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._gizmoRight">
      <summary>
            The gizmo in the right direction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._gizmos">
      <summary>
            The gizmos.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._gizmoStartingPosition">
      <summary>
            The starting position of the gizmo when it started to be dragged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._gizmoStartPositions">
      <summary>
            The gizmo start positions (in world coordinates) when editing starts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._gizmoTotalDragDelta">
      <summary>
            The total amount the gizmo has been dragged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._gizmoVertical">
      <summary>
            The gizmo in the vertical direction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._grid">
      <summary>
            The grid.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._joint">
      <summary>
            The fuselage joint currently being edited.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool._selectedAttachPoint">
      <summary>
            The selected attach point
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.AllowPartMovement">
      <summary>
            Gets a value indicating whether part movement should be allowed while the tool is active.
            </summary>
      <value>
        <c>true</c> if part movement should be allowed while the tool is active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.CanAddSection">
      <summary>
            Gets a value indicating whether the tool can add a new fuselage section, which can only
            happen when a slice is selected and that slice is not currently connected to another
            fuselage section.
            </summary>
      <value>
        <c>true</c> if this instance can add section; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc).
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.MaxOffsetInGrid">
      <summary>
            Gets the maximum offset in grid.
            </summary>
      <value>
            The maximum offset in grid.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.MinOffsetInGrid">
      <summary>
            Gets the minimum offset in grid.
            </summary>
      <value>
            The minimum offset in grid.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.MouseDrag">
      <summary>
            Gets the <see cref="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.MouseDrag" /> instance for this gizmo which handles translating to/from screen-space to world-space mouse drag vectors/movements.
            </summary>
      <value>
            The <see cref="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.MouseDrag" /> instance for this gizmo which handles translating to/from screen-space to world-space mouse drag vectors/movements.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.OnFuselageSelected">
      <summary>
            Gets or sets the action to call when a fuselage is selected.
            </summary>
      <value>
            The action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.OnJointSelected">
      <summary>
            Gets or sets the action to call when a joint is selected.
            </summary>
      <value>
            The action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.OnJointUpdated">
      <summary>
            Gets or sets the action to execute when the joint is updated.
            </summary>
      <value>
            The action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.PartCollisionDetector">
      <summary>
            Gets the part collision detector.
            </summary>
      <value>
            The part collision detector.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.SelectedFuselage">
      <summary>
            Gets the selected fuselage.
            </summary>
      <value>
            The selected fuselage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.SelectedJoint">
      <summary>
            Gets the joint.
            </summary>
      <value>
            The joint.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.Activate">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.AddSection(ModApi.Craft.Parts.AttachPointScript@)">
      <summary>
            Adds a new section.
            </summary>
      <param name="attachPoint">The attach point that should be used to create a connection.</param>
      <returns>
            The newly added fuselage script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.ChangeSelection(System.Boolean)">
      <summary>
            Changes the selection.
            </summary>
      <param name="moveSelectionForward">if set to <c>true</c> then move the selection forwards. Otherwise, move it backwards.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.Deactivate">
      <summary>
            Stops this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.SelectedPartChanged(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit},System.Boolean)">
      <summary>
            Called when the selected part has changed.
            </summary>
      <param name="newPart">The new part.</param>
      <param name="hit">The hit.</param>
      <param name="justAdded">Whether the part was just added (created and immediately selected in the same frame).</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.SelectFuselage(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript)">
      <summary>
            Selects the fuselage.
            </summary>
      <param name="fuselageScript">The fuselage script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.SetJointSize(UnityEngine.Vector2)">
      <summary>
            Sets the size of the joint.
            </summary>
      <param name="size">The size.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.Update(System.Single)">
      <summary>
            Called every frame when the designer is using this tool.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.UpdateFuselageOffset(UnityEngine.Vector3)">
      <summary>
            Updates the fuselage offset.
            </summary>
      <param name="offset">The offset.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.CreateGizmos(System.Boolean,System.Boolean)">
      <summary>
            Creates the gizmos.
            </summary>
      <param name="local">If set to <c>true</c> the transform local orientation is used, otherwise world orientation is used.</param>
      <param name="playGizmoFlyout">if set to <c>true</c> [play gizmo flyout].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.DestroyGizmos">
      <summary>
            Destroys the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.OnMouseBegin(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the mouse button is clicked.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.OnMouseDrag(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the mouse button is being dragged (moved while button is down).
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.OnMouseEnd">
      <summary>
            Called when the mouse button has been released.
            </summary>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.UpdateSymmetricFuselages(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript)">
      <summary>
            Updates the symmetric fuselages.
            </summary>
      <param name="fuselage">The fuselage source.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.CalculateGridPosition(UnityEngine.Vector3)">
      <summary>
            Calculates the grid position.
            </summary>
      <param name="position">The position.</param>
      <returns>
            The grid position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.CreateGizmo(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Vector2,UnityEngine.Vector2i,UnityEngine.Color)">
      <summary>
            Creates the gizmo.
            </summary>
      <param name="parent">The parent.</param>
      <param name="direction">The direction.</param>
      <param name="fuselageScale">The fuselage scale.</param>
      <param name="id">The identifier.</param>
      <param name="color">The color.</param>
      <returns>
            The gizmo script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.CreateGrid">
      <summary>
            Creates the grid.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.DestroyFuselageCube">
      <summary>
            Destroys the fuselage cube.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.DestroyGrid">
      <summary>
            Destroys the grid.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.GetPointOnFuselageBoxPlane(UnityEngine.Ray)">
      <summary>
            Gets the point on fuselage box plane.
            </summary>
      <param name="ray">The ray.</param>
      <returns>The point, or null if there was no intersection.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.HasForeignLoadAttachment(Assets.Scripts.Design.Tools.Fuselage.FuselageJoint.FuselageInfo)">
      <summary>
            Determines whether the fuselage has a part connected to its load attach point that is not a fuselage in this joint.
            </summary>
      <param name="fuselage">The fuselage.</param>
      <returns>
        <c>true</c> if it has a foreign load attachment; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.IsFirstAttachPointMoreForward(ModApi.Craft.Parts.AttachPointScript,ModApi.Craft.Parts.AttachPointScript)">
      <summary>
            Determines whether if the first attach point parameter is more aligned in the "forwards" direction than
            the second attach point.
            </summary>
      <param name="ap1">The first attach point.</param>
      <param name="ap2">The second attach point.</param>
      <returns>
        <c>true</c> if first attach point is more forward otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.OnStartDraggingGizmo(Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript)">
      <summary>
            Called when [start dragging gizmo].
            </summary>
      <param name="gizmo">The gizmo.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.RepositionParts(ModApi.Craft.Parts.PartData,ModApi.Craft.Parts.PartConnection,UnityEngine.Vector3,System.Collections.Generic.Dictionary{System.Int32,System.Boolean})">
      <summary>
            Repositions the parts.
            </summary>
      <param name="part">The part.</param>
      <param name="partConnection">The part connection.</param>
      <param name="delta">The delta.</param>
      <param name="movedParts">The parts which were moved.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.SelectAttachPoint(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript,UnityEngine.Transform,ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Selects the attach point.
            </summary>
      <param name="fuselageScript">The fuselage script.</param>
      <param name="fuselageMarker">The fuselage marker at which to create the joint.</param>
      <param name="attachPoint">The attach point at the marker, or null if there is none.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.SetFuselageJoint(Assets.Scripts.Design.Tools.Fuselage.FuselageJoint)">
      <summary>
            Sets the fuselage joint.
            </summary>
      <param name="joint">The joint.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.SetGizmosVisibility(System.Boolean,Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript)">
      <summary>
            Sets the visibility of the gizmos, optionally ignoring one.
            </summary>
      <param name="visible">if set to <c>true</c> [visible].</param>
      <param name="ignoreGizmo">The ignore gizmo.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.UpdateFuselageBox(UnityEngine.Vector2)">
      <summary>
            Updates the fuselage box.
            </summary>
      <param name="size">The size.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.UpdateJoint(System.Single,System.Single)">
      <summary>
            Updates the joint.
            </summary>
      <param name="width">The width.</param>
      <param name="depth">The depth.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageShapeTool.UpdateJointFromGizmoDrag">
      <summary>
            Updates the joint with gizmos.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Fuselage.FuselageTool">
      <summary>
            Tool for doing basic editing on a fuselage part.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" />
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._resizeSound">
      <summary>
            The resize sound
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._activeGizmo">
      <summary>
            The active gizmo
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._collisionDetector">
      <summary>
            The part collision detector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._disableGizmoFlyoutSoundForNextFrame">
      <summary>
            The disable gizmo flyout sound for next frame. Reset to false at the end of every Update().
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._fuselages">
      <summary>
            Keeps track of all fuselages that are being edited.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._gizmoRadius">
      <summary>
            The gizmo for controlling the radius.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._gizmoRadiusBottom">
      <summary>
            The gizmo for controlling the bottom radius.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._gizmoRadiusTop">
      <summary>
            The gizmo for controlling the top radius.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._gizmos">
      <summary>
            The gizmos.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._gizmoStartingPosition">
      <summary>
            The starting position of the gizmo when it started to be dragged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._gizmoTotalDragDelta">
      <summary>
            The total amount the gizmo has been dragged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._gizmoVerticalBottom">
      <summary>
            The gizmo for changing the vertical size from the bottom.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._gizmoVerticalTop">
      <summary>
            The gizmo for changing the vertical size from the top.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._joints">
      <summary>
            The joints.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Fuselage.FuselageTool._maxSize">
      <summary>
            The maximum size
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.Fuselage.FuselageTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc).
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.MouseDrag">
      <summary>
            Gets the <see cref="P:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.MouseDrag" /> instance for this gizmo which handles translating to/from screen-space to world-space mouse drag vectors/movements.
            </summary>
      <value>
            The <see cref="P:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.MouseDrag" /> instance for this gizmo which handles translating to/from screen-space to world-space mouse drag vectors/movements.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.PartCollisionDetector">
      <summary>
            Gets the part collision detector.
            </summary>
      <value>
            The part collision detector.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.Activate">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.Deactivate">
      <summary>
            Stops this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.OnCapturedToolChanged(ModApi.Design.DesignerTool)">
      <summary>
            Called when the Designer's current captured tool has changed. Only called when this tool is active.
            </summary>
      <param name="designerTool">The designer tool, or null if the captured tool has been released.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.OnOtherToolActivated(ModApi.Design.DesignerTool)">
      <summary>
            Called when a tool other than this one has been activated.
            </summary>
      <param name="toolActivated">The tool which was activated.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.SelectedPartChanged(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit},System.Boolean)">
      <summary>
            Called when the selected part has changed.
            </summary>
      <param name="newPart">The new part.</param>
      <param name="hit">The hit.</param>
      <param name="justAdded">Whether the part was just added (created and immediately selected in the same frame).</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.Update(System.Single)">
      <summary>
            Called every frame when the designer is using this tool.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.UpdateGizmoPositions">
      <summary>
            Updates the gizmo positions.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.CreateGizmos(System.Boolean,System.Boolean)">
      <summary>
            Creates the gizmos.
            </summary>
      <param name="local">If set to <c>true</c> the transform local orientation is used, otherwise world orientation is used.</param>
      <param name="playGizmoFlyout">if set to <c>true</c> [play gizmo flyout].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.DestroyGizmos">
      <summary>
            Destroys the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.OnMouseBegin(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the mouse button is clicked.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.OnMouseDrag(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the mouse button is being dragged (moved while button is down).
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.OnMouseEnd">
      <summary>
            Called when the mouse button has been released.
            </summary>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.ProcessSelectedTransformChanged(UnityEngine.Transform,System.Boolean,System.Boolean)">
      <summary>
            Performs processing when the selected transform has changed.
            </summary>
      <param name="newTransform">The new transform.</param>
      <param name="justAddedPart">If set to <c>true</c> the transform belongs to a part which was just added, otherwise; <c>false</c>.</param>
      <param name="notifyGizmo">If set to <c>true</c> gizmos should be notified of the transform change, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.ShowGizmoOnEnd(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript,System.String)">
      <summary>
            Determines if gizmos should be shown on the specified end.
            </summary>
      <param name="fuselage">The fuselage.</param>
      <param name="tagName">Name of the tag.</param>
      <returns>True if the gizmos should be shown.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.ApplyActiveGimzoChanges">
      <summary>
            Applies the active gizmo changes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.CreateFuselageGizmos(System.Boolean)">
      <summary>
            Creates the fuselage gizmos.
            </summary>
      <param name="playGizmoFlyout">if set to <c>true</c> [play gizmo flyout].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.CreateGizmo(UnityEngine.Transform,UnityEngine.Vector3,UnityEngine.Color)">
      <summary>
            Creates the gizmo.
            </summary>
      <param name="parent">The parent.</param>
      <param name="direction">The direction.</param>
      <param name="color">The color.</param>
      <returns>
            The gizmo script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.CreateJoint(Assets.Scripts.Craft.Parts.Modifiers.Fuselage.FuselageScript,UnityEngine.Transform,ModApi.Craft.Parts.AttachPoint)">
      <summary>
            Creates the joint.
            </summary>
      <param name="fuselageScript">The fuselage script.</param>
      <param name="fuselageMarker">The fuselage marker at which to create the joint.</param>
      <param name="attachPoint">The attach point at the marker, or null if there is none.</param>
      <returns>
            The fuselage joint.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.DisplayLength(Assets.Scripts.Design.Tools.Fuselage.FuselageJoint)">
      <summary>
            Displays the length of the fuselage in the fuselage joint. Assumes there is only one fuselage in there.
            </summary>
      <param name="fuselageJoint">The fuselage joint.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.DisplayRadius(System.Single)">
      <summary>
            Displays the radius.
            </summary>
      <param name="radius">The radius.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.OnStartDraggingGizmo(Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript)">
      <summary>
            Called when [start dragging gizmo].
            </summary>
      <param name="gizmo">The gizmo.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.PlayGizmoSound">
      <summary>
            Plays the moved sound.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.SetGizmosVisibility(System.Boolean,Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript)">
      <summary>
            Sets the visibility of the gizmos, optionally ignoring one.
            </summary>
      <param name="visible">if set to <c>true</c> [visible].</param>
      <param name="ignoreGizmo">The ignore gizmo.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.StopGizmoSound">
      <summary>
            Stops the gizmo sound.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.FuselageTool.UpdateFuselageJoint(System.Int32,System.Single)">
      <summary>
            Updates the fuselage joint.
            </summary>
      <param name="jointIndex">Index of the joint.</param>
      <param name="distance">The distance.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Fuselage.GridScript">
      <summary>
            Script for a grid.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Fuselage.GridScript.GridSize">
      <summary>
            Gets or sets the size of the grid.
            </summary>
      <value>
            The size of the grid.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.GridScript.Create(System.Single,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
      <summary>
            Creates the specified grid size.
            </summary>
      <param name="gridSize">Size of the grid.</param>
      <param name="min">The minimum.</param>
      <param name="max">The maximum.</param>
      <param name="originLineSize">Size of the origin line.</param>
      <returns>
            Create a grid and return it.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.GridScript.GetGridPosition(UnityEngine.Vector3)">
      <summary>
            Gets the grid position in world space.
            </summary>
      <param name="position">The position in world space.</param>
      <returns>The grid position in world space.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Fuselage.GridScript.CreateQuadLine(UnityEngine.Transform,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Material)">
      <summary>
            Creates a quad line in the grid.
            </summary>
      <param name="parent">The parent.</param>
      <param name="position">The position.</param>
      <param name="scale">The scale.</param>
      <param name="material">The material.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.ToolAdjustmentOccurredHandler">
      <summary>
            Handler for when the tool performs an adjustment.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.MovementTool">
      <summary>
            Basic functionality a movement tool should provide.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovementTool.AdjustmentSpeed">
      <summary>
            The base speed scalar for movement adjustments.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovementTool._localOrientation">
      <summary>
            The local orientation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovementTool._movement">
      <summary>
            The movement
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovementTool._partSelection">
      <summary>
            The part selection
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovementTool._selectedTransform">
      <summary>
            The currently selected transform.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.MovementTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="E:Assets.Scripts.Design.Tools.MovementTool.ToolAdjustmentOccurred">
      <summary>
            Occurs when a tool adjustment has occurred.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.MovementTool.MovementType">
      <summary>
            The movement type, self or all non-cockpit side connected parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovementTool.MovementType.Self">
      <summary>
            Just move the single part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovementTool.MovementType.Connected">
      <summary>
            Move the part and all of its non-root side connected parts.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovementTool.GridSize">
      <summary>
            Gets or sets the size of the grid to snap to.  Setting to zero will enable smooth movement.
            </summary>
      <value>
            The size of the grid to snap to.  Setting to zero will enable smooth movement.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovementTool.LocalOrientation">
      <summary>
            Gets or sets a value indicating whether movement is based on the part's local orientation, or world orientation.
            </summary>
      <value>
        <c>true</c> if movement is based on the part's local orientation; otherwise world orientation, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovementTool.Movement">
      <summary>
            Gets or sets a value indicating whether only the part is moved, or all connected parts.
            </summary>
      <value>
        <c>true</c> if only the part is moved; otherwise, <c>false</c> (all connected parts are moved along w/it).
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovementTool.SelectedTransform">
      <summary>
            Gets the selected transform.
            </summary>
      <value>
            The selected transform.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.Activate">
      <summary>
            Called when the designer has started using this tool.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.Deactivate">
      <summary>
            Called when the designer has stopped using this tool. It may be used again.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.SelectedPartChanged(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit},System.Boolean)">
      <summary>
            Called when the selected part has changed.
            </summary>
      <param name="newPart">The new part.</param>
      <param name="hit">The hit.</param>
      <param name="justAdded">Whether the part was just added (created and immediately selected in the same frame).</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.DirectAdjustmentBegin">
      <summary>
            Notifies that a non-gizmo initiated adjustment has begun.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.DirectAdjustmentEnd">
      <summary>
            Notifies that a non-gizmo initiated adjustment has ended.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.OnMouseBegin(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the mouse button is clicked.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.OnMouseDrag(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the mouse button is being dragged (moved while button is down).
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.OnMouseEnd">
      <summary>
            Called when the mouse button has been released.
            </summary>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.OnOrientationChanged">
      <summary>
            Called whenever the orientation has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.ProcessSelectedTransformChanged(UnityEngine.Transform,System.Boolean,System.Boolean)">
      <summary>
            Performs processing when the selected transform has changed.
            </summary>
      <param name="newTransform">The new transform.</param>
      <param name="justAddedPart">If set to <c>true</c> the transform belongs to a part which was just added, otherwise; <c>false</c>.</param>
      <param name="notifyGizmo">If set to <c>true</c> gizmos should be notified of the transform change, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.RaiseToolAdjustmentOccurred">
      <summary>
            Raises the tool adjustment occurred event.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.SetSelectedTransform(UnityEngine.Transform,System.Boolean,System.Boolean)">
      <summary>
            Gets or sets the selected part transform.
            </summary>
      <param name="transform">The new transform.</param>
      <param name="justAdded">If set to <c>true</c> the transform belongs to a part which was just added, otherwise; <c>false</c>.</param>
      <param name="notifyGizmo">If set to <c>true</c> gizmos should be notified of the transform change, otherwise; <c>false</c>.</param>
      <value>
            The selected part transform.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.UpdateSymmetricParts">
      <summary>
            Updates the symmetric parts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.DestroyPartSelection(Assets.Scripts.Design.Tools.PartSelection@)">
      <summary>
            Destroys the part selection.
            </summary>
      <param name="partSelection">The part selection to destroy.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.CreatePartSelection(ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Creates a part selection from the specified part which bundles them under a parent transform so they can be transformed as a group.
            </summary>
      <param name="basePart">The base part.</param>
      <param name="notifyGizmo">If set to <c>true</c> gizmos should be notified of the transform change, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.OnDesignerCraftUnloaded">
      <summary>
            Called when the designer craft is about to be unloaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.ReselectCurrentPart">
      <summary>
            Reselects the current part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.SetSelectedPart(ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Sets the selected part.
            </summary>
      <param name="newPart">The new part.</param>
      <param name="justAdded">if set to <c>true</c> [just added].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovementTool.ShouldCreatePartSelection(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Determines whether a part selection should be created for the specified part.
            </summary>
      <param name="part">The part.</param>
      <returns>
        <c>true</c> if a part selection bundle should be created for the specified part, otherwise; <c>false</c>.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.MovePartTool">
      <summary>
            Tool for moving and placing parts.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" />
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool.PartDragLayerMask">
      <summary>
            The layer mask for shooting rays to determine if the player wants to drag a part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._addingNewPart">
      <summary>
            True when adding a new part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._clone">
      <summary>
            Flag set to true when cloning a part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._grabDelta">
      <summary>
            The offset between where the user grabs a part and the origin of the part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._grabDistance">
      <summary>
            The distance from the camera that the part was grabbed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._grabPosition">
      <summary>
            The original position of the part that was grabbed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._helper">
      <summary>
            The helper
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._initialPart">
      <summary>
            The initial part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._lastClickTime">
      <summary>
            The time of the last click.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._manualRepositionTimer">
      <summary>
            The manual reposition timer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._movePartPanel">
      <summary>
            The move part panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._partSelection">
      <summary>
            The current part selection.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._subassemblyDropZone">
      <summary>
            The create subassembly drop zone
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartTool._trashcanDropZone">
      <summary>
            The trashcan drop zone
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.MovePartTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.MovePartTool.DragPartDelegate">
      <summary>
            Delegate for drag part events.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.Tools.MovePartTool.DragPartSelectionEnded">
      <summary>
            Occurs when the user has ended dragging a part selection.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Design.Tools.MovePartTool.DragPartSelectionStarted">
      <summary>
            Occurs when the user has started dragging a part selection.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovePartTool.DragDelta">
      <summary>
            Gets the drag delta.
            </summary>
      <value>
            The drag delta.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovePartTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc).
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovePartTool.IsDragging">
      <summary>
            Gets a value indicating whether the move part tool is dragging a part.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovePartTool.LockMovePart">
      <summary>
            Gets or sets a value indicating whether to lock the move part tool and prevent any further repositioning of the selected part.
            </summary>
      <value>
        <c>true</c> if [lock move part]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovePartTool.PartCollisionsEnabled">
      <summary>
            Gets or sets a value indicating whether part collisions are enabled.
            </summary>
      <value>
        <c>true</c> if part collisions are enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.SnapToGrid(System.Single,System.Single,System.Boolean)">
      <summary>
            Snaps to grid. Center based.
            </summary>
      <param name="value">The value.</param>
      <param name="unitSize">Size of the unit.</param>
      <param name="centerAroundZero">if set to <c>true</c> [center around zero].</param>
      <returns>
            The snapped value.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.Activate">
      <summary>
            Called when the designer has started using this tool.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.AddingNewParts(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript},UnityEngine.Vector3,System.Single)">
      <summary>
            Notifies the tool that new parts are being added by the user.
            </summary>
      <param name="partScripts">The part scripts.</param>
      <param name="partPosition">The part position.</param>
      <param name="grabDistance">The grab distance.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.Deactivate">
      <summary>
            Called when the designer has stopped using this tool. It may be used again.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.DeleteSelectedParts">
      <summary>
            Deletes the selected parts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.DisconnectAndReconnectPart(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Attempts to disconnect a part and reconnect it. Called by fuselage parts when they are resized and may no longer
            be connected to parts on the surface.
            </summary>
      <param name="part">The part to disconnect.</param>
      <returns>The number of newly created connections after reconnecting.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.HandleScroll(ModApi.Input.Events.ScrollEventArgs)">
      <summary>
            Handles the scroll wheel.
            </summary>
      <param name="e">The event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.RotatePartOnAxis(ModApi.Craft.Parts.IPartScript,UnityEngine.Vector3,System.Int32)">
      <summary>
            Rotates the part and its part-graph on the axis.
            </summary>
      <param name="part">The part.</param>
      <param name="axis">The axis.</param>
      <param name="angle">The angle.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.Update(System.Single)">
      <summary>
            Called every frame when the designer is using this tool.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.DeleteParts(Assets.Scripts.Design.Tools.PartSelection)">
      <summary>
            Deletes the part in the part selection.
            </summary>
      <param name="partSelection">The part selection.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.DragEnd">
      <summary>
            Called to end a part drag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.DragStart(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Starts a part being dragged.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.DragUpdate(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Updates the dragging of a part.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.HandleBeginClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Detects whether a part has started being dragged.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.HandleManualReposition">
      <summary>
            Checks for a manual reposition of a part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.HandleManualRepositionForKey(ModApi.Input.IGameInput,UnityEngine.Vector3)">
      <summary>
            Handles the manual reposition for key.
            </summary>
      <param name="input">The game input to check.</param>
      <param name="repositionAmount">The reposition amount.</param>
      <returns>True if the key was active and caused a reposition.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.OnCreateSubassemblyDialogClosed(ModApi.Ui.InputDialogScript)">
      <summary>
            Called when the user closes the create subassembly creation dialog.
            </summary>
      <param name="dialog">The dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.PartDropped(System.Boolean)">
      <summary>
            Called when a part is dropped...may/may not need to be connected.
            </summary>
      <param name="selectedPartsColliding">if set to <c>true</c> [selected parts colliding].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.PartDroppedOnCreateSubassembly">
      <summary>
            Called when a part is dropped on the create subassembly button.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.PartDroppedOnTrashcan">
      <summary>
            Called when a part is dropped on the trashcan.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.UpdateDropZone(Assets.Scripts.Design.DropZoneScript,UnityEngine.Vector2)">
      <summary>
            Updates the drop zone.
            </summary>
      <param name="dropZone">The drop zone.</param>
      <param name="screenPosition">The screen position.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartTool.UpdateDropZoneReferences">
      <summary>
            Updates the drop zone references. These references might change if the Xml Layout has changed since the
            last time the move part tool has needed to access them. The MovePartTool, I believe, is the only tool that
            needs to control UI elements. It's ugly and brittle and I hate it.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.MovePartToolHelper">
      <summary>
            The MovePartTool was getting rather unwieldy.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartToolHelper._closestAttachPoint">
      <summary>
            The closest attach point.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartToolHelper._highlightedAttachpoints">
      <summary>
            The highlighted attach points
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartToolHelper._partSelection">
      <summary>
            The part selection
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.MovePartToolHelper._tool">
      <summary>
            The move part tool
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.#ctor(Assets.Scripts.Design.Tools.MovePartTool)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.MovePartToolHelper" /> class.
            </summary>
      <param name="tool">The tool.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovePartToolHelper.SelectedPartsColliding">
      <summary>
            Gets a value indicating whether [selected parts colliding].
            </summary>
      <value>
        <c>true</c> if [selected parts colliding]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.MovePartToolHelper.EnableAutoRotation">
      <summary>
            Gets a value indicating whether to enable automatic rotation.
            </summary>
      <value>
        <c>true</c> if [enable automatic rotation]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.DetectAttachPointConnectionsAndConnect(System.Collections.Generic.ICollection{ModApi.Craft.Parts.AttachPointScript})">
      <summary>
            Detects the attach point connections and connects them.
            </summary>
      <param name="attachPoints">The attach points.</param>
      <returns>
            The number of new connections created.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.DragEnd">
      <summary>
            Called when the drag has finished.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.DragPart(UnityEngine.Ray)">
      <summary>
            Processes the drag part of the move part tool.
            </summary>
      <param name="screenRay">The screen ray.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.DragStart(Assets.Scripts.Design.Tools.PartSelection)">
      <summary>
            Starts the drag process.
            </summary>
      <param name="partSelection">The part selection.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.HighlightAttachPoints(ModApi.Craft.Parts.AttachPointScript[])">
      <summary>
            Highlights the attach points.
            </summary>
      <param name="attachPoints">The attach points.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.ShowAttachPoints(System.Boolean)">
      <summary>
            Shows the attach points.
            </summary>
      <param name="show">if set to <c>true</c> then show the attach points. Otherwise hide them.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.WorldPointToRay(UnityEngine.Vector3)">
      <summary>
            Create a ray from the screen coordinates.
            </summary>
      <param name="position">The position.</param>
      <returns>
            The ray.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.AttachPointsCompatible(ModApi.Craft.Parts.AttachPointScript,ModApi.Craft.Parts.AttachPointScript)">
      <summary>
            Checks if the attach points are compatible and their connection types work with their
            connection masks.
            </summary>
      <param name="attachPoint">The attach point being moved into place.</param>
      <param name="targetAttachPoint">The attach point being connected to.</param>
      <returns>
            True if they are compatible, or false otherwise.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.CheckAttachPointNormalCompatibility(ModApi.Craft.Parts.AttachPointScript,UnityEngine.Vector3)">
      <summary>
            Checks the compatibility of the attach point with the target normal.
            </summary>
      <param name="attachPoint">The attach point.</param>
      <param name="targetNormal">The attach point normal.</param>
      <returns>True if the attach point is compatible with the specified normal.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.ConnectPartToAttachPoint(ModApi.Craft.Parts.AttachPointScript,ModApi.Craft.Parts.AttachPointScript)">
      <summary>
            Connects the part to attach point.
            </summary>
      <param name="attachPointScript">The attach point script.</param>
      <param name="targetAttachPointScript">The target attach point script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.GetForwardAndUpVectorsForRayHit(ModApi.Craft.Parts.IPartScript,UnityEngine.Vector3,UnityEngine.Vector3@,UnityEngine.Vector3@)">
      <summary>
            Gets the forward and up vectors.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="attachPointNormal">The attach point normal.</param>
      <param name="forward">The forward vector.</param>
      <param name="up">The up vector.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.GetSurfaceAttachmentPoint(UnityEngine.Vector3,ModApi.Craft.Parts.IPartScript,UnityEngine.Vector3,UnityEngine.Vector3@,UnityEngine.Vector3@,System.Boolean)">
      <summary>
            Gets the surface attach point.
            </summary>
      <param name="initialPos">The initial position.</param>
      <param name="partScript">The part script.</param>
      <param name="surfaceNormal">The surface normal.</param>
      <param name="point">The point.</param>
      <param name="normal">The normal.</param>
      <param name="insideOutCast">if set to <c>true</c> then cast from the inside to the outside of the part.</param>
      <returns>
            True if found.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.HandleSnapping(UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.RaycastHit,ModApi.Craft.Parts.AttachPointScript,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Snaps parts to the player's current grid and angle snap settings. Returns true if the part was snapped. Returns false otherwise.
            </summary>
      <param name="attachmentPosition">The attachment position.</param>
      <param name="closestAttachPointNormal">The closest attach point normal.</param>
      <param name="hit">The hit.</param>
      <param name="targetAttachPoint">The target attach point.</param>
      <param name="attachPointPosition">The attach point position.</param>
      <param name="attachPointNormal">The attach point normal.</param>
      <returns>True if snapped, otherwise false.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.HideSymmetricParts(System.Collections.Generic.List{ModApi.Craft.Parts.IPartScript})">
      <summary>
            Hides the parts that were created symmetrically from this list of parts.
            </summary>
      <param name="partScripts">The parts.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.AutoRotateFuselage(ModApi.Craft.Parts.AttachPointScript,ModApi.Craft.Parts.AttachPointScript,UnityEngine.Vector3)">
      <summary>
            Rotates the fuselage so that its attach point lines up at 90* increments to the closest attach point
            </summary>
      <param name="closestAttachPoint">The closest attach point.</param>
      <param name="selectedAttachPoint">The selected attach point.</param>
      <param name="attachmentPosition">The attachment position.</param>
      <returns>True if the fuselage was rotated.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.GetHitResults(UnityEngine.Ray,ModApi.Craft.Parts.AttachPointScript)">
      <summary>
            Gets the hit results for the given attach point.
            </summary>
      <param name="screenRay">The screen ray.</param>
      <param name="attachPoint">The attach point.</param>
      <returns>The results.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.MovePartToolHelper.MatchTargetRotation(ModApi.Craft.Parts.AttachPointScript,UnityEngine.Vector3,UnityEngine.Vector3,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Rotates the part selection around its attach point to match up with the target attach point.
            </summary>
      <param name="selectedAttachPoint">The selected attach point.</param>
      <param name="attachmentPosition">The attachment position.</param>
      <param name="closestAttachPointNormal">The closest attach point normal.</param>
      <param name="closestPartScript">The closest part script.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.NudgePartTool">
      <summary>
            Nudge part tool takes an already attached part and nudges it around w/o breaking the part attachment.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" />
    </member>
    <member name="F:Assets.Scripts.Design.Tools.NudgePartTool._translateGizmo">
      <summary>
            The translate gizmo
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.NudgePartTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.NudgePartTool.AllowPartMovement">
      <summary>
            Gets a value indicating whether part movement should be allowed while the tool is active.
            </summary>
      <value>
        <c>true</c> if part movement should be allowed while the tool is active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.NudgePartTool.Gizmo">
      <summary>
            Gets the gizmo for this tool.
            </summary>
      <value>
            The gizmo for this tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.NudgePartTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc). Base tools are always active, and are not part specific.
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.NudgeSelection(ModApi.Utilities.UnityTransform.TransformAxis,System.Single)">
      <summary>
            Nudges the selection on specified axis.
            </summary>
      <param name="axis">The axis.</param>
      <param name="distance">The distance to nudge the part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.SetWorldPosition(UnityEngine.Vector3)">
      <summary>
            Sets the world position.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.Update(System.Single)">
      <summary>
            Called every frame when the designer is using this tool.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.OnMouseDrag(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the mouse button is being dragged (moved while button is down).
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.OnMouseEnd">
      <summary>
            Called when the mouse button has been released.
            </summary>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.OnOrientationChanged">
      <summary>
            Called whenever the orientation has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.ProcessSelectedTransformChanged(UnityEngine.Transform,System.Boolean,System.Boolean)">
      <summary>
            Performs processing when the selected transform has changed.
            </summary>
      <param name="newTransform">The new transform.</param>
      <param name="justAddedPart">If set to <c>true</c> the transform belongs to a part which was just added, otherwise; <c>false</c>.</param>
      <param name="notifyGizmo">If set to <c>true</c> gizmos should be notified of the transform change, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.OnGizmoAdjusted(Assets.Scripts.Tools.ObjectTransform.MovementGizmo{Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript},System.Nullable{System.Boolean})">
      <summary>
            Called when a gizmo has been adjusted.
            </summary>
      <param name="source">The source.</param>
      <param name="newAxis">if set to <c>true</c> a different axis is being draged since the last axis.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.NudgePartTool.OnGizmoAdjustmentStarted(Assets.Scripts.Tools.ObjectTransform.MovementGizmo{Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript},System.Nullable{System.Boolean})">
      <summary>
            Called when a gizmo has begun adjustment.
            </summary>
      <param name="source">The source.</param>
      <param name="newAxis">if set to <c>true</c> a different axis is being draged since the last axis.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.PaintTool">
      <summary>
            The paint designer tool.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" />
    </member>
    <member name="F:Assets.Scripts.Design.Tools.PaintTool._painting">
      <summary>
            A value indicating whether the tool is currently painting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.PaintTool._paintSound">
      <summary>
            The paint sound effect to play when a part is painted.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PaintTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.PaintTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PaintTool.AllowPartMovement">
      <summary>
            Gets a value indicating whether part movement should be allowed while the tool is active.
            </summary>
      <value>
        <c>true</c> if part movement should be allowed while the tool is active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PaintTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc).  Base tools are always active, and are not part specific.
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PaintTool.MaterialId">
      <summary>
            Gets or sets the material identifier that the paint tool is currently configured to paint.
            </summary>
      <value>
            The material identifier that the paint tool is currently configured to paint.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PaintTool.MaterialLevel">
      <summary>
            Gets or sets the material level that the paint tool is currently configured to paint.
            </summary>
      <value>
            The material level that the paint tool is currently configured to paint.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PaintTool.Activate">
      <summary>
            Called when the designer has started using this tool.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PaintTool.Deactivate">
      <summary>
            Called when the designer has stopped using this tool. It may be used again.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PaintTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PaintTool.GetPart(UnityEngine.Vector2)">
      <summary>
            Gets the part at the specified screen position.
            </summary>
      <param name="screenPosition">The screen position of the part to get.</param>
      <returns>The part at the specified screen position or <c>null</c> if no part was found.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PaintTool.PaintPart(ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Paints the specified part.
            </summary>
      <param name="part">The part to paint.</param>
      <param name="paintSymmetricParts">If set to <c>true</c>, symmetric parts will be painted as well.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.PartSelection">
      <summary>
            Container used to hold parts bundled together for movement.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.PartSelection._collisionDetector">
      <summary>
            The part collision detector.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PartSelection.#ctor(System.Collections.Generic.ICollection{ModApi.Craft.Parts.IPartScript},UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.PartSelection" /> class.
            </summary>
      <param name="partScripts">The part scripts.</param>
      <param name="containerPosition">The container position.</param>
      <param name="containerRotation">The container rotation.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.AllAttachPoints">
      <summary>
            Gets or sets all attach points in the selection, which includes available and
            unavailable.
            </summary>
      <value>
            All attach points.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.AvailableAttachPoints">
      <summary>
            Gets or sets the available attach points.
            </summary>
      <value>
            The available attach points.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.ConnectionMask">
      <summary>
            Gets the connection mask.
            </summary>
      <value>
            The connection mask.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.ContainerParent">
      <summary>
            Gets or sets the container parent.
            </summary>
      <value>
            The container parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.PartCollisionDetector">
      <summary>
            Gets the part collision detector.
            </summary>
      <value>
            The part collision detector.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.Parts">
      <summary>
            Gets or sets the parts.
            </summary>
      <value>
            The parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.PartsColliding">
      <summary>
            Gets or sets a value indicating whether [parts colliding].
            </summary>
      <value>
        <c>true</c> if [parts colliding]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.SymmetryGroups">
      <summary>
            Gets or sets the symmetry groups.
            </summary>
      <value>
            The symmetry groups.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PartSelection.CreatePartSelection(ModApi.Craft.Parts.IPartScript,System.Boolean,System.Nullable{UnityEngine.Quaternion},System.Nullable{UnityEngine.Vector3},System.Boolean)">
      <summary>
            Selects the part and all of its connected parts that are connected to the craft through this
            one part.
            </summary>
      <param name="basePart">The base part.</param>
      <param name="preserveConnections">if set to <c>true</c> [preserve connections].</param>
      <param name="containerRotation">The container rotation. If null, then it will use the basePart's rotation.</param>
      <param name="containerPosition">The container position.</param>
      <param name="selectSinglePart">if set to <c>true</c> then select only a single part.</param>
      <returns>
            The part selection.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PartSelection.FindPartLimb(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Finds the part limb from the base part.
            </summary>
      <param name="basePart">The base part.</param>
      <returns>
            The list of parts to move.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PartSelection.Deselect">
      <summary>
            De-selects the parts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PartSelection.DetectCollisions">
      <summary>
            Determines whether any of the selected parts are colliding with other parts in the designer.
            </summary>
      <returns>A value indicating whether any of the selected parts are colliding with other parts in the designer.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PartSelection.FindPartsToMove(ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Finds and optionally detaches the parts to move.
            </summary>
      <param name="selectedPart">The selected part.</param>
      <param name="preserveConnections">if set to <c>true</c> [preserve connections].</param>
      <returns>
            The list of parts to move.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.PartSelection.PartLimb">
      <summary>
            Contains a list of parts that are connected to the command pod (only) through the base part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.PartSelection.PartLimb.#ctor(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.PartSelection.PartLimb" /> class.
            </summary>
      <param name="basePart">The base part.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.PartLimb.BasePart">
      <summary>
            Gets the base part.
            </summary>
      <value>
            The base part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.PartLimb.Parts">
      <summary>
            Gets the parts.
            </summary>
      <value>
            The parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.PartSelection.PartLimb.RootSideConnections">
      <summary>
            Gets the root side connections.
            </summary>
      <value>
            The root side connections.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.RotatePartTool">
      <summary>
            Nudge part tool takes an already attached part and nudges it around w/o breaking the part attachment.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" />
    </member>
    <member name="F:Assets.Scripts.Design.Tools.RotatePartTool._rotateGizmo">
      <summary>
            The rotate gizmo
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.RotatePartTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.RotatePartTool.AllowPartMovement">
      <summary>
            Gets a value indicating whether part movement should be allowed while the tool is active.
            </summary>
      <value>
        <c>true</c> if part movement should be allowed while the tool is active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.RotatePartTool.Gizmo">
      <summary>
            Gets the rotation gizmo.
            </summary>
      <value>
            The rotation gizmo.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.RotatePartTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc).  Base tools are always active, and are not part specific.
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.Rotate(UnityEngine.Vector3,UnityEngine.Space)">
      <summary>
            Rotates the selected part using the specified parameters.
            </summary>
      <param name="eulers">The eulers angles to rotate by.</param>
      <param name="space">The relative space to use for the rotation.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.SetWorldRotation(UnityEngine.Quaternion)">
      <summary>
            Sets the world rotation.
            </summary>
      <param name="quaternion">The quaternion.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.Update(System.Single)">
      <summary>
            Called every frame when the designer is using this tool.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.OnMouseDrag(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the mouse button is being dragged (moved while button is down).
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.OnMouseEnd">
      <summary>
            Called when the mouse button has been released.
            </summary>
      <returns>
        <c>true</c> if input capture is requested, otherwise; <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.OnOrientationChanged">
      <summary>
            Called whenever the orientation has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.ProcessSelectedTransformChanged(UnityEngine.Transform,System.Boolean,System.Boolean)">
      <summary>
            Performs processing when the selected transform has changed.
            </summary>
      <param name="newTransform">The new transform.</param>
      <param name="justAddedPart">If set to <c>true</c> the transform belongs to a part which was just added, otherwise; <c>false</c>.</param>
      <param name="notifyGizmo">If set to <c>true</c> gizmos should be notified of the transform change, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.OnGizmoAdjusted(Assets.Scripts.Tools.ObjectTransform.MovementGizmo{Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript},System.Nullable{System.Boolean})">
      <summary>
            Called when a gizmo has been adjusted.
            </summary>
      <param name="source">The source.</param>
      <param name="newAxis">if set to <c>true</c> a different axis is being draged since the last axis.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.RotatePartTool.OnGizmoAdjustmentStarted(Assets.Scripts.Tools.ObjectTransform.MovementGizmo{Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript},System.Nullable{System.Boolean})">
      <summary>
            Called when a gizmo has been adjusted.
            </summary>
      <param name="source">The source.</param>
      <param name="newAxis">if set to <c>true</c> a different axis is being draged since the last axis.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.ScreenshotTool">
      <summary>
            Tool used to take screenshots when the player is uploading a craft.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" />
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ScreenshotTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.ScreenshotTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.ScreenshotTool.AllowPartMovement">
      <summary>
            Gets a value indicating whether part movement should be allowed while the tool is active.
            </summary>
      <value>
        <c>true</c> if part movement should be allowed while the tool is active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.ScreenshotTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc).  Base tools are always active, and are not part specific.
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ScreenshotTool.Activate">
      <summary>
            Called when the designer has started using this tool.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ScreenshotTool.Deactivate">
      <summary>
            Called when the designer has stopped using this tool. It may be used again.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.ToolPanelScript">
      <summary>
            Script for the tool flyout panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.ToolPanelScript._activeButton">
      <summary>
            The active button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.ToolPanelScript._movePartToolButton">
      <summary>
            The move part tool button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.ToolPanelScript._toolButtons">
      <summary>
            The tool buttons
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.ToolPanelScript.ActiveButton">
      <summary>
            Gets or sets the active button.
            </summary>
      <value>
            The active button.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ToolPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ToolPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ToolPanelScript.OnToolButtonClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the tool button is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ToolPanelScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ToolPanelScript.DesignerActiveToolChanged(ModApi.Design.DesignerTool)">
      <summary>
            Designers the active tool changed.
            </summary>
      <param name="tool">The tool.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ToolPanelScript.OnFlyoutClosed(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is closed.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.ToolPanelScript.UpdateActiveTool">
      <summary>
            Updates the active tool.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.ToolPanelScript.ToolButton">
      <summary>
            Wraps a tool button UI element with the designer tool.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.ToolPanelScript.ToolButton.Button">
      <summary>
            Gets or sets the button.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.ToolPanelScript.ToolButton.Icon">
      <summary>
            Gets or sets the icon.
            </summary>
      <value>
            The icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.ToolPanelScript.ToolButton.Panel">
      <summary>
            Gets or sets the panel.
            </summary>
      <value>
            The panel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.ToolPanelScript.ToolButton.Tool">
      <summary>
            Gets or sets the tool.
            </summary>
      <value>
            The tool.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript">
      <summary>
            The script for the adjustment gizmo used in the wing tool.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._animatedScale">
      <summary>
            The animated scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._connectingLine">
      <summary>
            The _connecting line
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._gizmoBase">
      <summary>
            The gizmo base
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._gizmoPrefab">
      <summary>
            The gizmo prefab
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._initialColor">
      <summary>
            The _initial color
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._isSelected">
      <summary>
            The _is selected
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._scaledObjectsContainer">
      <summary>
            The scaled objects container
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._screenSizeConstant">
      <summary>
            The screen size constant
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._screenSizeConstantCamera">
      <summary>
            The screen size constant camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript._visible">
      <summary>
            The visible flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.GizmoFlyoutDirection">
      <summary>
            Gets or sets the gizmo flyout direction.
            </summary>
      <value>
            The gizmo flyout direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.IsSelected">
      <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
      <value>
        <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.ScreenSizeConstant">
      <summary>
            Gets or sets a value indicating whether the gizmos should keep a constant size on the screen as the camera move toward/away from the gizmos.
            </summary>
      <value>
        <c>true</c> if the gizmos should keep a constant size on the screen as the camera move toward/away from the gizmos; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.StartingPosition">
      <summary>
            Gets or sets the _starting position.
            </summary>
      <value>
            The _starting position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.FlyoutDistance">
      <summary>
            Gets or sets the distance.
            </summary>
      <value>
            The distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.Mesh">
      <summary>
            Gets or sets the mesh.
            </summary>
      <value>
            The mesh.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.Create(UnityEngine.Transform,UnityEngine.Vector3,System.Single,System.Boolean,UnityEngine.Camera,UnityEngine.Color)">
      <summary>
            Creates a new AdjustmentGizmo
            </summary>
      <param name="parent">The parent.</param>
      <param name="gizmoFlyoutDirection">The gizmo flyout direction.</param>
      <param name="gizmoFlyoutDistance">The gizmo flyout distance.</param>
      <param name="screenSizeConstant">if set to <c>true</c> [screen size constant].</param>
      <param name="screenSizeConstantCamera">The screen size constant camera.</param>
      <param name="color">The color.</param>
      <returns>
            The adjustment gizmo mesh script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.OnDestroy">
      <summary>
            Called when [destroy].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.SetVisibility(System.Boolean)">
      <summary>
            Sets the visibility of the gizmo's renderers.
            </summary>
      <param name="visible">if set to <c>true</c> then make it visible. Otherwise make it invisible.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.ScaleContainer">
      <summary>
            Scales the container.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoMeshScript.UpdateConnectingLine">
      <summary>
            Updates the connecting line.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript">
      <summary>
            Script for adjustment gizmos.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.GizmoFlyoutScalar">
      <summary>
            The gizmo flyout scalar
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.RestrictForwardAftMovement">
      <summary>
            The restrict forward aft movement
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.RestrictLateralMovement">
      <summary>
            The restrict lateral movement
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.RestrictVerticalMovement">
      <summary>
            The restrict vertical movement
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.GetTargetWorldPosition">
      <summary>
            Gets or sets the get function to use to pull the world position of the target point.
            </summary>
      <value>
            The get target world position function.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.GizmoBase">
      <summary>
            Gets or sets the gizmo base.
            </summary>
      <value>
            The gizmo base.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.GizmoFlyoutDirection">
      <summary>
            Gets or sets the gizmo flyout direction.
            </summary>
      <value>
            The gizmo flyout direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.OnGizmoMoveCompleted">
      <summary>
            Gets or sets the callback made when the gizmo move completed.
            </summary>
      <value>
            The callback made when the gizmo move completed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.OnGizmoMoveStarted">
      <summary>
            Gets or sets the callback made when the gizmo move started.
            </summary>
      <value>
            The callback made when the gizmo move started.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.UpdateTargetWorldPosition">
      <summary>
            Gets or sets the action to use when updating the world position of the target point.
            </summary>
      <value>
            The update world position action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.WingRoot">
      <summary>
            Gets or sets the wing root.
            </summary>
      <value>
            The wing root.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.AdjustmentGizmoMeshScript">
      <summary>
            Gets or sets the adjustment gizmo mesh script.
            </summary>
      <value>
            The adjustment gizmo mesh script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.OnDestroy">
      <summary>
            Called when [destroy].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.RefreshPosition">
      <summary>
            Refreshes the position from the target point.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Wing.AdjustmentPlaneScript">
      <summary>
            Script for adjustment planes.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool">
      <summary>
            The tool for adjusting chord lengths, sweep, and span.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool._canEditOverlapTestResult">
      <summary>
            A temporary pre-allocated array used for detecting control surface selections when selecting a wing part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool._controlSurfaceScript">
      <summary>
            Gets or sets the control surface.
            </summary>
      <value>
            The control surface.
            </value>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool._pendingControlSurface">
      <summary>
            The control surface that is pending selection upon activation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool" /> class.
            </summary>
      <param name="designerScript">The designer script.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.HingePosition">
      <summary>
            Gets the hinge position.
            </summary>
      <value>
            The hinge position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc).
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.RootSide">
      <summary>
            Gets the root side.
            </summary>
      <value>
            The root side.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.TipSide">
      <summary>
            Gets the tip side.
            </summary>
      <value>
            The tip side.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.WingRoot">
      <summary>
            Gets the wing.
            </summary>
      <value>
            The wing.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.Activate">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.Deactivate">
      <summary>
            Stops this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.SetHingePosition(UnityEngine.Vector3)">
      <summary>
            Sets the hinge position.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.Update(System.Single)">
      <summary>
            Called every frame when the designer is using this tool.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.CanEditPart(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit})">
      <summary>
            Determines whether this instance [can edit part] the specified new part.
            </summary>
      <param name="part">The new part.</param>
      <param name="hit">The hit.</param>
      <returns>
        <c>true</c> if this instance [can edit part] the specified new part; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.CreateGizmos">
      <summary>
            Draws the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.GetZCoordinateOfTrailingEdgeAtPercent(System.Single)">
      <summary>
            Gets the z coordinate of trailing edge at percent.
            </summary>
      <param name="percent">The percent.</param>
      <returns>The z coordinate.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.SetRootPosition(UnityEngine.Vector3)">
      <summary>
            Sets the root position.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.ControlSurfaceTool.SetTipPosition(UnityEngine.Vector3)">
      <summary>
            Sets the tip position.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool">
      <summary>
            The tool for adjusting chord lengths, sweep, and span.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool._collisionDetector">
      <summary>
            The part collision detector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool._dragStartWingPointPosition">
      <summary>
            The drag start wing point position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool._editType">
      <summary>
            The dihedral gizmo.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool" /> class.
            </summary>
      <param name="designer">The designer script.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.EditType">
      <summary>
            The edit types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.EditType.Dihedral">
      <summary>
            The dihedral edit type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.EditType.Shape">
      <summary>
            The shape edit type.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.ControlSurfaceTool">
      <summary>
            Gets or sets the control surface tool.
            </summary>
      <value>
            The control surface tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.CurrentEditType">
      <summary>
            Gets or sets the current edit type.
            </summary>
      <value>
            The current edit type.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.IsBaseTool">
      <summary>
            Gets a value indicating whether this is a "base" tool (Camera Tool, Move Part Tool, etc).
            </summary>
      <value>
        <c>true</c> if this is a "base" tool (Camera Tool, Move Part Tool, etc); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.PartCollisionDetector">
      <summary>
            Gets the part collision detector.
            </summary>
      <value>
            The part collision detector.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.Activate">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.Deactivate">
      <summary>
            Stops this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.CanEditPart(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit})">
      <summary>
            Determines whether this instance can edit the specified part.
            </summary>
      <param name="part">The selected part.</param>
      <param name="hit">The RayCast hit (if available) which was used to determine the part.</param>
      <returns>
        <c>true</c> if this instance can edit the specified part; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.CreateGizmos">
      <summary>
            Draws the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.MoveAdjustmentGizmo(UnityEngine.GameObject,Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript,UnityEngine.RaycastHit)">
      <summary>
            Moves the gizmo along appropriate planes.
            </summary>
      <param name="planeHit">The plane hit.</param>
      <param name="gizmoScript">The gizmo script.</param>
      <param name="rayHit">The ray hit.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.GetWingPoint(Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript,Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType)">
      <summary>
            Gets the wing point.
            </summary>
      <param name="wingScript">The wing script.</param>
      <param name="wingPointType">Type of the wing point.</param>
      <returns>The wing point.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.EditTypeChanged(Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.EditType)">
      <summary>
            Edits the type changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.GetWingPoint(UnityEngine.Vector3)">
      <summary>
            Gets the wing point.
            </summary>
      <param name="position">The position.</param>
      <returns>The wing point in global coordinates.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.OnGizmoMoveCompleted(Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType)">
      <summary>
            Called when the gizmo move has completed.
            </summary>
      <param name="wingPointType">Type of the wing point.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.OnGizmoMoveStarted(Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType)">
      <summary>
            Called when the gizmo move has started.
            </summary>
      <param name="wingPointType">Type of the wing point.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingAdjustmentTool.UpdateWingPoint(UnityEngine.Vector3,Assets.Scripts.Craft.Parts.Modifiers.Wing.WingScript.WingPointType)">
      <summary>
            Updates the wing point.
            </summary>
      <param name="position">The position.</param>
      <param name="wingPointType">Type of the wing point.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tools.Wing.WingTool">
      <summary>
            The base wing tool.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool.AdjustmentPlanesLayer">
      <summary>
            The adjustment planes layer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool.AdjustmentPlaneSide">
      <summary>
            The size of each adjustment plane's side visual representation...doesn't impact anything other than visuals.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool.ForwardAftRestrictedPlaneName">
      <summary>
            The forward aft restricted plane name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool.GizmoAdjustmentPlaneShader">
      <summary>
            The gizmo adjustment plane shader name.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool.LaterallyRestrictedPlaneName">
      <summary>
            The laterally restricted plane name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool.VerticallyRestrictedPlaneName">
      <summary>
            The vertically restricted plane name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool._resizeSound">
      <summary>
            The resize sound.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool._adjustmentPlanes">
      <summary>
            The list of adjustment planes (planes which a gizmo may slide across) to move gizmos to modify a wing.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool._gizmos">
      <summary>
            The gizmos.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool._gizmoStartPosition">
      <summary>
            The gizmo start position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool._initialHitPosition">
      <summary>
            The initial hit position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool._startingMousePos">
      <summary>
            The previous mouse position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool._timeLastMouseMovement">
      <summary>
            The time last mouse movement.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tools.Wing.WingTool._verticallyRestrictedPlane">
      <summary>
            The _vertically restricted plane
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.#ctor(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tools.Wing.WingTool" /> class.
            </summary>
      <param name="designer">The designer.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingTool.ForwardAftRestrictedPlaneHitGizmo">
      <summary>
            Gets or sets the _forward aft restricted plane hit gizmo.
            </summary>
      <value>
            The _forward aft restricted plane hit gizmo.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingTool.LaterallyRestrictedPlaneHitGizmo">
      <summary>
            Gets or sets the _laterally restricted plane hit gizmo.
            </summary>
      <value>
            The _laterally restricted plane hit gizmo.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingTool.GizmosActive">
      <summary>
            Gets a value indicating whether [gizmos active].
            </summary>
      <value>
        <c>true</c> if [gizmos active]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingTool.WingScript">
      <summary>
            Gets the wing script.
            </summary>
      <value>
            The wing script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingTool.AdjustmentGizmoBeingDragged">
      <summary>
            Gets the gizmo being dragged.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingTool.CanPlayResizeSound">
      <summary>
            Gets or sets a value indicating whether [can play resize sound].
            </summary>
      <value>
        <c>true</c> if [can play resize sound]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingTool.ForwardAftRestrictedPlane">
      <summary>
            Gets or sets the _laterally restricted plane.
            </summary>
      <value>
            The _laterally restricted plane.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tools.Wing.WingTool.LaterallyRestrictedPlane">
      <summary>
            Gets or sets the _laterally restricted plane.
            </summary>
      <value>
            The _laterally restricted plane.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.IsAdjustmentGizmo(UnityEngine.GameObject)">
      <summary>
            Determines whether the GameObject is wing adjustment gizmo.
            </summary>
      <param name="gameObject">The object hit.</param>
      <returns>
        <c>true</c> if this is the specified gameObject is an adjustment gizmo, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.Activate">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.Deactivate">
      <summary>
            Stops this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool is requesting to capture, or retain a current input capture, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.HideGizmos">
      <summary>
            Hides the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.OnCapturedToolChanged(ModApi.Design.DesignerTool)">
      <summary>
            Called when the Designer's current captured tool has changed. Only called when this tool is active.
            </summary>
      <param name="designerTool">The designer tool, or null if the captured tool has been released.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.SelectedPartChanged(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit},System.Boolean)">
      <summary>
            Called when the selected part has changed.
            </summary>
      <param name="newPart">The new part.</param>
      <param name="hit">The raycast hit.</param>
      <param name="justAdded">Whether the part was just added (created and immediately selected in the same frame).</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.SelectedPartClicked(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit})">
      <summary>
            Called when the selected part has been clicked on.
            </summary>
      <param name="selectedPart">The selected part.</param>
      <param name="hit">The raycast hit.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.Update(System.Single)">
      <summary>
            Called every frame when the designer is using this tool.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.IsDraggingGizmo">
      <summary>
            Determines whether [is dragging gizmo].
            </summary>
      <returns>
        <c>true</c> if a gizmo is being dragged, otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.CanEditPart(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit})">
      <summary>
            Determines whether this instance can edit the specified part.
            </summary>
      <param name="part">The part.</param>
      <param name="hit">The RayCast hit (if available) which was used to determine the part..</param>
      <returns>
        <c>true</c> if this instance can edit the specified part; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.CreateAdjustmentGizmo(UnityEngine.Transform,UnityEngine.Vector3,System.Boolean,System.Boolean,System.Boolean,System.Action{UnityEngine.Vector3},System.Func{UnityEngine.Vector3},System.Action,System.Action)">
      <summary>
            Creates the gizmo.
            </summary>
      <param name="parent">The parent.</param>
      <param name="gizmoFlyoutDirection">The gizmo flyout direction.</param>
      <param name="restrictForwardAftMovement">if set to <c>true</c> [restrict forward aft movement].</param>
      <param name="restrictLateralMovement">if set to <c>true</c> [restrict lateral movement].</param>
      <param name="restrictVerticalMovement">if set to <c>true</c> [restrict vertical movement].</param>
      <param name="updateWorldPosition">The method to use to update the target point's world position.</param>
      <param name="getWorldPosition">The method to use to get the target point's current world position.</param>
      <param name="onGizmoMoveStarted">The callback made when the gizmo move has started.</param>
      <param name="onGizmoMoveCompleted">The callback made when the gizmo move has completed.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.CreateGizmos">
      <summary>
            Draws the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.DestroyGizmos">
      <summary>
            Removes the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.MoveAdjustmentGizmo(UnityEngine.GameObject,Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript,UnityEngine.RaycastHit)">
      <summary>
            Moves the gizmo along appropriate planes.
            </summary>
      <param name="planeHit">The plane hit.</param>
      <param name="gizmoScript">The gizmo script.</param>
      <param name="rayHit">The ray hit.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.OnStartDraggingGizmo(UnityEngine.GameObject)">
      <summary>
            Starts dragging the gizmo.
            </summary>
      <param name="gizmoObject">The object hit.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.OnStopDraggingGizmo">
      <summary>
            Stops dragging the gizmo.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.RefreshGizmoPositions">
      <summary>
            Refreshes the gizmo positions.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.IsCorrectAdjustmentPlaneForGizmo(UnityEngine.GameObject)">
      <summary>
            Determines whether [is correct adjustment plane for gizmo] [the specified game object to check].
            </summary>
      <param name="gameObjectToCheck">The game object to check.</param>
      <returns>
        <c>true</c> if this is the correct adjustment plane for the specified gizmo, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.AddAdjustmentPlane(UnityEngine.GameObject,System.String,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Adds the adjustment plane.
            </summary>
      <param name="objectToParentTo">The object to parent to.</param>
      <param name="adjustmentPlaneName">Name of the adjustment plane.</param>
      <param name="up">Up vector.</param>
      <param name="right">The right vector.</param>
      <returns>The adjustment plane.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.AddAdjustmentPlanesThroughGizmo(UnityEngine.GameObject)">
      <summary>
            Draws the adjustment planes through the gizmo.
            </summary>
      <param name="gizmoGameObject">The gizmo game object.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.CheckCanEdit(ModApi.Craft.Parts.IPartScript,System.Nullable{UnityEngine.RaycastHit})">
      <summary>
            Checks the can edit.
            </summary>
      <param name="part">The part.</param>
      <param name="hit">The hit.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.CreateGizmo(UnityEngine.Transform,UnityEngine.Color,UnityEngine.Vector3)">
      <summary>
            Creates the gizmo.
            </summary>
      <param name="parent">The parent.</param>
      <param name="color">The color.</param>
      <param name="gizmoFlyoutDirection">The gizmo flyout direction.</param>
      <returns>
            The gizmo script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.DestroyAdjustmentPlanes">
      <summary>
            Destroys the adjustment planes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.GetNewGizmoPosition(UnityEngine.GameObject,Assets.Scripts.Design.Tools.Wing.AdjustmentGizmoScript,UnityEngine.RaycastHit)">
      <summary>
            Gets the new gizmo position.
            </summary>
      <param name="planeHit">The plane hit.</param>
      <param name="gizmoScript">The gizmo script.</param>
      <param name="rayHit">The ray hit.</param>
      <returns>The new gizmo position.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.OnMouseStoppedMoving">
      <summary>
            Called when mouse stopped moving.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tools.Wing.WingTool.PlayMovedSound">
      <summary>
            Plays the moved sound.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.AddFuselageStep">
      <summary>
            Step for adding a fuselage part in the designer.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tutorial.AddPartStep" />
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._arrowText">
      <summary>
            The arrow text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._fuselage">
      <summary>
            The fuselage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._fuselageScript">
      <summary>
            The fuselage script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._fuselageTargetOffset">
      <summary>
            The fuselage target offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._offset">
      <summary>
            The offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._originalOffset">
      <summary>
            The original offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._originalPosition">
      <summary>
            The original position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._positioned">
      <summary>
            The positioned
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._resized">
      <summary>
            The resized
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddFuselageStep._updatePosition">
      <summary>
            The update position flag
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddFuselageStep.#ctor(System.Int32,Assets.Scripts.Design.Tutorial.TutorialScript,System.String,System.Boolean,UnityEngine.Vector3)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tutorial.AddFuselageStep" /> class.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="tutorialScript">The tutorial script.</param>
      <param name="designerPartName">Name of the designer part.</param>
      <param name="updatePosition">if set to <c>true</c> then update the position based on the difference in size between the target and designer fuselage part sizes.</param>
      <param name="offset">The offset.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.AddFuselageStep.MultipleGreenArrows">
      <summary>
            Gets or sets a value indicating whether there are multiple, green resizing arrows.
            </summary>
      <value>
        <c>true</c> if there are multiple arrows; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddFuselageStep.Start">
      <summary>
            Starts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddFuselageStep.Update">
      <summary>
            Updates the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddFuselageStep.CompareToTarget(ModApi.Craft.Parts.PartData)">
      <summary>
            Compares the wing to target.
            </summary>
      <param name="part">The part.</param>
      <returns>True if the wings match.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddFuselageStep.ResizeToDesignerPart">
      <summary>
            Resizes the size of the wing to designer part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddFuselageStep.ResizeToTargetPart">
      <summary>
            Resizes the target wing.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.AddPartStep">
      <summary>
            Step for adding a part.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tutorial.TutorialStep" />
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddPartStep._categoryName">
      <summary>
            The category name.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddPartStep._designerPartName">
      <summary>
            The designer part name.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddPartStep.#ctor(System.Int32,Assets.Scripts.Design.Tutorial.TutorialScript,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tutorial.AddPartStep" /> class.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="tutorialScript">The tutorial script.</param>
      <param name="designerPartName">Name of the designer part.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.AddPartStep.PartPlacementCriteria">
      <summary>
            Criteria for checking the placement of the user's parts
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddPartStep.PartPlacementCriteria.Position">
      <summary>
            The part must match the position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddPartStep.PartPlacementCriteria.PositionAndRotation">
      <summary>
            The part must match the position and rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.AddPartStep.PartPlacementCriteria.AttachPoint">
      <summary>
            The part must be connected to the right attach point.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.AddPartStep.ClonePartId">
      <summary>
            Gets or sets the ID of the part that we want the player to clone.
            </summary>
      <value>
            The clone part identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.AddPartStep.PlacementCriteria">
      <summary>
            Gets or sets the placement criteria.
            </summary>
      <value>
            The placement criteria.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddPartStep.End">
      <summary>
            Ends the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddPartStep.Start">
      <summary>
            Starts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddPartStep.Update">
      <summary>
            Updates the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddPartStep.ProcessUserParts(Assets.Scripts.Design.Tutorial.AddPartStep.PartPlacementCriteria)">
      <summary>
            Checks the parts the user has placed to see how they are doing and give them the appropritae feedback.
            </summary>
      <param name="criteria">The criteria.</param>
      <returns>
            Returns the part.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddPartStep.GetPartAtAttachPoint(System.Collections.Generic.List{ModApi.Craft.Parts.PartData})">
      <summary>
            Gets the part at attach point.
            </summary>
      <param name="parts">The parts.</param>
      <returns>The part that is at the correct attach point.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddPartStep.HighlightPartButton(System.String)">
      <summary>
            Highlights the part button.
            </summary>
      <param name="partButtonName">Name of the part button.</param>
      <returns>True if it was highlighted, false otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.AddPartStep.HighlightPartCategory(System.String)">
      <summary>
            Highlights the part button.
            </summary>
      <param name="partButtonName">Name of the part button.</param>
      <returns>True if it was highlighted, false otherwise.</returns>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.CameraStep">
      <summary>
            Step for teaching how to control the camera.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tutorial.TutorialStep" />
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.CameraStep._designerCamera">
      <summary>
            The designer camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.CameraStep._pan">
      <summary>
            The _pan
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.CameraStep._rotation">
      <summary>
            The _rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.CameraStep._zoom">
      <summary>
            The _zoom
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.CameraStep.#ctor(Assets.Scripts.Design.Tutorial.TutorialScript,Assets.Scripts.Design.Tutorial.CameraStep.CameraStepType)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tutorial.CameraStep" /> class.
            </summary>
      <param name="tutorialScript">The tutorial script.</param>
      <param name="stepType">Type of the step.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.CameraStep.CameraStepType">
      <summary>
            The available camera step types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.CameraStep.CameraStepType.Rotate">
      <summary>
            The rotate
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.CameraStep.CameraStepType.Pan">
      <summary>
            The pan
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.CameraStep.CameraStepType.Zoom">
      <summary>
            The zoom
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.CameraStep.CameraStepType.Focus">
      <summary>
            The focus
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.CameraStep.CameraStepType.ResetView">
      <summary>
            The reset view
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.CameraStep.StepType">
      <summary>
            Gets or sets the type of the step.
            </summary>
      <value>
            The type of the step.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.CameraStep.End">
      <summary>
            Ends the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.CameraStep.Start">
      <summary>
            Starts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.CameraStep.Update">
      <summary>
            Updates the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.CameraStep.OnCameraFocusOnPart(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the camera focuses on a part.
            </summary>
      <param name="partScript">The part script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.CameraStep.OnCameraMoved(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
      <summary>
            Cameras the moved.
            </summary>
      <param name="rotation">The rotation.</param>
      <param name="pan">The pan.</param>
      <param name="zoomAmount">The zoom amount.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.CameraStep.OnCameraViewDirectionSet(ModApi.Design.DesignerCameraViewDirection)">
      <summary>
            Called when the camera view direction is set.
            </summary>
      <param name="viewDirection">The view direction.</param>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.EndStep">
      <summary>
            Step for ending the tutorial.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tutorial.InfoStep" />
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.EndStep.#ctor(Assets.Scripts.Design.Tutorial.TutorialScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tutorial.EndStep" /> class.
            </summary>
      <param name="tutorialScript">The tutorial script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.EndStep.End">
      <summary>
            Ends the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.EndStep.Start">
      <summary>
            Starts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.EndStep.Update">
      <summary>
            Updates the step.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.InfoStep">
      <summary>
            Step for giving the player some information.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tutorial.TutorialStep" />
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.InfoStep._message">
      <summary>
            The _message
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.InfoStep.#ctor(Assets.Scripts.Design.Tutorial.TutorialScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tutorial.InfoStep" /> class.
            </summary>
      <param name="tutorialScript">The tutorial script.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.InfoStep.End">
      <summary>
            Ends the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.InfoStep.Start">
      <summary>
            Starts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.InfoStep.Update">
      <summary>
            Updates the step.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep">
      <summary>
            Step for tweaking the part properties of the solar panel array.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tutorial.TutorialStep" />
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep._complete">
      <summary>
            The complete flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep._error">
      <summary>
            The error flag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep.#ctor(System.Int32,System.String,Assets.Scripts.Design.Tutorial.TutorialScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep" /> class.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="partName">Name of the part.</param>
      <param name="tutorialScript">The tutorial script.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep.PartId">
      <summary>
            Gets the part identifier of the solar panel part.
            </summary>
      <value>
            The part identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep.PartName">
      <summary>
            Gets or sets the name of the part.
            </summary>
      <value>
            The name of the part.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep.End">
      <summary>
            Ends the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep.Start">
      <summary>
            Starts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.SolarPanelArrayStep.Update">
      <summary>
            Updates the step.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.StagingStep">
      <summary>
            Step for changing the staging of the craft.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tutorial.TutorialStep" />
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.StagingStep._complete">
      <summary>
            The complete flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.StagingStep._error">
      <summary>
            The error flag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.StagingStep.#ctor(System.Int32,System.String,Assets.Scripts.Design.Tutorial.TutorialScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tutorial.StagingStep" /> class.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="partName">Name of the part.</param>
      <param name="tutorialScript">The tutorial script.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.StagingStep.PartId">
      <summary>
            Gets the part identifier.
            </summary>
      <value>
            The part identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.StagingStep.PartName">
      <summary>
            Gets or sets the name of the part.
            </summary>
      <value>
            The name of the part.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.StagingStep.End">
      <summary>
            Ends the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.StagingStep.Start">
      <summary>
            Starts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.StagingStep.Update">
      <summary>
            Updates the step.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.SymmetryStep">
      <summary>
            Step for enabling symmetry for a part.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tutorial.TutorialStep" />
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.SymmetryStep._complete">
      <summary>
            The complete flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.SymmetryStep._error">
      <summary>
            The error flag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.SymmetryStep.#ctor(System.Int32,System.String,Assets.Scripts.Design.Tutorial.TutorialScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tutorial.SymmetryStep" /> class.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="partName">Name of the part.</param>
      <param name="tutorialScript">The tutorial script.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.SymmetryStep.PartId">
      <summary>
            Gets the part identifier of the part that should have symmetry enabled.
            </summary>
      <value>
            The part identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.SymmetryStep.PartName">
      <summary>
            Gets or sets the name of the part.
            </summary>
      <value>
            The name of the part.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.SymmetryStep.End">
      <summary>
            Ends the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.SymmetryStep.Start">
      <summary>
            Starts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.SymmetryStep.Update">
      <summary>
            Updates the step.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.TutorialPanelScript">
      <summary>
            The designer tutorial panel script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript._errorText">
      <summary>
            The error text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript._highlight">
      <summary>
            The highlight image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript._instructionText">
      <summary>
            The message label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript._panelInstruction">
      <summary>
            The panel instruction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript._panelIntro">
      <summary>
            The panel intro
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript._panelOkay">
      <summary>
            The panel okay
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript._progress">
      <summary>
            The progress
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript._stepHeaderText">
      <summary>
            The step header text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript._stepText">
      <summary>
            The step text
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.TutorialPanelScript.TutorialPanelType">
      <summary>
            Available panel types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript.TutorialPanelType.None">
      <summary>
            The none panel type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript.TutorialPanelType.Intro">
      <summary>
            The intro panel type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript.TutorialPanelType.Instruction">
      <summary>
            The instruction panel type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialPanelScript.TutorialPanelType.Okay">
      <summary>
            The okay panel type.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialPanelScript.InstructionText">
      <summary>
            Gets or sets the message.
            </summary>
      <value>
            The message.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialPanelScript.StepText">
      <summary>
            Gets or sets the message.
            </summary>
      <value>
            The message.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialPanelScript.TutorialScript">
      <summary>
            Gets or sets the tutorial script.
            </summary>
      <value>
            The tutorial script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.DisableHighlight">
      <summary>
            Disables the highlight.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.DisplayError(System.String)">
      <summary>
            Displays the error.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.EnableHighlight(UnityEngine.Vector3,System.Int32,System.Int32,UnityEngine.Color)">
      <summary>
            Enables the highlight.
            </summary>
      <param name="position">The position.</param>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <param name="color">The color.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.ShowPanel(Assets.Scripts.Design.Tutorial.TutorialPanelScript.TutorialPanelType)">
      <summary>
            Shows the specified panel.
            </summary>
      <param name="panelType">Type of the panel.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.UpdateStepNumberText(System.Int32,System.Int32)">
      <summary>
            Updates the step number text.
            </summary>
      <param name="stepNumber">The step number.</param>
      <param name="numSteps">The number steps.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.OnRestartStepClicked">
      <summary>
            The restart step button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.OnSkipStepClicked">
      <summary>
            The restart step button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPanelScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.TutorialPartScript">
      <summary>
            Provides functionality on parts in the designer tutorial.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialPartScript.TutorialStep">
      <summary>
            Gets or sets the tutorial step.
            </summary>
      <value>
            The tutorial step.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialPartScript.OnDestroy">
      <summary>
            Called when [destroy].
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.TutorialScript">
      <summary>
            The designer tutorial script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._currentStepCraftXml">
      <summary>
            The current step craft XML.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._firstFrame">
      <summary>
            The first frame flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._highlightColor">
      <summary>
            The highlight color.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._highlightTarget">
      <summary>
            The highlight target.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._highlightTime">
      <summary>
            The target part material time.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._lastAccomplishment">
      <summary>
            The _last accomplishment
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._loadedPartIds">
      <summary>
            The loaded part ids
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._loadedSymmetryPartIds">
      <summary>
            The loaded part ids that should retain their symmetry.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._step">
      <summary>
            The current step index.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._steps">
      <summary>
            The list of steps.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript._tutorialPanel">
      <summary>
            The tutorial panel.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.TutorialScript.TutorialDelegate">
      <summary>
            Delegate for the tutorial.
            </summary>
      <param name="tutorial">The tutorial.</param>
    </member>
    <member name="E:Assets.Scripts.Design.Tutorial.TutorialScript.Complete">
      <summary>
            Occurs when the tutorial has been completed by the user.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialScript.DesignerScript">
      <summary>
            Gets or sets the designer script.
            </summary>
      <value>
            The designer script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialScript.DesignerUi">
      <summary>
            Gets the designer UI.
            </summary>
      <value>
            The designer UI.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialScript.SolidPartMaterial">
      <summary>
            Gets or sets the target solid part material.
            </summary>
      <value>
            The target solid part material.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialScript.TargetPartMaterial">
      <summary>
            Gets or sets the target part material.
            </summary>
      <value>
            The target part material.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialScript.CurrentStep">
      <summary>
            Gets the current step.
            </summary>
      <value>
            The current step.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.Accomplishment(System.String,System.Single)">
      <summary>
            Records the last accomplishment and plays a sound.
            </summary>
      <param name="name">The name.</param>
      <param name="delay">The amount of time to wait before playing the sound.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.DisableUiHighlight">
      <summary>
            Disables the UI highlight.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.DisplayError(System.String)">
      <summary>
            Displays the error.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.DisplayInstructionText(System.String)">
      <summary>
            Sets the instruction text.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.DisplayStepText(System.String)">
      <summary>
            Sets the step text.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.GetCraftPart(System.Int32)">
      <summary>
            Gets the craft part.
            </summary>
      <param name="partId">The part identifier.</param>
      <returns>The part.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.GetDesignerPart(System.String)">
      <summary>
            Gets the designer part.
            </summary>
      <param name="name">The name.</param>
      <returns>The designer part.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.HighlightUiElement(System.String,UnityEngine.Vector2,System.Boolean)">
      <summary>
            Highlights the UI element.
            </summary>
      <param name="name">The name.</param>
      <param name="padding">The padding.</param>
      <param name="highlightEvenIfInactive">if set to <c>true</c> then highlight even if inactive.</param>
      <returns>
            True if the element was found and highlighted.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.HighlightUiElement(UnityEngine.GameObject,UnityEngine.Vector2,System.Boolean)">
      <summary>
            Highlights the UI element.
            </summary>
      <param name="gameObject">The game object.</param>
      <param name="padding">The padding.</param>
      <param name="highlightEvenIfInactive">if set to <c>true</c> then highlight even if inactive.</param>
      <returns>
            True if the element was found and highlighted.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.NextStep(System.Boolean)">
      <summary>
            Proceeds to the next step in the tutorial.
            </summary>
      <param name="playSound">if set to <c>true</c> [play sound].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.RaiseCompleteEvent">
      <summary>
            Raises the complete event.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.RestartStep">
      <summary>
            Restarts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.SkipStep">
      <summary>
            Skips the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.PlayAccomplishmentSound(System.Single)">
      <summary>
            Plays the accomplishment sound.
            </summary>
      <param name="delay">The delay.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.AnimateHighlightColors">
      <summary>
            Animates the target part material.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.LoadStep(System.Int32)">
      <summary>
            Loads the step.
            </summary>
      <param name="stepIndex">Index of the step.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.QueueAddFuselagePartStep(System.Int32,System.String,System.Boolean,UnityEngine.Vector3,System.String)">
      <summary>
            Queues the add fuselage part step.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="designerPartName">Name of the designer part.</param>
      <param name="updatePosition">if set to <c>true</c> then update the position based on the difference in size between the target and designer fuselage part sizes.</param>
      <param name="offset">The offset.</param>
      <param name="stepText">The step text.</param>
      <returns>
            The step.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.QueueAddPartStep(System.Int32,System.String,System.String)">
      <summary>
            Queues the add part step.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="designerPartName">Name of the designer part.</param>
      <param name="stepText">The step text.</param>
      <returns>
            The step.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.QueueStep(Assets.Scripts.Design.Tutorial.TutorialStep,System.String)">
      <summary>
            Queues the step.
            </summary>
      <param name="step">The step.</param>
      <param name="stepText">The step text.</param>
      <returns>
            The tutorial step.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.TutorialScript.HighlightTarget">
      <summary>
            Contains data about an element that was highlighted.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialScript.HighlightTarget.Padding">
      <summary>
            Gets or sets the padding.
            </summary>
      <value>
            The padding.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialScript.HighlightTarget.Target">
      <summary>
            Gets or sets the target.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.TutorialScript.PartNames">
      <summary>
            Part names used in the tutorial.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript.PartNames.EngineMage">
      <summary>
            The engine mage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript.PartNames.EnginePixie">
      <summary>
            The engine pixie
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript.PartNames.FuelTank">
      <summary>
            The fuel tank
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript.PartNames.Interstage">
      <summary>
            The interstage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript.PartNames.InterstageSide">
      <summary>
            The interstage side
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript.PartNames.NoseCone">
      <summary>
            The nose cone
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.Tutorial.TutorialScript.PartNames.SolarPanelArray">
      <summary>
            The solar panel array
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.Tutorial.TutorialStep">
      <summary>
            Contains information about a step in the tutorial.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.#ctor(System.Int32,Assets.Scripts.Design.Tutorial.TutorialScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.Tutorial.TutorialStep" /> class.
            </summary>
      <param name="partId">The part identifier.</param>
      <param name="tutorialScript">The tutorial script.</param>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.CameraFocusOffset">
      <summary>
            Gets or sets the offset to use when focusing on a part. Only used when the step is set to focus on a part.
            </summary>
      <value>
            The camera focus offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.CameraRotation">
      <summary>
            Gets or sets the camera rotation.
            </summary>
      <value>
            The camera rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.CameraZoom">
      <summary>
            Gets or sets the camera zoom.
            </summary>
      <value>
            The camera zoom.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.CenterOnTarget">
      <summary>
            Gets or sets a value indicating whether to center on the target.
            </summary>
      <value>
        <c>true</c> if the camera should center on the target at the start of the step; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.CraftPart">
      <summary>
            Gets the part that the target part should connect to on the craft.
            </summary>
      <value>
            The craft part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.CraftXml">
      <summary>
            Gets or sets the aircraft XML.
            </summary>
      <value>
            The aircraft XML.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.FocusPartId">
      <summary>
            Gets or sets the ID of the part to focus on at the beginning of the step.
            </summary>
      <value>
            The ID of the part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.InitiallySelectedPartId">
      <summary>
            Gets or sets the initially selected part.
            </summary>
      <value>
            The initially selected part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.LoadAllParts">
      <summary>
            Gets or sets a value indicating whether [load all parts].
            </summary>
      <value>
        <c>true</c> if [load all parts]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.LoadCraft">
      <summary>
            Gets or sets a value indicating whether to load a craft with this step.
            </summary>
      <value>
        <c>true</c> if load craft; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.LoadedPartIds">
      <summary>
            Gets the loaded part ids, which are the parts that have already been placed by the user at this point in
            the tutorial.
            </summary>
      <value>
            The loaded part ids.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.LoadedSymmetricPartIds">
      <summary>
            Gets or sets the loaded symmetric part ids, which are the parts that should retain their symmetry.
            </summary>
      <value>
            The loaded symmetric part ids.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.PanelType">
      <summary>
            Gets or sets the type of the panel used this step.
            </summary>
      <value>
            The type of the panel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.StepText">
      <summary>
            Gets or sets the step text.
            </summary>
      <value>
            The step text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.TargetPart">
      <summary>
            Gets or sets the target part.
            </summary>
      <value>
            The target part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.TargetPartDestinationAttachPoints">
      <summary>
            Gets the target part destination attach points.
            </summary>
      <value>
            The target part destination attach points.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.TargetPartId">
      <summary>
            Gets or sets the part identifier.
            </summary>
      <value>
            The part identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.Tutorial.TutorialStep.TutorialScript">
      <summary>
            Gets or sets the tutorial script.
            </summary>
      <value>
            The tutorial script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.End">
      <summary>
            Ends the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.FindPartAtTargetPosition(System.Collections.Generic.List{ModApi.Craft.Parts.PartData})">
      <summary>
            Finds the part at target position.
            </summary>
      <param name="parts">The parts.</param>
      <returns>
            The part or null if no part matches.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.FindUserAddedParts">
      <summary>
            Finds the list of parts the user has added.
            </summary>
      <returns>
            The list of parts.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.LoadStep">
      <summary>
            Loads the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.OnPartDestroyed">
      <summary>
            Called when [part destroyed].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.Skip">
      <summary>
            Skips this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.Start">
      <summary>
            Starts the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.Update">
      <summary>
            Updates the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.DisablePartColliders(ModApi.Craft.Parts.PartData)">
      <summary>
            Disables the part colliders.
            </summary>
      <param name="part">The part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.DeletePart(ModApi.Craft.Parts.PartData)">
      <summary>
            Deletes the part.
            </summary>
      <param name="part">The part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.DisplayInstruction(System.String)">
      <summary>
            Displays the instruction text.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.DisplayRetryMessage">
      <summary>
            Displays the retry message.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.DisplayStep(System.String)">
      <summary>
            Displays the step text.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.HighlightPart(ModApi.Craft.Parts.PartData,System.Boolean,System.Boolean)">
      <summary>
            Highlights (or un-highlights) the part.
            </summary>
      <param name="part">The part.</param>
      <param name="highlight">if set to <c>true</c> [highlight].</param>
      <param name="solid">if set to <c>true</c> [solid].</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.HighlightTargetPart">
      <summary>
            Highlights the target part.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.DestroyPartConnections(ModApi.Craft.Parts.PartData)">
      <summary>
            Destroys the part connections.
            </summary>
      <param name="part">The part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.HighlightPartAfterThingsSettle(ModApi.Craft.Parts.PartData)">
      <summary>
            Highlights the part, but waits a few frames before doing so to let things like the prop engines finish building meshes.
            </summary>
      <param name="part">The part.</param>
      <returns>Unity enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.Tutorial.TutorialStep.SelectPartAfterThingsSettle(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Selects the part, but waits a few frames before doing so to let things like the prop engines finish building meshes.
            </summary>
      <param name="partScript">The part script.</param>
      <returns>
            Unity enumerator.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Design.UndoHistory">
      <summary>
            Tracks the undo steps.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.UndoHistory.MaxUndoSteps">
      <summary>
            The maximum undo steps.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.UndoHistory._history">
      <summary>
            The undo history.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.UndoHistory._lastIgnoreKey">
      <summary>
            The last ignore key.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.UndoHistory._undoPosition">
      <summary>
            The undo position.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.UndoHistory.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.UndoHistory" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Design.UndoHistory.Enabled">
      <summary>
            Gets or sets a value indicating whether this undo is currently enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.UndoHistory.NumUndoSteps">
      <summary>
            Gets the undo level count.
            </summary>
      <value>
            The undo level count.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.UndoHistory.RedoStepsAvailable">
      <summary>
            Gets a value indicating whether redo steps are available.
            </summary>
      <value>
        <c>true</c> if redo steps are available; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Design.UndoHistory.UndoStepsAvailable">
      <summary>
            Gets a value indicating whether undo steps are available.
            </summary>
      <value>
        <c>true</c> if undo steps are available; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.UndoHistory.GetNextRedoStep">
      <summary>
            Gets the next redo step and updates the current undo position.
            </summary>
      <returns>The next redo step or <c>null</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.UndoHistory.GetNextUndoStep">
      <summary>
            Gets the next undo step and updates the current undo position.
            </summary>
      <returns>The next undo step or <c>null</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.UndoHistory.PushUndo(Assets.Scripts.Design.UndoStep,System.String)">
      <summary>
            Pushes the specified undo step.
            </summary>
      <param name="undoStep">The undo step to push.</param>
      <param name="ignoreKey">If specified, then an undo will not be saved if the last undo has the same ignore key.</param>
    </member>
    <member name="M:Assets.Scripts.Design.UndoHistory.ShouldPushUndo(System.String)">
      <summary>
            Gets a value indicating whether or not an undo step with the specified ignore key should be push.
            </summary>
      <param name="ignoreKey">The ignore key.</param>
      <returns>
        <c>true</c> if the undo step can be pushed, <c>false</c> if it should be ignored.</returns>
    </member>
    <member name="M:Assets.Scripts.Design.UndoHistory.PruneUndoHistoryAtCurrentPosition">
      <summary>
            Prunes the undo steps past the current position.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.UndoStep">
      <summary>
            A class representing a single undo step for the designer scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.UndoStep.#ctor(System.Xml.Linq.XElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Design.UndoStep" /> class.
            </summary>
      <param name="xml">The XML for the undo step.</param>
    </member>
    <member name="P:Assets.Scripts.Design.UndoStep.Xml">
      <summary>
            Gets the XML for the undo step.
            </summary>
      <value>
            The XML for the undo step.
            </value>
    </member>
    <member name="M:Assets.Scripts.Design.UndoStep.OnRedoComplete(Assets.Scripts.Design.DesignerScript)">
      <summary>
            The method to be called when the redo step has been performed.
            </summary>
      <param name="designer">The designer reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.UndoStep.OnUndoComplete(Assets.Scripts.Design.DesignerScript)">
      <summary>
            The method to be called when the undo step has been performed.
            </summary>
      <param name="designer">The designer reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.UndoStep.ClosePartProperties(Assets.Scripts.Design.DesignerScript)">
      <summary>
            Closes the part properties panel if it was opened via an undo step.
            </summary>
      <param name="designer">The designer reference.</param>
    </member>
    <member name="T:Assets.Scripts.Design.ViewOptionsPanelScript">
      <summary>
            Script for the view panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.DesignerFlyoutPanelScript" />
    </member>
    <member name="F:Assets.Scripts.Design.ViewOptionsPanelScript.ToggledClass">
      <summary>
            The toggled class for the center gizmos.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ViewOptionsPanelScript._pilotOrientationAdjusterUpdateAction">
      <summary>
            The pilot orientation adjuster update action
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ViewOptionsPanelScript._pilotOrientationAdjustor">
      <summary>
            The pilot orientation adjustor
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ViewOptionsPanelScript._pilotOrientationCommandPod">
      <summary>
            Gets the command pod associated with the pilot currently being displayed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ViewOptionsPanelScript._selectCommandPodPanel">
      <summary>
            The select command pod panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ViewOptionsPanelScript._showLiftButton">
      <summary>
            The show lift button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ViewOptionsPanelScript._showPilotButton">
      <summary>
            The show pilot button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.ViewOptionsPanelScript._stageSpinner">
      <summary>
            The stage spinner
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.Initialize(Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the flyout panel.
            </summary>
      <param name="designerUi">The designer UI script reference.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Layouts the rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnCameraClicked(System.String)">
      <summary>
            Called when a camera button is clicked.
            </summary>
      <param name="directionName">The name of the direction.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnCenterGizmoClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the a center gizmo button is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnCraftLoaded">
      <summary>
            Called when a new craft is loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnDisable">
      <summary>
            Called when [disable].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnEnable">
      <summary>
            Called when [enable].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnFlyoutOpened(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opened.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the selected part has changed.
            </summary>
      <param name="oldPart">The old part.</param>
      <param name="newPart">The new part.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnSelectPartsAssociatedCommandPodClicked(UnityEngine.UI.Button)">
      <summary>
            Called when the SelectPartsAssociatedCommandPod button has been clicked.
            </summary>
      <param name="button">The button.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnShowLiftVectorChanged(UnityEngine.UI.Toggle)">
      <summary>
            Called when the show wing lift vector has changed.
            </summary>
      <param name="button">The button.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnShowPilotChanged(UnityEngine.UI.Toggle)">
      <summary>
            Called when the show wing lift vector has changed.
            </summary>
      <param name="button">The button.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.OnStageSpinnerClicked(System.Int32)">
      <summary>
            Called when the stage spinner is clicked.
            </summary>
      <param name="direction">The direction.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.UpdateGizmos">
      <summary>
            Updates the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.UpdatePilotVisibility(System.Boolean)">
      <summary>
            Updates the pilot visibility.
            </summary>
      <param name="show">if set to <c>true</c> the pilot should be shown, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Design.ViewOptionsPanelScript.UpdateWingAerodnamicCenters">
      <summary>
            Updates the aerodnamic centers for the wings for when the lift vectors are showing.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Design.DownloadSandboxDialogScript">
      <summary>
            Script for the download sandbox dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Design.DownloadSandboxDialogScript._canceled">
      <summary>
            The canceled flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadSandboxDialogScript._downloader">
      <summary>
            The downloader
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadSandboxDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadSandboxDialogScript._progressBar">
      <summary>
            The download progress bar
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadSandboxDialogScript._sandboxId">
      <summary>
            The craft identifier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Design.DownloadSandboxDialogScript._statusLabel">
      <summary>
            The download status label
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadSandboxDialogScript.Create(UnityEngine.Transform,System.String)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent canvas use for this dialog.</param>
      <param name="sandboxId">The sandbox identifier.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadSandboxDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadSandboxDialogScript.OnCancelButtonClicked">
      <summary>
            Called when the cancel button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadSandboxDialogScript.ShowError(System.String)">
      <summary>
            Shows the error.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadSandboxDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadSandboxDialogScript.LogModRequirementsNotMetError(System.String,ModApi.Mods.RequiredModsCheck)">
      <summary>
            Logs an error regarding the mod requirements not being met to load the specified sandbox.
            </summary>
      <param name="sandboxName">The name of the sandbox being loaded.</param>
      <param name="requiredMods">The required mods check.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadSandboxDialogScript.DownloadSandbox(System.String)">
      <summary>
            Downloads the sandbox.
            </summary>
      <param name="sandboxId">The sandbox identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadSandboxDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout has been rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Design.DownloadSandboxDialogScript.UpdateProgress(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Unity Update method.
            </summary>
      <param name="request">The request.</param>
    </member>
    <member name="T:Assets.Scripts.CraftDesigns">
      <summary>
            Manages saving, loading, and deleting craft design files.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CraftDesigns.EditorCraftId">
      <summary>
            The editor craft identifier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CraftDesigns.NewCraftId">
      <summary>
            The new craft identifier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CraftDesigns._editorCraftDesign">
      <summary>
            The cached editor craft design.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CraftDesigns._userCraftDesignsFolder">
      <summary>
            The user's craft designs folder.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CraftDesigns.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.CraftDesigns" /> class.
            </summary>
      <param name="userCraftDesignsFolder">The user's craft designs folder.</param>
    </member>
    <member name="P:Assets.Scripts.CraftDesigns.RootFolderPath">
      <summary>
            Gets the path to the root folder of the craft designs.
            </summary>
      <value>
            The path.
            </value>
    </member>
    <member name="M:Assets.Scripts.CraftDesigns.ScrubCraftName(System.String)">
      <summary>
            Scrubs the name of the craft of any invalid characters.
            </summary>
      <param name="name">The name.</param>
      <returns>The scrubbed string.</returns>
    </member>
    <member name="M:Assets.Scripts.CraftDesigns.DeleteCraftFile(System.String)">
      <summary>
            Deletes the craft.
            </summary>
      <param name="craftId">The craft identifier.</param>
    </member>
    <member name="M:Assets.Scripts.CraftDesigns.GetCraftDesign(System.String)">
      <summary>
            Gets the craft.
            </summary>
      <param name="craftId">The craft identifier.</param>
      <returns>
            The craft XElement
            </returns>
    </member>
    <member name="M:Assets.Scripts.CraftDesigns.GetCraftDesignIds(System.Boolean)">
      <summary>
            Gets the craft IDs currently saved on the user's system.
            </summary>
      <param name="excludeReservedIds">if set to <c>true</c> then exclude reserved craft IDs.</param>
      <returns>
            List of the craft IDs.
            </returns>
    </member>
    <member name="M:Assets.Scripts.CraftDesigns.GetCraftFile(System.String)">
      <summary>
            Gets the craft file.
            </summary>
      <param name="craftId">The craft identifier.</param>
      <returns>The craft file.</returns>
    </member>
    <member name="M:Assets.Scripts.CraftDesigns.HasCraft(System.String)">
      <summary>
            Returns true if the craft with the specified ID exists.
            </summary>
      <param name="id">The identifier.</param>
      <returns>True if the craft exists.</returns>
    </member>
    <member name="M:Assets.Scripts.CraftDesigns.SaveCraft(System.String,System.Xml.Linq.XElement)">
      <summary>
            Saves the craft.
            </summary>
      <param name="craftId">The craft identifier.</param>
      <param name="craftElement">The craft element.</param>
    </member>
    <member name="M:Assets.Scripts.CraftDesigns.LoadDesign(System.String)">
      <summary>
            Loads the design.
            </summary>
      <param name="craftId">The craft ID.</param>
      <returns>
            The craft XElement, or null if it does not exist.
            </returns>
    </member>
    <member name="T:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider">
      <summary>
            ResizableWheelCollider
            This class was created by:
            Nic Tolentino.
            rotatingcube@gmail.com
            I take no liability for it's use and is provided as is.
            The classes are based off the original code developed by Unity Technologies.
            You are free to use, modify or distribute these classes however you wish,
            I only ask that you make mention of their use in your project credits.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._center">
      <summary>
            The center of the wheel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._dummyWheel">
      <summary>
            The dummy wheel object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._forwardFriction">
      <summary>
            Properties of tire friction in the direction the wheel is pointing in.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._forwardSlip">
      <summary>
            The forward slip.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._frictionNormal">
      <summary>
            The normal friction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._frictionOffroad">
      <summary>
            The offroad friction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._groundVelocity">
      <summary>
            The current ground velocity.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._ignoredGameObjects">
      <summary>
            The colliders ignored during the suspension raycast.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._isGrounded">
      <summary>
            Indicates whether the wheel currently collides with something (Read Only).
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._lastGroundCollider">
      <summary>
            The last ground collider this wheel contacted
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._maxSpringForce">
      <summary>
            The max spring force to apply in a single frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._parkingBrake">
      <summary>
            The parking brake joint, which helps prevent crafts from slipping down hills.
            It's very hacky, but I'm out of time on this task and the slipping is driving
            me crazy.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._rigidbody">
      <summary>
            The rigidbody to apply suspension and slip forces to.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._sidewaysFriction">
      <summary>
            Properties of tire friction in the sideways direction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._sidewaysSlip">
      <summary>
            The sideways slip.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._surfaceFriction">
      <summary>
            The surface friction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._surfaceNormal">
      <summary>
            The normal of the surface the wheel is currently colliding with.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._suspensionCompression">
      <summary>
            The current suspension compression.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._suspensionCompressionPrev">
      <summary>
            The last frame's suspension compression.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._suspensionDistance">
      <summary>
            Maximum extension distance of wheel suspension, measured in local space.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._suspensionSpring">
      <summary>
            The suspension spring data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._suspensionTransform">
      <summary>
            The suspension transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._totalForce">
      <summary>
            The total force to apply to the rigid body for the frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._wheelAngularVelocity">
      <summary>
            The wheel angular velocity.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._wheelBrakeTorque">
      <summary>
            The wheel brake torque.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._wheelMass">
      <summary>
            The wheel's mass. Used to simulate angular velocity accurately and does not affect CoM or rigid body's mass.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._wheelMesh">
      <summary>
            The wheel mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._wheelMotorTorque">
      <summary>
            Motor torque on the wheel axle. Positive or negative depending on direction.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._wheelRotationAngle">
      <summary>
            Current wheel axle rotation speed, in rotations per minute (Read Only).
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._wheelSteerAngle">
      <summary>
            Steering angle in degrees, always around the local y-axis.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider._gizmoColor">
      <summary>
            The gizmo color.
            </summary>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.AngularVelocityFrictionScale">
      <summary>
            Gets or sets the angular velocity friction scale, which is a kludge to prevent the wheels from osciallating back
            and forth while the vehicle/plane is sitting still on the runway. This prevents the angular velocity from accelerating
            so quickly from small movements that it will jerk back and forth. This is tied to the weight on the wheels.
            </summary>
      <value>
            The angular velocity friction scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.BrakeInput">
      <summary>
            Gets or sets the brake input. Ranging from zero to one.
            </summary>
      <value>
            The brake input.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.BrakeTorque">
      <summary>
            Gets or sets the brake torque.
            </summary>
      <value>
            The brake torque.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.Center">
      <summary>
            Gets or sets the center of the wheel.
            </summary>
      <value>
            The center.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.CollideWithAircraftLayer">
      <summary>
            Gets or sets a value indicating whether [collide with aircraft layer].
            </summary>
      <value>
        <c>true</c> if [collide with aircraft layer]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.DummyWheel">
      <summary>
            Gets the dummy wheel.
            </summary>
      <value>
            The dummy wheel.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.ForwardFriction">
      <summary>
            Gets or sets the forward friction.
            </summary>
      <value>
            The forward friction.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.ForwardSlip">
      <summary>
            Gets the forward slip.
            </summary>
      <value>
            The forward slip.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.IsGrounded">
      <summary>
            Gets a value indicating whether the wheel is currently in contact with the ground.
            </summary>
      <value>
        <c>true</c> if it is grounded; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.LastGroundCollider">
      <summary>
            Gets the last ground collider.
            </summary>
      <value>
            The last ground collider.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.LastGroundNormal">
      <summary>
            Gets or sets the ground normal.
            </summary>
      <value>
            The ground normal.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.LastGroundPoint">
      <summary>
            Gets or sets the last ground point.
            </summary>
      <value>
            The last ground point.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.Mass">
      <summary>
            Gets or sets the mass.
            </summary>
      <value>
            The mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.MaxAngularVelocity">
      <summary>
            Gets or sets the maximum angular velocity.
            </summary>
      <value>
            The maximum angular velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.MomentOfInertia">
      <summary>
            Gets the moment of inertia.
            </summary>
      <value>
            The moment of inertia.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.MotorTorque">
      <summary>
            Gets or sets the motor torque.
            </summary>
      <value>
            The motor torque.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.NoSuspensionTraction">
      <summary>
            Gets or sets suspension traction to use when suspension is diabled.
            </summary>
      <value>
            The no suspension traction.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.OffroadPercentage">
      <summary>
            Gets the offroad percentage.
            </summary>
      <value>
            The offroad percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.PartScript">
      <summary>
            Gets or sets the part script.
            </summary>
      <value>
            The part script.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.Rigidbody">
      <summary>
            Gets or sets the rigidbody.
            </summary>
      <value>
            The rigidbody.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.Rpm">
      <summary>
            Gets the RPM.
            </summary>
      <value>
            The RPM.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SidewaysFriction">
      <summary>
            Gets or sets the sideways friction.
            </summary>
      <value>
            The sideways friction.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SidewaysSlip">
      <summary>
            Gets the sideways slip.
            </summary>
      <value>
            The sideways slip.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SteerAngle">
      <summary>
            Gets or sets the steer angle.
            </summary>
      <value>
            The steer angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SurfaceFriction">
      <summary>
            Gets the surface friction.
            </summary>
      <value>
            The surface friction.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SuspensionCompression">
      <summary>
            Gets the suspension compression.
            </summary>
      <value>
            The suspension compression.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SuspensionDistance">
      <summary>
            Gets or sets the suspension distance.
            </summary>
      <value>
            The suspension distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SuspensionEnabled">
      <summary>
            Gets or sets a value indicating whether [suspension enabled].
            </summary>
      <value>
        <c>true</c> if [suspension enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SuspensionSpring">
      <summary>
            Gets or sets the suspension spring.
            </summary>
      <value>
            The suspension spring.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.WheelRadius">
      <summary>
            Gets or sets the wheel radius.
            </summary>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.WheelWidth">
      <summary>
            Gets or sets the width of the wheel.
            </summary>
      <value>
            The width of the wheel.
            </value>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.ClearIgnoredGameObjects">
      <summary>
            Clears the ignored game objects.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.CreateFrictionCurves(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Creates the friction curves for the wheel collider based on the specified parameters.
            </summary>
      <param name="forwardExtremumSlip">The forward extremum slip.</param>
      <param name="forwardExtremumForce">The forward extremum force.</param>
      <param name="forwardAsymptoteSlip">The forward asymptote slip.</param>
      <param name="forwardAsymptoteForce">The forward asymptote force.</param>
      <param name="sidewaysExtremumSlip">The sideways extremum slip.</param>
      <param name="sidewaysExtremumForce">The sideways extremum force.</param>
      <param name="sidewaysAsymptoteSlip">The sideways asymptote slip.</param>
      <param name="sidewaysAsymptoteForce">The sideways asymptote force.</param>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.IgnoreGameObjectInRaycast(UnityEngine.GameObject)">
      <summary>
            Ignores the game object in raycast.
            </summary>
      <param name="g">The g.</param>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.OnGenerateInspectorModel(ModApi.Ui.Inspector.InspectorModel)">
      <summary>
            Called when the part is generating a model for an inspector panel. The modifier can optionally add
            its own functionality to the model.
            </summary>
      <param name="model">The inspector model.</param>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.RecalculateFrameState">
      <summary>
            Called when the wheel collider should re-calculate it's state (position/velocity) within the reference frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SetWheelFrictionScalars(System.Single,System.Single)">
      <summary>
            Sets the wheel friction scalars.
            </summary>
      <param name="frictionNormal">The friction normal.</param>
      <param name="frictionOffroad">The friction offroad.</param>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SetWheelStateGrounded(UnityEngine.Collider,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Sets the wheel state grounded.
            </summary>
      <param name="groundCollider">The ground collider.</param>
      <param name="groundNormal">The ground normal.</param>
      <param name="contactPoint">The contact point.</param>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.SetWheelStateInAir">
      <summary>
            Sets the wheel state in air.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.CalculateForcesFromSlips">
      <summary>
            Calculates the forces from slips.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.CalculateSlips">
      <summary>
            Calculates the slips.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.CreateParkingBrakeJoint">
      <summary>
            Creates a parking brake joint. Sometimes you've gotta hack it until you make it.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.DestroyParkingBrakeJoint">
      <summary>
            Destroys the parking brake.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.FixedUpdate">
      <summary>
            Unity fixed update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.OnDrawGizmosSelected">
      <summary>
            Unity OnDrawGizmosSelected method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.UpdateParkingBrake">
      <summary>
            Updates the parking brake.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.UpdateSuspension">
      <summary>
            Updates the suspension.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.UpdateWheel">
      <summary>
            Updates the wheel.
            </summary>
    </member>
    <member name="T:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.IgnoredGameObject">
      <summary>
            A collider to ignore while raycasting for the suspension.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.IgnoredGameObject.Active">
      <summary>
            A value indicating whether the game object is active.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.IgnoredGameObject.GameObject">
      <summary>
            Gets or sets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.ResizableWheelCollider.IgnoredGameObject.Layer">
      <summary>
            Gets or sets the layer.
            </summary>
      <value>
            The layer.
            </value>
    </member>
    <member name="T:Assets.Scripts.CustomWheelCollider.TireTrackRenderer">
      <summary>
            A class that manages updating and drawing of tire tracks.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._BoundsBucketSize">
      <summary>
            The bounds bucket size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._drawMatrix">
      <summary>
            The matrix used for drawing the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._bounds">
      <summary>
            The cached bounds of the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._currentNotVisibleCount">
      <summary>
            The number of current not-visible segments.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._dirtySegments">
      <summary>
            The dirty segments.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._initialized">
      <summary>
            A value indicating if the renderer has been initialized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._material">
      <summary>
            The tire track mesh material.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._maxSegments">
      <summary>
            The maximum number of segments of the track.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._mesh">
      <summary>
            The tire track mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._minDistance">
      <summary>
            The minimum distance that must be surpassed to generate a new track segment.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._minDistanceSquared">
      <summary>
            The minimum distance (squared) that must be surpassed to generate a new track segment.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._nextSegment">
      <summary>
            The next segment index.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._previousSegmentPosition">
      <summary>
            The previous segment position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._segmentFadeRange">
      <summary>
            The segment fade range.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._segmentStart">
      <summary>
            A value indicating if a track segment has just started.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._transform">
      <summary>
            The transform of this object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._updating">
      <summary>
            A value indicating if this track is currently updating.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._uvList">
      <summary>
            The mesh UVs (wrapped in a list because Unity's API sucks).
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._uvs">
      <summary>
            The mesh UVs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer._vertices">
      <summary>
            The mesh vertices.
            </summary>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.CurrentOpacityMultiplier">
      <summary>
            Gets or sets the current opacity multiplier.
            </summary>
      <value>
            The current opacity multiplier.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.Updating">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.CustomWheelCollider.TireTrackRenderer" /> is updating.
            </summary>
      <value>
        <c>true</c> if updating; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.Width">
      <summary>
            Gets or sets the current track width.
            </summary>
      <value>
            The current track width.
            </value>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.Initialize">
      <summary>
            Initializes the track renderer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.MoveAllSections(UnityEngine.Vector3)">
      <summary>
            Moves all track sections.
            </summary>
      <param name="positionDelta">The position delta.</param>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.OnDrawGizmosSelected">
      <summary>
            Used to draw non-pickable gizmos that are only drawn when an object is selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.BeginSegment">
      <summary>
            Begins a new track segment.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.EndSegment">
      <summary>
            Ends a track segment.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.InitializeBounds">
      <summary>
            Initializes the mesh bounds.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.InitializeTriangles">
      <summary>
            Initializes the triangles.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.InitializeUVs">
      <summary>
            Initializes the UVs.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.InitializeVertices">
      <summary>
            Initializes the vertices.
            </summary>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.SetSegmentDirty(System.Int32)">
      <summary>
            Flags the specified segment as dirty.
            </summary>
      <param name="segment">The segment that is to be flagged as dirty.</param>
    </member>
    <member name="M:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.UpdateMesh">
      <summary>
            Updates the mesh.
            </summary>
    </member>
    <member name="T:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.SegmentBounds">
      <summary>
            The bounds of a collection of mesh segments.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.SegmentBounds.Max">
      <summary>
            The maximum bounds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.SegmentBounds.Min">
      <summary>
            The minimum bounds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.SegmentBounds.Visible">
      <summary>
            A value indicating if any of the mesh segements are visible.
            </summary>
    </member>
    <member name="T:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.ShaderPropertyIds">
      <summary>
            The shader property IDs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.ShaderPropertyIds.NextSegment">
      <summary>
            The next segment shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.ShaderPropertyIds.SegmentFadeRange">
      <summary>
            The segment fade range shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.CustomWheelCollider.TireTrackRenderer.ShaderPropertyIds.TotalSegments">
      <summary>
            The total segments shader property ID.
            </summary>
    </member>
    <member name="T:Assets.Scripts.DebugScripts.ChangeOrbitsScript">
      <summary>
            Debug script to change the craft's and one planet's orbit.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._copyValues">
      <summary>
            The copy values
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._craftPosition">
      <summary>
            The craft position
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._craftSoi">
      <summary>
            The craft soi
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._craftSoiShow">
      <summary>
            The craft soi show
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._craftSoiSphere">
      <summary>
            The craft soi sphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._craftVelocity">
      <summary>
            The craft velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._go">
      <summary>
            The go
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._initialized">
      <summary>
            The initialized
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._mapCraft">
      <summary>
            The map craft
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._mapPlanet">
      <summary>
            The map planet
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._newCraftPosition">
      <summary>
            The new craft position
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._newCraftVelocity">
      <summary>
            The new craft velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._newPlanetPosition">
      <summary>
            The new planet position
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._newPlanetVelocity">
      <summary>
            The new planet velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._planetPosition">
      <summary>
            The planet position
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._planetSoi">
      <summary>
            The planet soi
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._planetSoiShow">
      <summary>
            The planet soi show
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._planetSoiSphere">
      <summary>
            The planet soi sphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._planetVelocity">
      <summary>
            The planet velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.ChangeOrbitsScript._playerCraft">
      <summary>
            The player craft
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.ChangeOrbitsScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.ChangeOrbitsScript.OnValidate">
      <summary>
            Called when [validate].
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.ChangeOrbitsScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.DebugScripts.DebugGizmos">
      <summary>
            Class to help with displaying various debug gizmos (balls, lines, rays, etc).
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.DebugGizmos._balls">
      <summary>
            The gizmo balls.
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.DebugGizmos._capsules">
      <summary>
            The gizmo capsules
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.DebugGizmos._lines">
      <summary>
            The gizmo lines.
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.DebugGizmos._texts">
      <summary>
            The gizmo balls.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Scripts.DebugScripts.DebugGizmos" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.Destroy(System.String)">
      <summary>
            Destroys the specified name.
            </summary>
      <param name="name">The name.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DestroyAll">
      <summary>
            Destroys all.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DestroyStale(System.Single)">
      <summary>
            Destroys gizmos that have not been updated in the last x seconds.
            </summary>
      <param name="staleTimeSeconds">The stale time, in seconds.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DrawBall(System.String,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Boolean,System.Int32)">
      <summary>
            Draws the gizmo with the specified name.  Successive calls with the same name will update the gizmo.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="position">The world position of the gizmo.</param>
      <param name="radius">The radius of the sphere.</param>
      <param name="color">The color of the gizmo.</param>
      <param name="emissive">if set to <c>true</c> [emissive].</param>
      <param name="layer">The layer.</param>
      <returns>
            The ball transform.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DrawCapsule(System.String,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Color,System.Boolean,System.Int32)">
      <summary>
            Draws the gizmo with the specified name.  Successive calls with the same name will update the gizmo.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="position">The world position of the gizmo.</param>
      <param name="up">The up vector of the capsule.</param>
      <param name="radius">The radius of the capsule.</param>
      <param name="height">The height of the capsule.</param>
      <param name="color">The color of the gizmo.</param>
      <param name="emissive">if set to <c>true</c> [emissive].</param>
      <param name="layer">The layer.</param>
      <returns>
            The capsule transform.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DrawLine(System.String,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32)">
      <summary>
            Draws the gizmo with the specified name.  Successive calls with the same name will update the gizmo.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="p1">The first position of the line.</param>
      <param name="p2">The second position of the line.</param>
      <param name="color">The color of the gizmo.</param>
      <param name="layer">The layer.</param>
      <returns>
            The VectorLine.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DrawRay(System.String,UnityEngine.Ray,System.Single,UnityEngine.Color,System.Int32)">
      <summary>
            Draws the gizmo with the specified name.  Successive calls with the same name will update the gizmo.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="ray">The ray to draw.</param>
      <param name="length">The length of the ray.</param>
      <param name="color">The color to update the gizmo to.</param>
      <param name="layer">The layer.</param>
      <returns>
            The VectorLine.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DrawRay(System.String,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEngine.Color,System.Int32)">
      <summary>
            Draws the gizmo with the specified name.  Successive calls with the same name will update the gizmo.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="origin">The origin of the ray.</param>
      <param name="direction">The direction of the ray.</param>
      <param name="length">The length of the ray.</param>
      <param name="color">The color of the ray.</param>
      <param name="layer">The layer.</param>
      <returns>
            The VectorLine.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DrawRay(System.String,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,System.Int32)">
      <summary>
            Draws the gizmo with the specified name.  Successive calls with the same name will update the gizmo.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="origin">The origin of the ray.</param>
      <param name="vector">The vector from the origin.</param>
      <param name="color">The color of the ray.</param>
      <param name="layer">The layer.</param>
      <returns>
            The VectorLine.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DrawText(System.String,UnityEngine.Vector3,System.String,UnityEngine.Camera,UnityEngine.Color,System.Boolean,System.Int32)">
      <summary>
            Draws the text.
            </summary>
      <param name="name">The name.</param>
      <param name="position">The position.</param>
      <param name="text">The text.</param>
      <param name="camera">The camera.</param>
      <param name="color">The color.</param>
      <param name="emissive">if set to <c>true</c> [emissive].</param>
      <param name="layer">The layer.</param>
      <returns>The transform.</returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DrawTransformOrientation(System.String,UnityEngine.Transform,System.Single)">
      <summary>
            Draws gizmo rays for the up/forward/right vectors of the supplied transform.  Successive calls with the same name will update the gizmo.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="transform">The transform to draw the gizmos for.</param>
      <param name="length">The length of the gizmo lines.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.GetBall(System.String,System.Int32,UnityEngine.Color,System.Boolean,System.Boolean)">
      <summary>
            Gets the gizmo with the specified name.  If one does not exist, it will be created.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="layer">The layer.</param>
      <param name="color">The color.</param>
      <param name="emissive">if set to <c>true</c> [emissive].</param>
      <param name="create">if set to <c>true</c> create the ball if it doesn't exist.</param>
      <returns>
            The gizmo with the specified name.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.GetCapsule(System.String)">
      <summary>
            Gets the capsule.
            </summary>
      <param name="name">The name.</param>
      <returns>The capsule transform.</returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.GetCapsule(System.String,System.Int32,UnityEngine.Color,System.Boolean,System.Boolean)">
      <summary>
            Gets the gizmo with the specified name.  If one does not exist, it will be created.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="layer">The layer.</param>
      <param name="color">The color.</param>
      <param name="emissive">if set to <c>true</c> [emissive].</param>
      <param name="create">if set to <c>true</c> create the ball if it doesn't exist.</param>
      <returns>
            The gizmo with the specified name.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.GetLine(System.String,System.Boolean,System.Int32)">
      <summary>
            Gets the gizmo with the specified name.  If one does not exist, it will be created.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="create">if set to <c>true</c> [create].</param>
      <param name="layer">The layer.</param>
      <returns>
            The gizmo with the specified name.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.SetCamera(UnityEngine.Camera)">
      <summary>
            Sets the camera.
            </summary>
      <param name="camera">The camera.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DestroyAll(System.Collections.Generic.Dictionary{System.String,Assets.Scripts.DebugScripts.DebugGizmos.Gizmo})">
      <summary>
            Destroys all gizmos in the specified dictionary.
            </summary>
      <param name="gizmosToDestroy">The gizmos to destroy.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DestroyGizmo(Assets.Scripts.DebugScripts.DebugGizmos.Gizmo)">
      <summary>
            Destroys the gizmo.
            </summary>
      <param name="gizmo">The gizmo.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.DestroyStale(System.Single,System.Collections.Generic.Dictionary{System.String,Assets.Scripts.DebugScripts.DebugGizmos.Gizmo})">
      <summary>
            Destroys gizmos that have not been updated in the last x seconds.
            </summary>
      <param name="staleTimeSeconds">The stale time seconds.</param>
      <param name="gizmosToCheck">The gizmos to check.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.GetText(System.String)">
      <summary>
            Gets the text.
            </summary>
      <param name="name">The name.</param>
      <returns>The text transform.</returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.GetText(System.String,UnityEngine.Camera,System.Int32,UnityEngine.Color,System.Boolean,System.Boolean)">
      <summary>
            Gets the text.
            </summary>
      <param name="name">The name.</param>
      <param name="camera">The camera.</param>
      <param name="layer">The layer.</param>
      <param name="color">The color.</param>
      <param name="emissive">if set to <c>true</c> [emissive].</param>
      <param name="create">if set to <c>true</c> [create].</param>
      <returns>The transform.</returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.Init">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.OnsceneLoaded(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode)">
      <summary>
            Called when the scene has loaded.
            </summary>
      <param name="scene">The scene.</param>
      <param name="mode">The mode.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.OnSceneUnloaded(UnityEngine.SceneManagement.Scene)">
      <summary>
            Called when the scene has unloaded.
            </summary>
      <param name="scene">The scene.</param>
    </member>
    <member name="T:Assets.Scripts.DebugScripts.DebugGizmos.Gizmo">
      <summary>
            Class to store debug gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.Gizmo.#ctor(System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.DebugScripts.DebugGizmos.Gizmo" /> class.
            </summary>
      <param name="gizmoObject">The gizmo object.</param>
    </member>
    <member name="P:Assets.Scripts.DebugScripts.DebugGizmos.Gizmo.GizmoObject">
      <summary>
            Gets or sets the gizmo object
            </summary>
    </member>
    <member name="P:Assets.Scripts.DebugScripts.DebugGizmos.Gizmo.LastAccessTime">
      <summary>
            Gets or sets the last access time
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.DebugGizmos.Gizmo.UpdateLastUsedTime">
      <summary>
            Updates the last used time.
            </summary>
    </member>
    <member name="T:Assets.Scripts.DebugScripts.DrawNormalsScript">
      <summary>
            Debug script for drawing normals.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="T:Assets.Scripts.DebugScripts.LaunchLocationHelperScript">
      <summary>
            Helper script that can be attached to a game object to generate a launch location.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.DebugScripts.LaunchLocationHelperScript._snapToGround">
      <summary>
            The snap to ground
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.LaunchLocationHelperScript.GenerateLocation">
      <summary>
            Generates the location.
            </summary>
    </member>
    <member name="T:Assets.Scripts.DebugScripts.MeshDebugScript">
      <summary>
            Debug script for a mesh.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.DebugScripts.MeshDebugScript._boundsMax">
      <summary>
            The bounds maximum
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.MeshDebugScript._boundsMin">
      <summary>
            The bounds minimum
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.MeshDebugScript._boundsSize">
      <summary>
            The bounds size
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.MeshDebugScript._countMeshes">
      <summary>
            The count meshes
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.MeshDebugScript._countTriangles">
      <summary>
            The count triangles
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.MeshDebugScript._countVertices">
      <summary>
            The count vertices
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.MeshDebugScript.Calculate">
      <summary>
            Calculates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.MeshDebugScript.CalculateBounds">
      <summary>
            Calculates the bounds.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.MeshDebugScript.CalculateStats">
      <summary>
            Calculates the stats.
            </summary>
    </member>
    <member name="T:Assets.Scripts.DebugScripts.RigidBodyDebugScript">
      <summary>
            Debug script that can be attached to rigid bodies to show information about that rigid body in the inspector.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.DebugScripts.RigidBodyDebugScript._angularVelocity">
      <summary>
            The angular velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.RigidBodyDebugScript._angularVelocityMagnitude">
      <summary>
            The angular velocity magnitude
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.RigidBodyDebugScript._com">
      <summary>
            The local center of mass.
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.RigidBodyDebugScript._inertiaTensor">
      <summary>
            The inertia tensor
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.RigidBodyDebugScript._inertiaTensorMagnitude">
      <summary>
            The inertia tensor magnitude
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.RigidBodyDebugScript._inertiaTensorMagnitudeOverride">
      <summary>
            The inertia tensor magnitude override
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.RigidBodyDebugScript._inertiaTensorMagnitudeSet">
      <summary>
            The inertia tensor magnitude set
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.RigidBodyDebugScript._velocity">
      <summary>
            The velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.RigidBodyDebugScript._velocityMagnitude">
      <summary>
            The velocity magnitude
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.RigidBodyDebugScript.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.RigidBodyDebugScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.RigidBodyDebugScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.RigidBodyDebugScript.UpdateInformation">
      <summary>
            Updates the information.
            </summary>
    </member>
    <member name="T:Assets.Scripts.DebugScripts.SimplePlanesDebugScript">
      <summary>
            Debug script originally brought over from SimplePlanes.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.QueueCapacity">
      <summary>
            The queue capacity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._accel">
      <summary>
            The acceleration
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._accelMax">
      <summary>
            The acceleration maximum
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._ball">
      <summary>
            The _ball
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._cancelGravity">
      <summary>
            The cancel gravity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._displayCenterOfMass">
      <summary>
            The display center of mass
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._distanceObjectA">
      <summary>
            The distance object a
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._distanceObjectB">
      <summary>
            The distance object b
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._distanceTrack">
      <summary>
            The distance track
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._distanceTrackItemA">
      <summary>
            The distance track item a
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._distanceTrackItemB">
      <summary>
            The distance track item b
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._distanceTrackRelativeSelf">
      <summary>
            The distance track relative self
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._drawGravity">
      <summary>
            The draw gravity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._drawLineCamera">
      <summary>
            The draw line camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._drawLineEnd">
      <summary>
            The draw line end
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._drawLineStart">
      <summary>
            The draw line start
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._gravity">
      <summary>
            The gravity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._inertiaTensor">
      <summary>
            The inertia tensor
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._inertiaTensorMag">
      <summary>
            The inertia tensor mag
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._inertiaTensorRecalculate">
      <summary>
            The inertia tensor recalculate
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._inertiaTensorScale">
      <summary>
            The inertia tensor scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._inertiaTensorScale2">
      <summary>
            The inertia tensor scale2
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._initialInertiaTensor">
      <summary>
            The initial inertia tensor
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._inverseTransform">
      <summary>
            The inverse transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._lastDelta">
      <summary>
            The last delta
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._lastPosition">
      <summary>
            The last position
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._lastVelocity">
      <summary>
            The last velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._maxAngularVelocity">
      <summary>
            The maximum angular velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._measureDistanceToPlayer">
      <summary>
            The measure distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._partScript">
      <summary>
            The _part script
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._playAudioSource">
      <summary>
            The play audio source
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._reentryQuality">
      <summary>
            The re entry quality
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._rigidBody">
      <summary>
            The _rigid body
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._rotateSpeed">
      <summary>
            The rotate speed
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._setBodyToOrbit">
      <summary>
            The set body to orbit
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showAcceleration">
      <summary>
            The show acceleration
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showAccelerationResetMax">
      <summary>
            The show acceleration reset maximum
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showAngularVelocity">
      <summary>
            The show angular velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showAngularVelocityLocal">
      <summary>
            The show local angular velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showAngularVelocityMag">
      <summary>
            The show angular velocity mag
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showColliderVolume">
      <summary>
            The show collider volume
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showCollisionEnter">
      <summary>
            The show collision enter
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showHeightAboveTerrain">
      <summary>
            The show height above terrain
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showIsSleeping">
      <summary>
            The show is sleeping
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showOnDestroy">
      <summary>
            The show on destroy
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showOnDisable">
      <summary>
            A value indicating whether or not to show a message when the object is disabled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showOnEnable">
      <summary>
            A value indicating whether or not to show a message when the object is enabled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showPosition">
      <summary>
            The show position
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showPositionAbsolute">
      <summary>
            The show floating origin adjusted position
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showRotationLocal">
      <summary>
            The show rotation local
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showRotationWorld">
      <summary>
            The show rotation world
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showSurfaceRotation">
      <summary>
            The show surface rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showTriggerEnter">
      <summary>
            The show trigger enter
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showUnderwaterPercent">
      <summary>
            The show underwater percent
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showVelocity">
      <summary>
            The show velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._showVelocityMag">
      <summary>
            The show velocity mag
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._sleepThreshold">
      <summary>
            The sleep threshold
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._solverIterationCount">
      <summary>
            The solver iteration count
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._speeds">
      <summary>
            The speeds
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._timeScale">
      <summary>
            The time scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._velocitySolverIterationCount">
      <summary>
            The velocity solver iteration count
            </summary>
    </member>
    <member name="F:Assets.Scripts.DebugScripts.SimplePlanesDebugScript._torque">
      <summary>
            The torque
            </summary>
    </member>
    <member name="P:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.Torque">
      <summary>
            Gets or sets the torque.
            </summary>
      <value>
            The torque.
            </value>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.FixedUpdate">
      <summary>
            The fixed update.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.LateUpdate">
      <summary>
            The late update.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.OnCollisionEnter(UnityEngine.Collision)">
      <summary>
            Called when [collision enter].
            </summary>
      <param name="collision">The collision.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.OnTriggerEnter(UnityEngine.Collider)">
      <summary>
            Called when [trigger enter].
            </summary>
      <param name="other">The other.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.CreatePlanePerpendicularToGravity">
      <summary>
            Creates a plane perpendicular to gravity.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.DistanceTrackUpdate(UnityEngine.Vector3d,UnityEngine.Vector3d,System.Double)">
      <summary>
            Distances the track update.
            </summary>
      <param name="posA">The position a.</param>
      <param name="posB">The position b.</param>
      <param name="distanceScale">The distance scale.</param>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.OnDestroy">
      <summary>
            Called when [destroy].
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.OnDisable">
      <summary>
            Called when [disable].
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.OnEnable">
      <summary>
            Called when the object becomes enabled and active.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.OnValidate">
      <summary>
            Called when [validate].
            </summary>
    </member>
    <member name="M:Assets.Scripts.DebugScripts.SimplePlanesDebugScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.ZeroNormalHunterScript">
      <summary>
            Script that searches the transform hierarchy for meshes with normals of zero magnitude.
            </summary>
    </member>
    <member name="M:Assets.Scripts.ZeroNormalHunterScript.Hunt(UnityEngine.Transform)">
      <summary>
            Hunts for zero normals starting at the specified transform.
            </summary>
      <param name="t">The transform.</param>
    </member>
    <member name="M:Assets.Scripts.ZeroNormalHunterScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.DesignerButtonScript">
      <summary>
            Script for buttons.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.DesignerButtonScript._designerUi">
      <summary>
            The designer UI
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.DesignerButtonScript._icon">
      <summary>
            The icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.DesignerButtonScript._selected">
      <summary>
            The selected flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.DesignerButtonScript._selectedOverlay">
      <summary>
            The selected overlay
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.DesignerButtonScript.Flyout">
      <summary>
            Gets or sets the flyout.
            </summary>
      <value>
            The flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.DesignerButtonScript.IconSprite">
      <summary>
            Gets the icon sprite.
            </summary>
      <value>
            The icon sprite.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.DesignerButtonScript.Selected">
      <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
      <value>
        <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.DesignerButtonScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Design.MenuPanelScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.DesignerButtonScript.AddClickListener(UnityEngine.Events.UnityAction)">
      <summary>
            Add a non persistent listener to the click event.
            </summary>
      <param name="call">The call.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.DesignerButtonScript.Initialize(UnityEngine.Sprite,ModApi.Ui.IFlyout,Assets.Scripts.Design.DesignerUiScript)">
      <summary>
            Initializes the the designer button.
            </summary>
      <param name="iconSprite">The icon sprite.</param>
      <param name="flyout">The flyout.</param>
      <param name="designerUi">The designer UI.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.DesignerButtonScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Handles the on pointer down event.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.DesignerButtonScript.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Handles the on pointer up event.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.DesignerButtonScript.Start">
      <summary>
            Use this for initialization
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.DesignerButtonScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.DesignerButtonScript.UpdateLayout">
      <summary>
            Updates the layout.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.AccountDialogScript">
      <summary>
            Script for the account dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._cancelButton">
      <summary>
            The cancel button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._changingDialogMode">
      <summary>
            Flag set while the dialog is changing modes so the event won't be processed again
            while it's being processed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._confirmPasswordInput">
      <summary>
            The confirm password input
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._emailInput">
      <summary>
            The email input
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._form">
      <summary>
            The form
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._headerText">
      <summary>
            The header text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._logoutButton">
      <summary>
            The log out button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._lostPassword">
      <summary>
            The lost password
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._mode">
      <summary>
            The dialog's current mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._okayButton">
      <summary>
            The okay button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._okayButtonLabel">
      <summary>
            The okay button label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._passwordInput">
      <summary>
            The password input field
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._profileImage">
      <summary>
            The profile image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._profilePanel">
      <summary>
            The profile panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._profileUsername">
      <summary>
            The profile username
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._termsSection">
      <summary>
            The terms section
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._termsToggle">
      <summary>
            The terms toggle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._toggleLogin">
      <summary>
            The toggle login
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._toggleRegister">
      <summary>
            The mode toggle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._usernameInput">
      <summary>
            The username field
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript._webRequest">
      <summary>
            The web request
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.AccountDialogScript.DialogMode">
      <summary>
            The available dialog modes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript.DialogMode.Register">
      <summary>
            The register mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript.DialogMode.Login">
      <summary>
            The login mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AccountDialogScript.DialogMode.LoginOnly">
      <summary>
            The login-only mode. Registration is not available.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.AccountDialogScript.Mode">
      <summary>
            Gets or sets the mode.
            </summary>
      <value>
            The mode.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.Create(UnityEngine.Transform)">
      <summary>
            Creates the account dialog.
            This will return <c>null</c> if no user is logged in and mods have been enabled.
            </summary>
      <param name="parent">The parent canvas use for this dialog.</param>
      <returns>
            The newly created dialog or <c>null</c> if it could not be created.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.OnLogoutButtonClicked">
      <summary>
            Called when the logout button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.ShowError(System.String)">
      <summary>
            Shows the error.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.IsValidEmail(System.String)">
      <summary>
            Determines whether [is valid email] [the specified email].
            </summary>
      <param name="email">The email.</param>
      <returns>True if a valid email.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.IsValidPassword(System.String)">
      <summary>
            Determines whether the password is valid.
            </summary>
      <param name="password">The password.</param>
      <returns>
        <c>true</c> if valid; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.IsValidUsername(System.String)">
      <summary>
            Determines whether the username is valid.
            </summary>
      <param name="username">The username.</param>
      <returns>
        <c>true</c> if valid; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.ChangeElementVisibility(UnityEngine.GameObject,System.Boolean)">
      <summary>
            Changes the element visibility.
            </summary>
      <param name="g">The game object.</param>
      <param name="visible">if set to <c>true</c> then make the elemtn visible.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.DownloadProfileImage">
      <summary>
            Downloads the profile image.
            </summary>
      <returns>Unity enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.OnCancelClicked">
      <summary>
            Called when the cancel button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.OnDialogModeChanged(System.Boolean)">
      <summary>
            Called when the dialog mode has changed.
            </summary>
      <param name="register">if set to <c>true</c> [register].</param>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.OnLostPasswordClicked">
      <summary>
            Called when the lost password is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.OnOkayClicked">
      <summary>
            Called when the okay button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.OnTermsOfUseClicked">
      <summary>
            Called when the terms of use is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.OnViewProfileClicked">
      <summary>
            Called when the view profile link is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AccountDialogScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.ButtonScript">
      <summary>
            Script for buttons.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.ButtonScript._button">
      <summary>
            The button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ButtonScript._clickSound">
      <summary>
            The click sound
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ButtonScript._selected">
      <summary>
            The selected flag.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.ButtonScript.ButtonClickSound">
      <summary>
            The available click sounds for buttons.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ButtonScript.ButtonClickSound.None">
      <summary>
            No click sound
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ButtonScript.ButtonClickSound.DefaultClick">
      <summary>
            The default click
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.ButtonScript.Interactable">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Ui.ButtonScript" /> is interactable.
            </summary>
      <value>
        <c>true</c> if interactable; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.ButtonScript.Selected">
      <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
      <value>
        <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.ButtonScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Ui.ButtonScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.ButtonScript.AddClickListener(UnityEngine.Events.UnityAction)">
      <summary>
            Add a non persistent listener to the click event.
            </summary>
      <param name="call">The call.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.ButtonScript.Awake">
      <summary>
            Use this for initialization
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.ButtonScript.OnClicked">
      <summary>
            Called when the button is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.FlyoutScript">
      <summary>
            Script for flyouts UI elements, which appear on the left side of the screen.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.FlyoutScript._isHidden">
      <summary>
            A value indicating whether this flyout is hidden.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.FlyoutScript._xmlElement">
      <summary>
            The XML element
            </summary>
    </member>
    <member name="E:Assets.Scripts.Ui.FlyoutScript.Closed">
      <summary>
            Occurs when the flyout is closed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Ui.FlyoutScript.Closing">
      <summary>
            Occurs when the flyout is closing.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Ui.FlyoutScript.Opened">
      <summary>
            Occurs when the flyout is opened.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Ui.FlyoutScript.Opening">
      <summary>
            Occurs when the flyout is opening.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.FlyoutScript.IsHidden">
      <summary>
            Gets or sets a value indicating whether this flyout is hidden.
            </summary>
      <value>
        <c>true</c> if this flyout is hidden; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.FlyoutScript.IsOpen">
      <summary>
            Gets a value indicating whether this flyout is open.
            </summary>
      <value>
        <c>true</c> if this flyout is open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.FlyoutScript.Title">
      <summary>
            Gets or sets the title of the flyout.
            </summary>
      <value>
            The title of the flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.FlyoutScript.Transform">
      <summary>
            Gets the root transform component of the flyout.
            </summary>
      <value>
            The root transform component of the flyout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.FlyoutScript.Width">
      <summary>
            Gets or sets the width of the flyout.
            </summary>
      <value>
            The width of the flyout.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.FlyoutScript.Close(System.Boolean)">
      <summary>
            Closes this flyout.
            </summary>
      <param name="immediate">If set to <c>true</c>, the flyout will be closed immediately without animation.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.FlyoutScript.Initialize(UI.Xml.XmlElement)">
      <summary>
            Initializes the specified XML element.
            </summary>
      <param name="xmlElement">The XML element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.FlyoutScript.Open(System.Boolean)">
      <summary>
            Opens this flyout.
            </summary>
      <param name="immediate">If set to <c>true</c>, the flyout will be opened immediately without animation.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.IInputHandler">
      <summary>
            Interface for handling touch/mouse events.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.IInputHandler.HandleInput(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the click event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.IInputHandler.HandlePinch(ModApi.Input.Events.PinchEventArgs)">
      <summary>
            Handles the pinch event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.IInputHandler.HandleScroll(ModApi.Input.Events.ScrollEventArgs)">
      <summary>
            Handles the scroll event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.InfoLineScript">
      <summary>
            Script for an info line.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.InfoLineScript._infoCanvas">
      <summary>
            The information canvas
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InfoLineScript._infoText">
      <summary>
            The information text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InfoLineScript._infoTextFunc">
      <summary>
            The information text function
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InfoLineScript._line">
      <summary>
            The line
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InfoLineScript._point1Func">
      <summary>
            The p1 function
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InfoLineScript._point2Func">
      <summary>
            The p2 function
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InfoLineScript._uiCamera">
      <summary>
            The UI camera
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.InfoLineScript.Create(System.Func{UnityEngine.Vector3},System.Func{UnityEngine.Vector3},System.Func{System.String},UnityEngine.Color,UnityEngine.Camera,UnityEngine.Transform,System.String)">
      <summary>
            Creates the specified p1 function.
            </summary>
      <param name="point1Func">The p1 function.</param>
      <param name="point2Func">The p2 function.</param>
      <param name="infoTextFunc">The information text function.</param>
      <param name="color">The color.</param>
      <param name="uiCamera">The UI camera.</param>
      <param name="parent">The parent.</param>
      <param name="name">The name.</param>
      <returns>
            The info line script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.InfoLineScript.Initialize(System.Func{UnityEngine.Vector3},System.Func{UnityEngine.Vector3},System.Func{System.String},UnityEngine.Color,UnityEngine.Camera)">
      <summary>
            Initializes the specified p1 function.
            </summary>
      <param name="point1Func">The p1 function.</param>
      <param name="point2Func">The p2 function.</param>
      <param name="infoTextFunc">The information text function.</param>
      <param name="color">The color.</param>
      <param name="uiCamera">The UI camera.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.InfoLineScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.InputDialogScript">
      <summary>
            Script for an input dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.InputDialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.InputDialogScript._cancelButton">
      <summary>
            The cancel button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InputDialogScript._cancelLabel">
      <summary>
            The cancel label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InputDialogScript._inputField">
      <summary>
            The input field
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InputDialogScript._label">
      <summary>
            The label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InputDialogScript._okayButton">
      <summary>
            The okay button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InputDialogScript._okayLabel">
      <summary>
            The okay label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InputDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.InputDialogScript._placeholderText">
      <summary>
            The placeholder text.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.InputDialogScript.CancelButtonText">
      <summary>
            Gets or sets the cancel button text.
            </summary>
      <value>
            The cancel button text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.InputDialogScript.InputPlaceholderText">
      <summary>
            Gets or sets the input placeholder text.
            </summary>
      <value>
            The input placeholder text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.InputDialogScript.InputText">
      <summary>
            Gets or sets the input text.
            </summary>
      <value>
            The input text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.InputDialogScript.MaxLength">
      <summary>
            Gets or sets the maximum length of the allowed input string.
            </summary>
      <value>
            The maximum length.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.InputDialogScript.MessageText">
      <summary>
            Gets or sets the message text.
            </summary>
      <value>
            The message text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.InputDialogScript.OkayButtonText">
      <summary>
            Gets or sets the okay button text.
            </summary>
      <value>
            The okay button text.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.InputDialogScript.Create(UnityEngine.Transform)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent canvas use for this dialog.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.InputDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.InputDialogScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.InputDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.InputDialogScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.InputDialogScript.OnCancelClicked">
      <summary>
            Called when the cancel button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.InputDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout has been rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.InputDialogScript.OnOkayClicked">
      <summary>
            Called when the okay button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.InputDialogScript.OnValidateInput(System.String,System.Int32,System.Char)">
      <summary>
            Called when the input is validating characters going into the text input.
            </summary>
      <param name="text">The text.</param>
      <param name="charIndex">Index of the character.</param>
      <param name="addedChar">The added character.</param>
      <returns>The character.</returns>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.ButtonElement">
      <summary>
            Button element in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ButtonElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ButtonElement._style">
      <summary>
            The style
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.ButtonElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.ButtonModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.ButtonElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.ButtonElement.Button">
      <summary>
            Gets the button.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.ButtonElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.DropdownElement">
      <summary>
            Dropdown element in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.DropdownElement._dropdown">
      <summary>
            The dropdown
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.DropdownElement._labelText">
      <summary>
            The label text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.DropdownElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.DropdownElement._suppressOnValueChanged">
      <summary>
            The suppress on value changed flag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.DropdownElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.DropdownModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.DropdownElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.DropdownElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.HeaderElement">
      <summary>
            Header element in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.HeaderElement._labelText">
      <summary>
            The label text
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.HeaderElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.HeaderModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.HeaderElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.HeaderElement.Collapsed">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Inspector.ItemElement" /> is collapsed.
            </summary>
      <value>
        <c>true</c> if collapsed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.IconButtonElement">
      <summary>
            Icon button element in an inspector panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Ui.Inspector.ButtonElement" />
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.IconButtonElement._image">
      <summary>
            The image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.IconButtonElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.IconButtonElement._sprite">
      <summary>
            The sprite
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.IconButtonElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.IconButtonModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.IconButtonElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.IconButtonElement.Button">
      <summary>
            Gets the button.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.IconButtonElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.IconButtonRowElement">
      <summary>
            Element for an icon button row.
            </summary>
      <seealso cref="T:Assets.Scripts.Ui.Inspector.ItemElement" />
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.IconButtonRowElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.IconButtonRowModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.IconButtonRowElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.IconButtonRowElement.Container">
      <summary>
            Gets or sets the container.
            </summary>
      <value>
            The container.
            </value>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.InspectorController">
      <summary>
            Class that manages the inspector panels in the scene.
            </summary>
      <seealso cref="T:UI.Xml.XmlLayoutController" />
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorController._panelContainer">
      <summary>
            The panel container
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorController._templates">
      <summary>
            The templates
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorController.Create(UnityEngine.Transform)">
      <summary>
            Creates the inspector panel.
            </summary>
      <param name="parent">The parent canvas use for this inspector panel.</param>
      <returns>
            The newly created inspector panel.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorController.CloneTemplate(System.String,UI.Xml.XmlElement)">
      <summary>
            Clones the template.
            </summary>
      <param name="templateId">The template identifier.</param>
      <param name="parent">The parent.</param>
      <returns>The cloned element.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorController.CreatePanel(ModApi.Ui.Inspector.InspectorModel,ModApi.Ui.Inspector.InspectorPanelCreationInfo)">
      <summary>
            Creates the inspector panel with the specified model.
            </summary>
      <param name="model">The model.</param>
      <param name="creationInfo">The creation information.</param>
      <returns>
            The inspector panel.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            This function will be called whenever the layout is rebuilt - if you have any setup code which needs to be executed after the layout is rebuilt, override this function and implement it here.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorController.GetInspectorPanelFromElement(UI.Xml.XmlElement)">
      <summary>
            Gets the inspector panel that contains the element.
            </summary>
      <param name="element">The element.</param>
      <returns>The inspector panel script.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorController.OnMainHeaderClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the main header is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorController.OnPinClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the inspector panel pin button is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.InspectorPanelScript">
      <summary>
            Inspector panel.
            </summary>
      <seealso cref="T:ModApi.Ui.Inspector.IInspectorPanel" />
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorPanelScript._elements">
      <summary>
            The elements
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorPanelScript._inspectorController">
      <summary>
            The inspector controller
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorPanelScript._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorPanelScript._panelElement">
      <summary>
            The panel element
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorPanelScript._pinElement">
      <summary>
            The pin element
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorPanelScript._pinned">
      <summary>
            The pinned flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorPanelScript._titleText">
      <summary>
            The title text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.InspectorPanelScript._visible">
      <summary>
            The visible flag.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Closed">
      <summary>
            Occurs when the panel is closed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Pinned">
      <summary>
            Occurs when the panel is pinned.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Unpinned">
      <summary>
            Occurs when the panel is unpinned.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Collapsed">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Inspector.InspectorPanelScript" /> is collapsed.
            </summary>
      <value>
        <c>true</c> if collapsed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.InspectorPanelScript.IsPinned">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:ModApi.Ui.Inspector.IInspectorPanel" /> is pinned.
            </summary>
      <value>
        <c>true</c> if pinned; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Model">
      <summary>
            Gets the model.
            </summary>
      <value>
            The model.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Position">
      <summary>
            Gets or sets the current position.
            </summary>
      <value>
            The current position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Transform">
      <summary>
            Gets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:ModApi.Ui.Inspector.IInspectorPanel" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Close">
      <summary>
            Closes the panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Initialize(ModApi.Ui.Inspector.InspectorModel,ModApi.Ui.Inspector.InspectorPanelCreationInfo,Assets.Scripts.Ui.Inspector.InspectorController,UI.Xml.XmlElement)">
      <summary>
            Initializes with the specified inspector controller.
            </summary>
      <param name="model">The model.</param>
      <param name="creationInfo">The creation information.</param>
      <param name="inspectorController">The inspector controller.</param>
      <param name="panelElement">The panel element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorPanelScript.OnMainHeaderClicked">
      <summary>
            Called when the main header is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorPanelScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorPanelScript.AddElement(Assets.Scripts.Ui.Inspector.ItemElement)">
      <summary>
            Adds the element.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorPanelScript.CreateElement(ModApi.Ui.Inspector.ItemModel,ModApi.Ui.Inspector.GroupModel,UI.Xml.XmlElement)">
      <summary>
            Creates the item element for the given item model.
            </summary>
      <param name="item">The item model.</param>
      <param name="group">The group.</param>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorPanelScript.RebuildGroup(ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Rebuilds the group.
            </summary>
      <param name="group">The group.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.InspectorPanelScript.RebuildModelElements">
      <summary>
            Rebuilds the model elements.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.ItemElement">
      <summary>
            Base class for elements in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ItemElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.ItemElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.ItemModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.ItemElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.ItemElement.Collapsed">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Inspector.ItemElement" /> is collapsed.
            </summary>
      <value>
        <c>true</c> if collapsed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.ItemElement.GameObject">
      <summary>
            Gets the top level game object for this item.
            </summary>
      <value>
            The top level game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.ItemElement.Group">
      <summary>
            Gets the group.
            </summary>
      <value>
            The group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.ItemElement.ModelVisible">
      <summary>
            Gets a value indicating whether the model is currently visible.
            </summary>
      <value>
        <c>true</c> if the model is visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.ItemElement.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Inspector.ItemElement" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.ItemElement.XmlElement">
      <summary>
            Gets the XML element.
            </summary>
      <value>
            The XML element.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.ItemElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.ItemElement.UpdateVisibility">
      <summary>
            Updates the visibility.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.LabelButtonElement">
      <summary>
            Text button element in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.LabelButtonElement._buttonElement">
      <summary>
            The button element
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.LabelButtonElement._buttonLabelText">
      <summary>
            The label text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.LabelButtonElement._labelText">
      <summary>
            The label text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.LabelButtonElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.LabelButtonElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.LabelButtonModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.LabelButtonElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.LabelButtonElement.Button">
      <summary>
            Gets the button.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.LabelButtonElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.ProgressBarElement">
      <summary>
            Progress bar in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ProgressBarElement._image">
      <summary>
            The progress bar image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ProgressBarElement._labelText">
      <summary>
            The label text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ProgressBarElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ProgressBarElement._value">
      <summary>
            The value
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.ProgressBarElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.ProgressBarModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.ProgressBarElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.ProgressBarElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.SliderElement">
      <summary>
            Slider in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.SliderElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.SliderElement._slider">
      <summary>
            The slider control
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.SliderElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.SliderModel,ModApi.Ui.Inspector.GroupModel,System.Single,System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.SliderElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
      <param name="minValue">The minimum slider value.</param>
      <param name="maxValue">The maximum slider value.</param>
      <param name="wholeNumbers">If set to <c>true</c> whole numbers should be used for slider values, otherwise <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.SliderElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.SliderElement.OnSliderValueChanged(System.Single)">
      <summary>
            Called when the slider value has changed.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.SliderElement.UpdateValueText">
      <summary>
            Updates the value text.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.SpinnerElement">
      <summary>
            Spinner element in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.SpinnerElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.SpinnerElement._spinner">
      <summary>
            The spinner
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.SpinnerElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.SpinnerModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.SpinnerElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.SpinnerElement.Text">
      <summary>
            Gets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.SpinnerElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.SpinnerElement.OnNextClicked">
      <summary>
            Called when the next is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.SpinnerElement.OnPrevClicked">
      <summary>
            Called when the previous button is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.TextButtonElement">
      <summary>
            Text button element in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.TextButtonElement._buttonElement">
      <summary>
            The button element
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.TextButtonElement._labelText">
      <summary>
            The label text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.TextButtonElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.TextButtonElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.TextButtonModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.TextButtonElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.TextButtonElement.Button">
      <summary>
            Gets the button.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.TextButtonElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.TextElement">
      <summary>
            Text element in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.TextElement._labelText">
      <summary>
            The label text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.TextElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.TextElement._valueText">
      <summary>
            The value text
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.TextElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.TextModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.TextElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.TextElement.LabelText">
      <summary>
            Gets the label text.
            </summary>
      <value>
            The label text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Inspector.TextElement.ValueText">
      <summary>
            Gets the value text.
            </summary>
      <value>
            The value text.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.TextElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Inspector.ToggleElement">
      <summary>
            Toggle element in an inspector panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ToggleElement._labelText">
      <summary>
            The label text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ToggleElement._model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ToggleElement._suppressOnValueChanged">
      <summary>
            The suppress on value changed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Inspector.ToggleElement._toggle">
      <summary>
            The toggle
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.ToggleElement.#ctor(UI.Xml.XmlElement,ModApi.Ui.Inspector.ToggleModel,ModApi.Ui.Inspector.GroupModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Inspector.ToggleElement" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="model">The model.</param>
      <param name="group">The group.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Inspector.ToggleElement.Update">
      <summary>
            Updates the element.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.LayoutElementAnimator">
      <summary>
            Provides functionality to animate a layout element to smoothly grow or shrink. It assumes that the
            preferredHeight of the element has been set.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.LayoutElementAnimator._originalHeight">
      <summary>
            The original height
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.LayoutElementAnimator.HideVertical">
      <summary>
            Hides the element vertically by scaling its preferred height and y scale down to zero.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.LayoutElementAnimator.ShowVertical">
      <summary>
            Shows the element vertically by scaling its preferred height and y scale down back to their original values.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.LayoutElementAnimator.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.LinkTextScript">
      <summary>
            The script for adding support for clicking a link in a text mesh pro text object.
            </summary>
      <seealso cref="T:UnityEngine.EventSystems.IPointerClickHandler" />
    </member>
    <member name="F:Assets.Scripts.Ui.LinkTextScript._cancelLink">
      <summary>
            The cancel link flag. Set to true when an event subscriber wants to cancel going to the URL.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.LinkTextScript.LinkDelegate">
      <summary>
            Delegate for a LinkTextScript.
            </summary>
      <param name="linkText">The link text.</param>
      <param name="linkUrl">The link URL.</param>
    </member>
    <member name="E:Assets.Scripts.Ui.LinkTextScript.LinkClicked">
      <summary>
            Occurs when a link is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.LinkTextScript.CancelLink">
      <summary>
            Cancels the link and prevents the script from opening the URL.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.LinkTextScript.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Pointer click event handler.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.MessageDialogScript">
      <summary>
            Implementation of Mod API message dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.MessageDialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.MessageDialogScript._cancelButton">
      <summary>
            The cancel button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.MessageDialogScript._cancelLabel">
      <summary>
            The cancel label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.MessageDialogScript._label">
      <summary>
            The label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.MessageDialogScript._okayButton">
      <summary>
            The okay button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.MessageDialogScript._okayButtonElement">
      <summary>
            The okay button element
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.MessageDialogScript._okayLabel">
      <summary>
            The okay label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.MessageDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.MessageDialogScript._showCancel">
      <summary>
            The _show cancel
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.MessageDialogScript.CancelButtonText">
      <summary>
            Gets or sets the cancel button text.
            </summary>
      <value>
            The cancel button text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.MessageDialogScript.MessageText">
      <summary>
            Gets or sets the message text.
            </summary>
      <value>
            The message text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.MessageDialogScript.OkayButtonText">
      <summary>
            Gets or sets the okay button text.
            </summary>
      <value>
            The okay button text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.MessageDialogScript.UseDangerButtonStyle">
      <summary>
            Gets or sets a value indicating whether to use the danger button style.
            </summary>
      <value>
        <c>true</c> to use danger button style; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.MessageDialogScript.Create(System.Boolean,UnityEngine.Transform)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="showCancelButton">if set to <c>true</c> [show cancel button].</param>
      <param name="parent">The parent canvas use for this dialog.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.MessageDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.MessageDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.MessageDialogScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.MessageDialogScript.OnCancelClicked">
      <summary>
            Called when the cancel button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.MessageDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.MessageDialogScript.OnOkayClicked">
      <summary>
            Called when the okay button was clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.PreventDraggingScript">
      <summary>
            Script that can be attached to a child object to prevent the parent from being dragged.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IBeginDragHandler" />
    </member>
    <member name="M:Assets.Scripts.Ui.PreventDraggingScript.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule before a drag is started.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.PreventDraggingScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When draging is occuring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.PreventDraggingScript.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule when a drag is ended.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.PreventDraggingScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.ScenarioDialogScript">
      <summary>
            Script for the scenario dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.ScenarioDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ScenarioDialogScript._templateRow">
      <summary>
            The template row
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.ScenarioDialogScript.Create(UnityEngine.Transform)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent canvas use for this dialog.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.ScenarioDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.ScenarioDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.ScenarioDialogScript.OnCancelClicked">
      <summary>
            Called when the cancel button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.ScenarioDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout has been rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.ScenarioDialogScript.OnScenarioClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the scenario is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.ScreenInputScript">
      <summary>
            Script that handles routing mouse/touch inputs on the screen to an input handler.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ScreenInputScript._allowPinch">
      <summary>
            The allow pinch flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ScreenInputScript._camera">
      <summary>
            The camera, used for calculating rays.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ScreenInputScript._inputHandler">
      <summary>
            The input handler.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ScreenInputScript._inputHandlerGameObject">
      <summary>
            The input handler game object. Must implement IInputHandler.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ScreenInputScript._pinchStartDistance">
      <summary>
            The starting distance between the touch inputs during a pinch gesture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.ScreenInputScript._pinchStartPosition">
      <summary>
            The starting middle point of touch inputs duuring a pinch gesture.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.ScreenInputScript" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.ScreenInputScript.TrackedInputs">
      <summary>
            Gets the tracked inputs.
            </summary>
      <value>
            The tracked inputs.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When draging is occuring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer is pressed.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer is released.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.OnScroll(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the mouse wheel is scrolled.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.GetPointerPosition(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Gets the pointer position.
            </summary>
      <param name="eventData">The event data.</param>
      <returns>
            The pointer position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.CreateInputEvent(ModApi.Input.Events.InputState,Assets.Scripts.Ui.ScreenInputScript.TrackedInput)">
      <summary>
            Creates the input event.
            </summary>
      <param name="inputState">State of the input.</param>
      <param name="input">The input.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.CreatePinchEvent(ModApi.Input.Events.InputState)">
      <summary>
            Creates the pinch event.
            </summary>
      <param name="inputState">State of the input.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.ScreenInputScript.GetTrackedInput(System.Int32)">
      <summary>
            Gets the tracked input.
            </summary>
      <param name="pointerId">The pointer identifier.</param>
      <returns>The tracked input.</returns>
    </member>
    <member name="T:Assets.Scripts.Ui.ScreenInputScript.TrackedInput">
      <summary>
            An input that is tracked.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.ScreenInputScript.TrackedInput.DragDelta">
      <summary>
            Gets or sets the drag delta.
            </summary>
      <value>
            The drag delta.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.ScreenInputScript.TrackedInput.Id">
      <summary>
            Gets or sets the identifier.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.ScreenInputScript.TrackedInput.InputButton">
      <summary>
            Gets or sets the input button.
            </summary>
      <value>
            The input button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.ScreenInputScript.TrackedInput.Position">
      <summary>
            Gets or sets the position.
            </summary>
      <value>
            The position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.ScreenInputScript.TrackedInput.StartPosition">
      <summary>
            Gets or sets the start position.
            </summary>
      <value>
            The start position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.ScreenInputScript.TrackedInput.TotalDragDistance">
      <summary>
            Gets or sets the total drag distance.
            </summary>
      <value>
            The total drag distance.
            </value>
    </member>
    <member name="T:Assets.Scripts.Ui.AxisCalibratorDialogScript">
      <summary>
            Dialog script for automatically calibrating an axis.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._axis">
      <summary>
            The axis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._centerStickImage">
      <summary>
            The center stick image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._centerStickPanel">
      <summary>
            The center stick panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._currentCoroutine">
      <summary>
            The current coroutine
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._data">
      <summary>
            The axis calibration data
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._firstRun">
      <summary>
            The first run
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._label">
      <summary>
            The label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._moveStickImage">
      <summary>
            The move stick image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._onFinishCalibrating">
      <summary>
            The on finish calibrating
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._recording">
      <summary>
            The value to determine whether we are currently recording values.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._timerText">
      <summary>
            The timer text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.AxisCalibratorDialogScript._title">
      <summary>
            The title
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.AxisCalibratorDialogScript.MessageText">
      <summary>
            Gets or sets the message text.
            </summary>
      <value>
            The message text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.AxisCalibratorDialogScript.WaitTime">
      <summary>
            Gets or sets the time to wait for axes to be centered
            </summary>
      <value>
            The wait time.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.Create(UnityEngine.Transform,Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis,System.Action)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent.</param>
      <param name="axis">The axis.</param>
      <param name="onFinishCalibrating">The on finish calibrating.</param>
      <returns>
            The dialog script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.WaitFor(System.Single,System.Action,System.Boolean)">
      <summary>
            Waits for specified time
            </summary>
      <param name="time">The time to wait.</param>
      <param name="onComplete">The on complete.</param>
      <param name="skipWaitOnButtonUp">if set to <c>true</c> [skip wait on button up].</param>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.BeingRecording">
      <summary>
            Beings recording for axis calibration.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.Commit">
      <summary>
            Commits the recorded calibration data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.FinishRecording">
      <summary>
            Finishes recording, commits recorded data, and closes the dialog
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.RecordMinMax">
      <summary>
            Records the minimum and maximum extents of the axis for this frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.RecordZero">
      <summary>
            Records the axis zero at the current position.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.AxisCalibratorDialogScript.Wait(System.Action,System.Boolean)">
      <summary>
            Waits for the timer to hit zero
            </summary>
      <param name="onComplete">The callback to call on complete.</param>
      <param name="skipWaitOnButtonUp">if set to <c>true</c> [skip wait on button up].</param>
      <returns>
            Yielded return value
            </returns>
    </member>
    <member name="T:Assets.Scripts.Ui.BindInputDialogScript">
      <summary>
            Dialog script for binding an input
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._actionMap">
      <summary>
            The action map
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._buttonPanel">
      <summary>
            The button panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._buttonType">
      <summary>
            The button type we're currently listening for
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._centerStickPanel">
      <summary>
            The center stick panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._controllerMap">
      <summary>
            The controller map
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._controllerToListenFor">
      <summary>
            The controller to listen for
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._currentConflict">
      <summary>
            The conflict we are currently handling
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._currentCoroutine">
      <summary>
            The current coroutine
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._inputMapper">
      <summary>
            The input mapper
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._label">
      <summary>
            The label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._row">
      <summary>
            The row we're currently listening for
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._timerText">
      <summary>
            The timer text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.BindInputDialogScript._title">
      <summary>
            The title
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.BindInputDialogScript.ActionCategory">
      <summary>
            Gets or sets the action category.
            </summary>
      <value>
            The action category.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.BindInputDialogScript.CancelButton">
      <summary>
            Gets the cancel button.
            </summary>
      <value>
            The cancel button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.BindInputDialogScript.CenterButton">
      <summary>
            Gets the center button.
            </summary>
      <value>
            The center button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.BindInputDialogScript.CenterButtonText">
      <summary>
            Gets the center button text.
            </summary>
      <value>
            The center button text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.BindInputDialogScript.MessageText">
      <summary>
            Gets or sets the message text.
            </summary>
      <value>
            The message text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.BindInputDialogScript.RightButton">
      <summary>
            Gets the right button.
            </summary>
      <value>
            The right button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.BindInputDialogScript.RightButtonText">
      <summary>
            Gets the right button text.
            </summary>
      <value>
            The right button text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.BindInputDialogScript.WaitTime">
      <summary>
            Gets or sets the time to wait for axes to be centered
            </summary>
      <value>
            The wait time.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.Create(UnityEngine.Transform,Assets.Scripts.Ui.Settings.ControlSettingsRowScript,Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RowButtonType,Rewired.Controller,System.String)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent.</param>
      <param name="row">The row we're listening for.</param>
      <param name="buttonType">Type of the button we're listening for.</param>
      <param name="controllerToListenFor">The controller to listen for.</param>
      <param name="actionCategory">The action category of the row.</param>
      <returns>
            The dialog script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.ShowCenterAxesImage(System.Boolean)">
      <summary>
            Shows the center axes image.
            </summary>
      <param name="show">if set to <c>true</c> [show].</param>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.WaitFor(System.Single,System.Action,System.Boolean)">
      <summary>
            Waits for specified time
            </summary>
      <param name="time">The time to wait.</param>
      <param name="onComplete">The on complete.</param>
      <param name="skipWaitOnButtonUp">if set to <c>true</c> [skip wait on button up].</param>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.BindMode">
      <summary>
            Mode for binding an action
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.ConflictMode(Rewired.InputMapper.ConflictFoundEventData)">
      <summary>
            Conflicts the mode.
            </summary>
      <param name="conflictData">The conflict data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.HandleConflict(Rewired.InputMapper.ConflictFoundEventData)">
      <summary>
            Handles the conflict.
            </summary>
      <param name="conflictData">The conflict data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.IsElementAllowed(Rewired.ControllerPollingInfo)">
      <summary>
            Determines whether the specified element is allowed to be bound to input.
            </summary>
      <param name="element">The element.</param>
      <returns>
        <c>true</c> if the element may be bound to input; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.OnCancelClicked">
      <summary>
            Called when [cancel clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.OnCenterButtonClicked">
      <summary>
            Called when [center button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.OnInputMapped(Rewired.InputMapper.InputMappedEventData)">
      <summary>
            Called when [input mapped].
            </summary>
      <param name="obj">The object.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.OnMappingStopped(Rewired.InputMapper.StoppedEventData)">
      <summary>
            Called when [mapping stopped].
            </summary>
      <param name="obj">The object.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.OnRightButtonClicked">
      <summary>
            Called when [right button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.ReplaceOrRemoveMode">
      <summary>
            For asking the user if they want to replace an existing action map
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.StartListeningForInput(Assets.Scripts.Ui.Settings.ControlSettingsRowScript,Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RowButtonType)">
      <summary>
            Starts the listening for input.
            </summary>
      <param name="row">The row.</param>
      <param name="buttonType">Type of the button.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.BindInputDialogScript.Wait(System.Action,System.Boolean)">
      <summary>
            Waits for the timer to hit zero
            </summary>
      <param name="onComplete">The callback to call on complete.</param>
      <param name="skipWaitOnButtonUp">if set to <c>true</c> [skip wait on button up].</param>
      <returns>
            Yielded return value
            </returns>
    </member>
    <member name="T:Assets.Scripts.Ui.CalibrateControllerDialogScript">
      <summary>
            Dialog script for calibrating inputs
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript.PrimaryButtonClass">
      <summary>
            The primary button class
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._axes">
      <summary>
            The axes
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._axisButtonTemplate">
      <summary>
            The axis button template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._calibratedZero">
      <summary>
            The calibrated zero
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._controllerToCalibrate">
      <summary>
            The controller to calibrate
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._deadZone">
      <summary>
            The dead zone
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._deadZoneSlider">
      <summary>
            The dead zone slider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._gameInputArrow">
      <summary>
            The game input arrow
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._inputArrowsParent">
      <summary>
            The input arrows parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._invertToggle">
      <summary>
            The invert toggle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._itemsParent">
      <summary>
            The items parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._rawInputArrow">
      <summary>
            The raw input arrow
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._selectedAxis">
      <summary>
            The selected axis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._sensitivitySlider">
      <summary>
            The sensitivity slider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.CalibrateControllerDialogScript._zeroSlider">
      <summary>
            The zero slider
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.Create(UnityEngine.Transform,Rewired.Controller)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent.</param>
      <param name="controllerToCalibrate">The controller to calibrate.</param>
      <returns>
            The dialog script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.CreateAxisButton(System.String)">
      <summary>
            Creates the axis button.
            </summary>
      <param name="axisName">Name of the axis.</param>
      <returns>The axis button XmlElement</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.OnAxisClicked(Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis)">
      <summary>
            Called when [axis clicked].
            </summary>
      <param name="axis">The axis.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.OnCalibrateClicked">
      <summary>
            Called when [calibrate clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.OnDeadZoneSliderChanged(System.Single)">
      <summary>
            Called when [dead zone slider changed].
            </summary>
      <param name="value">The new value of the dead zone slider.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.OnDoneButtonClicked">
      <summary>
            Called when [done button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.OnInvertChanged(System.Boolean)">
      <summary>
            Called when [invert changed].
            </summary>
      <param name="invert">if set to <c>true</c> [invert].</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.OnRestoreDefaultsButtonClicked">
      <summary>
            Called when [restore defaults button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.OnSensitivitySliderChanged(System.Single)">
      <summary>
            Called when [sensitivity slider changed].
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.OnZeroSliderChanged(System.Single)">
      <summary>
            Called when [zero slider changed].
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.SetCalibratedZero(Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis,System.Single)">
      <summary>
            Sets the calibrated zero, and sets calibrated zero UI elements.
            </summary>
      <param name="axis">The axis.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.SetDeadZone(Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis,System.Single)">
      <summary>
            Sets the dead zone for the given axis, and sets dead zone UI elements.
            </summary>
      <param name="axis">The axis to set the dead zone of.</param>
      <param name="value">The value to set the dead zone to.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.SetSelectedAxis(Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis)">
      <summary>
            Sets the selected axis.
            </summary>
      <param name="axis">The axis.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.SetSensitivity(Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis,System.Single)">
      <summary>
            Sets the sensitivity of the given axis, and sets sensitivity UI elements.
            </summary>
      <param name="axis">The axis.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.Update">
      <summary>
            Unity Update method, called every frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.UpdateUI">
      <summary>
            Updates the UI with the latest axis calibration data
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.CalibrateControllerDialogScript.UpdateUIInFrames(System.Int32)">
      <summary>
            Updates the UI in frames.
            </summary>
      <param name="framesToWait">The frames to wait.</param>
      <returns>Yielded WaitForEndOfFrames</returns>
    </member>
    <member name="T:Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis">
      <summary>
            Axis access class
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis.Button">
      <summary>
            Gets or sets the button.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis.Calibration">
      <summary>
            Gets or sets the calibration.
            </summary>
      <value>
            The calibration.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis.InputAxis">
      <summary>
            Gets or sets the input axis.
            </summary>
      <value>
            The axis.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis.Joystick">
      <summary>
            Gets or sets the joystick.
            </summary>
      <value>
            The joystick.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.CalibrateControllerDialogScript.Axis.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="T:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript">
      <summary>
            The script for the control settings dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.PrimaryButtonClass">
      <summary>
            The primary button class
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._calibrateButton">
      <summary>
            The calibrate button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._categorySeparatorTemplate">
      <summary>
            The category separator template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._controlCategories">
      <summary>
            The control categories
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._controlCategoriesPanel">
      <summary>
            The control categories panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._controllerSpinner">
      <summary>
            The controller spinner
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._currentBindInputDialogForListening">
      <summary>
            The current bind input dialog for listening
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._currentCalibrator">
      <summary>
            The current calibrator
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._itemContextMenu">
      <summary>
            The item context menu
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._itemsParent">
      <summary>
            The items parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._rows">
      <summary>
            The rows
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._rowTemplate">
      <summary>
            The row template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._selectedController">
      <summary>
            The selected controller
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._sensitivitySlider">
      <summary>
            The sensitivity slider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript._separators">
      <summary>
            The separators
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RowButtonType">
      <summary>
            Types of row buttons
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RowButtonType.Keyboard">
      <summary>
            The keyboard button type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RowButtonType.KeyboardAlternate">
      <summary>
            The keyboard alternate button type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RowButtonType.Controller">
      <summary>
            The controller button type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RowButtonType.None">
      <summary>
            No button type
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.CurrentlyBindingInput">
      <summary>
            Gets a value indicating whether we are currently binding an input.
            </summary>
      <value>
        <c>true</c> if we are currently binding an input; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.SelectedCategory">
      <summary>
            Gets or sets the selected category.
            </summary>
      <value>
            The selected category.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.Create(UnityEngine.Transform)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent.</param>
      <returns>The dialog script.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.GetActionElementMapForRow(Rewired.ControllerMap,Assets.Scripts.Ui.Settings.ControlSettingsRowScript,Rewired.Controller,System.Int32)">
      <summary>
            Gets the action element map for row.
            </summary>
      <param name="controllerMap">The controller map.</param>
      <param name="row">The row.</param>
      <param name="controller">The controller.</param>
      <param name="ignoreNumber">How many valid inputs to ignore before returning one</param>
      <returns>
            The action element map for the row script from the controller map
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.BuildRows(UI.Xml.XmlElement)">
      <summary>
            Builds the rows for category. Discards previously built rows.
            </summary>
      <param name="category">The category to build rows for.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.CreateRow(System.String)">
      <summary>
            Creates the item.
            </summary>
      <param name="actionName">Name of the action.</param>
      <returns>
            The item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.CreateSeparator(System.String)">
      <summary>
            Creates the separator.
            </summary>
      <param name="subCategoryName">Name of the sub category.</param>
      <returns>The XmlElement of the separator</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.InputMapped(Rewired.InputMapper.InputMappedEventData,Assets.Scripts.Ui.Settings.ControlSettingsRowScript,Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RowButtonType)">
      <summary>
            Called after input mapped, updates text of the mapped input
            </summary>
      <param name="obj">The object.</param>
      <param name="mappedRow">The mapped row.</param>
      <param name="buttonType">Type of the button that was mapped.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.ListenForAddControllerInput">
      <summary>
            Listens for add controller input.
            </summary>
      <returns>Yielded WaitForEndOfFrames</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.LoadRowInputsForController(Rewired.Controller)">
      <summary>
            Loads the row inputs for controller.
            </summary>
      <param name="controller">The controller.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.LoadRowInputsForKeyboard">
      <summary>
            Loads the row inputs for keyboard.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnAddControllerClicked">
      <summary>
            Called when [add controller clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnBindingClicked(Assets.Scripts.Ui.Settings.ControlSettingsRowScript,Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RowButtonType)">
      <summary>
            Called when [controller binding clicked].
            </summary>
      <param name="row">The row.</param>
      <param name="buttonType">Type of the button clicked.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnCalibrateButtonClicked">
      <summary>
            Called when [calibrate button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnCategoryClicked(UI.Xml.XmlElement)">
      <summary>
            Called when [category clicked].
            </summary>
      <param name="category">The category which was clicked.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnContextMenuButtonClicked">
      <summary>
            Called when the context menu button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnControllerChanged(System.String)">
      <summary>
            Called when [controller changed].
            </summary>
      <param name="obj">The object.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnControllerConnected(Rewired.ControllerStatusChangedEventArgs)">
      <summary>
            Called by the <see cref="E:ControllerConnected" /> event.
            </summary>
      <param name="obj">The <see cref="T:Rewired.ControllerStatusChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnControllerPreDisconnectEvent(Rewired.ControllerStatusChangedEventArgs)">
      <summary>
            Raises the <see cref="E:ControllerPreDisconnectEvent" /> event.
            </summary>
      <param name="obj">The <see cref="T:Rewired.ControllerStatusChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnDoneButtonClicked">
      <summary>
            Called when the okay button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnInputSensitivityChanged(System.Single)">
      <summary>
            Called when [input sensitivity changed].
            </summary>
      <param name="sensitivity">The sensitivity.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnRemoveControllerClicked">
      <summary>
            Called when [remove controller clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnRestoreDefaultsButtonClicked">
      <summary>
            Called when [restore defaults button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.OnRowInvertChanged(Assets.Scripts.Ui.Settings.ControlSettingsRowScript,System.Boolean)">
      <summary>
            Called when [row invert changed].
            </summary>
      <param name="row">The row.</param>
      <param name="inverted">if set to <c>true</c> [inverted].</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.RestoreDefaults(ModApi.Ui.MessageDialogScript)">
      <summary>
            Restores the default input settings
            </summary>
      <param name="dialog">The message dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsDialogScript.SetSelectedSensitivityType(System.Boolean)">
      <summary>
            Sets the type of the sensitivity.
            </summary>
      <param name="mouse">if set to <c>true</c> [mouse].</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Settings.ControlSettingsRowScript">
      <summary>
            Manages a row in the control settings dialog.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsRowScript._invertAxisIcon">
      <summary>
            The invert axis icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsRowScript._keyboardButtons">
      <summary>
            The keyboard controls
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.ControlSettingsRowScript._supportsAxisInvert">
      <summary>
            The supports axis invert flag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.#ctor(UI.Xml.XmlElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Settings.ControlSettingsRowScript" /> class.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.Action">
      <summary>
            Gets or sets the action.
            </summary>
      <value>
            The action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.ActionNameText">
      <summary>
            Gets or sets the action name text.
            </summary>
      <value>
            The action name text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.AxisDirection">
      <summary>
            Gets or sets the axis direction.
            </summary>
      <value>
            The axis direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.ControllerButton">
      <summary>
            Gets the controller button.
            </summary>
      <value>
            The controller button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.ControllerText">
      <summary>
            Gets or sets the controller text.
            </summary>
      <value>
            The controller text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.InputMappedEvent">
      <summary>
            Gets or sets the input mapped event.
            </summary>
      <value>
            The input mapped event.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.InvertChangedEvent">
      <summary>
            Gets or sets the invert changed event.
            </summary>
      <value>
            The invert changed event.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.Inverted">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Settings.ControlSettingsRowScript" /> is inverted.
            </summary>
      <value>
        <c>true</c> if inverted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.IsAxis">
      <summary>
            Gets or sets a value indicating whether this instance is axis.
            </summary>
      <value>
        <c>true</c> if this instance is axis; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.KeyboardAlternateButton">
      <summary>
            Gets the keyboard alternate button.
            </summary>
      <value>
            The keyboard alternate button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.KeyboardAlternateText">
      <summary>
            Gets or sets the keyboard alternate text.
            </summary>
      <value>
            The keyboard alternate text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.KeyboardButton">
      <summary>
            Gets the keyboard button.
            </summary>
      <value>
            The keyboard button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.KeyboardText">
      <summary>
            Gets or sets the keyboard text.
            </summary>
      <value>
            The keyboard text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.MappingType">
      <summary>
            Gets or sets the type we are currently mapping.
            </summary>
      <value>
            The type of the mapping.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.XmlElement">
      <summary>
            Gets the XML element.
            </summary>
      <value>
            The XML element.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.Initialize(UI.Xml.XmlElement)">
      <summary>
            Initializes the specified element.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.OnInputMapped(Rewired.InputMapper.InputMappedEventData)">
      <summary>
            Called when [input mapped event].
            </summary>
      <param name="obj">The object.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.OnMappingStopped(Rewired.InputMapper.StoppedEventData)">
      <summary>
            Called when [mapping canceled].
            </summary>
      <param name="obj">The object.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.ControlSettingsRowScript.OnAxisInvertClicked">
      <summary>
            Called when the axis invert is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Settings.SettingsDialogScript">
      <summary>
            The script for the settings dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript.CustomPresetName">
      <summary>
            The custom preset name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript.DiscardOrApplyMessage">
      <summary>
            The message displayed when a user tries to change settings tab with pending changes in the current tab.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript.PrimaryButtonClass">
      <summary>
            The primary button class
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._applyButton">
      <summary>
            The apply button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._cancelButton">
      <summary>
            The cancel button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._categories">
      <summary>
            The categories
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._categoriesPendingChanges">
      <summary>
            The categories pending changes
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._categoryHeaderTemplate">
      <summary>
            The category header template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._closeButton">
      <summary>
            The close button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._currentSettingsCategories">
      <summary>
            The current settings categories
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._discardButton">
      <summary>
            The discard button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._dropdownTemplate">
      <summary>
            The dropdown template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._itemsParent">
      <summary>
            The items parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._layoutTemplate">
      <summary>
            The layout template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._refreshScrollRectViewPort">
      <summary>
            The refresh scroll rect view port flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._scrollRectViewPort">
      <summary>
            The scroll rect's viewport.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._settingCategoryButtons">
      <summary>
            The setting category buttons
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._sliderTemplate">
      <summary>
            The slider template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._spinnerTemplate">
      <summary>
            The spinner template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._textInputTemplate">
      <summary>
            The text input template.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Settings.SettingsDialogScript._toggleTemplate">
      <summary>
            The toggle template
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.SettingsDialogScript.PendingChanges">
      <summary>
            Gets a value indicating whether we currently have pending changes
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.Create(UnityEngine.Transform)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent.</param>
      <returns>The dialog script.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.BuildCategories(System.Collections.Generic.List{ModApi.Settings.Core.SettingsCategory})">
      <summary>
            Builds the categories.
            </summary>
      <param name="categories">The categories.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.ChangeResolutionSetting(ModApi.Settings.Core.ResolutionSetting,System.String,TMPro.TMP_Dropdown,System.Int32)">
      <summary>
            Changes the resolution setting.
            </summary>
      <param name="setting">The setting to change.</param>
      <param name="resolutionWH">The resolution width and height in format separated as: "width x height".</param>
      <param name="resolutionDropdown">The resolution dropdown for the setting.</param>
      <param name="refreshRate">The refresh rate.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.CreateCategoryHeader(ModApi.Settings.Core.SettingsCategory)">
      <summary>
            Creates the header.
            </summary>
      <param name="category">Category to create header for.</param>
      <returns>The XmlElement of the separator</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.CreateCategoryUi(ModApi.Settings.Core.SettingsCategory)">
      <summary>
            Creates the category UI.
            </summary>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.CreateSettingElement(Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi,ModApi.Settings.Core.Setting)">
      <summary>
            Creates the setting element.
            </summary>
      <param name="category">The category to add the setting element to.</param>
      <param name="setting">The setting.</param>
      <returns>
            The setting element
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.CreateSettingUi(Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi,ModApi.Settings.Core.Setting)">
      <summary>
            Creates the setting UI.
            </summary>
      <param name="category">The category to add the setting element to.</param>
      <param name="setting">The setting.</param>
      <returns>
            The setting UI
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.FinalizeApply">
      <summary>
            Finalizes the apply.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.GetSelectedCategories">
      <summary>
            Gets the selected categories.
            </summary>
      <returns>Categories of selected settings</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.OnApplyButtonClicked">
      <summary>
            Called when [apply button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.OnButtonCategoryClicked(UI.Xml.XmlElement)">
      <summary>
            Called when [button category clicked].
            </summary>
      <param name="button">The button that was clicked.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.OnCancelButtonClicked">
      <summary>
            Called when [cancel button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.OnCloseButtonClicked">
      <summary>
            Called when [close button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.OnControlsButtonClicked">
      <summary>
            Called when [controls button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.OnDiscardButtonClicked">
      <summary>
            Called when [discard button clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.OnDoneButtonClicked">
      <summary>
            Called when the okay button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.OnSettingChanged(ModApi.Settings.Core.Setting)">
      <summary>
            Called when [setting changed].
            </summary>
      <param name="setting">The setting.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.SetCategoryPreset(ModApi.Settings.Core.SettingsCategory,System.String)">
      <summary>
            Sets the category preset.
            </summary>
      <param name="category">The category.</param>
      <param name="presetString">The preset string.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.SetPendingChanges(ModApi.Settings.Core.SettingsCategory,System.Boolean)">
      <summary>
            Sets the pending changes.
            </summary>
      <param name="pendingCategory">The pending category.</param>
      <param name="pendingChanges">if set to <c>true</c> [pending changes].</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi">
      <summary>
            Class to hold information about a category and it's UI.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.Arrow">
      <summary>
            Gets or sets the arrow.
            </summary>
      <value>
            The arrow.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.Category">
      <summary>
            Gets or sets the category.
            </summary>
      <value>
            The category.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.Header">
      <summary>
            Gets or sets the header.
            </summary>
      <value>
            The header.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.Layout">
      <summary>
            Gets or sets the layout.
            </summary>
      <value>
            The layout.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.PresetSpinner">
      <summary>
            Gets or sets the preset spinner.
            </summary>
      <value>
            The preset spinner.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.SettingElements">
      <summary>
            Gets or sets the setting elements.
            </summary>
      <value>
            The setting elements.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.Collapse">
      <summary>
            Collapses this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.Destruct">
      <summary>
            Destructs this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.Expand">
      <summary>
            Expands this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Settings.SettingsDialogScript.CategoryUi.ToggleCollapsed">
      <summary>
            Toggles the collapsed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Settings.SettingsDialogScript.SettingUi">
      <summary>
            Class to hold information about a setting and it's UI.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.SettingsDialogScript.SettingUi.Setting">
      <summary>
            Gets or sets the setting.
            </summary>
      <value>
            The setting.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Settings.SettingsDialogScript.SettingUi.SettingElement">
      <summary>
            Gets or sets the setting element.
            </summary>
      <value>
            The setting element.
            </value>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData">
      <summary>
            Provides data about an album in a photo library.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData._photos">
      <summary>
            The photos
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData" /> class.
            </summary>
      <param name="name">The name.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData.HasThumbnail">
      <summary>
            Gets a value indicating whether this instance has thumbnail.
            </summary>
      <value>
        <c>true</c> if this instance has thumbnail; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData.Photos">
      <summary>
            Gets the photos.
            </summary>
      <value>
            The photos.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData.ThumbnailPhoto">
      <summary>
            Gets the thumbnail photo, or null if the album does not currently have a thumbnail photo.
            </summary>
      <value>
            The thumbnail photo.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData.AddPhoto(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData)">
      <summary>
            Adds the photo.
            </summary>
      <param name="photo">The photo.</param>
      <exception cref="T:System.InvalidOperationException">The album already contains the photo.</exception>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData.RemovePhoto(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData)">
      <summary>
            Removes the photo.
            </summary>
      <param name="photo">The photo.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData.SetThumbnailPhoto(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData)">
      <summary>
            Sets the thumbnail photo.
            </summary>
      <param name="photo">The photo.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel">
      <summary>
            Handles updating the details panel on the photo library dialog.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._albumDetails">
      <summary>
            The album details
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._detailsAlbumCount">
      <summary>
            The details album count
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._detailsAlbumSize">
      <summary>
            The details album size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._detailsPanel">
      <summary>
            The details panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._detailsPhotoDate">
      <summary>
            The details photo date
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._detailsPhotoDescription">
      <summary>
            The details photo description
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._detailsPhotoDimensions">
      <summary>
            The details photo dimensions.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._detailsPhotoLocation">
      <summary>
            The details photo location
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._detailsPhotoSize">
      <summary>
            The details photo size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._dialog">
      <summary>
            The dialog
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._item">
      <summary>
            The item
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._itemsPanel">
      <summary>
            The items panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel._photoDetails">
      <summary>
            The photo details
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel.#ctor(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript,UI.Xml.XmlLayout)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel" /> class.
            </summary>
      <param name="dialog">The dialog.</param>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel.OnSelectedItemChanged(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript)">
      <summary>
            Called when the selected item has changed.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel.SaveDescription">
      <summary>
            Saves the description.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel.UpdateAlbumDetails(Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData)">
      <summary>
            Updates the album details.
            </summary>
      <param name="album">The album.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.DetailsPanel.UpdatePhotoDetails(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData)">
      <summary>
            Updates the photo details.
            </summary>
      <param name="photo">The photo.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageClipboardUtility">
      <summary>
            Utility class for copying an image to the clipboard.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageClipboardUtility.ExecutableName">
      <summary>
            The executable name of the utility application.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageClipboardUtility.CopyImageResult">
      <summary>
            The results from a CopyImageToClipboard call.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageClipboardUtility.CopyImageResult.Succeeded">
      <summary>
            The copy succeeded
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageClipboardUtility.CopyImageResult.Failed">
      <summary>
            The copy failed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageClipboardUtility.CopyImageResult.NotSupported">
      <summary>
            Copying the image to the clipboard is not supported on this platform.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageClipboardUtility.CopyImageToClipboard(System.String)">
      <summary>
            Copies the image to clipboard.
            </summary>
      <param name="imagePath">The image path.</param>
      <returns>
            The result of the image copy.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController">
      <summary>
            Controller for the full screen image viewer.
            </summary>
      <seealso cref="T:UI.Xml.XmlLayoutController" />
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._currentItem">
      <summary>
            The current item
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._details">
      <summary>
            The details
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._detailsDate">
      <summary>
            The details date
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._detailsDescription">
      <summary>
            The details description
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._detailsLocation">
      <summary>
            The details location
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._image">
      <summary>
            The image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._imageContainer">
      <summary>
            The image container
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._indexText">
      <summary>
            The index text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._items">
      <summary>
            The items
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._photoLibraryDialog">
      <summary>
            The photo library dialog
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._selectPhotoAction">
      <summary>
            The select photo action
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController._selectPhotoButton">
      <summary>
            The select photo button
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.IsOpen">
      <summary>
            Gets a value indicating whether this instance is open.
            </summary>
      <value>
        <c>true</c> if this instance is open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.Close(System.Boolean)">
      <summary>
            Closes the viewer.
            </summary>
      <param name="immediate">if set to <c>true</c> then close immediately.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.EnablePhotoSelectButton(System.Action)">
      <summary>
            Enables the photo select button.
            </summary>
      <param name="selectPhotoAction">The select photo action.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.Initialize(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript)">
      <summary>
            Initializes the image viewer.
            </summary>
      <param name="photoLibraryDialog">The photo library dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout has been rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.Open">
      <summary>
            Opens the image viewer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.FindIndexOfItem(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript)">
      <summary>
            Finds the index of item in the list of items.
            </summary>
      <param name="photoListItem">The photo list item.</param>
      <returns>The index.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.OnCloseButtonClicked">
      <summary>
            Called when the close button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.OnDetailsButtonClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the details button is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.OnNextClicked">
      <summary>
            Called when the next button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.OnPreviousClicked">
      <summary>
            Called when the previous button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.OnSelectPhotoClicked">
      <summary>
            Called when the select photo button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.SetImageSize(UnityEngine.Texture2D)">
      <summary>
            Scales the image so that it fills the maximum amount of space in its parent container, while
            still maintaining its correct aspect ratio.
            </summary>
      <param name="texture">The texture.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.SetPhoto(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript)">
      <summary>
            Loads the photo.
            </summary>
      <param name="photoListItem">The photo list item.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.ImageViewerController.UpdateDetails(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData)">
      <summary>
            Updates the details.
            </summary>
      <param name="photo">The photo.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData">
      <summary>
            Provides data about a photo in an album.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.#ctor(System.String,System.String,Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData" /> class.
            </summary>
      <param name="path">The path.</param>
      <param name="thumbnailPath">The thumbnail path.</param>
      <param name="album">The album.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.Album">
      <summary>
            Gets the album.
            </summary>
      <value>
            The album.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.Checksum">
      <summary>
            Gets or sets the checksum.
            </summary>
      <value>
            The checksum.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.DateTaken">
      <summary>
            Gets or sets the date taken, in UTC.
            </summary>
      <value>
            The date taken.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.Description">
      <summary>
            Gets or sets the description.
            </summary>
      <value>
            The description.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.Dimensions">
      <summary>
            Gets or sets the dimensions.
            </summary>
      <value>
            The dimensions.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.FileName">
      <summary>
            Gets the name of the file.
            </summary>
      <value>
            The name of the file.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.GameStateId">
      <summary>
            Gets or sets the ID of the game state that this photo was taken in.
            </summary>
      <value>
            The game state identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.IsAlbumCover">
      <summary>
            Gets or sets a value indicating whether this instance is album cover.
            </summary>
      <value>
        <c>true</c> if this instance is album cover; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.Location">
      <summary>
            Gets or sets the location.
            </summary>
      <value>
            The location.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.Path">
      <summary>
            Gets the path.
            </summary>
      <value>
            The path.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.RelativeDate">
      <summary>
            Gets the relative date.
            </summary>
      <value>
            The relative date.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.SizeInBytes">
      <summary>
            Gets or sets the size in bytes.
            </summary>
      <value>
            The size in bytes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.ThumbnailPath">
      <summary>
            Gets the thumbnail path.
            </summary>
      <value>
            The path.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.CreateFromXml(System.Xml.Linq.XElement,Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData,Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData)">
      <summary>
            Creates the photo data from XML.
            </summary>
      <param name="xml">The photo XML element.</param>
      <param name="album">The album.</param>
      <param name="photoLibraryData">The photo library data.</param>
      <returns>
            The photo data.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.GenerateXml">
      <summary>
            Generates the XML.
            </summary>
      <returns>
            The XML element.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData.Move(Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData)">
      <summary>
            Moves the photo to the new album.
            </summary>
      <param name="newAlbum">The new album.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel">
      <summary>
            Wraps data about a photo or album in a class that can be used in the view.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel.Album">
      <summary>
            Gets or sets the album.
            </summary>
      <value>
            The album.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel.HasValidChecksum">
      <summary>
            Gets a value indicating whether this instance has valid checksum, or null if the
            checksum has not been checked. Calling LoadTexture with the validateChecksum parameter set
            to true will update this property.
            </summary>
      <value>
        <c>true</c> if this instance has valid checksum; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel.IsAlbum">
      <summary>
            Gets a value indicating whether this instance is album.
            </summary>
      <value>
        <c>true</c> if this instance is album; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel.Photo">
      <summary>
            Gets or sets the photo.
            </summary>
      <value>
            The photo.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel.LoadTexture(System.Boolean,System.Boolean)">
      <summary>
            Loads the texture.
            </summary>
      <param name="markNonReadable">if set to <c>true</c> [mark non readable].</param>
      <param name="validateChecksum">if set to <c>true</c> then validate the expected checksum against the
            checksum calculated from the current bytes and update the ValidChecksum property.</param>
      <returns>
            The texture.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel.LoadThumbnailTexture">
      <summary>
            Loads the thumbnail texture.
            </summary>
      <returns>The thumbnail texture.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel.LoadTexture(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData)">
      <summary>
            Loads the texture.
            </summary>
      <param name="photo">The photo.</param>
      <returns>The texture or null if it cannot be found.</returns>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData">
      <summary>
            Provides data about a photo library.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.ThumbnailSize">
      <summary>
            The thumbnail size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.JpegQuality">
      <summary>
            The JPEG quality
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.PhotoLibraryFileName">
      <summary>
            The photo library file name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData._albums">
      <summary>
            The albums
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData._imageFolderPath">
      <summary>
            The image folder path
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData._thumbnailFolderPath">
      <summary>
            The thumbnail folder path
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData._xmlPath">
      <summary>
            The path to the XML file.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData" /> class.
            </summary>
      <param name="rootFolderPath">The root folder path.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.Albums">
      <summary>
            Gets the albums.
            </summary>
      <value>
            The albums.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.CreateAlbum(System.String)">
      <summary>
            Creates the album.
            </summary>
      <param name="albumName">Name of the album.</param>
      <returns>The album.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.CreateNewPhoto(UnityEngine.Texture2D,Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData)">
      <summary>
            Creates the new photo.
            </summary>
      <param name="screenshot">The screenshot.</param>
      <param name="album">The album.</param>
      <returns>
            The photo.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.DeleteAlbum(Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData)">
      <summary>
            Deletes all photos in the album and removes the album from the photo library.
            </summary>
      <param name="album">The album.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.DeletePhoto(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoData)">
      <summary>
            Deletes the photo from the library.
            </summary>
      <param name="photo">The photo.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.GetPhotoImagePath(System.String)">
      <summary>
            Gets the photo's full image path.
            </summary>
      <param name="imageFileName">Name of the image file.</param>
      <returns>
            The path.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.GetPhotoThumbnailPath(System.String)">
      <summary>
            Gets the photo's full thumbnail path.
            </summary>
      <param name="imageFileName">Name of the image file.</param>
      <returns>
            The path.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.Save">
      <summary>
            Saves the photo library xml to file.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryData.CreateDirectoryIfNotExist(System.String)">
      <summary>
            Creates the directory if not exist.
            </summary>
      <param name="path">The path.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript">
      <summary>
            Script for the photo library.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._lastSelectedAlbumName">
      <summary>
            The last selected album name, which is used to auto-select that album when the photo library is opened.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._backButtonPanel">
      <summary>
            The back button panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._bottomPanel">
      <summary>
            The bottom panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._bulkAction">
      <summary>
            The bulk action
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._bulkActionButtonText">
      <summary>
            The bulk action button text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._bulkActionPanel">
      <summary>
            The bulk action panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._bulkActionText">
      <summary>
            The bulk action text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._bulkMovePhotos">
      <summary>
            The photos currently selected to be moved in a bulk move operation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._contextMenuToggleButton">
      <summary>
            The item context menu button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._currentAlbum">
      <summary>
            The currently selected album, or null if they are viewing all albums.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._details">
      <summary>
            The details
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._headerText">
      <summary>
            The header text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._imageViewer">
      <summary>
            The image viewer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._itemContextMenu">
      <summary>
            The item context menu
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._itemQueue">
      <summary>
            The queue of items to work through each frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._itemsParent">
      <summary>
            The items parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._photoLibrary">
      <summary>
            The photo library
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._saveRequired">
      <summary>
            Flag that indicates the photo library needs to be saved.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._screenshotDialog">
      <summary>
            The screenshot dialog
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._scrollRect">
      <summary>
            The scroll rect
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._selectedItem">
      <summary>
            The selected item
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._selectPhotoButton">
      <summary>
            The select photo button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._statusMessagePanel">
      <summary>
            The status message panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._templateAlbum">
      <summary>
            The template album
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._templatePhoto">
      <summary>
            The item template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript._thumbnailQueue">
      <summary>
            The queue of thumbnails to work through each frame.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.PhotoLibraryDialogMode">
      <summary>
            The modes available for the photo library dialog.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.PhotoLibraryDialogMode.Normal">
      <summary>
            The normal mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.PhotoLibraryDialogMode.SelectPhoto">
      <summary>
            The user is selecting a photo to be used from a calling
            function.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.PhotoLibraryDialogMode.ViewOnly">
      <summary>
            Photos can be viewed, but the player cannot take any additional photos.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.BulkAction">
      <summary>
            The available bulk action types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.BulkAction.None">
      <summary>
            The none
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.BulkAction.Move">
      <summary>
            The move
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.BulkAction.Delete">
      <summary>
            The delete
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.BulkAction.FinishMove">
      <summary>
            Used when the player is selected what album to move photos into
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.Mode">
      <summary>
            Gets the mode.
            </summary>
      <value>
            The mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnPhotoSelected">
      <summary>
            Gets or sets the action to call when the player has selected a photo.
            </summary>
      <value>
            The action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.SelectedItem">
      <summary>
            Gets or sets the selected item.
            </summary>
      <value>
            The selected item.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.Create(UnityEngine.Transform,Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.PhotoLibraryDialogMode)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent to use for this dialog.</param>
      <param name="mode">The desired mode.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.CreateItem(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel,UI.Xml.XmlElement)">
      <summary>
            Creates the item.
            </summary>
      <param name="itemModel">The item model.</param>
      <param name="template">The template.</param>
      <returns>
            The item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.GetItems">
      <summary>
            Gets the items.
            </summary>
      <returns>The items.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.Hide">
      <summary>
            Hides the dialog.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.IsItemVisibleInScrollView(UnityEngine.RectTransform)">
      <summary>
            Determines whether the item is visible in the scroll view.
            </summary>
      <param name="item">The item.</param>
      <returns>
        <c>true</c> if the item visible in the scroll view; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnToggleDetailsPanel(UI.Xml.XmlElement)">
      <summary>
            Called when the toggle details panel is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.QueueThumbnailLoad(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript)">
      <summary>
            Queues the thumbnail load.
            </summary>
      <param name="photoListItemScript">The photo list item script.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.SavePhotoLibrary(System.Boolean)">
      <summary>
            Saves the photo library at the next convenience.
            </summary>
      <param name="immediate">if set to <c>true</c> then save immediately.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.Show">
      <summary>
            Shows this dialog.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.GetPlayerLocation">
      <summary>
            Gets the name of the player's current location for use in a photo's meta-data.
            </summary>
      <returns>The player's location.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.ClearItems">
      <summary>
            Clears the items.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.CreateAlbumConfirmed(ModApi.Ui.InputDialogScript)">
      <summary>
            Called when the create dialog is confirmed.
            </summary>
      <param name="dialog">The dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.DeleteAlbumAsync(Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData,Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript)">
      <summary>
            Deletes the album in the Unity "async" style.
            </summary>
      <param name="album">The album.</param>
      <param name="albumItem">The album item.</param>
      <returns>Unity enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.DeleteItem(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript)">
      <summary>
            Deletes the item.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.EndBulkAction(System.Boolean)">
      <summary>
            Stops the bulk action.
            </summary>
      <param name="deselectItems">if set to <c>true</c> then de-select the items.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.ExecuteBulkActionAsync">
      <summary>
            Executes the bulk action in the Unity "async" style.
            </summary>
      <returns>Unity enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnAddScreenshotClicked">
      <summary>
            Called when the add screenshot button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnBackButtonClicked">
      <summary>
            Called when the back button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnCancelBulkAction">
      <summary>
            Called when cancel bulk action button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnCloseButtonClicked">
      <summary>
            Called when the close button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnContextMenuButtonClicked">
      <summary>
            Called when the context menu button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnCreateAlbumClicked">
      <summary>
            Called when the create album button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnDeleteAlbumClicked">
      <summary>
            Called when the delete album button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnDeletePhotosClicked">
      <summary>
            Called when the delete photos button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnExecuteBulkAction">
      <summary>
            Called when the execute bulk action button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnItemClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the item is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnMovePhotosClicked">
      <summary>
            Called when the move photos button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnRenameAlbumClicked">
      <summary>
            Called when the rename album button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnScreenshotComplete(UnityEngine.Texture2D,Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData)">
      <summary>
            Called when the screenshot is complete.
            </summary>
      <param name="screenshot">The screenshot, or null if no screenshot was taken.</param>
      <param name="album">The album.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnSelectPhotoClicked">
      <summary>
            Called when the select photo button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.OnSetAlbumCoverClicked">
      <summary>
            Called when the set album cover button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.ProcessQueues">
      <summary>
            Processes the queues.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.RenameAlbumConfirmed(ModApi.Ui.InputDialogScript,Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript,Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData)">
      <summary>
            Called when the user has clicked confirm on the rename album dialog.
            </summary>
      <param name="dialog">The dialog.</param>
      <param name="selectedItem">The selected item.</param>
      <param name="album">The album.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.ScrollToTop">
      <summary>
            Scrolls to the top.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.ShowStatusMessage(System.String)">
      <summary>
            Shows the status message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.StartBulkAction(Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.BulkAction)">
      <summary>
            Starts a bulk action.
            </summary>
      <param name="bulkAction">The bulk action.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.UpdateBulkActionText">
      <summary>
            Updates the bulk action text.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.UpdateContextMenu">
      <summary>
            Updates the context menu.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.ViewAlbumPhotos(Assets.Scripts.Ui.Sharing.PhotoLibrary.AlbumData)">
      <summary>
            Views the album photos.
            </summary>
      <param name="album">The album.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript.ViewAlbums">
      <summary>
            Views the albums.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript">
      <summary>
            Script added to a photo/album in the photo library dialog.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript._bulkSelected">
      <summary>
            The bulk selected flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript._dialog">
      <summary>
            The dialog
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript._loaded">
      <summary>
            The loaded
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript._selected">
      <summary>
            The selected flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript.BulkSelected">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript" /> is bulk selected.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript.ItemModel">
      <summary>
            Gets the item model.
            </summary>
      <value>
            The item model.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript.RawImage">
      <summary>
            Gets the raw image.
            </summary>
      <value>
            The raw image.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript.Selected">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript" /> is selected.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript.XmlElement">
      <summary>
            Gets the XML element.
            </summary>
      <value>
            The XML element.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript.Initialize(UI.Xml.XmlElement,Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoItemModel,Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoLibraryDialogScript)">
      <summary>
            Initializes the specified element.
            </summary>
      <param name="element">The element.</param>
      <param name="itemModel">The item model.</param>
      <param name="dialog">The dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript.LoadThumbnail">
      <summary>
            Loads the thumbnail.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript.UpdateAlbumText">
      <summary>
            Updates the album text.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.PhotoLibrary.PhotoListItemScript.Update">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect">
      <summary>
            Applies a depth of field effect to the camera in the screenshot dialog.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect._camera">
      <summary>
            The camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect._depthOfField">
      <summary>
            The depth of field
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect._enabled">
      <summary>
            The enabled flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect._focalTransform">
      <summary>
            The focal transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect._layout">
      <summary>
            The layout
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect._sliderAperture">
      <summary>
            The slider aperture
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect._sliderFocalSize">
      <summary>
            The slider focal size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect._targetPosition">
      <summary>
            The target position
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.#ctor(UI.Xml.XmlLayout)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect" /> class.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.Available">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect" /> is available.
            </summary>
      <value>
        <c>true</c> if available; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.Enabled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect" /> is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.Activate">
      <summary>
            Activates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.Deactivate">
      <summary>
            Deactivates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.GetCamera">
      <summary>
            Gets the camera for the current scene.
            </summary>
      <returns>The camera</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.OnApertureSliderChanged(System.Single)">
      <summary>
            Called when the aperture slider has changed.
            </summary>
      <param name="x">The x.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.OnFocalSizeSliderChanged(System.Single)">
      <summary>
            Called when the focal size slider has changed.
            </summary>
      <param name="x">The x.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.DepthOfFieldEffect.UpdateDepthOfField">
      <summary>
            Updates the depth of field.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript">
      <summary>
            Script for the screenshot dialog UI.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript._backupCameraRenderTexture">
      <summary>
            The backup camera render texture
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript._backupGlobalRenderTexture">
      <summary>
            The backup global render texture
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript._depthOfFieldEffect">
      <summary>
            The depth of field effect
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript._designerScript">
      <summary>
            The designer script, when the dialog is created in the designer. Otherwise this will be null.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript._layout">
      <summary>
            The layout
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript._mainPanel">
      <summary>
            The main panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript._orientation">
      <summary>
            The orientation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript._userInterfaceVisible">
      <summary>
            The user interface visible flag.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.ScreenshotOrientation">
      <summary>
            The available orientations for the screenshot
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.ScreenshotOrientation.Landscape">
      <summary>
            The landscape
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.ScreenshotOrientation.Portrait">
      <summary>
            The portrait
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.ScreenshotOrientation.Square">
      <summary>
            The square
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.OnScreenshotComplete">
      <summary>
            Gets or sets the action to execute after the user is finished taking a screenshot. The Texture2D
            argument will contain the texture. If the user canceled the Texture2d argument will be null.
            </summary>
      <value>
            The action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.Orientation">
      <summary>
            Gets or sets the orientation.
            </summary>
      <value>
            The orientation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.RequireSquareOrientation">
      <summary>
            Gets or sets a value indicating whether the screenshot should require the square orientation and not
            allow the user to change it.
            </summary>
      <value>
        <c>true</c> if [force square orientation]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.ScreenshotHeight">
      <summary>
            Gets the height of the screenshot.
            </summary>
      <value>
            The height of the screenshot.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.ScreenshotWidth">
      <summary>
            Gets the width of the screenshot.
            </summary>
      <value>
            The width of the screenshot.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.Create(UnityEngine.Transform)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent transform use for this dialog.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.TakeScreenShotWithCamera(UnityEngine.Camera,System.Int32,System.Int32,System.Boolean,System.Nullable{UnityEngine.Rect})">
      <summary>
            Takes the screen shot with camera.
            </summary>
      <param name="camera">The camera.</param>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <param name="allowTransparency">if set to <c>true</c> [allow transparency].</param>
      <param name="sampleRect">The sample rect.</param>
      <returns>The texture</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.Activate">
      <summary>
            Activates the screenshot UI.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.Close">
      <summary>
            Closes the dialog.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.Deactivate">
      <summary>
            Deactivates the screenshot UI.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.Hide">
      <summary>
            Hides this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.Show">
      <summary>
            Shows this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.PrepareCamera(UnityEngine.Camera,System.Int32,System.Int32)">
      <summary>
            Prepares the camera.
            </summary>
      <param name="camera">The camera.</param>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.RestoreCameraSettings(UnityEngine.Camera)">
      <summary>
            Restores the camera settings.
            </summary>
      <param name="camera">The camera.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.AdjustGuides">
      <summary>
            Adjusts the guides.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.OnBackClicked">
      <summary>
            Called when the back button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.OnDepthOfFieldClicked">
      <summary>
            Called when the depth of field button is clickced.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.OnLandscapeClicked">
      <summary>
            Called when the landscape button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.OnPortraitClicked">
      <summary>
            Called when the portrait button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.OnScreenshotClicked">
      <summary>
            Called when the screenshot button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.OnSquareClicked">
      <summary>
            Called when the square button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.OnToggleUiClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the toggle UI button is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.SetSceneUiVisibility(System.Boolean)">
      <summary>
            Sets the visibility of the UI in the current scene.
            </summary>
      <param name="visible">if set to <c>true</c> then make the UI visible, otherwise hide it.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.UpdateOrientation">
      <summary>
            Updates the orientation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotDialogScript.UpdateOrientationButton(System.String,System.Boolean)">
      <summary>
            Updates the orientation button with the toggled class.
            </summary>
      <param name="buttonId">The button identifier.</param>
      <param name="toggled">if set to <c>true</c> [toggled].</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotGuideScript">
      <summary>
            Script for guides on the edges of the ScreenshotUi.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotGuideScript.ScreenshotGuideType">
      <summary>
            The types of screenshot guides.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotGuideScript.ScreenshotGuideType.TopBottom">
      <summary>
            The guide is on the top or bottom.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotGuideScript.ScreenshotGuideType.LeftRight">
      <summary>
            The guide is on the left or right.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotGuideScript.AspectRatio">
      <summary>
            Gets or sets the aspect ratio (width over height).
            </summary>
      <value>
            The aspect ratio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotGuideScript.GuideType">
      <summary>
            Gets or sets the type of the guide.
            </summary>
      <value>
            The type of the guide.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotGuideScript.Update">
      <summary>
            Update is called once per frame
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController">
      <summary>
            Controller for an upload screenshots list on an upload dialog, such as the Upload Craft dialog.
            </summary>
      <seealso cref="T:UI.Xml.XmlLayoutController" />
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController._dialogTransform">
      <summary>
            The dialog transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController._numOptionalScreenshots">
      <summary>
            The number optional screenshots
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController._photoLibraryDialog">
      <summary>
            The photo library dialog
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController._primaryThumbnail">
      <summary>
            The primary thumbnail
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController._primaryThumbnailDeleteButton">
      <summary>
            The primary thumbnail delete button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController._screenshotDialog">
      <summary>
            The screenshot dialog
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController._thumbnailActions">
      <summary>
            The thumbnail actions
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController._thumbnailTemplate">
      <summary>
            The thumbnail template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController._verticalLayout">
      <summary>
            The vertical layout
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.HasPrimaryThumbnail">
      <summary>
            Gets a value indicating whether this instance has a primary thumbnail.
            </summary>
      <value>
        <c>true</c> if this instance has primary thumbnail; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.MasOptionalScreenshots">
      <summary>
            Gets the mas optional screenshots.
            </summary>
      <value>
            The mas optional screenshots.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.ValidChecksums">
      <summary>
            Gets a value indicating whether all photos have valid checksums.
            </summary>
      <value>
        <c>true</c> if [valid checksums]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.GetTextures">
      <summary>
            Gets the textures.
            </summary>
      <returns>The list of textures.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.Initialize(UnityEngine.Transform,System.Int32)">
      <summary>
            Initializes the screenshot list controller.
            </summary>
      <param name="dialogTransform">The dialog transform.</param>
      <param name="maxOptionalScreenshots">The maximum optional screenshots.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout has been rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.OnDialogClosed">
      <summary>
            Called when the parent dialog is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.OnLoadPhotoClicked">
      <summary>
            Called when the load photo is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.OnNewPhotoClicked">
      <summary>
            Called when the add screenshot button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.OnScreenshotComplete(UnityEngine.Texture2D,System.Boolean,System.Boolean)">
      <summary>
            Called when the screenshot complete.
            </summary>
      <param name="texture">The texture, or null if no screenshot was taken.</param>
      <param name="primaryThumbnail">if set to <c>true</c> [primary thumbnail].</param>
      <param name="validChecksum">if set to <c>true</c> [valid checksum].</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.OnScreenshotDeleteClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the screenshot delete button is clicked.
            </summary>
      <param name="xmlElement">The XML element.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.OnTakeThumbnail">
      <summary>
            Called when the take thumbnail is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.UpdateScreenshotActionsVisibility">
      <summary>
            Updates the screenshot actions visibility.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Screenshot.ScreenshotListController.UpdateTexture(UnityEngine.UI.RawImage,UnityEngine.Texture2D)">
      <summary>
            Updates the texture.
            </summary>
      <param name="rawImage">The raw image.</param>
      <param name="texture">The texture.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Upload.BugReport.UploadBugReportViewModel">
      <summary>
            View model for the upload sandbox dialog.
            </summary>
      <seealso cref="T:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel" />
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.BugReport.UploadBugReportViewModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.Upload.BugReport.UploadBugReportViewModel" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.BugReport.UploadBugReportViewModel.CreateWebRequest(Assets.Scripts.Ui.Sharing.Upload.UploadContentModel)">
      <summary>
            Creates the web request.
            </summary>
      <param name="model">The model.</param>
      <returns>The web request.</returns>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Upload.Craft.CraftDetailsHelper">
      <summary>
            Helper class for generating details about a craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.CraftDetailsHelper.GenerateCraftDetails(ModApi.Craft.ICraftScript)">
      <summary>
            Generates the craft details.
            </summary>
      <param name="craftScript">The craft script.</param>
      <returns>
            The craft details.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.CraftDetailsHelper.GenerateStagingDetailsXml(ModApi.Craft.ICraftScript,Web.Client.Models.SimpleRockets.CraftDetailsModel)">
      <summary>
            Generates the staging details XML.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="craftDetails">The craft details.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Upload.Craft.OrthoScreenshotHelper">
      <summary>
            Helper class to render orthographic screenshots of the craft for the upload craft dialog.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.Craft.OrthoScreenshotHelper.FrontScreenshotTexture">
      <summary>
            Gets the front screenshot texture.
            </summary>
      <value>
            The front screenshot texture.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.Craft.OrthoScreenshotHelper.SideScreenshotTexture">
      <summary>
            Gets the side screenshot texture.
            </summary>
      <value>
            The side screenshot texture.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.Craft.OrthoScreenshotHelper.TopScreenshotTexture">
      <summary>
            Gets the top screenshot texture.
            </summary>
      <value>
            The top screenshot texture.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.OrthoScreenshotHelper.RenderScreenshots(ModApi.Craft.ICraftScript)">
      <summary>
            Renders the orthographic screenshots for the craft.
            </summary>
      <param name="craftScript">The craft script.</param>
      <returns>Unity enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.OrthoScreenshotHelper.RenderScreenshots(UnityEngine.Camera,ModApi.Craft.ICraftScript)">
      <summary>
            Renders the orthographic screenshots.
            </summary>
      <param name="cameraOrtho">The ortho camera.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel">
      <summary>
            View model for the upload sandbox dialog.
            </summary>
      <seealso cref="T:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel" />
      <seealso cref="T:Assets.Scripts.Sharing.Handlers.IRequestHandler" />
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel._designerScript">
      <summary>
            The designer script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel._orthoHelper">
      <summary>
            The ortho helper
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel._previousParentAncestryId">
      <summary>
            The old sandbox parent id
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel.#ctor(ModApi.Craft.ICraftScript,Assets.Scripts.Design.DesignerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel" /> class.
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="designerScript">The designer script.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel.Endpoint">
      <summary>
            Gets the website endpoint.
            </summary>
      <value>
            The website endpoint.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel.Form">
      <summary>
            Gets the form data to be submitted.
            </summary>
      <value>
            The form data to be submitted.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel.IncludeClientData">
      <summary>
            Gets a value indicating whether to include client data such as user, client token, version, etc.
            </summary>
      <value>
        <c>true</c> if client data such as user, client token, version, etc. should be included; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel.CreateWebRequest(Assets.Scripts.Ui.Sharing.Upload.UploadContentModel)">
      <summary>
            Creates the web request.
            </summary>
      <param name="model">The model.</param>
      <returns>
            The web request.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel.OnCanceled(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the request has been canceled.
            </summary>
      <param name="websiteRequest">The website request.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel.OnComplete(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the operation has completed.
            </summary>
      <param name="request">The website request which performed the operation.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel.OnDialogClosed">
      <summary>
            Called when the dialog is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Craft.UploadCraftViewModel.PrepareToSend">
      <summary>
            Prepares to send.
            </summary>
      <returns>Unity enumerator.</returns>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Upload.Sandbox.UploadSandboxViewModel">
      <summary>
            View model for the upload sandbox dialog.
            </summary>
      <seealso cref="T:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel" />
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Sandbox.UploadSandboxViewModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.Upload.Sandbox.UploadSandboxViewModel" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.Sandbox.UploadSandboxViewModel.CreateWebRequest(Assets.Scripts.Ui.Sharing.Upload.UploadContentModel)">
      <summary>
            Creates the web request.
            </summary>
      <param name="model">The model.</param>
      <returns>
            The web request.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript">
      <summary>
            Script for the upload content dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._accountLabel">
      <summary>
            The account label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._descriptionInput">
      <summary>
            The description input
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._formPanel">
      <summary>
            The form panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._nameInput">
      <summary>
            The name input
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._publicToggleButton">
      <summary>
            The public visibility toggle button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._screenshotList">
      <summary>
            The screenshot list
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._uploadingPanel">
      <summary>
            The uploading panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._uploadProgressBar">
      <summary>
            The upload progress bar
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript._uploadStatusLabel">
      <summary>
            The upload status label
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.ViewModel">
      <summary>
            Gets the view model.
            </summary>
      <value>
            The view model.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.Create(UnityEngine.Transform,Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent canvas use for this dialog.</param>
      <param name="viewModel">The view model.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.ShowError(System.String)">
      <summary>
            Shows the error.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.OnAccountButtonClicked">
      <summary>
            Called when the account button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.OnCancelButtonClicked">
      <summary>
            Called when the cancel button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.OnCancelUploadButtonClicked">
      <summary>
            Called when the cancel upload button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.OnUploadButtonClicked">
      <summary>
            Called when the upload button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.OnAccountDialogClosed(ModApi.Ui.IDialog)">
      <summary>
            Called when the account dialog is closed.
            </summary>
      <param name="dialog">The dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.OnUploadCompleted(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when [upload completed].
            </summary>
      <param name="request">The request.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.OnUploadProgressed(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when [upload progressed].
            </summary>
      <param name="request">The request.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.ProcessUploadResponse(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Processes the upload response.
            </summary>
      <param name="request">The completed website request.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.UpdateAccountLabel">
      <summary>
            Updates the account label.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.UpdateUploadProgress(System.Single)">
      <summary>
            Updates the upload progress.
            </summary>
      <param name="progress">The progress.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentDialogScript.UploadContent(Assets.Scripts.Ui.Sharing.Upload.UploadContentModel)">
      <summary>
            Uploads the content.
            </summary>
      <param name="model">The model.</param>
      <returns>Unity enumerator.</returns>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Upload.UploadContentModel">
      <summary>
            Model that contains user information entered in the Upload Content dialog.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.Upload.UploadContentModel" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentModel.Description">
      <summary>
            Gets or sets the description.
            </summary>
      <value>
            The description.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentModel.IsPublic">
      <summary>
            Gets or sets a value indicating whether this instance is public.
            </summary>
      <value>
        <c>true</c> if this instance is public; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentModel.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentModel.Screenshots">
      <summary>
            Gets the screenshots.
            </summary>
      <value>
            The screenshots.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentModel.ValidPhotoChecksums">
      <summary>
            Gets or sets a value indicating whether the photos all have valid checksums.
            </summary>
      <value>
        <c>true</c> if photo have valid checksums; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel">
      <summary>
            Base class for view models for the upload content dialog.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel.DescriptionLabel">
      <summary>
            Gets the description label.
            </summary>
      <value>
            The description label.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel.MaxOptionalScreenshots">
      <summary>
            Gets or sets the maximum optional screenshots.
            </summary>
      <value>
            The maximum optional screenshots.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel.MinDescriptionLength">
      <summary>
            Gets or sets the minimum length of the description.
            </summary>
      <value>
            The minimum length of the description.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel.NameLabel">
      <summary>
            Gets the name label.
            </summary>
      <value>
            The name label.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel.Title">
      <summary>
            Gets the title.
            </summary>
      <value>
            The title.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel.CreateWebRequest(Assets.Scripts.Ui.Sharing.Upload.UploadContentModel)">
      <summary>
            Creates the web request.
            </summary>
      <param name="model">The model.</param>
      <returns>The web request.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel.OnDialogClosed">
      <summary>
            Called when the dialog is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.Sharing.Upload.UploadContentViewModel.PrepareToSend">
      <summary>
            Prepares to send.
            </summary>
      <returns>Unity enumerator.</returns>
    </member>
    <member name="T:Assets.Scripts.Ui.SliderControl">
      <summary>
            Provides methods to work with an XML based slider panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.SliderControl.#ctor(UI.Xml.XmlElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.SliderControl" /> class.
            </summary>
      <param name="panelElement">The <paramref name="panelElement" /> element.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.SliderControl.LabelText">
      <summary>
            Gets the label text.
            </summary>
      <value>
            The label text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SliderControl.Slider">
      <summary>
            Gets the slider.
            </summary>
      <value>
            The slider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SliderControl.ValueText">
      <summary>
            Gets the value text.
            </summary>
      <value>
            The value text.
            </value>
    </member>
    <member name="T:Assets.Scripts.Ui.SpinnerType">
      <summary>
            The types of spinners.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerType.Text">
      <summary>
            The text type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerType.Numeric">
      <summary>
            The numeric type
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.SpinnerScript">
      <summary>
            Script for a spinner control.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._initialized">
      <summary>
            The initialized flag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._inputField">
      <summary>
            The input field
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._nextButton">
      <summary>
            The next button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._nextButtonVisible">
      <summary>
            The next button visible
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._numericValue">
      <summary>
            The numeric value
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._prevButton">
      <summary>
            The previous button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._prevButtonVisible">
      <summary>
            The previous button visible
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._text">
      <summary>
            The text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._value">
      <summary>
            The value
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._values">
      <summary>
            The values
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.SpinnerScript._xmlElement">
      <summary>
            The XML element
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.SpinnerScript.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.SpinnerScript" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.MaxValue">
      <summary>
            Gets or sets the maximum value.
            </summary>
      <value>
            The maximum value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.MinValue">
      <summary>
            Gets or sets the minimum value.
            </summary>
      <value>
            The minimum value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.NextButton">
      <summary>
            Gets the next button.
            </summary>
      <value>
            The next button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.NextButtonVisible">
      <summary>
            Gets or sets a value indicating whether the next button is visible.
            </summary>
      <value>
        <c>true</c> if the next button is visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.NumericFormat">
      <summary>
            Gets or sets the numeric format.
            </summary>
      <value>
            The numeric format.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.NumericValue">
      <summary>
            Gets the numeric value.
            </summary>
      <value>
            The numeric value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.NumericWrap">
      <summary>
            Gets or sets a value indicating whether to wrap the numeric value if it goes
            past the min or max values.
            </summary>
      <value>
        <c>true</c> if numeric wrap is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.OnLabelRequested">
      <summary>
            Gets or sets the function used to request a text label for the specified spinner value.
            </summary>
      <value>
            The function used to request a text label for the specified spinner value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.OnNumericValueChanged">
      <summary>
            Gets or sets the action to execute when the numeric value has changed.
            </summary>
      <value>
            The action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.OnValueChanged">
      <summary>
            Gets or sets the action to execute when the text value has changed.
            </summary>
      <value>
            The action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.PrevButton">
      <summary>
            Gets the previous button.
            </summary>
      <value>
            The previous button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.PrevButtonVisible">
      <summary>
            Gets or sets a value indicating whether the previous button is visible.
            </summary>
      <value>
        <c>true</c> if the previous button is visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.SpinnerType">
      <summary>
            Gets or sets the type of the spinner.
            </summary>
      <value>
            The type of the spinner.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.StepSize">
      <summary>
            Gets or sets the size of the step.
            </summary>
      <value>
            The size of the step.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.Text">
      <summary>
            Gets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.SpinnerScript.Values">
      <summary>
            Gets the values.
            </summary>
      <value>
            The values.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.SpinnerScript.SetNumericValue(System.Single)">
      <summary>
            Sets the numeric value.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.SpinnerScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.SpinnerScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.SpinnerScript.OnButtonClicked(System.Int32)">
      <summary>
            Called when the button is clicked.
            </summary>
      <param name="direction">The direction that was clicked. Positive is next, negative is previous.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.SpinnerScript.OnInputEndEdit(System.String)">
      <summary>
            Called when the input edit has ended.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.TabSupportScript">
      <summary>
            Script for handling tab key to switch between UI elements.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.TabSupportScript._dialog">
      <summary>
            The dialog
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.TabSupportScript.Initialize(ModApi.Ui.DialogScript)">
      <summary>
            Initializes the script.
            </summary>
      <param name="dialog">The dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.TabSupportScript.WrapIndex(System.Int32,System.Int32)">
      <summary>
            Wraps the index. If it's below 0, it will return max. If it's above max it will
            return 0. If it is between 0 and max it will return the index.
            </summary>
      <param name="index">The index to wrap.</param>
      <param name="max">The maximum.</param>
      <returns>
            The index.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.TabSupportScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.UiUtilities">
      <summary>
            UI related utilities.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.UiUtilities.ExpandType">
      <summary>
            The axis to expand/contract the element on when showing/hiding/
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.UiUtilities.ExpandType.Vertical">
      <summary>
            Expand on the Y axis.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.UiUtilities.ExpandType.Horizontal">
      <summary>
            Expand on the X axis.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.UiUtilities.ExpandType.HorizontalAndVertical">
      <summary>
            Expand on the X and Y axis.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.AddTableRow(Assets.Scripts.Ui.UiUtilities.TableInfo,System.String,System.Func{System.String})">
      <summary>
            Adds the row.
            </summary>
      <param name="tableInfo">The table information.</param>
      <param name="label">The label.</param>
      <param name="updater">The updater.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.CloneTemplate(UI.Xml.XmlElement,UI.Xml.XmlElement)">
      <summary>
            Clones the template XmlElement and returns it.
            </summary>
      <param name="template">The template.</param>
      <param name="parent">The parent.</param>
      <returns>The cloned element.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.CollapseElement(UI.Xml.XmlElement,System.Single,Assets.Scripts.Ui.UiUtilities.ExpandType,System.Action{System.Single},System.Action)">
      <summary>
            Collapses the element.
            </summary>
      <param name="element">The element to collapse.</param>
      <param name="animTime">The animation time.</param>
      <param name="expandType">Type of the expand.</param>
      <param name="onUpdate">The action to call for every frame.</param>
      <param name="onComplete">The action to call when complete.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.CreateUiGameObject(System.String,UnityEngine.Transform)">
      <summary>
            Creates a game object with a rect transform that is set to anchor to the full extents of its parent.
            </summary>
      <param name="name">The name.</param>
      <param name="parent">The parent.</param>
      <returns>The game object.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.ExpandElement(UI.Xml.XmlElement,System.Single,Assets.Scripts.Ui.UiUtilities.ExpandType,System.Action{System.Single},System.Action)">
      <summary>
            Expands the element.
            </summary>
      <param name="element">The element to expand.</param>
      <param name="animTime">The animation time.</param>
      <param name="expandType">Type of the expand.</param>
      <param name="onUpdate">The action to call for every frame.</param>
      <param name="onComplete">The action to call when complete.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.GetPreferredHeightAllChildren(UnityEngine.RectTransform)">
      <summary>
            Gets the largest preferred height from all children.
            </summary>
      <param name="rectTransform">The rect transform.</param>
      <returns>The largest preferred height from all children.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.GetRectCornersInLocalSpace(UnityEngine.RectTransform,UnityEngine.RectTransform,UnityEngine.Vector2[],UnityEngine.Camera)">
      <summary>
            Gets the corner of the rect in local position relative to the canvas rect transform.
            </summary>
      <param name="rect">The rect.</param>
      <param name="canvas">The canvas.</param>
      <param name="points">The points.</param>
      <param name="camera">The camera.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.GetRootCanvasTransform">
      <summary>
            Finds the root canvas with the highest sorting order.
            </summary>
      <returns>The root canvas.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.ProcessStringWithInputs(System.String)">
      <summary>
            Processes the string and replaces any references to game inputs with their current bindings.
            Example: "Press |ActivationGroup1|" will use the first binding and result in "Press 1"
            Example: "Press |Throttle;+|" will use the positive binding for the input and result in "Press Left Shift"
            Example: "Press |Throttle;-|" will use the negative binding for the input and result in "Press Left Control"
            Example: "Press |ToggleHideUI;name|" will display the descriptive name of the input and result in "Press Toggle Hide UI"
            </summary>
      <param name="s">The string to process.</param>
      <returns>
            The processed string.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.ScrollToTarget(UnityEngine.RectTransform,UnityEngine.UI.ScrollRect,System.Single)">
      <summary>
            Scrolls to the scroll rect so that the target will be in the view
            of the scroll rect.
            </summary>
      <param name="target">The target rect transform to scroll into view.</param>
      <param name="scrollRect">The scroll rect.</param>
      <param name="offset">The optional offset to scroll it a bit more or less into view.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.GetScalerFunc(Assets.Scripts.Ui.UiUtilities.ExpandType)">
      <summary>
            Gets the scaler function for the type specified.
            </summary>
      <param name="expandType">Type of the expand.</param>
      <returns>The scaler function for the type specified.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.RegisterDynamicRow(System.Collections.Generic.Dictionary{TMPro.TMP_Text,System.Func{System.String}},TMPro.TMP_Text,System.Func{System.String})">
      <summary>
            Registers the dynamic row.
            </summary>
      <param name="textElements">The text elements.</param>
      <param name="text">The text.</param>
      <param name="updater">The updater.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.UiUtilities.TableInfo">
      <summary>
            Information about an XmlLayout table.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.TableInfo.#ctor(UI.Tables.TableLayout,UI.Xml.XmlElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.UiUtilities.TableInfo" /> struct.
            </summary>
      <param name="table">The table.</param>
      <param name="rowTemplate">The row template.</param>
    </member>
    <member name="P:Assets.Scripts.Ui.UiUtilities.TableInfo.RowTemplate">
      <summary>
            Gets the row template.
            </summary>
      <value>
            The row template.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.UiUtilities.TableInfo.Table">
      <summary>
            Gets the table.
            </summary>
      <value>
            The table.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.UiUtilities.TableInfo.TextElements">
      <summary>
            Gets the text elements.
            </summary>
      <value>
            The text elements.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.UiUtilities.TableInfo.UpdateRows">
      <summary>
            Updates the rows' text from the functions provided.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.UserInterface">
      <summary>
            Implementation of the Mod API UI interface.
            </summary>
      <seealso cref="T:ModApi.Ui.IUserInterface" />
    </member>
    <member name="F:Assets.Scripts.Ui.UserInterface._buildAllUserInterfaceXmlActions">
      <summary>
            The collection of user interface XML build actions that are fired for every XML based user interface.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.UserInterface._buildUserInterfaceXmlActions">
      <summary>
            The collection of user interface XML build actions keyed by user interface ID.
            String.empty is used as a key for all user interfaces that don't have a specific ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.UserInterface._inspectorController">
      <summary>
            The inspector controller
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.UserInterface._openDialogs">
      <summary>
            The open dialogs.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Ui.UserInterface" /> class.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Ui.UserInterface.UserInterfaceLoaded">
      <summary>
            Occurs when an XML-based user interface has loaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Ui.UserInterface.UserInterfaceLoading">
      <summary>
            Occurs when an XML-based user interface is loading.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.UserInterface.ActiveDialog">
      <summary>
            Gets the active dialog.
            </summary>
      <value>
            The active dialog.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.UserInterface.AnyDialogsOpen">
      <summary>
            Gets a value indicating whether any dialogs are currently open.
            </summary>
      <value>
        <c>true</c> if [any dialogs open]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.UserInterface.IgnoreKeyboardInputs">
      <summary>
            Gets a value indicating whether keyboard inputs should be ignored
            </summary>
      <value>
        <c>true</c> if keyboard inputs should currently be ignored; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.UserInterface.InspectorPanelsVisible">
      <summary>
            Gets or sets a value indicating whether the inspector panels are visible.
            </summary>
      <value>
        <c>true</c> if the inspector panels are visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.UserInterface.IsTextInputFocused">
      <summary>
            Gets a value indicating whether a text field is currently active and
            receiving input from the keyboard.
            </summary>
      <value>
        <c>true</c> if this instance is text input focused; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.UserInterface.ResourceDatabase">
      <summary>
            Gets the resource database for the UI system.
            </summary>
      <value>
            The resource database for the UI system.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.UserInterface.Transform">
      <summary>
            Gets the main transform for the user interface for the current scene.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.AddBuildUserInterfaceXmlAction(ModApi.Ui.BuildUserInterfaceXmlDelegate)">
      <summary>
            Subscribes the specified action to user interface XML building for all user interfaces.
            This is used to change or replace the XML used to build a user interface prior to the user interface being loaded.
            </summary>
      <param name="buildAction">The build action to be called when the interface is being built.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.AddBuildUserInterfaceXmlAction(System.String,ModApi.Ui.BuildUserInterfaceXmlDelegate)">
      <summary>
            Subscribes the specified action to user interface XML building for user interfaces with the specified ID.
            This is used to change or replace the XML used to build a user interface prior to the user interface being loaded.
            </summary>
      <param name="userInterfaceId">The user interface identifier.</param>
      <param name="buildAction">The build action to be called when the interface is being built.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.BuildUserInterfaceFromRequest(ModApi.Ui.BuildUserInterfaceXmlRequest,UnityEngine.GameObject,System.Object,System.Action{ModApi.Ui.IXmlLayoutController})">
      <summary>
            Builds the XML layout user interface from the specified XML request and attaches it to the specified game object.
            The Xml Layout controller will also be created and setup to send events to the event target object and call the
            specified action when the layout is rebuilt.
            </summary>
      <param name="request">The request for which to build the user interface.</param>
      <param name="obj">The game object on which to create the XmlLayout and XmlLayoutController.</param>
      <param name="eventTarget">The object that will receive events for the controller.</param>
      <param name="layoutRebuiltAction">The action to execute when the layout is rebuilt.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.BuildUserInterfaceFromRequest(ModApi.Ui.BuildUserInterfaceXmlRequest,ModApi.Ui.IXmlLayout)">
      <summary>
            Builds a user interface based on the specified request.
            </summary>
      <param name="request">The request for which to build the user interface.</param>
      <param name="xmlLayout">The XML layout object associated with the user interface being built.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.BuildUserInterfaceFromResource``1(System.String,System.Action{``0,ModApi.Ui.IXmlLayoutController},UnityEngine.Transform)">
      <summary>
            Builds the XML layout user interface from the specified XML resource.
            This creates a new game object with the specified script on the specified transform or, if <c>null</c>, at the root of the main canvas for the current scene.
            The Xml Layout controller will also be created and setup to send events to the script and call the specified action when the layout is rebuilt.
            </summary>
      <typeparam name="T">The type of script to use as the root script for the user interface.</typeparam>
      <param name="xmlPath">The path of the XML in the resource database from which to build the user interface.</param>
      <param name="layoutRebuiltAction">The action to execute when the layout is rebuilt.</param>
      <param name="parentTransform">The parent transform for the user interface. If <c>null</c>, this will attempt to use main canvas for the scene as its parent.</param>
      <returns>The main script for the user interface as specified by the type parameter.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.BuildUserInterfaceFromResource(System.String,UnityEngine.MonoBehaviour,System.Action{ModApi.Ui.IXmlLayoutController})">
      <summary>
            Builds the XML layout user interface from the specified XML resource and attaches it to the game object containing the specified script.
            The Xml Layout controller will also be created and setup to send events to the script and call the specified action when the layout is rebuilt.
            </summary>
      <param name="xmlPath">The path of the XML in the resource database from which to build the user interface.</param>
      <param name="script">The script that will handle events from the Xml Layout.</param>
      <param name="layoutRebuiltAction">The action to execute when the layout is rebuilt.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.BuildUserInterfaceFromResource(System.String,ModApi.Ui.IXmlLayout)">
      <summary>
            Builds a user interface from an XML file in the resource database at the specified path.
            </summary>
      <param name="xmlPath">The path of the XML in the resource database from which to build the user interface.</param>
      <param name="xmlLayout">The XML layout object associated with the user interface to build.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.BuildUserInterfaceFromXml``1(System.String,System.String,System.Action{``0,ModApi.Ui.IXmlLayoutController},UnityEngine.Transform)">
      <summary>
            Builds the XML layout user interface from the specified XML resource.
            This creates a new game object with the specified script on the specified transform or, if <c>null</c>, at the root of the main canvas for the current scene.
            The Xml Layout controller will also be created and setup to send events to the script and call the specified action when the layout is rebuilt.
            </summary>
      <typeparam name="T">The type of script to use as the root script for the user interface.</typeparam>
      <param name="xml">The XML defining the UI.</param>
      <param name="userInterfaceId">The user interface identifier.</param>
      <param name="layoutRebuiltAction">The action to execute when the layout is rebuilt.</param>
      <param name="parentTransform">The parent transform for the user interface. If <c>null</c>, this will attempt to use main canvas for the scene as its parent.</param>
      <returns>The main script for the user interface as specified by the type parameter.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.BuildUserInterfaceFromXml(System.String,System.String,UnityEngine.MonoBehaviour,System.Action{ModApi.Ui.IXmlLayoutController})">
      <summary>
            Builds the XML layout user interface from the specified XML and attaches it to the game object containing the specified script.
            The Xml Layout controller will also be created and setup to send events to the script and call the specified action when the layout is rebuilt.
            </summary>
      <param name="xml">The XML defining the UI.</param>
      <param name="userInterfaceId">The user interface identifier.</param>
      <param name="script">The script that will handle events from the Xml Layout.</param>
      <param name="layoutRebuiltAction">The action to execute when the layout is rebuilt.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.BuildUserInterfaceFromXml(System.String,System.String,ModApi.Ui.IXmlLayout)">
      <summary>
            Builds a user interface from the specified XML.
            </summary>
      <param name="xml">The XML from which to build the user interface.</param>
      <param name="userInterfaceId">The user interface identifier.</param>
      <param name="xmlLayout">The XML layout object associated with the user interface to build.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.CreateDialog``1(UnityEngine.Transform,System.Boolean)">
      <summary>
            Creates the dialog and adds the specified dialog script before returning.
            </summary>
      <typeparam name="T">The dialog type to create.</typeparam>
      <param name="parent">The parent transform for the dialog.</param>
      <param name="registerWithUserInterface">If set to <c>true</c> then the dialog will be registered with the user interface.</param>
      <returns>The dialog script.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.CreateDialog``1(System.String,UnityEngine.Transform,System.Action{``0,ModApi.Ui.IXmlLayoutController},System.Action{``0})">
      <summary>
            Creates a dialog based on the XML resource at the specified path and using the specified dialog script type.
            This builds the dialog based on the specified XML and automatically registers the dialog script with the user interface.
            </summary>
      <typeparam name="T">The dialog type to create.</typeparam>
      <param name="xmlResourcePath">The XML resource path.</param>
      <param name="parent">The parent transform for the dialog.</param>
      <param name="layoutRebuiltAction">The action to execute when the layout is rebuilt.</param>
      <param name="initializeAction">The one-time action that is executed after the dialog is created but before the user interface is built.</param>
      <returns> The dialog script.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.CreateInputDialog(UnityEngine.Transform)">
      <summary>
            Creates the input dialog.
            </summary>
      <param name="parent">The parent canvas. If null is passed in, the root canvas with the highest Order in Layer will be used.</param>
      <returns>
            The input dialog script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.CreateInspectorPanel(ModApi.Ui.Inspector.InspectorModel,ModApi.Ui.Inspector.InspectorPanelCreationInfo)">
      <summary>
            Creates the inspector panel from the model.
            </summary>
      <param name="model">The model.</param>
      <param name="creationInfo">Optional information used to create the inspector panel. If null is provided, then default values will be used.</param>
      <returns>
            The inspector panel.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.CreateMessageDialog(System.Boolean,UnityEngine.Transform)">
      <summary>
            Creates the message dialog.
            </summary>
      <param name="showCancelButton">If set to <c>true</c> then show the cancel button.</param>
      <param name="parent">The parent canvas. If null is passed in, the root canvas with the highest Order in Layer will be used.</param>
      <returns>
            The message dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.RegisterDialog(ModApi.Ui.IDialog)">
      <summary>
            Registers the dialog with the user interface.
            </summary>
      <param name="dialog">The dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.RemoveBuildUserInterfaceXmlAction(ModApi.Ui.BuildUserInterfaceXmlDelegate)">
      <summary>
            Unsubscribes the specified action from user interface XML building for all user interfaces.
            </summary>
      <param name="buildAction">The build action to be unsubscribed.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.RemoveBuildUserInterfaceXmlAction(System.String,ModApi.Ui.BuildUserInterfaceXmlDelegate)">
      <summary>
            Unsubscribes the specified action from user interface XML building for user interfaces with the specified ID.
            </summary>
      <param name="userInterfaceId">The user interface identifier.</param>
      <param name="buildAction">The build action to be unsubscribed.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.UnregisterDialog(ModApi.Ui.IDialog)">
      <summary>
            Un-registers the dialog from the user interface.
            </summary>
      <param name="dialog">The dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.BuildUserInterfaceXml(ModApi.Ui.BuildUserInterfaceXmlRequest)">
      <summary>
            Builds the user interface XML based on the specified request.
            </summary>
      <param name="request">The request for which to build the XML.</param>
      <returns>The requested user interface XML.</returns>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.InitializeInspectorController">
      <summary>
            Initializes the inspector controller, if it is not already.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.OnDialogClosed(ModApi.Ui.IDialog)">
      <summary>
            Called when a dialog is closed.
            </summary>
      <param name="dialog">The dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.OnSceneLoaded(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode)">
      <summary>
            Called when a scene is loaded.
            </summary>
      <param name="scene">The scene.</param>
      <param name="mode">The mode.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.OnSceneUnloaded(UnityEngine.SceneManagement.Scene)">
      <summary>
            Called when the scene is unloaded.
            </summary>
      <param name="scene">The scene.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterface.OnUserInterfaceXmlLoaded(System.Object,UI.Xml.XmlLayoutResourceDatabase.LoadedXmlEventArgs)">
      <summary>
            Called when user interface XML is being loaded from XmlLayout.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:UI.Xml.XmlLayoutResourceDatabase.LoadedXmlEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.UserInterfaceScaleScript">
      <summary>
            Script attached to a canvas with a CanvasScaler component that automatically scales the
            reference resolution by the setting currently in settings.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Ui.UserInterfaceScaleScript._scale">
      <summary>
            The scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Ui.UserInterfaceScaleScript._userInterfaceScaleSetting">
      <summary>
            The user interface scale setting
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterfaceScaleScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterfaceScaleScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.UserInterfaceScaleScript.UpdateScale">
      <summary>
            Updates the scale.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.XmlLayoutExtensions.BorderAttribute">
      <summary>
            Provides border functionality for elements in XmlLayout.
            </summary>
      <seealso cref="T:UI.Xml.CustomXmlAttribute" />
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.BorderAttribute.DefaultValue">
      <summary>
            Gets the default value for this attribute.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.BorderAttribute.UsesApplyMethod">
      <summary>
            Gets a value indicating whether this attribute uses the apply method.
            You should override this value if your CustomXmlAttribute uses the Apply() method
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.BorderAttribute.ValueDataType">
      <summary>
            Gets the value data type.
            Must be a valid datatype within XmlLayout.xsd or http://www.w3.org/2001/XMLSchema
            e.g.
            xs:string -&gt; string value (from http://www.w3.org/2001/XMLSchema)
            xs:integer -&gt; integer value (from http://www.w3.org/2001/XMLSchema)
            xs:float -&gt; float value (from http://www.w3.org/2001/XMLSchema)
            xmlLayout:color -&gt; color in hex/rgb/rgba format
            xmlLayout:vector2 -&gt; vector 2 in x y format
            xmlLayout:floatList -&gt; list of floats e.g. "10 10 10"
            </summary>
    </member>
    <member name="M:Assets.Scripts.Ui.XmlLayoutExtensions.BorderAttribute.Apply(UI.Xml.XmlElement,System.String,UI.Xml.AttributeDictionary)">
      <summary>
            Applies the specified XML element.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="value">The value.</param>
      <param name="elementAttributes">The element attributes.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.XmlLayoutExtensions.BorderOffsetAttribute">
      <summary>
            The border offset attribute
            </summary>
      <seealso cref="T:UI.Xml.CustomXmlAttribute" />
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.BorderOffsetAttribute.DefaultValue">
      <summary>
            Gets the default value for this attribute.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.BorderOffsetAttribute.KeepOriginalTag">
      <summary>
            Gets a value indicating whether this attribute keeps the original tag.
            If this is set to false, then XmlLayout will remove the original custom tag from the attribute list once it has been processed by its CustomXmlAttribute.Convert
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.BorderOffsetAttribute.ValueDataType">
      <summary>
            Gets the value data type.
            Must be a valid datatype within XmlLayout.xsd or http://www.w3.org/2001/XMLSchema
            e.g.
            xs:string -&gt; string value (from http://www.w3.org/2001/XMLSchema)
            xs:integer -&gt; integer value (from http://www.w3.org/2001/XMLSchema)
            xs:float -&gt; float value (from http://www.w3.org/2001/XMLSchema)
            xmlLayout:color -&gt; color in hex/rgb/rgba format
            xmlLayout:vector2 -&gt; vector 2 in x y format
            xmlLayout:floatList -&gt; list of floats e.g. "10 10 10"
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.XmlLayoutExtensions.BorderSpriteAttribute">
      <summary>
            The border sprite attribute
            </summary>
      <seealso cref="T:UI.Xml.CustomXmlAttribute" />
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.BorderSpriteAttribute.DefaultValue">
      <summary>
            Gets the default value for this attribute.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.BorderSpriteAttribute.KeepOriginalTag">
      <summary>
            Gets a value indicating whether this attribute keeps the original tag.
            If this is set to false, then XmlLayout will remove the original custom tag from the attribute list once it has been processed by its CustomXmlAttribute.Convert
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.BorderSpriteAttribute.ValueDataType">
      <summary>
            Gets the value data type.
            Must be a valid datatype within XmlLayout.xsd or http://www.w3.org/2001/XMLSchema
            e.g.
            xs:string -&gt; string value (from http://www.w3.org/2001/XMLSchema)
            xs:integer -&gt; integer value (from http://www.w3.org/2001/XMLSchema)
            xs:float -&gt; float value (from http://www.w3.org/2001/XMLSchema)
            xmlLayout:color -&gt; color in hex/rgb/rgba format
            xmlLayout:vector2 -&gt; vector 2 in x y format
            xmlLayout:floatList -&gt; list of floats e.g. "10 10 10"
            </summary>
    </member>
    <member name="T:Assets.Scripts.Ui.XmlLayoutExtensions.ContentButtonTagHandler">
      <summary>
            Tag handler for a <ContentButton /> element.
            </summary>
      <seealso cref="T:UI.Xml.ElementTagHandler" />
    </member>
    <member name="F:Assets.Scripts.Ui.XmlLayoutExtensions.ContentButtonTagHandler._eventAttributeNames">
      <summary>
            The event attribute names
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.ContentButtonTagHandler.attributes">
      <summary>
            Gets the attributes.
            Used to add non-default attributes to this element in the XSD file
            It is only necessary to override this if your custom tag handler provides new attributes and you wish for Visual Studio to autocomplete them for you.
            The key is the name of the attribute, and the value is the datatype.
            The datatype must be a valid datatype within XmlLayout.xsd or http://www.w3.org/2001/XMLSchema
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.ContentButtonTagHandler.isCustomElement">
      <summary>
            Gets a value indicating whether this is a custom element.
            If this returns false, then no auto-complete documentation will be generated for this element (as this indicates that the documentation has already been created manually)
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.ContentButtonTagHandler.prefabPath">
      <summary>
            Gets the prefab path.
            </summary>
      <value>
            The prefab path.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.ContentButtonTagHandler.primaryComponent">
      <summary>
            Gets the primary component.
            </summary>
      <value>
            The primary component.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.ContentButtonTagHandler.eventAttributeNames">
      <summary>
            Gets the event attribute names.
            </summary>
      <value>
            The event attribute names.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.XmlLayoutExtensions.ContentButtonTagHandler.ApplyAttributes(UI.Xml.AttributeDictionary)">
      <summary>
            Apply the specified attributes to the XmlElement (and its other relevant components)
            </summary>
      <param name="attributesToApply">The attributes to apply.</param>
    </member>
    <member name="T:Assets.Scripts.Ui.XmlLayoutExtensions.SpinnerTagHandler">
      <summary>
            Tag handler for a <Spinner /> element.
            </summary>
      <seealso cref="T:UI.Xml.ElementTagHandler" />
    </member>
    <member name="F:Assets.Scripts.Ui.XmlLayoutExtensions.SpinnerTagHandler._eventAttributeNames">
      <summary>
            The event attribute names
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.SpinnerTagHandler.attributes">
      <summary>
            Gets the attributes.
            Used to add non-default attributes to this element in the XSD file
            It is only necessary to override this if your custom tag handler provides new attributes and you wish for Visual Studio to autocomplete them for you.
            The key is the name of the attribute, and the value is the datatype.
            The datatype must be a valid datatype within XmlLayout.xsd or http://www.w3.org/2001/XMLSchema
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.SpinnerTagHandler.isCustomElement">
      <summary>
            Gets a value indicating whether this tag handler is a custom attribute.
            If this returns false, then no auto-complete documentation will be generated for this element (as this indicates that the documentation has already been created manually)
            </summary>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.SpinnerTagHandler.prefabPath">
      <summary>
            Gets the prefab path.
            </summary>
      <value>
            The prefab path.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.SpinnerTagHandler.primaryComponent">
      <summary>
            Gets the primary component.
            </summary>
      <value>
            The primary component.
            </value>
    </member>
    <member name="P:Assets.Scripts.Ui.XmlLayoutExtensions.SpinnerTagHandler.eventAttributeNames">
      <summary>
            Gets the event attribute names.
            </summary>
      <value>
            The event attribute names.
            </value>
    </member>
    <member name="M:Assets.Scripts.Ui.XmlLayoutExtensions.SpinnerTagHandler.ApplyAttributes(UI.Xml.AttributeDictionary)">
      <summary>
            Apply the specified attributes to the XmlElement (and its other relevant components)
            </summary>
      <param name="attributesToApply">The attributes to apply.</param>
    </member>
    <member name="M:Assets.Scripts.Ui.XmlLayoutExtensions.SpinnerTagHandler.HandleEventAttribute(System.String,System.String)">
      <summary>
            Handles the event attribute.
            </summary>
      <param name="eventName">Name of the event.</param>
      <param name="eventValue">The event value.</param>
    </member>
    <member name="T:Assets.Scripts.DevConsole.DevConsoleManagerScript">
      <summary>
            The developer console script.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.DevConsole.DevConsoleManagerScript._devConsole">
      <summary>
            The dev console.
            </summary>
    </member>
    <member name="F:Assets.Scripts.DevConsole.DevConsoleManagerScript._fpsDisplay">
      <summary>
            The FPS display.
            </summary>
    </member>
    <member name="F:Assets.Scripts.DevConsole.DevConsoleManagerScript._inputBlocker">
      <summary>
            The input blocker panel.
            </summary>
    </member>
    <member name="P:Assets.Scripts.DevConsole.DevConsoleManagerScript.IsConsoleOpen">
      <summary>
            Gets a value indicating whether this instance is console open.
            </summary>
      <value>
        <c>true</c> if this instance is console open; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.DevConsole.DevConsoleManagerScript.OpenedThisSession">
      <summary>
            Gets a value indicating whether the dev console was opened this game session.
            </summary>
      <value>
        <c>true</c> if the dev console was opened this game session; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleManagerScript.Create(UnityEngine.GameObject)">
      <summary>
            Creates the input manager script.
            </summary>
      <param name="parent">The parent object.</param>
      <returns>The input manager script reference.</returns>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleManagerScript.CloseConsole">
      <summary>
            Closes the console.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleManagerScript.OpenConsole">
      <summary>
            Opens the console.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleManagerScript.ToggleConsole">
      <summary>
            Toggles the console.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleManagerScript.ActivateInputField">
      <summary>
            Activates the input field.
            </summary>
      <returns>The enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleManagerScript.Initialize">
      <summary>
            Initializes the dev console.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleManagerScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="T:Assets.Scripts.DevConsole.DevConsoleService">
      <summary>
            The developer console service for the mod tools.
            </summary>
    </member>
    <member name="F:Assets.Scripts.DevConsole.DevConsoleService._instance">
      <summary>
            The singleton instance.
            </summary>
    </member>
    <member name="E:Assets.Scripts.DevConsole.DevConsoleService.Initialized">
      <summary>
            Occurs when the dev console is initialized.
            </summary>
    </member>
    <member name="E:Assets.Scripts.DevConsole.DevConsoleService._initialized">
      <summary>
            Occurs when the dev console is initialized.
            </summary>
    </member>
    <member name="P:Assets.Scripts.DevConsole.DevConsoleService.Instance">
      <summary>
            Gets the singleton instance.
            </summary>
      <value>
            The singleton instance.
            </value>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RaiseInitialized">
      <summary>
            Raises the initialized event.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterArgumentParser``1(ModApi.DevConsole.IArgumentParser{``0})">
      <summary>
            Registers the argument parser.
            </summary>
      <typeparam name="T">The type of arguments supported by the parser.</typeparam>
      <param name="parser">The parser being registered.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand``1(System.String,System.Func{``0})">
      <summary>
            Registers the specified command.
            </summary>
      <typeparam name="TResult">The type of command result.</typeparam>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand``2(System.String,System.Func{``0,``1})">
      <summary>
            Registers the specified command.
            </summary>
      <typeparam name="T">The type of command argument.</typeparam>
      <typeparam name="TResult">The type of command result.</typeparam>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand``3(System.String,System.Func{``0,``1,``2})">
      <summary>
            Registers the specified command.
            </summary>
      <typeparam name="T1">The type of command argument #1.</typeparam>
      <typeparam name="T2">The type of command argument #2.</typeparam>
      <typeparam name="TResult">The type of command result.</typeparam>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand``4(System.String,System.Func{``0,``1,``2,``3})">
      <summary>
            Registers the specified command.
            </summary>
      <typeparam name="T1">The type of command argument #1.</typeparam>
      <typeparam name="T2">The type of command argument #2.</typeparam>
      <typeparam name="T3">The type of command argument #3.</typeparam>
      <typeparam name="TResult">The type of command result.</typeparam>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand``5(System.String,System.Func{``0,``1,``2,``3,``4})">
      <summary>
            Registers the specified command.
            </summary>
      <typeparam name="T1">The type of command argument #1.</typeparam>
      <typeparam name="T2">The type of command argument #2.</typeparam>
      <typeparam name="T3">The type of command argument #3.</typeparam>
      <typeparam name="T4">The type of command argument #4.</typeparam>
      <typeparam name="TResult">The type of command result.</typeparam>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand``4(System.String,System.Action{``0,``1,``2,``3})">
      <summary>
            Registers the specified command.
            </summary>
      <typeparam name="T1">The type of command argument #1.</typeparam>
      <typeparam name="T2">The type of command argument #2.</typeparam>
      <typeparam name="T3">The type of command argument #3.</typeparam>
      <typeparam name="T4">The type of command argument #4.</typeparam>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand``3(System.String,System.Action{``0,``1,``2})">
      <summary>
            Registers the specified command.
            </summary>
      <typeparam name="T1">The type of command argument #1.</typeparam>
      <typeparam name="T2">The type of command argument #2.</typeparam>
      <typeparam name="T3">The type of command argument #3.</typeparam>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand``2(System.String,System.Action{``0,``1})">
      <summary>
            Registers the specified command.
            </summary>
      <typeparam name="T1">The type of command argument #1.</typeparam>
      <typeparam name="T2">The type of command argument #2.</typeparam>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand``1(System.String,System.Action{``0})">
      <summary>
            Registers the specified command.
            </summary>
      <typeparam name="T">The type of command argument #1.</typeparam>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.RegisterCommand(System.String,System.Action)">
      <summary>
            Registers the specified command.
            </summary>
      <param name="command">The command to register.</param>
      <param name="commandAction">The command action.</param>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.UnregisterCommand(System.String)">
      <summary>
            Unregisters the specified command.
            </summary>
      <param name="command">The command to unregister.</param>
    </member>
    <member name="T:Assets.Scripts.DevConsole.DevConsoleService.ArgumentParserBridge`1">
      <summary>
            A class used to bridge the argument parser interface from the mod tools to the interface in the dev console.
            </summary>
      <typeparam name="T">The type of the argument parser.</typeparam>
    </member>
    <member name="F:Assets.Scripts.DevConsole.DevConsoleService.ArgumentParserBridge`1._parser">
      <summary>
            The original argument parser from the mod tools.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.ArgumentParserBridge`1.#ctor(ModApi.DevConsole.IArgumentParser{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.DevConsole.DevConsoleService.ArgumentParserBridge`1" /> class.
            </summary>
      <param name="parser">The parser.</param>
    </member>
    <member name="P:Assets.Scripts.DevConsole.DevConsoleService.ArgumentParserBridge`1.HelpMessage">
      <summary>
            Gets the help message for the parser.
            </summary>
      <value>
            The help message for the parser.
            A message that may help a user determine how to format their argument such that the parser can understand it.
            </value>
    </member>
    <member name="P:Assets.Scripts.DevConsole.DevConsoleService.ArgumentParserBridge`1.Priority">
      <summary>
            Gets the priority of the parser.
            </summary>
      <value>
            The priority of the parser.
            Parsers with lower priority numbers can attempt to parse an argument before parsers of larger priority numbers.
            </value>
    </member>
    <member name="M:Assets.Scripts.DevConsole.DevConsoleService.ArgumentParserBridge`1.TryParse(System.String,`0@)">
      <summary>
            Tries to parse the argument to argument type handled by this parser.
            </summary>
      <param name="value">The argument value to parse.</param>
      <param name="result">The result of the parsing.</param>
      <returns>
        <c>true</c> if the argument was parsed successfully, <c>false</c> otherwise.
            </returns>
    </member>
    <member name="T:Assets.Scripts.DisableScript">
      <summary>
            Disables the game object on startup.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="M:Assets.Scripts.DisableScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="T:Assets.Scripts.DOTweenPlugins.ShipNodeExtensions">
      <summary>
            DOTween related extension methods for the <see cref="T:Assets.Scripts.Flight.Sim.ShipNode" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.DOTweenPlugins.ShipNodeExtensions.DOMove(Assets.Scripts.Flight.Sim.ShipNode,UnityEngine.Vector3d,System.Single)">
      <summary>
            Moves the position of the ship node.
            </summary>
      <param name="shipNode">The ship node to move.</param>
      <param name="endPosition">The end position.</param>
      <param name="duration">The duration of the move.</param>
      <returns>The tweener responsible for doing the move.</returns>
    </member>
    <member name="M:Assets.Scripts.DOTweenPlugins.ShipNodeExtensions.DOMove(Assets.Scripts.Flight.Sim.ShipNode,UnityEngine.Vector3d,UnityEngine.Vector3d,System.Single)">
      <summary>
            Moves the position of the ship node.
            </summary>
      <param name="shipNode">The ship node to move.</param>
      <param name="startPosition">The start position.</param>
      <param name="endPosition">The end position.</param>
      <param name="duration">The duration of the move.</param>
      <returns>The tweener responsible for doing the move.</returns>
    </member>
    <member name="T:Assets.Scripts.DOTweenPlugins.Vector3dPlugin">
      <summary>
            A custom DOTween plugin for a <see cref="T:UnityEngine.Vector3d" /></summary>
      <seealso cref="!:DG.Tweening.Plugins.Core.ABSTweenPlugin&lt;UnityEngine.Vector3d, UnityEngine.Vector3d, DG.Tweening.Plugins.Options.VectorOptions&gt;" />
    </member>
    <member name="F:Assets.Scripts.DOTweenPlugins.Vector3dPlugin._instance">
      <summary>
            The reusable static instance of the plugin.
            </summary>
    </member>
    <member name="P:Assets.Scripts.DOTweenPlugins.Vector3dPlugin.Instance">
      <summary>
            Gets the reusable static instance of the plugin.
            </summary>
      <value>
            The reusable static instance of the plugin.
            </value>
    </member>
    <member name="M:Assets.Scripts.DOTweenPlugins.Vector3dPlugin.ConvertToStartValue(DG.Tweening.Core.TweenerCore{UnityEngine.Vector3d,UnityEngine.Vector3d,DG.Tweening.Plugins.Options.VectorOptions},UnityEngine.Vector3d)">
      <summary>
            Used by special plugins, just let it return the given value.
            </summary>
      <param name="tween">The tween.</param>
      <param name="value">The to return value.</param>
      <returns>The value.</returns>
    </member>
    <member name="M:Assets.Scripts.DOTweenPlugins.Vector3dPlugin.EvaluateAndApply(DG.Tweening.Plugins.Options.VectorOptions,DG.Tweening.Tween,System.Boolean,DG.Tweening.Core.DOGetter{UnityEngine.Vector3d},DG.Tweening.Core.DOSetter{UnityEngine.Vector3d},System.Single,UnityEngine.Vector3d,UnityEngine.Vector3d,System.Single,System.Boolean,DG.Tweening.Core.Enums.UpdateNotice)">
      <summary>
            Evaluates the tween, calculating its current value based on the given time and ease, and then applies it to the target.
            </summary>
      <param name="options">The tween options.</param>
      <param name="tween">The tween.</param>
      <param name="isRelative">If set to <c>true</c> the tween is a relative tween.</param>
      <param name="getter">The getter for the value.</param>
      <param name="setter">The setter for the value.</param>
      <param name="elapsed">The elapsed time.</param>
      <param name="startValue">The start value for the tween.</param>
      <param name="changeValue">The change value for the tween.</param>
      <param name="duration">The duration of the tween.</param>
      <param name="usingInversePosition">If set to <c>true</c> the tween is using inverse position.</param>
      <param name="updateNotice">The update notice.</param>
    </member>
    <member name="M:Assets.Scripts.DOTweenPlugins.Vector3dPlugin.GetSpeedBasedDuration(DG.Tweening.Plugins.Options.VectorOptions,System.Single,UnityEngine.Vector3d)">
      <summary>
            Gets the duration of the speed based tween.
            </summary>
      <param name="options">The tween options.</param>
      <param name="unitsXSecond">The speed given in the number of seconds per unit.</param>
      <param name="changeValue">The change value.</param>
      <returns>The duration of the tween.</returns>
    </member>
    <member name="M:Assets.Scripts.DOTweenPlugins.Vector3dPlugin.Reset(DG.Tweening.Core.TweenerCore{UnityEngine.Vector3d,UnityEngine.Vector3d,DG.Tweening.Plugins.Options.VectorOptions})">
      <summary>
            Resets the specified tween.
            </summary>
      <param name="tween">The tween.</param>
    </member>
    <member name="M:Assets.Scripts.DOTweenPlugins.Vector3dPlugin.SetChangeValue(DG.Tweening.Core.TweenerCore{UnityEngine.Vector3d,UnityEngine.Vector3d,DG.Tweening.Plugins.Options.VectorOptions})">
      <summary>
            Sets the overall change value of the tween.
            </summary>
      <param name="tween">The tween.</param>
    </member>
    <member name="M:Assets.Scripts.DOTweenPlugins.Vector3dPlugin.SetFrom(DG.Tweening.Core.TweenerCore{UnityEngine.Vector3d,UnityEngine.Vector3d,DG.Tweening.Plugins.Options.VectorOptions},System.Boolean)">
      <summary>
            Sets the values in case of a 'From' tween.
            </summary>
      <param name="tween">The tween.</param>
      <param name="isRelative">If set to <c>true</c> the tween is a relative tween.</param>
    </member>
    <member name="M:Assets.Scripts.DOTweenPlugins.Vector3dPlugin.SetRelativeEndValue(DG.Tweening.Core.TweenerCore{UnityEngine.Vector3d,UnityEngine.Vector3d,DG.Tweening.Plugins.Options.VectorOptions})">
      <summary>
            Determines the correct endValue in case this is a relative tween.
            </summary>
      <param name="t">The tween.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.ExplosionManagerScript">
      <summary>
            Manages explosions in the flight scene.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionManagerScript._cascades">
      <summary>
            The array that tracks any cascading explosions, which are explosions that were created
            by other explosions.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionManagerScript._maxExplosionScale">
      <summary>
            The maximum explosion effect transform scale.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionManagerScript._minExplosionScale">
      <summary>
            The minimum explosion effect transform scale.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionManagerScript._pool">
      <summary>
            The pool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionManagerScript._scale">
      <summary>
            The scale, applied after scale power to adjust the explosion effect transform scale.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionManagerScript._scalePower">
      <summary>
            The scale power used to adjust magnitude to an explosion effect transform scale.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.ExplosionManagerScript.BodyCollisionExplosionsEnabled">
      <summary>
            Gets a value indicating whether explosions resulting from body collisions are enabled.
            </summary>
      <value>
        <c>true</c> if explosions resulting from body collisions are enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionManagerScript.CreateExplosion(System.Collections.Generic.IEnumerable{ModApi.Craft.Parts.PartData},UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Int32)">
      <summary>
            Creates the explosion.
            </summary>
      <param name="parts">The parts that should be considered for adding an explosive force with this explosion.</param>
      <param name="position">The position of the explosion.</param>
      <param name="velocity">The velocity of the explosion.</param>
      <param name="magnitude">The magnitude of the force of the explosion at one meter distance acting on one meter^2 of surface area.</param>
      <param name="explosionCascadeCount">The number of explosions that have cascaded to create this explosion.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionManagerScript.LoadExplosionPrefab(ModApi.Settings.VisualEffectsQualitySettings.ExplosionQuality)">
      <summary>
            Loads the explosion prefab with the specified quality.
            </summary>
      <param name="explosionQuality">The explosion quality.</param>
      <returns>
            The explosion prefab.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionManagerScript.GetNextExplosionFromPool">
      <summary>
            Gets the next explosion from pool.
            </summary>
      <returns>The explosion script, or null if there are none available.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionManagerScript.InitializePool">
      <summary>
            Initializes the pool with the current quality setting.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionManagerScript.OnDestroy">
      <summary>
            Called when the explosion manager is being destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionManagerScript.OnExplosionQualitySettingsChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.VisualEffectsQualitySettings})">
      <summary>
            Called when the explosion quality settings have changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingsChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionManagerScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionManagerScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionManagerScript.UpdateEventSubscriptions(System.Boolean)">
      <summary>
            Updates the event subscriptions.
            </summary>
      <param name="subscribe">if set to <c>true</c> then subscribe. Otherwise, unsubscribe.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.ExplosionManagerScript.CascadeExplosion">
      <summary>
            Holds a reference to a part that should explode at a short time in the future, as a result of another explosion.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.ExplosionManagerScript.CascadeExplosion.NumCascades">
      <summary>
            Gets or sets the number cascades.
            </summary>
      <value>
            The number cascades.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ExplosionManagerScript.CascadeExplosion.PartScript">
      <summary>
            Gets or sets the part.
            </summary>
      <value>
            The part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ExplosionManagerScript.CascadeExplosion.Power">
      <summary>
            Gets or sets the power.
            </summary>
      <value>
            The power.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ExplosionManagerScript.CascadeExplosion.Timer">
      <summary>
            Gets or sets the timer. When it hits zero, the cascade will explode.
            </summary>
      <value>
            The timer.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.ExplosionScript">
      <summary>
            Script for explosions.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionScript._audioSource">
      <summary>
            The audio source
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionScript._duration">
      <summary>
            The duration of the explosion effect.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionScript._particleSystems">
      <summary>
            The particle systems
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ExplosionScript._timer">
      <summary>
            The timer
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.ExplosionScript.Alive">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.ExplosionScript" /> is alive.
            </summary>
      <value>
        <c>true</c> if alive; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ExplosionScript.Velocity">
      <summary>
            Gets the velocity of the explosion.
            </summary>
      <value>
            The velocity of the explosion.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionScript.Initialize(UnityEngine.AudioClip)">
      <summary>
            Starts this instance.
            </summary>
      <param name="audioClip">The audio clip.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionScript.Play(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
            Plays the explosion visual and audio effect.
            </summary>
      <param name="position">The position.</param>
      <param name="velocity">The velocity.</param>
      <param name="scale">The scale.</param>
      <param name="volume">The volume.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.ExplosionScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.FlightControls">
      <summary>
            Class that manages inputs for the craft controls.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightControls._craftNode">
      <summary>
            The craft node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightControls._flightScene">
      <summary>
            The flight scene
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightControls._navSphere">
      <summary>
            The navigation sphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightControls._nullControls">
      <summary>
            The null controls object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightControls._throttleIncrement">
      <summary>
            The throttle increment.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightControls.#ctor(ModApi.Flight.UI.INavSphere)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.FlightControls" /> class.
            </summary>
      <param name="navSphere">The navigation sphere.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightControls.Controls">
      <summary>
            Gets the craft controls.
            </summary>
      <value>
            The craft controls.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightControls.CommandPod">
      <summary>
            Gets the command pod.
            </summary>
      <value>
            The command pod.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightControls.ActivateStage">
      <summary>
            Activates the stage.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightControls.GetActivationGroupStatus(System.Int32)">
      <summary>
            Gets the activation group status.
            </summary>
      <param name="activationGroup">The activation group.</param>
      <returns>The activation group status.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightControls.SetCraftNode(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Sets the craft node.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightControls.ToggleActivationGroup(System.Int32)">
      <summary>
            Toggles the activation group.
            </summary>
      <param name="activationGroup">The activation group.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightControls.Update(System.Single)">
      <summary>
            Updates this instance.
            </summary>
      <param name="timeStep">The time step.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightControls.GetControlInput(ModApi.Input.IGameInput)">
      <summary>
            Gets the control input accounting for input overrides.
            </summary>
      <param name="input">The input to get.</param>
      <returns>The control input accounting for input overrides.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.FlightLog">
      <summary>
            Records data about the current flight.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightLog._framesSinceLastSample">
      <summary>
            The frames since last sample of position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightLog._lastCraftParent">
      <summary>
            The craft's parent on the last update.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightLog._lastCraftPosition">
      <summary>
            The last craft position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightLog._maxAerodynamicForce">
      <summary>
            The maximum aerodynamic force experienced so far.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightLog.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.FlightLog" /> class.
            </summary>
      <param name="isNewLaunch">if set to <c>true</c> [is new launch].</param>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightLog.DistanceTraveled">
      <summary>
            Gets the distance traveled in meters.
            </summary>
      <value>
            The distance traveled.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightLog.FlightTime">
      <summary>
            Gets the duration of this flight, in seconds.
            </summary>
      <value>
            The flight time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightLog.IsNewLaunch">
      <summary>
            Gets a value indicating whether this flight is a new launch.
            </summary>
      <value>
        <c>true</c> if this instance is new launch; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightLog.MaxAltitude">
      <summary>
            Gets the maximum altitude achieved in this flight in m.
            </summary>
      <value>
            The maximum altitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightLog.MaxQ">
      <summary>
            Gets the altitude of max Q.
            </summary>
      <value>
            The altitude of max Q.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightLog.MaxVelocity">
      <summary>
            Gets the maximum velocity attained in this flight in m/s.
            </summary>
      <value>
            The maximum velocity.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightLog.Update(ModApi.Craft.ICraftNode,System.Double)">
      <summary>
            Updates the specified delta time.
            </summary>
      <param name="playerCraftNode">The player craft node.</param>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightLog.CalculateAerodynamicForce(System.Double,System.Double)">
      <summary>
            Calculates the aerodynamic force.
            </summary>
      <param name="density">The density.</param>
      <param name="velocityMagnitude">The velocity magnitude.</param>
      <returns>The aerodynamic force.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.FlightSceneBenchmarkType">
      <summary>
            An enumeration that defines the available benchmarks for the flight scene.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkType.None">
      <summary>
            A value representing no benchmark.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkType.PlanetZoom">
      <summary>
            The planet zoom benchmark.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkType.PlanetRotateOrbitCubemapHeight">
      <summary>
            The planet rotate orbit cubemap height
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkType.PlanetRotateOrbitHigh">
      <summary>
            The planet rotation in high orbit benchmark.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkType.PlanetRotateOrbitLow">
      <summary>
            The planet rotation in low orbit benchmark.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkType.PlanetRotateSurface">
      <summary>
            The planet rotation near the surface benchmark.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkType.PlanetZoomAndRotate">
      <summary>
            The planet zoom and rotate benchmark.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkType.PlanetSurfaceSpin">
      <summary>
            The planet surface spin benchmark.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.FlightSceneBenchmarkScript">
      <summary>
            The script that manages flight scene benchmarks.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkScript._atmospheretBenchmarkScript">
      <summary>
            The benchmarks used in the atmosphere benchmark script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkScript._currentBenchmarkScript">
      <summary>
            The current benchmark script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkScript._defaultBenchmarkScript">
      <summary>
            The benchmarks used in the default benchmark script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkScript._flightSceneLoadParameters">
      <summary>
            The flight scene load parameters.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkScript._memoryAllocated">
      <summary>
            A variable used to track the estimated total amount of memory that has been allocated by Mono since tracking started.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkScript._memoryCollectionCount">
      <summary>
            The estimated number of times that the garbage collector has ran since tracking started.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkScript._memoryLastSize">
      <summary>
            A variable used to track the last known size of the memory used by Mono.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkScript._memoryPeak">
      <summary>
            The peak memory during the benchmark.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneBenchmarkScript._rotationAroundPlanet">
      <summary>
            A temp variable used for tweening rotation around the planet during some benchmarks.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Scripts.Flight.FlightSceneBenchmarkScript" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkComment">
      <summary>
            Gets the benchmark comment.
            </summary>
      <value>
            The benchmark comment.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.CompletedCount">
      <summary>
            Gets the number of benchmarks completed this session.
            </summary>
      <value>
            The number of benchmarks completed this session.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.CurrentBenchmark">
      <summary>
            Gets the current benchmark being executed.
            </summary>
      <value>
            The current benchmark being executed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.IsBenchmarkAllowed">
      <summary>
            Gets a value indicating whether benchmark is currently allowed.
            </summary>
      <value>
        <c>true</c> if this instance is benchmark allowed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkType">
      <summary>
            Gets the type of the benchmark being run.
            </summary>
      <value>
            The type of the benchmark being run.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.CraftStartPosition">
      <summary>
            Gets the craft start position.
            </summary>
      <value>
            The craft start position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.IsRunning">
      <summary>
            Gets a value indicating whether this benchmark is running.
            </summary>
      <value>
        <c>true</c> if this benchmark is running; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.PlanetScale">
      <summary>
            Gets the planet scale used by the solar system.
            </summary>
      <value>
            The planet scale used by the solar system.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.RunBenchmark(Assets.Scripts.Flight.FlightSceneBenchmarkType)">
      <summary>
            Runs the specified benchmark.
            </summary>
      <param name="benchmarkType">The type of the benchmark to run.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.RunBenchmarkScriptAtmosphere">
      <summary>
            Runs the default benchmark script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.RunBenchmarkScriptDefault(System.String)">
      <summary>
            Runs the default benchmark script.
            </summary>
      <param name="commentText">The benchmark comment text.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.StartBenchmark">
      <summary>
            Starts the benchmark.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.FixedUpdate">
      <summary>
            This function is called every fixed framerate frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.GetBenchmarkFilePath(System.String)">
      <summary>
            Gets the benchmark file path.
            </summary>
      <param name="name">The name.</param>
      <returns>The path.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.GetEarthScenarioDefaultStartPosition(System.Double)">
      <summary>
            Gets the earth scenario's default start position.
            </summary>
      <param name="distanceFromCenter">The distance from center of the earth.</param>
      <returns>Earth scenario's default start position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.LoadFlightScene(ModApi.Scenes.Parameters.FlightSceneLoadParameters)">
      <summary>
            Loads the flight scene.
            </summary>
      <param name="loadParameters">The load parameters.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.CreateCameraTarget">
      <summary>
            Creates the camera target.
            </summary>
      <returns>The camera target transform.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.HideAndFreezeShip">
      <summary>
            Hides the mesh renderers for the player's craft and makes them kinematic.
            </summary>
      <returns>The craft script.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.InitializeBenchmarkCommon(Assets.Scripts.Flight.FlightSceneBenchmarkType)">
      <summary>
            Initializes the benchmark's common (shared) stuff.
            </summary>
      <param name="benchmarkType">Type of the benchmark.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.MonitorMemoryCoroutine">
      <summary>
            A coroutine that monitors the estimated memory footprint of Mono.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.PlanetRotateCoroutine(System.Single,System.Single,UnityEngine.Transform)">
      <summary>
            A coroutine used for rotating around a planet.
            </summary>
      <param name="planetRotation">The planet rotation.</param>
      <param name="rotationDuration">Duration of the rotation.</param>
      <param name="cameraTarget">The camera target.</param>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.PlanetSurfaceRotateCameraCoroutine(System.Single,System.Single,UnityEngine.Transform)">
      <summary>
            A coroutine used for rotating the camera in a circle while looking down on the surface of the planet.
            </summary>
      <param name="cameraAngle">The angle of the camera.</param>
      <param name="rotationTime">The amount of time spent rotating 360 degrees.</param>
      <param name="cameraTarget">The camera target.</param>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.PlanetZoomCoroutine(System.Double,System.Single,System.Single,System.Single,UnityEngine.Transform)">
      <summary>
            A coroutine used for zooming in or out of a planet.
            </summary>
      <param name="zoomAltitude">The zoom altitude.</param>
      <param name="surfaceCameraAngle">The surface camera angle.</param>
      <param name="zoomTime">The zoom time.</param>
      <param name="cameraAngleTime">The camera angle time.</param>
      <param name="cameraTarget">The camera target.</param>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.RunBenchmarkCoroutine">
      <summary>
            The coroutine used for executing the benchmark.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.RunBenchmarkPlanetRotateOrbitCoroutine">
      <summary>
            The coroutine for running the planet rotation in orbit benchmark.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.RunBenchmarkPlanetRotateSurfaceCoroutine">
      <summary>
            The coroutine for running the planet rotation near surface benchmark.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.RunBenchmarkPlanetSurfaceSpinCoroutine">
      <summary>
            The coroutine for running the planet surface spin benchmark.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.RunBenchmarkPlanetZoomAndRotateCoroutine">
      <summary>
            The coroutine for running the planet zoom and rotate benchmark.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.RunBenchmarkPlanetZoomCoroutine">
      <summary>
            The coroutine for running the planet zoom benchmark.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.UpdateMemoryUsage">
      <summary>
            Updates the estimated memory usage stats by keeping track of what the Mono used memory footprint is doing.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkResult">
      <summary>
            A class representing the results of a single benchmark.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkResult.BenchmarkType">
      <summary>
            Gets or sets the type of the benchmark.
            </summary>
      <value>
            The type of the benchmark.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkResult.FpsAverage">
      <summary>
            Gets or sets the average FPS.
            </summary>
      <value>
            The average FPS.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkResult.FpsMax">
      <summary>
            Gets or sets the max FPS.
            </summary>
      <value>
            The max FPS.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkResult.FpsMin">
      <summary>
            Gets or sets the min FPS.
            </summary>
      <value>
            The min FPS.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkResult.MemoryAllocated">
      <summary>
            Gets or sets the memory allocated.
            </summary>
      <value>
            The memory allocated.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkResult.MemoryCollectionCount">
      <summary>
            Gets or sets the memory collection count.
            </summary>
      <value>
            The memory collection count.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkResult.MemoryPeak">
      <summary>
            Gets or sets the peak memory during the benchmark.
            </summary>
      <value>
            The peak memory during the benchmark.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkResult.GenerateXml">
      <summary>
            Generates the XML.
            </summary>
      <returns>The XML element.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkScript">
      <summary>
            A class representing a collection of benchmarks to be run and thier associated results.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkScript.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkScript" /> class.
            </summary>
      <param name="resultPath">The result file path.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkScript.#ctor(System.String,Assets.Scripts.Flight.FlightSceneBenchmarkType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkScript" /> class.
            </summary>
      <param name="resultPath">The result file path.</param>
      <param name="benchmarks">The benchmarks to be run as part of the script.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkScript.Benchmarks">
      <summary>
            Gets the benchmarks remaining to be run.
            </summary>
      <value>
            The benchmarks remaining to be run.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkScript.ResultPath">
      <summary>
            Gets the result path.
            </summary>
      <value>
            The result path.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkScript.Results">
      <summary>
            Gets the current set of results for the benchmarks in the script.
            </summary>
      <value>
            The current set of results for the benchmarks in the script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneBenchmarkScript.BenchmarkScript.UploadResults">
      <summary>
            Uploads the results.
            </summary>
      <returns>The web request.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.FlightSceneScript">
      <summary>
            The singleton script for the flight scene.
            </summary>
      <seealso cref="T:ModApi.Flight.IFlightScene" />
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneScript._instance">
      <summary>
            The singleton instance.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneScript._craftNode">
      <summary>
            The craft node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneScript._explosionManager">
      <summary>
            The explosion manager.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneScript._flightSceneUi">
      <summary>
            The flight scene UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneScript._saveFlightStateOnExit">
      <summary>
            A value indicating if the flight state should be saved when exiting the scene.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneScript._singleSoundManager">
      <summary>
            The single sound manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneScript._timeManager">
      <summary>
            The time manager.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.FlightSceneScript._viewManager">
      <summary>
            The ViewManagerScript
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.FlightSceneScript.ActiveCommandPodChanged">
      <summary>
            Occurs when the player's active command pod has changed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.FlightSceneScript.CraftChanged">
      <summary>
            Occurs when the craft node has changed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.FlightSceneScript.Initialized">
      <summary>
            Occurs when the flight scene has initialized and all nodes have been created. Occurs immediately if it has already been initialized.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.FlightSceneScript.PlayerChangedSoi">
      <summary>
            Occurs when the player changes soi.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.FlightSceneScript._initialized">
      <summary>
            Occurs when the flight scene has initialized and all nodes have been created. Occurs immediately if it has already been initialized.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.Instance">
      <summary>
            Gets the singleton instance.
            </summary>
      <value>
            The instance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.OnSingletonUpdated">
      <summary>
            Gets or sets the action that is executed when the singleton is updated.
            </summary>
      <value>
            The action that is executed when the singleton is updated.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.ReturnToSceneAfterFlight">
      <summary>
            Gets or sets the name of the scene to which to return after flight.
            </summary>
      <value>The name of the scene to which to return after flight.</value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.CraftBiomeData">
      <summary>
            Gets the player craft's biome data.
            </summary>
      <value>
            The player craft's biome data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.CraftNode">
      <summary>
            Gets the craft node.
            </summary>
      <value>
            The craft node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.DragCalculator">
      <summary>
            Gets the drag calculator.
            </summary>
      <value>
            The drag calculator.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.FlightControls">
      <summary>
            Gets the flight controls.
            </summary>
      <value>
            The flight controls.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.FlightLog">
      <summary>
            Gets the flight log.
            </summary>
      <value>
            The flight log.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.FlightSceneUI">
      <summary>
            Gets the flight scene UI.
            </summary>
      <value>
            The flight scene UI.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.FlightState">
      <summary>
            Gets the state of the flight.
            </summary>
      <value>
            The state of the flight.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.GameLoop">
      <summary>
            Gets the flight scene game loop manager.
            </summary>
      <value>
            The flight scene game loop manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.GameObject">
      <summary>
            Gets the game object the flight scene script is attached to.
            </summary>
      <value>
            The flight scene script game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.IocContainer">
      <summary>
            Gets the FlightScene's IoC container.
            </summary>
      <value>
            The FlightScene's IoC container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.IsInitialized">
      <summary>
            Gets a value indicating whether the flight scene has finished initialization.
            </summary>
      <value>
        <c>true</c> if the flight scene has finished initialization; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.SingleSoundManager">
      <summary>
            Gets the single sound manager.
            </summary>
      <value>
            The single sound manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.TimeManager">
      <summary>
            Gets the time manager.
            </summary>
      <value>
            The time manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.ViewManager">
      <summary>
            Gets the view manager.
            </summary>
      <value>
            The view manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.FlightSceneScript.ModApi#Flight#IFlightScene#ViewManager">
      <summary>
            Gets the view manager.
            </summary>
      <value>
            The view manager.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.ChangePlayersActiveCommandPodImmediate(ModApi.Craft.Parts.ICommandPod,ModApi.Craft.ICraftNode,System.Boolean)">
      <summary>
            Changes the player's currently active command pod immediately without reloading the flight scene.
            </summary>
      <param name="commandPod">The command pod to switch to.</param>
      <param name="craftNode">The craft node that contains the command pod.</param>
      <param name="ignoreDistance">if set to <c>true</c> then ignore distance and switch crafts no matter how far apart they are.</param>
      <returns>
            True if the command pod was switched to successfully; otherwise false.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.ChangePlayersActiveCraftNode(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Changes the players active craft node and reloads the scene.
            </summary>
      <param name="craftNode">The selected craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.CreateExplosion(System.Collections.Generic.IEnumerable{ModApi.Craft.Parts.PartData},UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Int32)">
      <summary>
            Creates an explosion.
            </summary>
      <param name="parts">The parts that should be considered for adding an explosive force with this explosion.</param>
      <param name="position">The position of the explosion.</param>
      <param name="velocity">The velocity of the explosion.</param>
      <param name="magnitude">The magnitude of the explosion.</param>
      <param name="explosionCascadeCount">The number of explosions that have cascaded to create this explosion.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.ExitFlightScene(System.Boolean)">
      <summary>
            Exits the flight scene.
            </summary>
      <param name="saveFlightState">if set to <c>true</c> then save the flight state.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.OnFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called every frame during the game loop fixed update cycle.
            </summary>
      <param name="frame">The frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.OnLateUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called every frame during the game loop late update cycle.
            </summary>
      <param name="frame">The frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.OnUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called every frame during the game loop update cycle.
            </summary>
      <param name="frame">The frame data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.Relaunch(ModApi.State.LaunchLocation)">
      <summary>
            Relaunches the craft at the specified launch location.
            </summary>
      <param name="launchLocation">The launch location.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.ReloadFlightScene(System.Boolean,ModApi.Scenes.Parameters.FlightSceneLoadParameters)">
      <summary>
            Reloads the flight scene.
            </summary>
      <param name="saveFlightState">If set to <c>true</c> then save flight state before reloading.</param>
      <param name="sceneLoadParameters">The scene load parameters.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.SaveLaunchLocation(System.String,ModApi.Flight.Sim.IPlanetNode,UnityEngine.Vector3d,UnityEngine.Vector3d,UnityEngine.Quaterniond,ModApi.Flight.GameView.IReferenceFrame,ModApi.State.LaunchLocationType,System.Boolean)">
      <summary>
            Saves the launch location.
            </summary>
      <param name="name">The name.</param>
      <param name="planetNode">The planet node.</param>
      <param name="position">The position.</param>
      <param name="velocity">The velocity of the craft at the launch location.</param>
      <param name="heading">The heading.</param>
      <param name="referenceFrame">The reference frame.</param>
      <param name="type">The type of the launch location to create.</param>
      <param name="userCreated">A value indicating if the launch location is user created.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.CheckSoiTransition(Assets.Scripts.Flight.Sim.ShipNode)">
      <summary>
            Checks if the ship has moved to another SOI.
            </summary>
      <param name="ship">The ship.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.ClearStartLocation(Assets.Scripts.Flight.Sim.CraftNode,System.Double,System.Double)">
      <summary>
            Clears the start location of any other craft.
            </summary>
      <param name="craftNode">The craft node.</param>
      <param name="maxVerticalDistance">Defines the vertical range in which crafts will be cleared from the start location.</param>
      <param name="maxRadialDistance">Defines the radial range in which crafts will be cleared from the start location.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.FlightEnd">
      <summary>
            Ends the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.LaunchNewCraft(System.String,System.String,ModApi.State.LaunchLocation)">
      <summary>
            Loads the player craft.
            </summary>
      <param name="craftId">The craft identifier.</param>
      <param name="craftNodeName">Name of the craft node.</param>
      <param name="location">The location.</param>
      <returns>
            The new craft node.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.OnPlayerCraftActiveCommandPodChanged(ModApi.Craft.ICraftNode,ModApi.Craft.Parts.ICommandPod,ModApi.Craft.Parts.ICommandPod)">
      <summary>
            Called when the player-craft's active command pod has changed.
            </summary>
      <param name="source">The source.</param>
      <param name="newPod">The new pod.</param>
      <param name="oldPod">The old pod.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.OnSceneUnloading(System.Object,ModApi.Scenes.Events.SceneEventArgs)">
      <summary>
            Called when the scene is unloading.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Scenes.Events.SceneEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.ProcessInputs">
      <summary>
            Handles the inputs.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.QuickLoad">
      <summary>
            Restores the quick save.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.QuickSave">
      <summary>
            Creates the quick save.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.SaveLaunchLocation(System.String)">
      <summary>
            Saves the launch location with the specified name.
            </summary>
      <param name="name">The name.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.SaveLaunchLocationPrompt">
      <summary>
            Prompts the user to save a launch location.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.SetCraftNode(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Sets the current craft node.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.SwitchToNextCommandPod(System.Boolean)">
      <summary>
            Switches control to the next command pod.
            </summary>
      <param name="reverse">If set to <c>true</c>, command pods will be searched in reverse order (selects previous command pod).</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.TeleportPlayerToTarget">
      <summary>
            Snaps to target.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.ToggleInfiniteFuel">
      <summary>
            Toggles the infinite fuel cheat code.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.ToggleInterpolation(UnityEngine.RigidbodyInterpolation)">
      <summary>
            Toggles the interpolation method for the craft's bodies.
            </summary>
      <param name="interpolationMethod">The interpolation method to toggle.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.FlightSceneScript.TransitionShipToNewPlanetSoi(Assets.Scripts.Flight.Sim.ShipNode,ModApi.Flight.Sim.IPlanetNode,UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Transitions the ship to new planet SOI.
            </summary>
      <param name="ship">The ship.</param>
      <param name="newParent">The new parent planet.</param>
      <param name="newPosition">The new position.</param>
      <param name="newVelocity">The new velocity.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.Effects.CameraShakeScript">
      <summary>
            Script for... Do I really need to explain this to you? Really? Okay, fine. It's for shaking the camera. Happy?
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._currentRotationOffset">
      <summary>
            The current rotation offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._gameCamera">
      <summary>
            The game camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._offsets">
      <summary>
            The last offsets
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._shakes">
      <summary>
            The shakes (intensity, frequency)
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._shakesAwaitingRemoval">
      <summary>
            The list of offsets awaiting removal, used to smooth offset back to zero in case it is just dropped.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._shakeTimes">
      <summary>
            The shake times
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._subFrequency">
      <summary>
            The sub frequency TODO: Remove this test code
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._subIntensity">
      <summary>
            The sub intensity TODO: Remove this test code
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._testFrequency">
      <summary>
            The test frequency TODO: Remove this test code.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.CameraShakeScript._testIntensity">
      <summary>
            The test intensity TODO: Remove this test code.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.AddShake(ModApi.Flight.GameView.CameraShakeFloat,ModApi.Flight.GameView.CameraShakeFloat)">
      <summary>
            Add the shake.
            </summary>
      <param name="intensity">The intensity.</param>
      <param name="frequency">The frequency.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.RemoveShake(ModApi.Flight.GameView.CameraShakeFloat,ModApi.Flight.GameView.CameraShakeFloat)">
      <summary>
            Removes the shake.
            </summary>
      <param name="intensity">The intensity.</param>
      <param name="frequency">The frequency.</param>
      <exception cref="T:System.Exception">Couldn't find camera shake with intensity method " + intensity.Method.Name + " and frequency method " + frequency.Method.Name</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.AddSubShake">
      <summary>
            Adds the sub shake. TODO: Remove this test code.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.GetShakeRotation">
      <summary>
            Gets the shake rotation.
            </summary>
      <returns>The current rotation offset</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.GetSubShakeFrequency">
      <summary>
            Gets the sub shake frequency. TODO: Remove this test code
            </summary>
      <returns>Sub shake frequency</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.GetSubShakeIntensity">
      <summary>
            Gets the sub shake intensity. TODO: Remove this test code
            </summary>
      <returns>Sub shake intensity</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.GetTestShakeFrequency">
      <summary>
            Gets the test shake frequency. TODO: Remove this test code.
            </summary>
      <returns>Test shake frequency</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.GetTestShakeIntensity">
      <summary>
            Gets the test shake intensity. TODO: Remove this test code
            </summary>
      <returns>Test shake intensity</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.OnDisable">
      <summary>
            Called when [disable]. TODO: Remove this test code
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.OnEnable">
      <summary>
            Called when [enable]. TODO: Remove this test code
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.RemoveSubShake">
      <summary>
            Removes the sub shake. TODO: Remove this test code.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.CameraShakeScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.Effects.LaunchParticleController">
      <summary>
            Script for controlling steam particles generated by rocket launch.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._additionalVectors">
      <summary>
            The additional vectors
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._distanceToEmissionRate">
      <summary>
            The speed to emission rate
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._emissionDistanceDivisor">
      <summary>
            The value that the current distance is divided by to evaluate it on the curve
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._emissionDistanceMultiplier">
      <summary>
            The value that distance to emission is multiplied by after evaluating it on the curve.
            This is used to calculate the distance from the last emission that must be reached before emitting again.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._lastEmittedPositions">
      <summary>
            The last emitted positions
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._lastParticleCount">
      <summary>
            The last particle count
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._maxVelocityDirection">
      <summary>
            The maximum velocity direction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._minVelocityDirection">
      <summary>
            The minimum velocity direction
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._particles">
      <summary>
            The particles
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._particleSystem">
      <summary>
            The particle system
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.LaunchParticleController._subSystems">
      <summary>
            The sub systems
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Effects.LaunchParticleController.EmissionDistanceDivisor">
      <summary>
            Gets or sets the value that the current distance is divided by to evaluate it on the curve
            </summary>
      <value>
            The emission distance divisor.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Effects.LaunchParticleController.EmissionDistanceMultiplier">
      <summary>
            Gets or sets the value that distance to emission is multiplied by after evaluating it on the curve.
            This is used to calculate the distance from the last emission that must be reached before emitting again.
            </summary>
      <value>
            The emission distance multiplier.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.LaunchParticleController.TriggerSteamParticles">
      <summary>
            Triggers the steam particles.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.LaunchParticleController.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.LaunchParticleController.GetNewRandomDirection">
      <summary>
            Gets a new random direction.
            </summary>
      <returns>A randomly generated direction</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.LaunchParticleController.InitializeArrays">
      <summary>
            Initializes the arrays.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.LaunchParticleController.Update">
      <summary>
            Unity update method, called every frame.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions">
      <summary>
            Shakes the camera based on flight conditions, such as AGL+engine throttle, heat damage, etc.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._cameraShake">
      <summary>
            The camera shake
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._frequency">
      <summary>
            The current shake frequency
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._groundShakeMethod">
      <summary>
            The ground shake method
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._intensity">
      <summary>
            The current shake intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._magicDistance">
      <summary>
            The magic distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._magicFrequencyMultiplier">
      <summary>
            The magic frequency multiplier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._magicIntensityMultiplier">
      <summary>
            The magic intensity multiplier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._magicMinDistance">
      <summary>
            The magic minimum distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._magicThrust">
      <summary>
            The magic thrust
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._maxFrequency">
      <summary>
            The maximum frequency
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions._maxIntensity">
      <summary>
            The maximum intensity
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.GSM">
      <summary>
            Ground Shake Methods
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.GSM.One">
      <summary>
            The one
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.GSM.Two">
      <summary>
            The two
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.GSM.Three">
      <summary>
            The three
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.GetShakeFrequency">
      <summary>
            Gets the current shake frequency.
            </summary>
      <returns>The current shake frequency</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.GetShakeIntensity">
      <summary>
            Gets the current shake intensity.
            </summary>
      <returns>The current shake intensity</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.OnDestroy">
      <summary>
            Called when [destroy].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.OnDisable">
      <summary>
            Called when [disable].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Effects.ShakeCameraByFlightConditions.Update">
      <summary>
            Unity update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.Effects.LaunchPadLightScript">
      <summary>
            Script for the launch pad light that turns it on and off at appropriate times.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchPadLightScript._launchLight">
      <summary>
            The launch light
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchPadLightScript._sunLight">
      <summary>
            The sun light
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchPadLightScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchPadLightScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchPadLightScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchPadLightScript.ApplyShadowQualitySettings(ModApi.Settings.ShadowQualitySettings)">
      <summary>
            Applies the shadow quality settings.
            </summary>
      <param name="quality">The quality settings.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchPadLightScript.OnShadowSettingsChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.ShadowQualitySettings})">
      <summary>
            Called when shadow quality settings change.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingsChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript">
      <summary>
            Script for a launch smoke.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript._intensity">
      <summary>
            The intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript._rate">
      <summary>
            The rate
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript._scale">
      <summary>
            The scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript._time">
      <summary>
            The time
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript.BaseScale">
      <summary>
            Gets or sets the base scale for the smoke.
            </summary>
      <value>
            The base scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript.BaseSpeed">
      <summary>
            Gets or sets the base speed.
            </summary>
      <value>
            The base speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript.RotationSpeed">
      <summary>
            Gets or sets the rotation speed.
            </summary>
      <value>
            The rotation speed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript.Zone">
      <summary>
            Gets or sets the zone.
            </summary>
      <value>
            The zone.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript.AnimateTowardsCenterOfThrust(UnityEngine.Vector3)">
      <summary>
            Animates the position of the smoke towards the center of thrust.
            </summary>
      <param name="center">The center.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript.SetIntensity(System.Single)">
      <summary>
            Sets the intensity.
            </summary>
      <param name="intensity">The intensity.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript">
      <summary>
            Simulates smoke created by engines while launching.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.MaxSmokeObjects">
      <summary>
            The maximum smoke objects.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._addSmokeTimer">
      <summary>
            The add smoke timer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._cloudCamera">
      <summary>
            The cloud camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._engineFalloffDistance">
      <summary>
            The engine falloff distance, after this point the engines contribution will start to fade.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._engineMaxDistance">
      <summary>
            The engine maximum distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._engines">
      <summary>
            The engines currently contributing to the smoke.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._intensity">
      <summary>
            The current intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._intensityDivider">
      <summary>
            The intensity divider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._intensityExponent">
      <summary>
            The intensity exponent.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._removeEngines">
      <summary>
            The engines that need to be removed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript._smokes">
      <summary>
            The smokes
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.AddSmoke(UnityEngine.Vector3)">
      <summary>
            Adds the smoke.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.RemoveSmoke(Assets.Scripts.Flight.GameView.Effects.LaunchSmokeScript)">
      <summary>
            Destroys the smoke.
            </summary>
      <param name="launchSmokeScript">The launch smoke script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.DisableCloudCamera">
      <summary>
            Disables the cloud camera.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.ValidFuelType(ModApi.Craft.Propulsion.FuelType)">
      <summary>
            Checks if the type of the fuel should contribute to creating smoke.
            </summary>
      <param name="fuelType">Type of the fuel.</param>
      <returns>True if the fuel is valid.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.OnTriggerEnter(UnityEngine.Collider)">
      <summary>
            Called when a collider has entered the trigger.
            </summary>
      <param name="other">The other.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.OnTriggerExit(UnityEngine.Collider)">
      <summary>
            Called when a collider has exited the trigger.
            </summary>
      <param name="other">The other.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Effects.LaunchSmokeZoneScript.SetupCloudCamera">
      <summary>
            Sets up the cloud camera.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.GameCameraScript">
      <summary>
            Script for the camera that follows the player.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._cameraShake">
      <summary>
            The camera shake
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._currentRotation">
      <summary>
            The current rotation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._debugRotatePanEnabled">
      <summary>
            Set this flag to change the panning mode to rotate instead of translate the view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._defaultBloomIntensity">
      <summary>
            The default bloom intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._extendMaxZoom">
      <summary>
            Extend maximum camera zoom.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._farCamera">
      <summary>
            The far camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._flightSettings">
      <summary>
            The flight settings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._frustumCornersTemp">
      <summary>
            The temporary array used to hold the calculated frustum corners of a camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._gameView">
      <summary>
            The game view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._minHeightAboveSurface">
      <summary>
            The camera's minimum height above surface of the terrain.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._nearCamera">
      <summary>
            The near camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._panPositionOffset">
      <summary>
            The camera pan offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._panRotationOffset">
      <summary>
            The pan rotation offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._parentTransform">
      <summary>
            The parent's transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._planetLocked">
      <summary>
            Flag when the camera is locked so that the bottom of the screen is always towards the planet surface.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._planetPosition">
      <summary>
            The planet position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._positionOffsets">
      <summary>
            The position offsets
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._rotationOffsets">
      <summary>
            The rotation offsets
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._targetRotation">
      <summary>
            The target rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._targetZ">
      <summary>
            The target z
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._transform">
      <summary>
            The transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._transitioning">
      <summary>
            The transitioning flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._transitionTime">
      <summary>
            The transition time.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameCameraScript._upToSurfaceUpRotation">
      <summary>
            The rotation that takes Vector3.up to the planet's surface normal at the position of the camera.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.GameCameraScript.LoadedIntoGameView">
      <summary>
            Occurs when the node is loaded into the game view.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.GameCameraScript.UnloadedFromGameView">
      <summary>
            Occurs when the node is removed from the game view.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.AltitudeAboveSeaLevel">
      <summary>
            Gets the altitude above sea level.
            </summary>
      <value>
            The altitude above sea level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.CameraLookTarget">
      <summary>
            Gets or sets the position on the node where the camera should focus, in frame coordinates.
            </summary>
      <value>
            The camera target position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.CameraShake">
      <summary>
            Gets the camera shake.
            </summary>
      <value>
            The camera shake.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.CameraTargetPlanetPosition">
      <summary>
            Gets the position on the node where the camera should focus, in planet coordinates.
            </summary>
      <value>
            The camera target planet position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.CameraTargetPosition">
      <summary>
            Gets the position on the node where the camera should focus, in frame coordinates.
            </summary>
      <value>
            The camera target position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.CurrentRotation">
      <summary>
            Gets or sets the current rotation.
            </summary>
      <value>
            The current rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.FarCamera">
      <summary>
            Gets the far camera.
            </summary>
      <value>
            The far camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.FramePosition">
      <summary>
            Gets the frame position.
            </summary>
      <value>
            The frame position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.GameObject">
      <summary>
            Gets the corresponding game object.
            </summary>
      <value>
            The corresponding game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.ImageEffects">
      <summary>
            Gets the image effects.
            </summary>
      <value>
            The image effects.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.IsLoadedInGameView">
      <summary>
            Gets a value indicating whether this instance is loaded in game view.
            </summary>
      <value>
        <c>true</c> if this instance is loaded in game view; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.IsOffCenter">
      <summary>
            Gets a value indicating whether the camera is off-centered and can be re-centered.
            </summary>
      <value>
        <c>true</c> if this instance can be re-centered; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.IsPhysicsEnabled">
      <summary>
            Gets a value indicating whether physics is enabled.
            </summary>
      <value>
        <c>true</c> if physics is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.LockPosition">
      <summary>
            Gets or sets a value indicating whether to lock the camera's current position.
            </summary>
      <value>
        <c>true</c> if [lock position]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.NearCamera">
      <summary>
            Gets the near camera.
            </summary>
      <value>
            The near camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.PanningEnabled">
      <summary>
            Gets or sets a value indicating whether panning is enabled.
            </summary>
      <value>
        <c>true</c> if panning is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.PlanetPosition">
      <summary>
            Gets the planet position.
            </summary>
      <value>
            The planet position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.PlanetUpAngle">
      <summary>
            Gets the angle of the up angle in planet coordinates.
            </summary>
      <value>
            The up vector angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameCameraScript.Target">
      <summary>
            Gets or sets the target.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.LoadIntoGameView(ModApi.Flight.GameView.IGameView)">
      <summary>
            Called when the object should be loaded into the game view.
            </summary>
      <param name="gameView">The game view that the object is being loaded into.</param>
      <returns>
            The root transform of the game view object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.ModApi#Flight#GameView#IGameViewObject#OnReferenceFrameRecentered(ModApi.Flight.GameView.IReferenceFrame,UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Called when reference frame has been re-centered.
            </summary>
      <param name="referenceFrame">The reference frame.</param>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.Pan(UnityEngine.Vector2)">
      <summary>
            Pans by the specified delta.
            </summary>
      <param name="delta">The delta.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.RecalculateFrameState(ModApi.Flight.GameView.IReferenceFrame)">
      <summary>
            Called when the <see cref="T:ModApi.Flight.GameView.IGameViewObject" /> should re-calculate its state (position/velocity) within the reference frame.
            This may be called whenever the reference frame has been recentered, when the reference frame is rotated (if it is surface locked), or any time
            this object's coordinates (i.e. orbital params) are manually changed outside the physics simulation (ex. warp).
            </summary>
      <param name="referenceFrame">The reference frame.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.Recenter">
      <summary>
            Recenters the camera.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.RegisterPositionOffset(ModApi.Flight.GameView.CameraOffset)">
      <summary>
            Registers the position offset from the camera target, in frame coordinates.
            </summary>
      <param name="offset">The position offset.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.RegisterRotationOffset(ModApi.Flight.GameView.CameraOffset)">
      <summary>
            Registers the rotation offset, in camera local space.
            </summary>
      <param name="offset">The rotation offset.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.Rotate(UnityEngine.Vector2)">
      <summary>
            Rotates by the specified delta.
            </summary>
      <param name="delta">The delta.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.ScreenPointToRay(UnityEngine.Vector2)">
      <summary>
            Returns a ray going from camera through a screen point.
            </summary>
      <param name="screenPoint">The screen point.</param>
      <returns>
            The ray.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.SetPhysicsEnabled(System.Boolean,ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Enables/disables physics for the ship.
            </summary>
      <param name="enabled">if set to <c>true</c> then physics is enabled, otherwise <c>false</c>.</param>
      <param name="reason">The reason for the change.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.Tilt(System.Single)">
      <summary>
            Rotates the camera around its z-axis by the specified amount.
            </summary>
      <param name="delta">The delta.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.UnloadFromGameView(System.Boolean)">
      <summary>
            Called when the object should be unloaded from the game view.
            </summary>
      <param name="flightEnd">if set to <c>true</c> ship is being unloaded due to the flight ending.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.UpdateCamera(System.Boolean)">
      <summary>
            Updates the camera.
            </summary>
      <param name="recentering">if set to <c>true</c> then the camera is recentering in the reference frame.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.Zoom(System.Single)">
      <summary>
            Zooms the camera by the specified percentage. A percentage less than 1.0 would be zooming in towards
            the target. A percentage greater than 1 would be zooming out.
            </summary>
      <param name="zoomPercentage">The zoom percentage.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.InputRotationMultiplier">
      <summary>
            Gets the input rotation multiplier for the x and y axis.
            </summary>
      <returns>The input rotation multiplier for the x and y axis.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.GetPanPositionOffset">
      <summary>
            Gets the pan position offset.
            </summary>
      <returns>Pan position offset</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.GetPanRotationOffset">
      <summary>
            Gets the pan rotation offset.
            </summary>
      <returns>Pan rotation offset</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.OnCameraPreRender(UnityEngine.Camera)">
      <summary>
            Called before any camera starts to render.
            </summary>
      <param name="camera">The camera that is about to render.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.OrientCamera(System.Single)">
      <summary>
            Orients the camera.
            </summary>
      <param name="time">The time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.SetHdrEffectsEnabled(System.Boolean)">
      <summary>
            Sets the HDR effects as enabled/disabled.
            </summary>
      <param name="enabled">if set to <c>true</c> HDR and associated effects are enabled, otherwise <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameCameraScript.UpdateSurfaceIntersections">
      <summary>
            Checks for an intersection with the surface and if there is one, update the camera's position to prevent it from going under the surface.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.GameViewScript">
      <summary>
            Script for game view.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript.SurfaceLockAltitude">
      <summary>
            The surface lock altitude
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript.SurfaceUnlockAltitude">
      <summary>
            The surface unlock altitude
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._clickPosition">
      <summary>
            The click position, or null if no clicks have registered this frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._craftNode">
      <summary>
            The craft node.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._gameCamera">
      <summary>
            The game camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._gameViewInterface">
      <summary>
            The game view interface
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._gameViewObjects">
      <summary>
            The game view objects.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._objectsContainer">
      <summary>
            The foreground objects container.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._planet">
      <summary>
            The planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._referenceFrame">
      <summary>
            The reference frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._removeList">
      <summary>
            The remove list
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._selectedPart">
      <summary>
            The selected part
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._sunLight">
      <summary>
            The sun light.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.GameViewScript._sunLightTransform">
      <summary>
            The sun light transform.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.GameViewScript.ReferenceFrameRecentered">
      <summary>
            Occurs when the reference frame has been recentered.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.GameViewScript.SelectedPartChanged">
      <summary>
            Occurs when the selected part changes.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.CameraSolarSystemPosition">
      <summary>
            Gets the camera solar system position.
            </summary>
      <value>
            The camera solar system position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.CameraSolarSystemRotation">
      <summary>
            Gets the camera solar system rotation.
            </summary>
      <value>
            The camera solar system rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.GameCamera">
      <summary>
            Gets the game camera.
            </summary>
      <value>
            The game camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.ModApi#Flight#GameView#IGameView#GameCamera">
      <summary>
            Gets the game camera.
            </summary>
      <value>
            The game camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.GameViewInterface">
      <summary>
            Gets the game view interface.
            </summary>
      <value>
            The game view interface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.ModApi#Flight#GameView#IGameView#Planet">
      <summary>
            Gets the planet script.
            </summary>
      <value>
            The planet script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.PlanetNode">
      <summary>
            Gets the planet the game view is currently attached to.
            </summary>
      <value>
            The planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.PlanetScript">
      <summary>
            Gets the planet script.
            </summary>
      <value>
            The planet script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.ReferenceFrame">
      <summary>
            Gets the reference frame.
            </summary>
      <value>
            The reference frame.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.RenderView">
      <summary>
            Gets or sets a value indicating whether the view should be rendered.
            </summary>
      <value>
        <c>true</c> if the view should be rendered; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.SelectedPart">
      <summary>
            Gets or sets the selected part.
            </summary>
      <value>
            The selected part.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.GameViewScript.SunLight">
      <summary>
            Gets the sun light.
            </summary>
      <value>
            The sun light.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.AddGameViewObject(ModApi.Flight.GameView.IGameViewObject)">
      <summary>
            Adds the foreground object.
            </summary>
      <param name="gameViewObject">The game view object.</param>
      <returns>The transform of the object.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.DragCamera(UnityEngine.Vector2)">
      <summary>
            Drags the camera.
            </summary>
      <param name="delta">The delta.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.EndFrame">
      <summary>
            Called at the end of Update by the Flight Scene script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.FlightEnd">
      <summary>
            Called when the flight scene is ending.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.Initialize(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Initializes the specified craft node.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.OnClick(UnityEngine.Vector2)">
      <summary>
            Called when the user clicks in the game view.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.OnPlayerChangedSoi">
      <summary>
            Called when the player craft has changed SOI.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.OnPlayerCraftNodeChanged(ModApi.Craft.ICraftNode)">
      <summary>
            Called when the player craft node has changed.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.RemoveGameViewObject(ModApi.Flight.GameView.IGameViewObject,System.Boolean)">
      <summary>
            Removes the game view object.
            </summary>
      <param name="gameViewObject">The game view object.</param>
      <param name="flightEnd">if set to <c>true</c> object is being unloaded due to the flight ending.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.UpdateReferenceFrame(System.Double)">
      <summary>
            Updates the reference frame.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.LateUpdate">
      <summary>
            Unity LateUpdate method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.ApplyShadowQualitySettings(ModApi.Settings.ShadowQualitySettings)">
      <summary>
            Applies the shadow quality settings.
            </summary>
      <param name="quality">The quality settings.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.IsRecenterRequired">
      <summary>
            Determines whether a reference frame recenter is required.
            </summary>
      <returns>True if required.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.LoadDynamicNodes(ModApi.Flight.Sim.IPlanetNode,UnityEngine.Vector3d)">
      <summary>
            Loads nodes into the game view that are within the specifeid range that are children of parentNode.
            </summary>
      <param name="parentNode">The parent node.</param>
      <param name="position">The position (in planet position from parentNode).</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.OnShadowSettingsChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.ShadowQualitySettings})">
      <summary>
            Called when shadow quality settings change.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingsChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.RecenterReferenceFrame">
      <summary>
            Re-centers the reference frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.GameViewScript.UpdateLight">
      <summary>
            Updates the light.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.ImageEffectsScript">
      <summary>
            Handles applying image effect quality settings in the flight scene/
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ImageEffectsScript._defaultBloomIntensity">
      <summary>
            The default bloom intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ImageEffectsScript._defaultSunFlareIntensity">
      <summary>
            The default sun flare intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ImageEffectsScript._gameCamera">
      <summary>
            The game camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ImageEffectsScript._hdrEffectsEnabled">
      <summary>
            The HDR effects enabled
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.ImageEffectsScript.Beautify">
      <summary>
            Gets the beautify component.
            </summary>
      <value>
            The beautify component.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.ImageEffectsScript.HdrEffectsEnabled">
      <summary>
            Gets or sets a value indicating whether [HDR effects enabled].
            </summary>
      <value>
        <c>true</c> if [HDR effects enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ImageEffectsScript.Initialize(Assets.Scripts.Flight.GameView.GameCameraScript)">
      <summary>
            Initializes the specified game camera.
            </summary>
      <param name="gameCamera">The game camera.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ImageEffectsScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ImageEffectsScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ImageEffectsScript.OnImageEffectsChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.ImageEffectsQualitySettings})">
      <summary>
            Called when the image effects quality settings have changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:ModApi.Settings.Core.Events.SettingsChangedEventArgs&lt;ModApi.Settings.ImageEffectsQualitySettings&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ImageEffectsScript.OnValidate">
      <summary>
            Called when inspector properties change.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ImageEffectsScript.SetHdrEffectsEnabled(System.Boolean)">
      <summary>
            Sets the HDR effects as enabled/disabled.
            </summary>
      <param name="enabled">if set to <c>true</c> HDR and associated effects are enabled, otherwise <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ImageEffectsScript.UpdateFromQualitySettings">
      <summary>
            Updates from quality settings.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.Planet.CloudsScript">
      <summary>
            Script for clouds.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Planet.CloudsScript._cloudMovementSpeed">
      <summary>
            The cloud movement speed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Planet.CloudsScript._cloudRotationSpeed">
      <summary>
            The cloud rotation speed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Planet.CloudsScript._material">
      <summary>
            The material.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.CloudsScript.UpdateLight(UnityEngine.Vector3)">
      <summary>
            Updates the light.
            </summary>
      <param name="lightDirection">The light direction.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.CloudsScript.Awake">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.CloudsScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.CloudsScript.PerlinScriptCSharp.LoadGradient3D">
      <summary>
            Loads the gradient 3D.
            </summary>
      <returns>The texture 2D.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.CloudsScript.PerlinScriptCSharp.LoadPermTable2D">
      <summary>
            Loads the perm table 2D.
            </summary>
      <returns>The texture 2D.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.Planet.PlanetScript">
      <summary>
            Script for a planet.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereActivationRadiusFactor">
      <summary>
            The factor to multiply by the planet's radius to determine when to transition to scaled space.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Planet.PlanetScript._quadSphere">
      <summary>
            The quad sphere.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.Planet.PlanetScript._referenceFrame">
      <summary>
            The reference frame.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.Planet.PlanetScript.PlanetNodeChanged">
      <summary>
            Occurs when a planet node has been changed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.Planet.PlanetScript.PlanetNodeChanging">
      <summary>
            Occurs when a planet node is changing.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereEnabledStateChanged">
      <summary>
            Occurs when the quad sphere enabled state changes.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereLoaded">
      <summary>
            Occurs when a quad sphere has been loaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereLoading">
      <summary>
            Occurs when a quad sphere is loading.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereUnloaded">
      <summary>
            Occurs when a quad sphere has been unloaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereUnloading">
      <summary>
            Occurs when a quad sphere is unloading.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Planet.PlanetScript.PlanetData">
      <summary>
            Gets the planet data.
            </summary>
      <value>
            The planet data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Planet.PlanetScript.PlanetNode">
      <summary>
            Gets the planet node.
            </summary>
      <value>
            The planet node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphere">
      <summary>
            Gets the quad sphere.
            </summary>
      <value>
            The quad sphere.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereActivationDistance">
      <summary>
            Gets the distance from the center of the planet that under which, the quad sphere is enabled.
            </summary>
      <value>
            The distance from the center of the planet that under which, the quad sphere is enabled.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereEnabled">
      <summary>
            Gets a value indicating whether the quad sphere is enabled.
            </summary>
      <value>
        <c>true</c> if the quad sphere is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereTransitionDistance">
      <summary>
            Gets the distance over which the rendering is transitioned between the quad sphere and the scaled space renderer. The quad sphere
            is 100% visible at QuadSphereActivationDistance and the scaled space renderer is 100% visible at QuadSphereActivationDistance +
            QuadSphereTransitionDistance.
            </summary>
      <value>
            The quad sphere transition distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.Planet.PlanetScript.QuadSphereTransitionStrength">
      <summary>
            Gets the quad sphere transition amount. A value of 1 is full quad-sphere, value of 0 is full scaled-space.
            </summary>
      <value>
            The quad sphere transition amount. A value of 1 is full quad-sphere, value of 0 is full scaled-space.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.Initialize(ModApi.Flight.GameView.IReferenceFrame)">
      <summary>
            Initializes the specified reference frame.
            </summary>
      <param name="referenceFrame">The reference frame.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.OnReferenceFrameRecentered(ModApi.Flight.GameView.IReferenceFrame,UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Called when the reference frame is re-centered.
            </summary>
      <param name="referenceFrame">The reference frame.</param>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.SetPlanetNode(ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Sets the planet node.
            </summary>
      <param name="planetNode">The planet node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.UpdateTerrain(UnityEngine.Vector3d,System.Boolean)">
      <summary>
            Updates the terrain.
            </summary>
      <param name="focalPointPlanetPosition">The focal point planet position.</param>
      <param name="synchronous">A value indicating whether or not the LOD updates will be synchronous (i.e. all updates completing in this frame).</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.CheckQuadSphereActivation(System.Double)">
      <summary>
            Checks the quad sphere activation.
            </summary>
      <param name="distanceFromCenterOfPlanet">The distance from center of planet.</param>
      <returns>True if the quad sphere is enabled.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.CreateQuadSphere(System.Boolean)">
      <summary>
            Creates the quad sphere game object.
            </summary>
      <param name="soiTransition">If set to <c>true</c>, the quad sphere is being created due to an SOI transition.</param>
      <returns>The quad sphere game object.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.GetQuadCreationThrottleRateForInactivePlanet(System.Double)">
      <summary>
            Gets the quad creation throttle rate for an inactive planet.
            </summary>
      <param name="distanceFromCenterOfPlanet">The distance from center of planet.</param>
      <returns>The quad creation throttle rate.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.RaiseEvent(System.EventHandler{ModApi.Planet.Events.PlanetNodeChangeEventArgs},ModApi.Flight.Sim.IPlanetNode,ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Raises the specified event.
            </summary>
      <param name="eventHandler">The event handler.</param>
      <param name="previousNode">The previous planet node.</param>
      <param name="newNode">The new planet node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.RaiseEvent(System.EventHandler{ModApi.Planet.Events.PlanetQuadSphereEventArgs},ModApi.Planet.IQuadSphere)">
      <summary>
            Raises the specified event.
            </summary>
      <param name="eventHandler">The event handler.</param>
      <param name="quadsphere">The quadsphere associated with the event.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.Planet.PlanetScript.RecalculateFrameState(ModApi.Flight.GameView.IReferenceFrame)">
      <summary>
            Recalculates the state of the frame.
            </summary>
      <param name="referenceFrame">The reference frame.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect">
      <summary>
            Re-entry image effect for parts.  It works by:
            1. Invokes a shader to create a mask of the parts currently on the screen.
            2. The mask texture is then fed into an image effect shader which tints the parts with an HDR value.
            3. The tinted mask is ran through a "directional bloom" image effect to create which blurs/blooms along the velocity vector.
            4. The final value is naturally bloomed further by the Beautify image effect.
            Note: This image effect must come before the bloom effect on the camera or else it will just tint the parts...won't be any bloom.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ApplyBloomPass">
      <summary>
            The apply bloom pass
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.BoxDownPass">
      <summary>
            The box down pass
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.BoxDownPrefilterPass">
      <summary>
            The box down prefilter pass
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.BoxUpPass">
      <summary>
            The box up d pass
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.DebugGroup">
      <summary>
            The debug group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.DirectionalBloomGroup">
      <summary>
            The directional bloom group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.MaskApplicationGroup">
      <summary>
            The mask application group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.MaskCreationGroup">
      <summary>
            The mask creation group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._maskSettingsMessage">
      <summary>
            The mask settings message for display in the inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._bloom">
      <summary>
            The bloom
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._bloomScreenDir">
      <summary>
            The bloom screen dir
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._bloomShader">
      <summary>
            The bloom shader
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._camera">
      <summary>
            The camera to which this image effect is attached.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._intensityReentry">
      <summary>
            The intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._intensityVapor">
      <summary>
            The vapor intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._iterations">
      <summary>
            The iterations
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._lengthScaleClose">
      <summary>
            The length scale to use when the camera is close.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._lengthScaleFar">
      <summary>
            The length scale used when the camera is far away.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._maskApplicationMaterial">
      <summary>
            The material which applies the mask over the image, and tints it.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._noise">
      <summary>
            The noise used for directional bloom.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._reentryBloomScale">
      <summary>
            The reentry bloom scale.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._reentryEffectShader">
      <summary>
            The re entry effect shader
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._reentryTint">
      <summary>
            The reentry
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._screenLine">
      <summary>
            The screen line, for debug purposes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._shaderProps">
      <summary>
            The shader property IDs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._showTextures">
      <summary>
            The show textures toggle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._showVelocityLines">
      <summary>
            The show velocity lines toggle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._softThreshold">
      <summary>
            The soft threshold
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._textures">
      <summary>
            The textures
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._threshold">
      <summary>
            The threshold
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._useDirectionalBloom">
      <summary>
            The use directional bloom
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._vaporBloomScale">
      <summary>
            The vapor bloom scale.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect._vaporTint">
      <summary>
            The vapor tint
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ApplyDirectionalBloom(UnityEngine.Vector2,UnityEngine.RenderTexture,UnityEngine.RenderTexture)">
      <summary>
            Applies the directional bloom.
            </summary>
      <param name="screenBloomDirection">The screen bloom direction.</param>
      <param name="source">The source.</param>
      <param name="destination">The destination.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ApplyReentryQualitySettings(ModApi.Settings.ImageEffectsQualitySettings.ReEntryQuality)">
      <summary>
            Applies the reentry quality settings.
            </summary>
      <param name="reentryQuality">The reentry quality.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.CalculateScreenBlurDirection">
      <summary>
            Calculates the screen blur direction.
            </summary>
      <returns>The screen-space blur direction.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.OnRenderImage(UnityEngine.RenderTexture,UnityEngine.RenderTexture)">
      <summary>
            Called when [render image].
            </summary>
      <param name="source">The source.</param>
      <param name="destination">The destination.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ReentryQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.ImageEffectsQualitySettings.ReEntryQuality})">
      <summary>
            Called when reentry quality settings change.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;AtmosphereQualitySettings.ReEntryQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds">
      <summary>
            Shader property IDs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.BloomDirection">
      <summary>
            The bloom direction shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.EffectMaskTex">
      <summary>
            The effect mask texture shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.Filter">
      <summary>
            The filter shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.ReentryBloomScale">
      <summary>
            The reentry bloom scale shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.ReentryIntensity">
      <summary>
            The reentry intensity shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.ReEntryTint">
      <summary>
            The reentry tint shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.SourceTex">
      <summary>
            The source texture shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.VaporBloomScale">
      <summary>
            The vapor bloom scale shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.VaporIntensity">
      <summary>
            The vapor intensity shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.VaporTint">
      <summary>
            The vapor tint shader property ID.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReEntry.ReEntryGlowImageEffect.ShaderPropertyIds.Init">
      <summary>
            Initializes the shader property IDs.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.ReferenceFrame">
      <summary>
            Provides methods to maintain a list of objects to be loaded into the GameView. Also manages takes
            care of recentering those objects
            </summary>
      <seealso cref="T:ModApi.Flight.GameView.IReferenceFrame" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReferenceFrame._center">
      <summary>
            The center.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReferenceFrame._planetLocalPosition">
      <summary>
            The local position of the center of the reference frame relative to the planet, when the reference frame is surface locked.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReferenceFrame._planetLocalRotation">
      <summary>
            The local rotation of the reference frame relative tot he planet, when the reference frame is surface locked.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReferenceFrame._planetLocalSurfaceVelocity">
      <summary>
            The velocity of the surface of the planet relative to the reference frame in surface coordinates.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReferenceFrame._planetNode">
      <summary>
            The planet node, if the reference frame is currently surface locked.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReferenceFrame._rotation">
      <summary>
            The rotation quaternion.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReferenceFrame._rotationAngle">
      <summary>
            The rotation angle (in radians).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.ReferenceFrame._rotationInverse">
      <summary>
            The inverse rotation quaternion.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.GameView.ReferenceFrame" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.ReferenceFrame.Center">
      <summary>
            Gets the center position of the frame.
            </summary>
      <value>
            The center of the frame.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.ReferenceFrame.FrameSurfaceVelocity">
      <summary>
            Gets the surface velocity of the reference frame in frame coordinates.
            </summary>
      <value>
            The surface velocity of the reference frame in frame coordinates.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.ReferenceFrame.IsSurfaceLocked">
      <summary>
            Gets a value indicating whether the reference frame is locked to the surface of a planet. While surface locked,
            the position and velocity of the reference frame are updated along the surface of the planet.
            </summary>
      <value>
        <c>true</c> if this instance is surface locked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.ReferenceFrame.RotationAngle">
      <summary>
            Gets the rotation of the frame. No rotation means the reference frame is aligned with the planet's non-rotated coordinate system.
            </summary>
      <value>
            The frame's rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.ReferenceFrame.SurfaceVelocity">
      <summary>
            Gets the surface velocity of the reference frame, which is the velocity of the reference frame relative
            to the surface of the planet directly below the reference frame.
            </summary>
      <value>
            The surface velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.ReferenceFrame.Velocity">
      <summary>
            Gets the velocity of the frame.
            </summary>
      <value>
            The velocity.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.FrameToPlanetPosition(UnityEngine.Vector3)">
      <summary>
            Converts a frame position to planet position.
            </summary>
      <param name="framePosition">The frame position.</param>
      <returns>
            The planet position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.FrameToPlanetRotation(UnityEngine.Quaternion)">
      <summary>
            Converts from the frame rotation to the planet rotation.
            </summary>
      <param name="frameRotation">The frame rotation.</param>
      <returns>The planet rotation.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.FrameToPlanetVector(UnityEngine.Vector3)">
      <summary>
            Converts fhe vector from frame coordinates to planet coordinates.
            </summary>
      <param name="frameVector">The frame vector.</param>
      <returns>The planet vector.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.FrameToPlanetVelocity(UnityEngine.Vector3)">
      <summary>
            Converts from frame velocity to planet velocity.
            </summary>
      <param name="frameVelocity">The frame velocity.</param>
      <returns>
            The planet velocity.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.PlanetToFramePosition(UnityEngine.Vector3d)">
      <summary>
            Converts a planet position to frame position.
            </summary>
      <param name="planetPosition">The planet position.</param>
      <returns>
            The frame position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.PlanetToFramePositiond(UnityEngine.Vector3d)">
      <summary>
            Converts a planet position to frame position. Returns a Vector3d instead
            of a Vector3 for increased precision.
            </summary>
      <param name="planetPosition">The planet position.</param>
      <returns>
            The frame position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.PlanetToFrameRotation(UnityEngine.Quaterniond)">
      <summary>
            Converts from planet rotation to frame rotation.
            </summary>
      <param name="planetRotation">The planet rotation.</param>
      <returns>
            The frame rotation.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.PlanetToFrameVector(UnityEngine.Vector3d)">
      <summary>
            Converts the vector from planet coordinates to frame coordinates.
            </summary>
      <param name="planetVector">The planet vector.</param>
      <returns>The frame vector.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.PlanetToFrameVelocity(UnityEngine.Vector3d)">
      <summary>
            Converts from planet velocity to frame velocity.
            </summary>
      <param name="planetVelocity">The velocity in planet coordinates.</param>
      <returns>The frame velocity.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.Recenter(UnityEngine.Vector3d,UnityEngine.Vector3d,ModApi.Flight.Sim.IPlanetNode,System.Boolean,UnityEngine.Vector3d@,UnityEngine.Vector3d@)">
      <summary>
            Recenters the reference frame.
            </summary>
      <param name="center">The center.</param>
      <param name="velocity">The velocity.</param>
      <param name="planetNode">The planet node.</param>
      <param name="surfaceLock">If set to <c>true</c> then lock the reference frame to the surface.
            This causes the reference frame to continuously update its velocity to match the surface
            velocity of the planet. It will also update its center to stay at the same position relative
            to the surface of the planet as it rotates.</param>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.Update(System.Double)">
      <summary>
            Updates this instance.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.ReferenceFrame.PlanetToFrameVectord(UnityEngine.Vector3d)">
      <summary>
            Converts the vector from planet coordinates to frame coordinates. Returns a Vector3d instead
            of a Vector3 for increased precision.
            </summary>
      <param name="planetVector">The planet vector.</param>
      <returns>The frame vector.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript">
      <summary>
            Script for the game view user interface.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript._drag">
      <summary>
            The amount of the current drag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript._dragStartTime">
      <summary>
            The drag start time.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript._gameView">
      <summary>
            The game view
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript._inputResponder">
      <summary>
            The input responder
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.GameViewInspector">
      <summary>
            Gets the game view inspector.
            </summary>
      <value>
            The game view inspector.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.InputResponder">
      <summary>
            Gets the input responder.
            </summary>
      <value>
            The input responder.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When draging is occuring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer clicks.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer is pressed on this view.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.OnPinch(ModApi.Flight.UI.PinchEventData)">
      <summary>
            Called when the user pinches.
            </summary>
      <param name="eventData">The event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.GameViewInterfaceScript.OnScroll(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when [scroll].
            </summary>
      <param name="eventData">The event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel">
      <summary>
            The game view inspector view model.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel._stagingUpdateFrameCounter">
      <summary>
            The staging update frames
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.Acceleration">
      <summary>
            Gets or sets the acceleration.
            </summary>
      <value>
            The acceleration.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.ActiveDockingPort">
      <summary>
            Gets the docking port.
            </summary>
      <value>
            The docking port.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.AirDensity">
      <summary>
            Gets or sets the air density.
            </summary>
      <value>
            The air density.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.AirTemperature">
      <summary>
            Gets the air temperature.
            </summary>
      <value>
            The air temperature.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.AngularVelocity">
      <summary>
            Gets or sets the angular velocity (deg/s).
            </summary>
      <value>
            The angular velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.ApoapsisAltitude">
      <summary>
            Gets or sets the apoapsis altitude.
            </summary>
      <value>
            The apoapsis altitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.ApoapsisTime">
      <summary>
            Gets or sets the apoapsis time.
            </summary>
      <value>
            The apoapsis time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.CraftMass">
      <summary>
            Gets or sets the craft mass in kg.
            </summary>
      <value>
            The craft mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.CurrentIsp">
      <summary>
            Gets or sets the current isp.
            </summary>
      <value>
            The current isp.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.DeltaVStage">
      <summary>
            Gets or sets the delta v.
            </summary>
      <value>
            The delta v.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.DeltaVTotal">
      <summary>
            Gets or sets the delta v total.
            </summary>
      <value>
            The delta v total.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.DockingGroup">
      <summary>
            Gets the docking group.
            </summary>
      <value>
            The docking group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.DockingStatus">
      <summary>
            Gets the docking status.
            </summary>
      <value>
            The docking status.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.DockingStatusLabel">
      <summary>
            Gets or sets the docking status label.
            </summary>
      <value>
            The docking status label.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.EngineThrust">
      <summary>
            Gets or sets the engine thrust in Newtons.
            </summary>
      <value>
            The engine thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.FuelActiveStagePercentage">
      <summary>
            Gets or sets the fuel active stage percentage.
            </summary>
      <value>
            The fuel active stage percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.FuelAllStagesPercentage">
      <summary>
            Gets or sets the fuel all stages percentage.
            </summary>
      <value>
            The fuel all stages percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.FuelBatteryPercentage">
      <summary>
            Gets or sets the fuel battery percentage.
            </summary>
      <value>
            The fuel battery percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.FuelMonoPercentage">
      <summary>
            Gets or sets the fuel mono percentage.
            </summary>
      <value>
            The fuel mono percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.Gravity">
      <summary>
            Gets or sets the gravity.
            </summary>
      <value>
            The gravity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.LateralSurfaceVelocity">
      <summary>
            Gets or sets the lateral surface velocity.
            </summary>
      <value>
            The lateral surface velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.MachNumber">
      <summary>
            Gets or sets the mach number.
            </summary>
      <value>
            The mach number.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.OrbitVelocity">
      <summary>
            Gets or sets the orbit velocity.
            </summary>
      <value>
            The orbit velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.PerformanceGroup">
      <summary>
            Gets or sets the performance group.
            </summary>
      <value>
            The performance group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.PeriapsisAltitude">
      <summary>
            Gets or sets the periapsis altitude.
            </summary>
      <value>
            The periapsis altitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.PeriapsisTime">
      <summary>
            Gets or sets the periapsis time.
            </summary>
      <value>
            The periapsis time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.RemainingBurnTime">
      <summary>
            Gets or sets the remaining burn time.
            </summary>
      <value>
            The remaining burn time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.SelectDockingPortButton">
      <summary>
            Gets or sets the select docking port button.
            </summary>
      <value>
            The select docking port button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.SpeedOfSound">
      <summary>
            Gets the speed of sound.
            </summary>
      <value>
            The speed of sound.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.SurfaceVelocity">
      <summary>
            Gets or sets the surface velocity.
            </summary>
      <value>
            The surface velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.ThrustToWeightRatio">
      <summary>
            Gets or sets the thrust to weight ratio.
            </summary>
      <value>
            The thrust to weight ratio.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.VerticalSurfaceVelocity">
      <summary>
            Gets or sets the vertical surface velocity.
            </summary>
      <value>
            The vertical surface velocity.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.Update(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Updates the specified craft node.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.CompareDockingPorts(Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript,Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript)">
      <summary>
            Checks if the candidate docking port is of more importance to the player than the incumbent.
            </summary>
      <param name="incumbent">The currently selected docking port.</param>
      <param name="candidate">The docking port to consider for selection.</param>
      <returns>
            True if the candidate should be selected. Otherwise, false.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorViewModel.GetImportance(Assets.Scripts.Craft.Parts.Modifiers.DockingPortScript)">
      <summary>
            Checks if the candidate docking port is of more importance to the player than the incumbent.
            </summary>
      <param name="dockingPort">The docking port.</param>
      <returns>
            True if the candidate should be selected. Otherwise, false.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript">
      <summary>
            Script that controls an inspector panel that displays information about the map view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript._flightScene">
      <summary>
            The flight scene
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript._gameView">
      <summary>
            The game view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript._inspectorPanel">
      <summary>
            The inspector panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript._viewModel">
      <summary>
            The view model
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript.PlayerCraft">
      <summary>
            Gets the player craft.
            </summary>
      <value>
            The player craft.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript.Create">
      <summary>
            Creates this instance.
            </summary>
      <returns>The map view inspector.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript.ShowMessage(System.String)">
      <summary>
            Shows the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript.OnNextDockingPortClicked">
      <summary>
            Called when the next docking port button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript.OnPrevDockingPortClicked">
      <summary>
            Called when the previous docking port button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript.OnSelectActiveDockingPort">
      <summary>
            Called when the select active docking port button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.GameView.UI.Inspector.GameViewInspectorScript.SelectPart``1(System.Boolean,System.Nullable{System.Int32},System.Boolean)">
      <summary>
            Selects the next or previous part that contains the specified modifier.
            </summary>
      <typeparam name="T">The type of part modifier to search for.</typeparam>
      <param name="searchAscending">if set to <c>true</c> then search part IDs in ascending order. Otherwise search in descending order.</param>
      <param name="selectedId">The selected identifier.</param>
      <param name="allowWrapAround">if set to <c>true</c> [allow wrap around].</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Automation.NodeNavigator">
      <summary>
            Class to auto-navigate maneuver node chains.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.DefaultWarpSpeed">
      <summary>
            The default warp speed.  The lower the number, the faster the warp.  It is roughly equal the time in seconds between each change in warp mode multiplier.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._timeWhenWarpCanIncreaseAgain">
      <summary>
            The time when we can increase warp speed again...used to prevent going from 1x directly to a huge warp.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._autoBurn">
      <summary>
            A value indicating whether auto-burn is currently enabled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._chainNodeList">
      <summary>
            The chain node manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._coordinateConverter">
      <summary>
            The coordinate converter
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._craftInfo">
      <summary>
            The craft
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._craftNode">
      <summary>
            The craft node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._initialDeltaV">
      <summary>
            The inital deltaV.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._inputs">
      <summary>
            The game inputs
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._lowestDvToComplete">
      <summary>
            The lowest "dv to complete" value which has been encountered during the current auto-burn attempt.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._navSphere">
      <summary>
            The nav sphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._options">
      <summary>
            The options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._timeManager">
      <summary>
            The time manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator._warpBufferTime">
      <summary>
            The warp buffer time
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.#ctor(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,ModApi.Flight.UI.INavSphere,ModApi.Flight.ITimeManager)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Automation.NodeNavigator" /> class.
            </summary>
      <param name="craftContext">The craft ioc context.</param>
      <param name="navSphere">The nav sphere.</param>
      <param name="timeManager">The time manager.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.ManeuverPhase">
      <summary>
            The current phase
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.ManeuverPhase.HeadingLock">
      <summary>
            The heading lock
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.ManeuverPhase.BurnPrep">
      <summary>
            The burn prep
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.ManeuverPhase.Burning">
      <summary>
            The burning
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.ManeuverPhase.Complete">
      <summary>
            The complete
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.AutoBurn">
      <summary>
            Gets or sets a value indicating whether to handle the burns automatically.
            </summary>
      <value>
        <c>true</c> if we should handle the burns automatically; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.AutoBurnInProgress">
      <summary>
            Gets a value indicating whether [automatic burn in progress].
            </summary>
      <value>
        <c>true</c> if [automatic burn in progress]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.AutoBurnNode">
      <summary>
            Gets the burn node to be used as the auto-burn node, or <c>null</c> if there is none.
            </summary>
      <value>
            The burn node to be used as the auto-burn node, or <c>null</c> if there is none.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.IsWarping">
      <summary>
            Gets a value indicating whether currently warping to the next node.
            </summary>
      <value>
        <c>true</c> if this instance is warping; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.NextPhase">
      <summary>
            Gets the next phase
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.NodeToWarpTo">
      <summary>
            Gets the node that we're warping to.
            </summary>
      <value>
            The node that we're warping to.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.Progress">
      <summary>
            Gets the progress of the burn, from 0 to 1.
            </summary>
      <value>
            The progress.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.GetMaxMultiplierMode(ModApi.Flight.ITimeManager,System.Double,System.Double,System.Double)">
      <summary>
            Gets the maximum multiplier mode allowed to not skip over a point at the specified number seconds away.
            </summary>
      <param name="timeManager">The time manager.</param>
      <param name="timeToPoint">The time in seconds that the point is away.</param>
      <param name="bufferSeconds">The desired number of seconds to be at 1x speed before the point occurs.</param>
      <param name="warpSpeedModifier">The warp speed modifier. A value of 1 is default speed, a value greater than this is faster than default.</param>
      <returns>
            The maximum multiplier mode allowed to not skip over a point at the specified number seconds away.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.WarpToPosition(ModApi.Flight.ITimeManager,System.Double,System.Double,System.Boolean,System.Double)">
      <summary>
            Updates the current warp mode to a setting will which allow warping to a position w/o warping over it.
            </summary>
      <param name="timeManager">The time manager.</param>
      <param name="timeToPosition">The time in seconds to the desired position.</param>
      <param name="bufferSeconds">The desired number of seconds to be at 1x speed before the point occurs.</param>
      <param name="onlyReduce">if set to <c>true</c> the time multiplier will only be reduced, otherwise set to <c>true</c> to allow warping to a point.</param>
      <param name="warpSpeedModifier">The warp speed modifier. A value of 1 is default speed, a value greater than this is faster than default.</param>
      <returns>
        <c>true</c> when the warp is complete, otherwise; <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.ResetAutoBurn(System.Boolean)">
      <summary>
            Resets the auto-burn state.
            </summary>
      <param name="resetThrottle">
        <c>true</c> to allow the throtle to be reset, or <c>false</c> to leave throttle alone.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.Update(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript,Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager)">
      <summary>
            Updates the specified maneuver node.
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
      <param name="chainNodeManager">The chain node manager.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.WarpToNextNode">
      <summary>
            Warps to the next node (maneuver or encounter).
            </summary>
      <returns>The node being warped to.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.WarpToNode(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Warps to the specified node.
            </summary>
      <param name="node">The node to warp to.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.GetThrottle(Assets.Scripts.Flight.Sim.CraftNode,System.Double,System.Double,System.Single)">
      <summary>
            Gets the throttle.
            </summary>
      <param name="craftNode">The craft node.</param>
      <param name="deltaVRemaining">The delta v remaining.</param>
      <param name="burnTimeRemaining">The number of seconds remaining for the burn.</param>
      <param name="currentThrottle">The current throttle.</param>
      <returns>
            The throttle to use.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.AbortAutoBurn">
      <summary>
            Aborts the automatic burn.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.AbortWarp">
      <summary>
            Aborts the warp.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.CheatBurn(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Cheats the burn by setting the craft's velocity! HAHA!
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.CheckAndPerformAutoWarp">
      <summary>
            Checks if auto-warp is enabled and warps if it is.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.CompleteBurnPhase">
      <summary>
            Completes the burn phase.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.DoInitialTurnPhase(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Perform the initial turn phase.
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.IsBurnAchieveable(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Determines whether the burn is making progress toward the desired deltaV, or if something has happened to make the burn no-longer achievable.
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
      <returns>
        <c>true</c> if the burn is making progress toward the desired deltaV, or if something has happened to make the burn no-longer achievable; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.OnAutoBurnChanged(System.Boolean)">
      <summary>
            Called when the auto-burn setting has changed..
            </summary>
      <param name="value">if set to <c>true</c> then auto-burning was enabled, otherwise <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.OnCraftChangedSoi(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Called when the craft for this node navigator has transitioned to new soi.
            </summary>
      <param name="source">The source orbit node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.OnInProgressAutoBurnPaused">
      <summary>
            Called when in a progress automatic burn has been paused.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.OnManeuverNodeBeingBurnedDeleted(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Called when the maneuver node currently in the process of burning is deleted.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.PrepAndStartBurnPhase(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Prepare for the burn phase and kick it off.
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.UpdateAutoBurn(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript,Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager)">
      <summary>
            Updates the automatic burn.
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
      <param name="chainNodeManager">The chain node manager.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.UpdateAutoBurnVectorLines(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Updates the auto-burn related vectrocity lines.
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Automation.NodeNavigator.UpdateBurn(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Monitors, updates, and decides when to stop burning.  Completes the auto-burn when finished.
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext">
      <summary>
            Context for resolving ioc instances which are associated with individual map craft.  i.e. the instances "belong" to that craft.
            </summary>
      <seealso cref="T:ModApi.Ioc.IContext" />
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit">
      <summary>
            Provides access to information needed to maintain and access a specific node in a list of
            parent/child related nodes (maneuver nodes, soi enter/exit nodes, or the craft itself).
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.ListNode">
      <summary>
            Gets the linked list node in the orbit chain for this node.
            </summary>
      <value>
            The linked list node in the orbit chain for this node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.Locked">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript" /> is locked, and will
            not update/respond to changes in its previous node, otherwise <c>false</c>.
            </summary>
      <value>
        <c>true</c> if locked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.Name">
      <summary>
            Gets the name of this IChainableOrbit.
            </summary>
      <value>
            The name of this IChainableOrbit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.OrbitInfo">
      <summary>
            Gets the orbit information.
            </summary>
      <value>
            The orbit information.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.PropagateChanges">
      <summary>
            Gets or sets a value indicating whether changes to this node should propagate to children.
            </summary>
      <value>
        <c>true</c> if changes to this node should propagate to children; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.TimeToNode">
      <summary>
            Gets the time in seconds to the node.
            </summary>
      <value>
            The time in seconds to the node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.TrueAnomalyOnPreviousOrbit">
      <summary>
            Gets the true anomaly/position on the preceding orbit in the chain where this node resides.
            </summary>
      <value>
            The true anomaly/position on the preceding orbit in the chain where this node resides.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.CheckAndCreateEncounter">
      <summary>
            Checks for and creates any valid encounters.
            </summary>
      <returns>The SoiEncounterNodeScript created.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.CheckForIncompatibleState">
      <summary>
            Performs a very quick check for validity/compatibility and removes if invalid.  This does not perform full encounter checks, and only meant to remove nodes that could cause errors if they were allowed to remain.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.OnAfterCameraPositioned">
      <summary>
            Called after camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.OnDeselected">
      <summary>
            Called when this chain has been deselected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.OnSelected">
      <summary>
            Called when this chain has been selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.PerformValidityCheck">
      <summary>
            Called after all updating is done for the frame.  This is a debug method which allows chain-able items a chance to check their current state and report any errors.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit.SendPreviousNodeOrbitChanged(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called when a previous node's orbit has changed.  The recipient is responsible for reacting to the change and then propagating the notification to children.
            </summary>
      <param name="previousOrbit">The preceding orbit, which has changed.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.NodeListChangedDelegate">
      <summary>
            Delegate for NodeListChanged event.
            </summary>
      <param name="source">The ChainNodeManager sending the event.</param>
      <param name="node">The node.</param>
      <param name="category">The category.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory">
      <summary>
            The category that the associated change belongs to.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory.Normal">
      <summary>
            The change is related to normal operation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory.Restore">
      <summary>
            The change is related to restoring a maneuver node chain.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory.Orphan">
      <summary>
            The change is related to orphaned nodes.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList">
      <summary>
            Provides access to the chain node list for a given craft.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.NodeAdded">
      <summary>
            Occurs when a node has been added to the list.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.NodeListChanged">
      <summary>
            Occurs when the node list is updated (item added/removed).
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.RemovingNode">
      <summary>
            Occurs when a node has been removed from the list
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.ChainNodes">
      <summary>
            Gets the chain nodes.
            </summary>
      <value>
            The chain nodes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.FirstEncounter">
      <summary>
            Gets the first encounter.
            </summary>
      <value>
            The first encounter.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.FirstIncompleteManeuverNode">
      <summary>
            Gets the first maneuver node which has not been executed.
            </summary>
      <value>
            The first maneuver node which has not been executed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.FirstManeuverNode">
      <summary>
            Gets the first maneuver node.
            </summary>
      <value>
            The first maneuver node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.FirstNonCraftNode">
      <summary>
            Gets the first node in the chain after the root node (which is the craft).
            </summary>
      <value>
            The first node in the chain after the root node (which is the craft)..
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.LastNode">
      <summary>
            Gets the last node.
            </summary>
      <value>
            The last node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.FirstNode">
      <summary>
            Gets the first node, which is the craft node at the root of the list.
            </summary>
      <value>
            The first node, which is the craft node at the root of the list.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.TimeToNextNode">
      <summary>
            Gets the time to next node (maneuver or encounter) if exists, or <c>null</c> if there is no nodes.
            </summary>
      <value>
            The time to next node (maneuver or encounter) if exists, or <c>null</c> if there is no nodes.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.AddAfter(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Func{System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Adds an entry to the list after the specified node.
            </summary>
      <param name="addAfter">The <see cref="T:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit" /> to add after.</param>
      <param name="creationMethod">A method which creates the new <see cref="T:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit" /> item which will be added to the list.</param>
      <param name="category">The change category.</param>
      <returns>
            The node added.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.DestroyNodes">
      <summary>
            Destroys all nodes in the list after the root node (craft).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.DestroyOrphanedNodes">
      <summary>
            Destroys all orphaned nodes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.Remove(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Boolean,System.Boolean,Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Deletes this orbit and associated node (if it has one).  Optionally deletes children.
            </summary>
      <param name="orbitLineNode">The orbit line node.</param>
      <param name="deleteChildren">if set to <c>true</c> deletes children as well as this orbit.</param>
      <param name="destroy">if set to <c>true</c> also destroys the GameObjects associated with the chain node.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.RemoveAfter``1(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Boolean,Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Removes nodes matching the specified type, which are after the provided node.
            </summary>
      <typeparam name="T">The IChainableOrbit orbit type.</typeparam>
      <param name="orbitLineNode">The orbit line node to remove any following nodes.</param>
      <param name="consecutiveOccurrencesOnly">If set to <c>true</c> will only remove consecutive occurrences of type T, otherwise will remove all that proceed it.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.RemoveType``1(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Boolean,Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Removes the supplied node and all that follow given they're of type T, optionally also only removing consecutive occurrences.
            </summary>
      <typeparam name="T">The type of chain node to remove.</typeparam>
      <param name="startingNodeToDelete">The first node of type <typeparamref name="T" /> to remove.</param>
      <param name="consecutiveOccurrencesOnly">If set to <c>true</c> will only remove consecutive occurrences of type T, otherwise will remove all that proceed it.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList.SetOrphaned(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Sets the orphaned.
            </summary>
      <param name="maneuverNodeScript">The maneuver node script.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.CurrentCameraTargetHandler">
      <summary>
            Delegate for ICurrentCameraTarget events.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed">
      <summary>
            Defines different camera transition speeds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed.Fast">
      <summary>
            Fast camera transition speed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed.Medium">
      <summary>
            Medium transition speed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed.Slow">
      <summary>
            Slower transition speed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed.Default">
      <summary>
            The default transition speed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.ICurrentCameraTarget">
      <summary>
            Interface for getting/setting information regarding the camera's current target.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Interfaces.ICurrentCameraTarget.TargetChanged">
      <summary>
            Occurs when the target has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.ICurrentCameraTarget.CurrentZoomPercent">
      <summary>
            Gets the current zoom percent.
            </summary>
      <value>
            The current zoom percent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.ICurrentCameraTarget.DistanceFromTarget">
      <summary>
            Gets the distance from target.
            </summary>
      <value>
            The distance from target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.ICurrentCameraTarget.DistanceFromTargetsAssociatedPlanet">
      <summary>
            Gets the distance from targets associated planet.
            </summary>
      <value>
            The distance from targets associated planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.ICurrentCameraTarget.Target">
      <summary>
            Gets the camera target.
            </summary>
      <value>
            The camera target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.ICurrentCameraTarget.TargetsAssociatedPlanet">
      <summary>
            Gets the target's associated planet.  If the target is a planet, itself is the associated planet, otherwise the target's parent is returned.  If the target has
            no orbit information, then there is no associated planet, and null is returned.
            </summary>
      <value>
            The targets associated planet.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.ICurrentCameraTarget.SetTarget(Assets.Scripts.Flight.MapView.UI.ICameraFocusable,Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed,System.Boolean)">
      <summary>
            Sets a new camera target.
            </summary>
      <param name="target">The target.</param>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider">
      <summary>
            Interface to provide access to the current draw mode for an orbit line.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider.CraftNode">
      <summary>
            Gets the craft node associated with this draw mode.
            </summary>
      <value>
            The craft node associated with this draw mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider.DrawMode">
      <summary>
            Gets the draw mode to use to position items in Map View.
            </summary>
      <value>
            The draw mode to use to position items in Map View.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.ItemRegistryHandler">
      <summary>
            Delegate to use for item registry events.
            </summary>
      <param name="mapItem">The map item.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry">
      <summary>
            Interface to register/unregister objects to/from the list of currently active MapItems.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.MapItemAdded">
      <summary>
            Occurs when a map item is added.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.MapItemRemoved">
      <summary>
            Occurs when a map item is removed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.Crafts">
      <summary>
            Gets the list of all crafts in map view. Includes the current player-controlled craft (MapPlayerCraft), non-player craft loaded into game view (MapCraft), and non-player craft not loaded into game view (MapStaticOrbitItem).
            </summary>
      <value>
            The list of all crafts in map view. Includes the current player-controlled craft (MapPlayerCraft), non-player craft loaded into game view (MapCraft), and non-player craft not loaded into game view (MapStaticOrbitItem).
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.DynamicCrafts">
      <summary>
            Gets the list of active non player-controlled dynamic crafts which are loaded into game view and have physics enabled.
            </summary>
      <value>
            The list of active non player-controlled dynamic crafts which are loaded into game view and have physics enabled.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.Items">
      <summary>
            Gets the list of active MapItems.
            </summary>
      <value>
            The list of active MapItems.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.OrbitNodes">
      <summary>
            Gets the list of active <see cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" />s.
            </summary>
      <value>
            The list of active <see cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" />s.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.PlayerCrafts">
      <summary>
            Gets the list of active MapPlayerCrafts.
            </summary>
      <value>
            The list of active MapPlayerCraft.
            </value>
      <remarks>There should only ever be one in the list except for briefly when switching to a new craft.</remarks>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.FindTargetableItem(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Finds the targetable item associated with the specified orbit node.
            </summary>
      <param name="orbitNode">The orbit node.</param>
      <returns>The targetable item, or null if it cannot be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.GetCraft(ModApi.Craft.ICraftNode)">
      <summary>
            Gets the craft node's associated MapCraft.
            </summary>
      <param name="craftNode">The craft node.</param>
      <returns>The craft node's associated MapCraft.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.GetItem(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Gets the <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /> which belongs to the provided <see cref="T:ModApi.Flight.Sim.IOrbitNode" /></summary>
      <param name="node">The node to get the <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /> for.</param>
      <returns>The MapItem which belongs to the provided <see cref="T:ModApi.Flight.Sim.IOrbitNode" /></returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.GetOrbitNode(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Gets the <see cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" /> which belonogs to the provided <see cref="T:ModApi.Flight.Sim.IOrbitNode" /></summary>
      <param name="node">The node.</param>
      <returns>The <see cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" /> which belonogs to the provided <see cref="T:ModApi.Flight.Sim.IOrbitNode" /></returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.GetPlanet(ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Gets the planet node's associated MapPlanet object.
            </summary>
      <param name="planetNode">The planet node to get the associated MapPlanet object for.</param>
      <returns>
            The planet node's associated MapPlanet object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.PerformMapItemAction(System.Action{Assets.Scripts.Flight.MapView.Items.MapItem})">
      <summary>
            Performs the action on all MapItems.
            </summary>
      <param name="action">The action to perform on all MapItems.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.RegisterItem(Assets.Scripts.Flight.MapView.Items.MapItem)">
      <summary>
            Registers the item.
            </summary>
      <param name="mapItem">The map item.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry.UnregisterItem(Assets.Scripts.Flight.MapView.Items.MapItem)">
      <summary>
            Removes the item.
            </summary>
      <param name="mapItem">The map item.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.ILightPosition">
      <summary>
            Interface to obtain light position information in MapView.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.ILightPosition.LightPosition">
      <summary>
            Gets the light position, in scene coordinates.
            </summary>
      <value>
            The light position, in scene coordinates.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IMapStateProvider">
      <summary>
            Provides access to information regarding MapView state.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IMapStateProvider.Data">
      <summary>
            Gets the <see cref="T:ModApi.State.MapView.MapViewData" /></summary>
      <value>
            The <see cref="T:ModApi.State.MapView.MapViewData" /></value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter">
      <summary>
            Facilitates converting from flight scene coordinates to MapView coordinates.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter.MapScale">
      <summary>
            Gets the map scale.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter.ConvertAbsoluteToWorldMapPosition(UnityEngine.Vector3d)">
      <summary>
            Converts the absolute to world map-view position (non-floated to floated).
            </summary>
      <param name="absolutePosition">The absolute position.</param>
      <returns>The world (floated) position of the supplied absolute position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter.ConvertMapViewToSolar(UnityEngine.Vector3d)">
      <summary>
            Converts the a MapView-space to a solar, orbit-space position.  Takes care of floating origin and MapView scale conversions.
            </summary>
      <param name="mapViewPosition">The map view-space position.</param>
      <returns>The solar, orbit-space position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter.ConvertSolarToMapView(UnityEngine.Vector3d)">
      <summary>
            Converts the a solar, orbit-space to a MapView-space position.  Takes care of floating origin and MapView scale conversions.
            </summary>
      <param name="solarPosition">The orbit-space position.</param>
      <returns>The MapView-space position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter.ConvertWorldToAbsoluteMapPosition(UnityEngine.Vector3d)">
      <summary>
            Converts the world to absolute map-view position (floated to non-floated).
            </summary>
      <param name="worldPosition">The world position.</param>
      <returns>The absolute (non-floated) position of the supplied world position.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider">
      <summary>
            Provides access to the MapView's current navigation target and related information.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider.ChainNodeToGetTargetInfoFor">
      <summary>
            Gets the chain node that is being used to display target information for.
            </summary>
      <value>
            The chain node that is being used to display target information for.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider.NavigationTarget">
      <summary>
            Gets the navigation target.
            </summary>
      <value>
            The navigation target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider.Pinned">
      <summary>
            Gets a value indicating whether an orbital period for the target is pinned.  See SetPinned method for more info.
            </summary>
      <value>
        <c>true</c> if pinned; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider.IsProcessingTargetInformationFor(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Determines whether the navigation system is currently processing target information for the specified chainable orbit.
            </summary>
      <param name="chainableOrbit">The chainable orbit to see if target information is being processed for.</param>
      <returns>
        <c>true</c> if the navigation system is currently processing target information for the specified chainable orbit; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider.IsValidTarget(Assets.Scripts.Flight.MapView.Items.ITargetableItem)">
      <summary>
            Determines whether the target is a is valid target for navigation.
            </summary>
      <param name="target">The target.</param>
      <returns>
        <c>true</c> if it is a valid target; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider.SetNavigationTarget(Assets.Scripts.Flight.MapView.Items.ITargetableItem)">
      <summary>
            Sets the navigation target.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider.SetNavSphereTarget(ModApi.Flight.UI.INavSphereTarget)">
      <summary>
            Sets the nav sphere target.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider.SetPinned(System.Boolean)">
      <summary>
            Sets the pinned state, which is a value indicating whether an orbital period for the target is pinned, and we're only searching for closest encounters within that period.
            When it is set to <c>true</c>, the current closest encounter's orbital period for the target is used as the pinned period.
            This is used when a user is trying to dial in on a specific encounter and no-longer wants the closest encounter swapped out for a closer one.  They want to work w/the
            maneuver nodes to get a specific encounter.
            </summary>
      <param name="pinned">if set to <c>true</c> [pinned].</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider">
      <summary>
            Provides access to the various container gameobjects for MapView.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.CanvasesRoot">
      <summary>
            Gets the root container for canvases.
            </summary>
      <value>
            The root container for canvases.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.CraftCanvases">
      <summary>
            Gets the craft canvases container.
            </summary>
      <value>
            The craft canvases container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.Crafts">
      <summary>
            Gets the crafts container.
            </summary>
      <value>
            The crafts container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.FloatingOriginIgnoreContainer">
      <summary>
            Gets the floating origin ignore container.
            </summary>
      <value>
            The floating origin ignore container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.General">
      <summary>
            Gets the  general(uncategorized) container.
            </summary>
      <value>
            The  general(uncategorized) container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.OrbitCanvases">
      <summary>
            Gets the orbit canvases container.
            </summary>
      <value>
            The orbit canvases container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.OrbitContainer">
      <summary>
            Gets the orbit container.
            </summary>
      <value>
            The orbit container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.Planets">
      <summary>
            Gets the planets container.
            </summary>
      <value>
            The planets container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.PlanetsCanvases">
      <summary>
            Gets the planet canvases container.
            </summary>
      <value>
            The planets canvases container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.Root">
      <summary>
            Gets the root transform for MapView.
            </summary>
      <value>
            The root transform for MapView.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider.UiContainer">
      <summary>
            Gets the UI container.
            </summary>
      <value>
            The UI container.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IOrbitInfoProvider">
      <summary>
            Provides a generic way to access an item's orbit info w/a weak reference.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IOrbitInfoProvider.OrbitInfo">
      <summary>
            Gets the orbit information related to this item.
            </summary>
      <value>
            The orbit information related to this item.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.PlayerCraftHandler">
      <summary>
            Delegate related to player craft events in the map view.
            </summary>
      <param name="newCraft">The new craft.</param>
      <param name="oldCraft">The old craft.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IPlayerCraftProvider">
      <summary>
            Provide to the current player craft.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Interfaces.IPlayerCraftProvider.PlayerCraftChanged">
      <summary>
            Occurs when [player craft changed].
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IPlayerCraftProvider.PlayerCraft">
      <summary>
            Gets the player craft.
            </summary>
      <value>
            The player craft.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Interfaces.IRenderTextureProvider">
      <summary>
            Provides access to the render texture for MapView.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Interfaces.IRenderTextureProvider.RenderTexture">
      <summary>
            Gets the render texture currently being rendered to for MapView.
            </summary>
      <value>
            The render texture currently being rendered to for MapView.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.Interfaces.ICraftInfo">
      <summary>
            Provides information about a map craft.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.Interfaces.ICraftInfo.Data">
      <summary>
            Gets the <see cref="T:ModApi.State.MapView.MapItemData" />.
            </summary>
      <value>
            The <see cref="T:ModApi.State.MapView.MapItemData" /></value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.Interfaces.ICraftInfo.ItemName">
      <summary>
            Gets the craft's name.
            </summary>
      <value>
            The craft's name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.Interfaces.ICraftInfo.LineMaterial">
      <summary>
            Gets the orbit line material.
            </summary>
      <value>
            The orbit line material.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.Interfaces.ICraftInfo.OrbitInfo">
      <summary>
            Gets the orbit information.
            </summary>
      <value>
            The orbit information.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.Interfaces.ICraftInfo.ScheduleChainUpdate">
      <summary>
            Schedules the craft to update the orbit node chain.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.ITargetableItem">
      <summary>
            Interface to interact with an object which is able to be set as the target in map view.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.ITargetableItem.ClosestEncounterIcon">
      <summary>
            Gets the closest encounter icon.
            </summary>
      <value>
            The closest encounter icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.ITargetableItem.Name">
      <summary>
            Gets the name of this targetable item.
            </summary>
      <value>
            The name of this targetable item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.ITargetableItem.OrbitInfo">
      <summary>
            Gets the orbit information.
            </summary>
      <value>
            The orbit information.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.ITargetableItem.GetSphereOfInfluence(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the sphere of influence for this target-able item.  It may change depending on the other item.
            </summary>
      <remarks>For planets, this will probably just be their sphere of influence.  For non-planets, it will usually be zero unless both are non-planets then a distance will returned.</remarks>
      <param name="other">The other object in the encounter calculation.</param>
      <returns>The sphere of influence for this target-able item.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.MapCraft">
      <summary>
            Represents a craft in map view which is associated with a CraftNode node which has physics enabled. It's orbit line is kept up-to-date with the node's Orbit information.
            It has the ability to detect encounters, but does not support maneuver nodes.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.ITargetableItem" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.UI.ICameraFocusable" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit" />
      <seealso cref="T:System.IDisposable" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.Interfaces.ICraftInfo" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._cameraFocusableDestroyed">
      <summary>
            The camera focusable destroyed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._chainNodeManager">
      <summary>
            The chain node manager for this craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._chainSelection">
      <summary>
            The chain selection manager.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._chainSelectionChanged">
      <summary>
        <c>true</c> when the selected node has changed this frame, otherwise <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._craftMapMesh">
      <summary>
            The craft's representation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._craftNode">
      <summary>
            The craft node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._lastEndNu">
      <summary>
            The last frame's EndNu value from the orbitInfo.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._lastSemiMajorAxis">
      <summary>
            The craft's semiMajorAxis on the last frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._listNode">
      <summary>
            The list node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._mapView">
      <summary>
            The map view
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._nodeListChanged">
      <summary>
        <c>true</c> if the node list has changed since last frame, otherwise <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._options">
      <summary>
            The options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._orbitLineMaterial">
      <summary>
            The animated shader material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._orbitLineShader">
      <summary>
            The animated shader
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._pointerHoveringOverCraft">
      <summary>
            The pointer is hovering over craft
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._updateEncounters">
      <summary>
            The update encounters
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapCraft._updatingChain">
      <summary>
            Flag to indicate if we're currently updating the node chain.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Destroyed">
      <summary>
            Occurs when this item has been destroyed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.StopUpdatingChain">
      <summary>
            Gets or sets a value indicating whether to stop updating chain nodes.  This is for debug purposes only.  It is used in response some event (usually an error-condition)
            and will prevent the node-chain from being modified so it can be inspected more closely.
            </summary>
      <value>
        <c>true</c> if chain should stop; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#AssociatedPlanet">
      <summary>
            Gets the parent planet associated w/this item.
            </summary>
      <value>
            The parent planet associated w/this item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.ChainNodeManager">
      <summary>
            Gets the chain node manager for this craft.
            </summary>
      <value>
            The chain node manager for this craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.ChainNodeSelection">
      <summary>
            Gets the chain node selection interface.
            </summary>
      <value>
            The chain node selection interface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Items#ITargetableItem#ClosestEncounterIcon">
      <summary>
            Gets the closest encounter icon.
            </summary>
      <value>
            The closest encounter icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.CraftContext">
      <summary>
            Gets the <see cref="T:Assets.Scripts.Flight.MapView.Items.MapCraft" /> ioc context.
            </summary>
      <value>
            The <see cref="T:Assets.Scripts.Flight.MapView.Items.MapCraft" /> ioc context.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#FocusByClick">
      <summary>
            Gets a value indicating whether camera focus should be set when clicked.
            </summary>
      <value>
        <c>true</c> if camera focus should be set when clicked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.LineMaterial">
      <summary>
            Gets the line material.
            </summary>
      <value>
            The line material.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#ListNode">
      <summary>
            Gets the linked list node in the orbit chain for this node.
            </summary>
      <value>
            The linked list node in the orbit chain for this node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#Locked">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript" /> is locked, and will
            not update/respond to changes in its previous node, otherwise <c>false</c>.
            </summary>
      <value>
        <c>true</c> if locked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#MinZoomDistance">
      <summary>
            Gets the minimum distance that the camera should zoom on this position.
            </summary>
      <value>
            The minimum distance that the camera should zoom on this position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Items#ITargetableItem#Name">
      <summary>
            Gets the name of this target-able item.
            </summary>
      <value>
            The name of this target-able item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#Name">
      <summary>
            Gets the name of this IChainableOrbit.
            </summary>
      <value>
            The name of this IChainableOrbit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#OrbitInfo">
      <summary>
            Gets the orbit information for this map item.
            </summary>
      <value>
            The orbit information for this map item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Position">
      <summary>
            Gets the position the camera should focus on, in map view coordinates.
            </summary>
      <value>
            The position the camera should focus on, in map view coordinates.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#PropagateChanges">
      <summary>
            Gets or sets a value indicating whether changes to this node should propagate to children.
            </summary>
      <value>
        <c>true</c> if changes to this node should propagate to children; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.RenderTextureProvider">
      <summary>
            Gets the render texture provider.
            </summary>
      <value>
            The render texture provider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.ShowTargetAscendingDescNodeIcons">
      <summary>
            Gets a value indicating whether target ascending and descending node icons are being displayed.
            </summary>
      <value>
        <c>true</c> if target ascending and descending node icons are being displayed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.SupportsManeuverNodes">
      <summary>
            Gets a value indicating whether this MapCraft supports maneuver nodes.
            </summary>
      <value>
        <c>true</c> if this MapCraft supports maneuver nodes; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.SupportsOrbitLinePulses">
      <summary>
            Gets a value indicating whether this craft's lines should support sending a "pulse" through them after certain events occur.
            </summary>
      <value>
        <c>true</c> if this craft's lines should support sending a "pulse" through them after certain events occur; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.TimeToNode">
      <summary>
            Gets the time in seconds to the node.
            </summary>
      <value>
            The time in seconds to the node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#TrueAnomalyOnPreviousOrbit">
      <summary>
            Gets the true anomaly/position on the preceding orbit in the chain where this node resides.
            </summary>
      <value>
            The true anomaly/position on the preceding orbit in the chain where this node resides.
            </value>
      <exception cref="T:System.InvalidOperationException">The craft doesn't have a previous orbit</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Create(Assets.Scripts.Flight.Sim.CraftNode,UnityEngine.Camera)">
      <summary>
            Creates the specified MapCraft.
            </summary>
      <param name="craftNode">The craft node.</param>
      <param name="mapCamera">The map camera.</param>
      <returns>The new MapCraft.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.CheckAndCreateEncounter">
      <summary>
            Checks for and creates any valid encounters.
            </summary>
      <returns>
            The SoiEncounterNodeScript created.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#CheckForIncompatibleState">
      <summary>
            Performs a very quick check for validity/compatibility and removes if invalid.  This does not perform full encounter checks, and only meant to remove nodes that could cause errors if they were allowed to remain.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Destroy">
      <summary>
            Destroys this MapItem.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Items#ITargetableItem#GetSphereOfInfluence(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the sphere of influence for this target-able item.  It may change depending on the other item.
            </summary>
      <param name="other">The other object in the encounter calculation.</param>
      <returns>
            The sphere of influence for this target-able item.
            </returns>
      <remarks>
            For planets, this will probably just be their sphere of influence.  For non-planets, it will usually be zero unless both are non-planets then a distance will returned.
            </remarks>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnBeforeCameraPositioned">
      <summary>
            Called each frame before the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#OnDeselected">
      <summary>
            Called when this chain has been deselected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When clicked.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When entered.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When exited.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#OnSelected">
      <summary>
            Called when this chain has been selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#PerformValidityCheck">
      <summary>
            Called after all updating is done for the frame.  This is a debug method which allows chain-able items a chance to check their current state and report any errors.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.PerformValidityChecks">
      <summary>
            Called after all updating is done for the frame.  This is a debug method which allows chain-able items a chance to check their current state and report any errors.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.ScheduleChainUpdate">
      <summary>
            Schedules the craft to update the orbit node chain.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Assets#Scripts#Flight#MapView#Interfaces#IChainableOrbit#SendPreviousNodeOrbitChanged(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called when a previous node's orbit has changed.  The recipient is responsible for reacting to the change and then propagating the notification to children.
            </summary>
      <param name="previousOrbit">The preceding orbit, which has changed.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.SetListNode(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Sets the list node for the craft.
            </summary>
      <param name="linkedListNode">The linked list node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.UpdateChainFromCraft">
      <summary>
            Updates the chain from craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Create``1(Assets.Scripts.Flight.Sim.CraftNode,UnityEngine.Camera,System.String)">
      <summary>
            Creates the specified MapCraft.
            </summary>
      <typeparam name="T">The <see cref="T:Assets.Scripts.Flight.MapView.Items.MapCraft" /> type.</typeparam>
      <param name="craftNode">The craft node.</param>
      <param name="mapCamera">The map camera.</param>
      <param name="iconName">Name of the icon.</param>
      <returns>
            The MapCraft.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.IgnorePhysicsChange(ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Determines whether map items can ignore physics changes of the specified reason.
            </summary>
      <param name="reason">The reason.</param>
      <returns>
        <c>true</c> if the specified reason can be ignored, or <c>false</c> if action may need to be take.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.GetClosestEncounterIcon">
      <summary>
            Gets the closest encounter icon.
            </summary>
      <returns>The closest encounter icon.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.LateUpdate">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.CheckOrbitChangedAndReset">
      <summary>
            Checks to see if the craft's orbit has changed since last frame, and resets the "last-frame" state to the craft's current orbit.
            </summary>
      <returns>
        <c>true</c> if the craft's orbit has changed, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.CreateOrbitLine">
      <summary>
            Creates the orbit line.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.DelFirst">
      <summary>
            Deletes the first maneuver node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.DestroyChainNodes">
      <summary>
            Destroys all chain nodes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.Initialize(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Initializes the specified craft node.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.IsApplyingThrust">
      <summary>
            Determines whether the craft is applying thrust.
            </summary>
      <returns>
        <c>true</c> if the craft is applying thrust; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnChainNodeSelectionChanged(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Called when [chain node selection changed].
            </summary>
      <param name="chainNode">The chain node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnChangedSoi(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Called when the craft has been changed to a new SOI.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnCraftNodePhysicsDisabled(ModApi.Craft.ICraftNode,ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Occurs when physics is being disabled for a craft node. The orbit's position/velocity will be updated by calling AdvanceTime() on the orbit.
            </summary>
      <param name="source">The source craft node.</param>
      <param name="reason">The reason physics has changed.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnMapViewForegroundStateChanging(System.Boolean)">
      <summary>
            Called when the map view's foreground state is about to change.
            </summary>
      <param name="foreground">if set to <c>true</c> map view is about to become visible, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnMapViewInitialized(ModApi.Flight.MapView.IMapView)">
      <summary>
            Called when the map view has initialized.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.OnNodeListChanged(Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Called when a node is either added or removed from the craft's chain or nodes (maneuvers/encounters).
            </summary>
      <param name="source">The source.</param>
      <param name="node">The node.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.RemoveIncompatibleEncounters">
      <summary>
            Removes incompatible/impossible encounters.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.UpdateUiAfterCameraPositioned">
      <summary>
            Updates the UI.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapCraft.UpdateUiBeforeCameraPositioned">
      <summary>
            Updates the UI before camera positioned.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.MapItem">
      <summary>
            Base class for all map items: orbits, planets, players, etc.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Interfaces.IOrbitInfoProvider" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerEnterHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerExitHandler" />
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerClickHandler" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItem._orbitInfos">
      <summary>
            Dictionary mapping orbit node's to the MapOrbitInfo instance.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItem._drawModeProvider">
      <summary>
            The draw mode provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItem._infoCanvas">
      <summary>
            The information canvas
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItem._infoText">
      <summary>
            The information text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItem._itemIcon">
      <summary>
            The item icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItem._orbitInfo">
      <summary>
            The orbit information for this map item.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Items.MapItem.ItemClicked">
      <summary>
            Occurs when the planet has been clicked.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Items.MapItem._itemClicked">
      <summary>
            Occurs when the planet has been clicked.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.Color">
      <summary>
            Gets or sets the color associated with this <seealso cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /></summary>
      <value>
            The color associated with this <seealso cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /></value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.CoordinateConverter">
      <summary>
            Gets the map view script.
            </summary>
      <value>
            The map view script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.DisplayManeuverNodeAdderOnMouseHover">
      <summary>
            Gets a value indicating whether the maneuver node adder icon should be allowed to be displayed when the mouse hovers over this item.
            </summary>
      <value>
        <c>true</c> if the maneuver node adder icon should be allowed to be displayed when the mouse hovers over this item; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.DrawModeProvider">
      <summary>
            Gets the draw mode provider.
            </summary>
      <value>
            The draw mode provider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.Hovered">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /> is hovered.
            </summary>
      <value>
        <c>true</c> if hovered; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.InfoCanvas">
      <summary>
            Gets the information canvas.
            </summary>
      <value>
            The information canvas.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.ItemName">
      <summary>
            Gets or sets the name of the item.
            </summary>
      <value>
            The name of the item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.MapPosition">
      <summary>
            Gets the map position.
            </summary>
      <value>
            The map position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.OrbitInfo">
      <summary>
            Gets the orbit information for this map item.
            </summary>
      <value>
            The orbit information for this map item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.Selectable">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /> is click-able.
            </summary>
      <value>
        <c>true</c> if click-able; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.Text">
      <summary>
            Gets or sets the text to display for the map item.
            </summary>
      <value>
            The text to display for the map item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.UiCameraDist">
      <summary>
            Gets the distance from this map item to the camera.
            </summary>
      <value>
            The distance from this map item to the camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.UiMaxRenderDist">
      <summary>
            Gets or sets the maximum dist that items represented by UI components can be away and still be rendered.
            </summary>
      <value>
            The maximum dist that items represented by UI components can be away and still be rendered.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.UiVisibilityAtItemPosition">
      <summary>
            Gets the current visibility of UI components.
            </summary>
      <value>
            The current visibility of UI components.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.UiVisibilityAtItemPositionUnclamped">
      <summary>
            Gets the current unclamped visibility of UI components.  May be outside the 0...1 range.
            </summary>
      <value>
            The current unclamped visibility of UI components.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.ContainerProvider">
      <summary>
            Gets the container provider.
            </summary>
      <value>
            The container provider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.ItemIcon">
      <summary>
            Gets the item icon.
            </summary>
      <value>
            The item icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.ItemRegistry">
      <summary>
            Gets the item registry.
            </summary>
      <value>
            The item registry.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.SwitchType``1(Assets.Scripts.Flight.MapView.Items.MapItem)">
      <summary>
            Switches the type of the map item from its current to type T.  The current item will be removed.
            </summary>
      <typeparam name="T">The MapItem type to switch to.</typeparam>
      <param name="current">The current MapItem to switch types for. This item will be removed.</param>
      <returns>
            The new item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.Destroy">
      <summary>
            Destroys this MapItem.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnBeforeCameraPositioned">
      <summary>
            Called each frame before the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When clicked.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When entered.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When exited.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnSwitchingToNewType">
      <summary>
            Called when this MapItem is being switch to a new MapItem type (like from a MapPlayerCraft to a MapCraft/MapStaticOrbitItem, etc.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.PerformValidityChecks">
      <summary>
            Called after all updating is done for the frame.  This is a debug method which allows chain-able items a chance to check their current state and report any errors.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.SetDrawModeProvider(Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider)">
      <summary>
            Sets the draw mode provider.
            </summary>
      <param name="drawModeProvider">The draw mode provider.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnSceneTransition">
      <summary>
            Called when a scene transition occurs.
            This is only used as a workaround to prevent a memory leak with the static orbit infos dictionary.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.Create``1(ModApi.Flight.Sim.IOrbitNode,System.String,UnityEngine.Transform,UnityEngine.Camera,UnityEngine.Transform,UnityEngine.Sprite)">
      <summary>
            Creates the specified map view script.
            </summary>
      <typeparam name="T">The MapItem type</typeparam>
      <param name="node">The node.</param>
      <param name="name">Name of the item.</param>
      <param name="canvasContainer">The container to put canvases in.  It must be ignored by floating origin or else the UI will jiggle.</param>
      <param name="mapCamera">The map camera.</param>
      <param name="container">The container the map item will go under.</param>
      <param name="distanceIcon">The distance icon.</param>
      <returns>
            The MapItem.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.FixedUpdate">
      <summary>
            The fixed update.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.GetScreenPos">
      <summary>
            Gets the screen position of the map item.
            </summary>
      <returns>The screen position of the map item.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.GetTextPosition">
      <summary>
            Gets the text position.
            </summary>
      <returns>The text position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.LateUpdate">
      <summary>
            The late update.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnDestroy">
      <summary>
            Called when [destroy].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnDisable">
      <summary>
            Called when this item has been disabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnEnable">
      <summary>
            Called when this item has been disabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnMapItemInitialized">
      <summary>
            Called after base class <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /> has been initialized.  If a derived class doesn't need specific parameters passed into it's Initialize() method then it can override this to perform any initialization.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.OnNodeDestroyed(ModApi.Flight.Sim.INode)">
      <summary>
            Called when this item's associated node has been destroyed.
            </summary>
      <param name="node">The node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.UpdateIconPosition">
      <summary>
            Updates the icon position.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.GenerateColor">
      <summary>
            Generates a random color which has consistent HSV values used in Map View.
            </summary>
      <returns>A random color which has consistent HSV values used in Map View.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.GetOrCreateOrbitInfo(ModApi.Flight.Sim.IOrbitNode,UnityEngine.Camera)">
      <summary>
            Gets the MapOrbitInfo for the given IOrbitNode if exists, creates if it does not.
            </summary>
      <param name="node">The node.</param>
      <param name="mapCamera">The map camera.</param>
      <returns>
            The MapOrbitInfo for the specified node.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.RaiseItemClicked(Assets.Scripts.Flight.MapView.Items.MapItem)">
      <summary>
            Raises the planet clicked event.
            </summary>
      <param name="itemClicked">The planet clicked.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.AddPointerNotifications(UnityEngine.Canvas)">
      <summary>
            Adds the pointer notification script to the specified canvas so we can recieve notifications due to the fact that it
            is not a child of ours.
            </summary>
      <param name="canvas">The canvas.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.Initialize(ModApi.Flight.Sim.IOrbitNode,System.String,UnityEngine.Transform,UnityEngine.Camera,UnityEngine.Sprite)">
      <summary>
            Initializes the specified map view script.
            </summary>
      <param name="node">The node.</param>
      <param name="itemName">Name of the item.</param>
      <param name="canvasContainer">The container to put canvases in.  It must be ignored by floating origin or else the UI will jiggle.</param>
      <param name="mapCamera">The map camera.</param>
      <param name="distanceIcon">The distance icon.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.RemovePointerNotifications(UnityEngine.Canvas)">
      <summary>
            Removes the pointer notifications from the specified canvas.
            </summary>
      <param name="canvas">The canvas.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.MapItem.ItemClickedEventArgs">
      <summary>
            Fired when the item is clicked.
            </summary>
      <seealso cref="T:System.EventArgs" />
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItem.ItemClickedEventArgs.#ctor(Assets.Scripts.Flight.MapView.Items.MapItem)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem.ItemClickedEventArgs" /> class.
            </summary>
      <param name="itemClicked">The MapItem clicked.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItem.ItemClickedEventArgs.ItemClicked">
      <summary>
            Gets the planet clicked.
            </summary>
      <value>
            The planet clicked.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.MapItemManager">
      <summary>
            Handles tasks related to maintaining/providing access to the MapView items like craft, planets, orbit lines, etc.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItemManager._allCrafts">
      <summary>
            All crafts.  Includes current player craft (MapPlayerCraft), non-player craft loaded into Game View (MapCraft), and non-player craft not loaded into game view (MapStaticOrbitItem).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItemManager._mapDynamicCrafts">
      <summary>
            The map dynamic orbits
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItemManager._mapItems">
      <summary>
            The list of all MapItems.  Craft, Planets, OrbitLines, etc.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItemManager._mapOrbitLines">
      <summary>
            The map orbit lines.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItemManager._mapPlanets">
      <summary>
            The map planets
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItemManager._mapPlayerCrafts">
      <summary>
            The map items.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItemManager._mapStaticOrbits">
      <summary>
            The map static orbits
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapItemManager._orbitNodes">
      <summary>
            The orbit nodes
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Items.MapItemManager.MapItemAdded">
      <summary>
            Occurs when a map item is added.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Items.MapItemManager.MapItemRemoved">
      <summary>
            Occurs when a map item is removed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#Crafts">
      <summary>
            Gets the list of all crafts in map view. Includes the current player-controlled craft (MapPlayerCraft), non-player craft loaded into game view (MapCraft), and non-player craft not loaded into game view (MapStaticOrbitItem).
            </summary>
      <value>
            The list of all crafts in map view. Includes the current player-controlled craft (MapPlayerCraft), non-player craft loaded into game view (MapCraft), and non-player craft not loaded into game view (MapStaticOrbitItem).
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#DynamicCrafts">
      <summary>
            Gets the list of active non player-controlled dynamic crafts.
            </summary>
      <value>
            The list of active non player-controlled dynamic crafts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#Items">
      <summary>
            Gets the list of active MapItems.
            </summary>
      <value>
            The list of active MapItems.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#OrbitNodes">
      <summary>
            Gets the list of active <see cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" />s.
            </summary>
      <value>
            The list of active <see cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" />s.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#PlayerCrafts">
      <summary>
            Gets the list of active MapPlayerCrafts.
            </summary>
      <value>
            The list of active MapPlayerCraft.
            </value>
      <remarks>
            There should only ever be one in the list except for briefly when switching to a new craft.
            </remarks>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.Create(UnityEngine.GameObject)">
      <summary>
            Creates an instance of MapItemManager.
            </summary>
      <param name="parent">The parent where the script will reside.</param>
      <returns>The MapItemManager</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.FindTargetableItem(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Finds the targetable item associated with the specified orbit node.
            </summary>
      <param name="orbitNode">The orbit node.</param>
      <returns>The targetable item, or null if it cannot be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#GetCraft(ModApi.Craft.ICraftNode)">
      <summary>
            Gets the craft node's associated MapCraft.
            </summary>
      <param name="craftNode">The craft node.</param>
      <returns>
            The craft node's associated MapCraft.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#GetItem(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Gets the <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /> which belongs to the provided <see cref="T:ModApi.Flight.Sim.IOrbitNode" /></summary>
      <param name="node">The node to get the <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /> for.</param>
      <returns>The MapItem which belongs to the provided <see cref="T:ModApi.Flight.Sim.IOrbitNode" /></returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#GetOrbitNode(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Gets the <see cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" /> which belonogs to the provided <see cref="T:ModApi.Flight.Sim.IOrbitNode" /></summary>
      <param name="node">The node.</param>
      <returns>
            The <see cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" /> which belonogs to the provided <see cref="T:ModApi.Flight.Sim.IOrbitNode" /></returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#GetPlanet(ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Gets the planet node's associated MapPlanet object.
            </summary>
      <param name="planetNode">The planet node to get the associated MapPlanet object for.</param>
      <returns>
            The planet node's associated MapPlanet object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#PerformMapItemAction(System.Action{Assets.Scripts.Flight.MapView.Items.MapItem})">
      <summary>
            Performs the action on all MapItems.
            </summary>
      <param name="action">The action to perform on all MapItems.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#RegisterItem(Assets.Scripts.Flight.MapView.Items.MapItem)">
      <summary>
            Registers the item.
            </summary>
      <param name="mapItem">The map item.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.Assets#Scripts#Flight#MapView#Interfaces#IItemRegistry#UnregisterItem(Assets.Scripts.Flight.MapView.Items.MapItem)">
      <summary>
            Removes the item.
            </summary>
      <param name="mapItem">The map item.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapItemManager.IsCraft(Assets.Scripts.Flight.MapView.Items.MapItem)">
      <summary>
            Determines whether the specified item is craft.
            </summary>
      <param name="item">The item to check..</param>
      <returns>
        <c>true</c> if the specified item is craft; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode">
      <summary>
            Base class for all items representing OrbitNodes (craft/planets) in MapView.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" />
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapOrbitNode.Data">
      <summary>
            Gets the <see cref="T:ModApi.State.MapView.MapItemData" /> data.
            </summary>
      <value>
            The <see cref="T:ModApi.State.MapView.MapItemData" /> data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapOrbitNode.OrbitLine">
      <summary>
            Gets the orbit line.
            </summary>
      <value>
            The orbit line.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapOrbitNode.Destroy">
      <summary>
            Destroys this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapOrbitNode.OnMapItemInitialized">
      <summary>
            Called after base class <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /> has been initialized.  If a derived class doesn't need specific parameters passed into it's Initialize() method then it can override this to perform any initialization.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapOrbitNode.SetOrbitLine(Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine)">
      <summary>
            Sets the orbit line.
            </summary>
      <param name="orbitLine">The orbit line.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.MapPlanet">
      <summary>
            Script for a planet on the map view.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.MapOrbitNode" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.ITargetableItem" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.UI.ICameraFocusable" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlanet._cameraFocusableDestroyed">
      <summary>
            The camera focusable destroyed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlanet._lightPosition">
      <summary>
            The light position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlanet._mapScaledPlanetRadius">
      <summary>
            The map-scale scaled planet radius
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlanet._orbitLineMaterial">
      <summary>
            The orbit line material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlanet._orbitLineShader">
      <summary>
            The orbit line shader
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlanet._scaledSpacePlanetMesh">
      <summary>
            The planet mesh
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlanet._scaledSpacePlanetMeshMaterial">
      <summary>
            The scaled space planet mesh material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlanet._scaledSpacePlanetScript">
      <summary>
            The scaled space planet script
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Items.MapPlanet.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Destroyed">
      <summary>
            Occurs when this item has been destroyed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#AssociatedPlanet">
      <summary>
            Gets the planet associated w/this item.
            </summary>
      <value>
            The planet associated w/this item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.Assets#Scripts#Flight#MapView#Items#ITargetableItem#ClosestEncounterIcon">
      <summary>
            Gets the closest encounter icon.
            </summary>
      <value>
            The closest encounter icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.DisplayManeuverNodeAdderOnMouseHover">
      <summary>
            Gets a value indicating whether the maneuver node adder icon should be allowed to be displayed when the mouse hovers over this item.
            </summary>
      <value>
        <c>true</c> if the maneuver node adder icon should be allowed to be displayed when the mouse hovers over this item; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#FocusByClick">
      <summary>
            Gets a value indicating whether camera focus should be set when clicked.
            </summary>
      <value>
        <c>true</c> if camera focus should be set when clicked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#MinZoomDistance">
      <summary>
            Gets the minimum distance that the camera should zoom on this position.
            </summary>
      <value>
            The minimum distance that the camera should zoom on this position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.Assets#Scripts#Flight#MapView#Items#ITargetableItem#Name">
      <summary>
            Gets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.NavigationTargetProvider">
      <summary>
            Gets the navigation target provider.
            </summary>
      <value>
            The navigation target provider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.PlanetNode">
      <summary>
            Gets or sets the planet node.
            </summary>
      <value>
            The planet node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Position">
      <summary>
            Gets the position the camera should focus on, in map view coordinates.
            </summary>
      <value>
            The position the camera should focus on, in map view coordinates.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlanet.WorldPosition">
      <summary>
            Gets the world position.
            </summary>
      <value>
            The world position.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.Destroy">
      <summary>
            Destroys this MapItem.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.Assets#Scripts#Flight#MapView#Items#ITargetableItem#GetSphereOfInfluence(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the sphere of influence for this targetable item.  It may change depending on the other item.
            </summary>
      <param name="other">The other object in the encounter calculation.</param>
      <returns>
            The sphere of influence for this targetable item.
            </returns>
      <remarks>
            For planets, this will probably just be their sphere of influence.  For non-planets, it will usually be zero unless both are non-planets then a distance will returned.
            </remarks>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.OnBeforeCameraPositioned">
      <summary>
            Called each frame before the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.Create(Assets.Scripts.Flight.Sim.PlanetNode,UnityEngine.Camera)">
      <summary>
            Creates the specified planet node.
            </summary>
      <param name="planetNode">The planet node.</param>
      <param name="mapCamera">The map camera.</param>
      <returns>
            The MapPlanet.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.UpdateCubemaps(UnityEngine.Material,UnityEngine.Texture,UnityEngine.Texture)">
      <summary>
            Updates the cubemaps for the planet.
            </summary>
      <param name="material">The material on which to update the cubemaps.</param>
      <param name="colors">The colors cubemap.</param>
      <param name="normals">The normal map cubemap.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.CreatePlanetMaterial(Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript)">
      <summary>
            Creates a material instance for the specified scaled-space planet with the associated cube/bump map textures applied.
            </summary>
      <param name="scaledSpacePlanetScript">The scaled space planet script.</param>
      <returns>A material instance for the specified scaled-space planet with the associated cube/bump map textures applied.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.CreatePlanetMesh(Assets.Scripts.Flight.Sim.PlanetNode,UnityEngine.Transform,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript@,UnityEngine.Material@)">
      <summary>
            Creates the planet mesh and associated GameObject, material, and collider.
            </summary>
      <param name="planetNode">The planet node.</param>
      <param name="parent">The parent.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="scaledSpacePlanetScript">The scaled space planet script.</param>
      <param name="material">The material.</param>
      <returns>The planet's mesh game object.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.Initialize(Assets.Scripts.Flight.Sim.PlanetNode,Assets.Scripts.Flight.MapView.Interfaces.ILightPosition)">
      <summary>
            Initializes the specified planet node.
            </summary>
      <param name="planetNode">The planet node.</param>
      <param name="lightPosition">The light position.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlanet.PlanetCubemapsChanged(System.Object,Assets.Scripts.Terrain.Rendering.Events.PlanetCubemapsChangedEventArgs)">
      <summary>
            Called when the scaled space planet cubemaps change.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:Assets.Scripts.Terrain.Rendering.Events.PlanetCubemapsChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft">
      <summary>
            Represent's the players craft.  In addition to being able to detect and predict encounters (from base class <see cref="T:Assets.Scripts.Flight.MapView.Items.MapCraft" />
            it also supports maneuver nodes, the ability to track targets, and is the only orbit type which is interactable via the mouse cursor.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.MapCraft" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft._chainNodeIO">
      <summary>
            The ChainNodeIO instance for this player craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft._infoPanel">
      <summary>
            The information panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft._maneuverNodeManager">
      <summary>
            The maneuver node adder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft._mapView">
      <summary>
            The map view
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft._nodeNavigator">
      <summary>
            The maneuver navigator
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft._orbitInteractionScript">
      <summary>
            The orbit interaction script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft._showNodeLines">
      <summary>
            Set to <c>true</c> to draw the orbit's node-line gizmos.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.Initialized">
      <summary>
            Occurs when the craft has been initialized.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft._initialized">
      <summary>
            Occurs when the craft has been initialized.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.ChainNodeIO">
      <summary>
            Gets the ChainNodeIO instance for this player craft.
            </summary>
      <value>
            The ChainNodeIO instance for this player craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.IsInitialized">
      <summary>
            Gets a value indicating whether the craft is initialized.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.ManeuverNodeManager">
      <summary>
            Gets the maneuver node manager.
            </summary>
      <value>
            The maneuver node manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.NodeNavigator">
      <summary>
            Gets the node navigator.
            </summary>
      <value>
            The node navigator.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.OrbitInteractionScript">
      <summary>
            Gets the orbit interaction script.
            </summary>
      <value>
            The orbit interaction script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.SupportsManeuverNodes">
      <summary>
            Gets a value indicating whether this MapCraft supports maneuver nodes.
            </summary>
      <value>
        <c>true</c> if this MapCraft supports maneuver nodes; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.SupportsOrbitLinePulses">
      <summary>
            Gets a value indicating whether this craft's lines should support sending a "pulse" through them after certain events occur.
            </summary>
      <value>
        <c>true</c> if this craft's lines should support sending a "pulse" through them after certain events occur; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.Create(Assets.Scripts.Flight.Sim.CraftNode,UnityEngine.Camera)">
      <summary>
            Creates the specified map view script.
            </summary>
      <param name="craftNode">The craft node.</param>
      <param name="mapCamera">The map camera.</param>
      <returns>
            The MapCraft.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.Destroy">
      <summary>
            Destroys this MapItem.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.OnBeforeCameraPositioned">
      <summary>
            Called each frame before the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When clicked.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.OnSwitchingToNewType">
      <summary>
            Called when this MapItem is being switch to a new MapItem type (like from a MapPlayerCraft to a MapCraft/MapStaticOrbitItem, etc.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.SynchronizeManeuverNodeData">
      <summary>
            Synchronizes the maneuver node data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.GetClosestEncounterIcon">
      <summary>
            Gets the closest encounter icon.
            </summary>
      <returns>
            The closest encounter icon.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.Initialize(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Initializes the specified craft node.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.RegisterInfoPanel">
      <summary>
            Updates the information panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.RestoreManeuverNodes">
      <summary>
            Restores the maneuver nodes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapPlayerCraft.UpdateDebugUI">
      <summary>
            Updates some debug/informational UI stuff.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem">
      <summary>
            Represents an item with a static orbit.  They do not change once created.  It is used by non-player craft which do not have physics enabled.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.ITargetableItem" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.UI.ICameraFocusable" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem._sharedMaterial">
      <summary>
            The shared material for static craft orbit lines.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem._cameraFocusableDestroyed">
      <summary>
            The camera focusable destroyed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem._options">
      <summary>
            The map options interface.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem._orbitLine">
      <summary>
            The orbit line
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Destroyed">
      <summary>
            Occurs when this item has been destroyed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#AssociatedPlanet">
      <summary>
            Gets the planet associated w/this item.
            </summary>
      <value>
            The planet associated w/this item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Assets#Scripts#Flight#MapView#Items#ITargetableItem#ClosestEncounterIcon">
      <summary>
            Gets the closest encounter icon.
            </summary>
      <value>
            The closest encounter icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#FocusByClick">
      <summary>
            Gets a value indicating whether camera focus should be set when clicked.
            </summary>
      <value>
        <c>true</c> if camera focus should be set when clicked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#MinZoomDistance">
      <summary>
            Gets the minimum distance that the camera should zoom on this position.
            </summary>
      <value>
            The minimum distance that the camera should zoom on this position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Assets#Scripts#Flight#MapView#Items#ITargetableItem#Name">
      <summary>
            Gets the name of this target-able item.
            </summary>
      <value>
            The name of this target-able item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Position">
      <summary>
            Gets the position the camera should focus on, in map view coordinates.
            </summary>
      <value>
            The position the camera should focus on, in map view coordinates.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Create(ModApi.Flight.Sim.IOrbitNode,UnityEngine.Camera)">
      <summary>
            Creates the specified craft node.
            </summary>
      <param name="craftNode">The craft node.</param>
      <param name="mapCamera">The map camera.</param>
      <returns>
            The MapStaticOrbitItem
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Destroy">
      <summary>
            Destroys this MapItem.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Assets#Scripts#Flight#MapView#Items#ITargetableItem#GetSphereOfInfluence(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the sphere of influence for this target-able item.  It may change depending on the other item.
            </summary>
      <param name="other">The other object in the encounter calculation.</param>
      <returns>
            The sphere of influence for this target-able item.
            </returns>
      <remarks>
            For planets, this will probably just be their sphere of influence.  For non-planets, it will usually be zero unless both are non-planets then a distance will returned.
            </remarks>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.OnMapItemInitialized">
      <summary>
            Called after base class <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" /> has been initialized.  If a derived class doesn't need specific parameters passed into it's Initialize() method then it can use this.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.GetOrCreateMaterial">
      <summary>
            Gets the or create material for static craft orbit lines.
            </summary>
      <returns>The or create material for static craft orbit lines.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Items.MapStaticOrbitItem.OnCraftNodePhysicsEnabled(ModApi.Craft.ICraftNode,ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Occurs when physics is being disabled for a craft node. The orbit's position/velocity will be updated by calling AdvanceTime() on the orbit.
            </summary>
      <param name="source">The source craft node.</param>
      <param name="reason">The reason physics has changed.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapCameraScript">
      <summary>
            Map view controller class.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._camera">
      <summary>
            The _camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._cameraTarget">
      <summary>
            The camera target.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._deltaRotation">
      <summary>
            The _delta rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._desiredZoomDistance">
      <summary>
            The _target distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._firstTargetSet">
      <summary>
            A value indicating whether we've set the target before.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._inputResponder">
      <summary>
            The input responder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._itemRegistry">
      <summary>
            The item registry
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._mapViewCoordinateConverter">
      <summary>
            The map view coordinate converter
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._minZoomDistance">
      <summary>
            The minimum zoom distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._playerCraftProvider">
      <summary>
            The player craft provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._positionOffset">
      <summary>
            The position offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._prevDeltaVec">
      <summary>
            The previous delta vec
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript._tweenInfo">
      <summary>
            Basic tween information used for camera movement.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapCameraScript.CameraRenderHandler">
      <summary>
            Used for OnPre/PostRender events.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.MapCameraScript.PostRender">
      <summary>
            Occurs when the camera's OnPostRender event is called.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.MapCameraScript.PreRender">
      <summary>
            Occurs when the camera's OnPreRender event is called.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.MapCameraScript.TargetChanged">
      <summary>
            Occurs when the target has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.CurrentZoomPercent">
      <summary>
            Gets the current zoom percent.
            </summary>
      <value>
            The current zoom percent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.DistanceFromTarget">
      <summary>
            Gets the distance from target.
            </summary>
      <value>
            The distance from target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.DistanceFromTargetsAssociatedPlanet">
      <summary>
            Gets the distance from targets associated planet.
            </summary>
      <value>
            The distance from targets associated planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.InputResponder">
      <summary>
            Gets the input responder.
            </summary>
      <value>
            The input responder.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.MaxZoomDistance">
      <summary>
            Gets the maximum zoom distance.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.MinZoomDistance">
      <summary>
            Gets the minimum zoom distance.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.Target">
      <summary>
            Gets the camera target.
            </summary>
      <value>
            The camera target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.TargetsAssociatedPlanet">
      <summary>
            Gets the target's associated planet.  If the target is a planet, itself is the associated planet, otherwise the target's parent is returned.  If the target has
            no orbit information, then there is no associated planet, and null is returned.
            </summary>
      <value>
            The targets associated planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.ZoomDistance">
      <summary>
            Gets the current zoom distance.
            </summary>
      <value>
            The zoom distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.ZoomStep">
      <summary>
            Gets the zoom step
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.Create(UnityEngine.GameObject,UnityEngine.Camera)">
      <summary>
            Creates the specified game object.
            </summary>
      <param name="gameObject">The game object.</param>
      <param name="mapCamera">The map camera.</param>
      <returns>
            The MapCameraScript
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.SetRotationAndZoom(UnityEngine.Vector2,System.Single)">
      <summary>
            Sets the rotation and zoom.
            </summary>
      <param name="rotation">The rotation.</param>
      <param name="zoom">The zoom.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.SetTarget(Assets.Scripts.Flight.MapView.UI.ICameraFocusable,Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed,System.Boolean)">
      <summary>
            Sets a new camera target.
            </summary>
      <param name="target">The target.</param>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.UpdateCamera">
      <summary>
            Updates the camera.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.InputRotationMultiplier">
      <summary>
            Gets the input rotation multiplier for the x and y axis.
            </summary>
      <returns>The input rotation multiplier for the x and y axis.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.AdjustZoomDistance(System.Single,System.Single,System.Single,System.Single@)">
      <summary>
            Adjusts the zoom distance
            </summary>
      <param name="zoomInput">The zoom input amount.</param>
      <param name="minZoomDistance">The minimum zoom distance.</param>
      <param name="maxZoomDistance">The maximum zoom distance.</param>
      <param name="desiredZoomDistance">The distance that the camera should try to obtain from the target.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.Awake">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.Initialize(UnityEngine.Camera)">
      <summary>
            Initializes the specified map camera.
            </summary>
      <param name="mapCamera">The map camera.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnCameraTargetDestroyed(Assets.Scripts.Flight.MapView.UI.ICameraFocusable)">
      <summary>
            Called when the current camera target has been destroyed.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnDestroy">
      <summary>
            Called when the gameobject is being destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnDisable">
      <summary>
            Called when [disable].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When dragging is occurring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnEnable">
      <summary>
            Called when [enable].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnPinch(ModApi.Flight.UI.PinchEventData)">
      <summary>
            Called when the user pinches the view.
            </summary>
      <param name="eventData">The event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnPostRender">
      <summary>
            Called right after the map view camera has rendered.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnPreRender">
      <summary>
            Called right before the map view camera is about to render.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnScroll(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when scrolling.
            </summary>
      <param name="eventData">The event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.OnTargetChangedSoi(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Called when the target has transitioned to a new soi.
            </summary>
      <param name="source">The source OrbitNode.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.RemoveTargetEvents">
      <summary>
            Removes event subscriptions from the current target.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.Rotate(UnityEngine.Vector2,System.Boolean)">
      <summary>
            Rotates the specified delta.
            </summary>
      <param name="delta">The delta.</param>
      <param name="additiveRotation">if set to <c>true</c> [additive rotation].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.SetCameraClipPlanes">
      <summary>
            Sets the cameras clip planes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.SetTargetsAssociatedPlanet">
      <summary>
            Sets planet that the target is associated with.  If the target is a craft, it is the craft's parent, if the target is a planet, then that same planet is used.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapCameraScript.CameraRepositionedEventArgs">
      <summary>
            Fired when the camera is repositioned.
            </summary>
      <seealso cref="T:System.EventArgs" />
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.CameraRepositionedEventArgs.#ctor(Assets.Scripts.Flight.MapView.MapCameraScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.MapCameraScript.CameraRepositionedEventArgs" /> class.
            </summary>
      <param name="mapCameraScript">The map camera script.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.CameraRepositionedEventArgs.MapCameraScript">
      <summary>
            Gets the map camera script.
            </summary>
      <value>
            The map camera script.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo">
      <summary>
            A class to wrap Tweening "responsiveness" values which are used to control how quickly the camera responds to changes in position/rotation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.FastPositionResponsiveness">
      <summary>
            The default position responsiveness
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.FastRotationResponsiveness">
      <summary>
            The default rotation responsiveness
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.MediumPositionResponsiveness">
      <summary>
            The default position responsiveness
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.MediumRotationResponsiveness">
      <summary>
            The default rotation responsiveness
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.NormalCameraPositionResponsiveness">
      <summary>
            The normal position responsiveness for regular camera movement when the user is rotating/zooming around the current target.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.NormalCameraRotationResponsiveness">
      <summary>
            The normal rotation responsiveness for regular camera movement when the user is rotating/zooming around the current target.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo._positionResponsivenessTween">
      <summary>
            The tween used to change position responsiveness.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo._rotationResponsivenessTween">
      <summary>
            The tween used to change rotation responsiveness.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.PositionResponsiveness">
      <summary>
            Gets the current position responsiveness value to be used for lerping.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.RotationResponsiveness">
      <summary>
            Gets the current rotation responsiveness value to be used for lerping.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.CompleteTweens">
      <summary>
            Completes any in-progress tweens.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.SetResponsivenessAndTweenBack(Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed)">
      <summary>
            Sets the responsiveness to the desired setting and then tweens back to the default.
            </summary>
      <param name="transitionSpeed">The transition speed.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.SetFastResponsiveness">
      <summary>
            Sets responsiveness to the fast setting.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.SetMediumResponsiveness">
      <summary>
            Sets responsiveness to the medium setting.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapCameraScript.CameraTweenInfo.SetResponsivenessAndTweenBack(System.Action)">
      <summary>
            Sets the responsiveness to the desired setting and tweens back to the default.
            </summary>
      <param name="setResponsiveness">The action which will set the temporary responsiveness before tweening back.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapConstants">
      <summary>
            Constants related to Map-Vew.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript">
      <summary>
            Utility class which calculates closest points to various objects.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript._closestPoint">
      <summary>
            The closest point
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript._connectingLine">
      <summary>
            The connecting line
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript._ellipse">
      <summary>
            The line
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript._orbit">
      <summary>
            The orbit
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript._plane">
      <summary>
            The plane
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript._spherePoint">
      <summary>
            The sphere point
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript._xRadius">
      <summary>
            The x radius
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript._yRadius">
      <summary>
            The y radius
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript.MapViewScript">
      <summary>
            Gets the map view script.
            </summary>
      <value>
            The map view script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript.ClosestPointToEllipse(UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Vector2)">
      <summary>
            Closests the point to ellipse.
            </summary>
      <param name="center">The center.</param>
      <param name="xRadius">The x radius.</param>
      <param name="yRadius">The y radius.</param>
      <param name="point">The point.</param>
      <returns>The closest point to the specified ellipse.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript.ClosestPointToEllipseOriginal(UnityEngine.Vector3,System.Single,System.Single,UnityEngine.Vector2)">
      <summary>
            Closests the point to ellipse.
            </summary>
      <param name="center">The cente.r</param>
      <param name="xRadius">The x radius.</param>
      <param name="yRadius">The y radius.</param>
      <param name="point">The point.</param>
      <returns>The closest point to the specified ellipse.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript.GetManeuverNodePointFromMouse(ModApi.Flight.Sim.IOrbit,UnityEngine.Vector2)">
      <summary>
            Gets maneuver node point closest to the mouse pointer.
            </summary>
      <param name="orbit">The orbit.</param>
      <param name="pointerPosition">The pointer position.</param>
      <returns>
            The maneuver node point closest to the mouse pointer.
            </returns>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript.UpdateClosestPoint">
      <summary>
            Updates the closest point.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript.UpdateEllipse">
      <summary>
            Updates the ellipse.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.ClosestPointScript.UpdatePointerPoint">
      <summary>
            Updates the pointer point.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapDebug.DebugScript">
      <summary></summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.DebugScript.PlaneToProjectOnto">
      <summary>
            The plane to project onto
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.DebugScript.TransformToProject">
      <summary>
            The transform to project
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.DebugScript.Result">
      <summary>
            The result
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.DebugScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapDebug.InputReporter">
      <summary>
            Debug class to show when an input has occurred for this object.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerClickHandler" />
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.InputReporter.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when this obejct has been reported that a click has occurred.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapDebug.MapOrbitLineDebugScript">
      <summary>
            The MapOrbitLineDebugScript
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.MapOrbitLineDebugScript._mapOrbitLine">
      <summary>
            The map orbit line
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.MapOrbitLineDebugScript.RunStaticTests(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Runs the static tests.
            </summary>
      <param name="orbitNode">The orbit node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.MapOrbitLineDebugScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapDebug.OrbitDebugScript">
      <summary>
            A script used for debugging orbits.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.OrbitDebugScript._mapViewScript">
      <summary>
            The map view script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.OrbitDebugScript._node">
      <summary>
            The node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.OrbitDebugScript._orbitToDebugFunc">
      <summary>
            The orbit
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.OrbitDebugScript.Create(Assets.Scripts.Flight.Sim.Node,Assets.Scripts.Flight.Sim.Orbit,Assets.Scripts.Flight.MapView.MapViewScript,System.Int32,System.String)">
      <summary>
            Creates the specified node to debug.
            </summary>
      <param name="nodeToDebug">The node to debug.</param>
      <param name="orbitToDebug">The orbit to debug.</param>
      <param name="mapViewScript">The map view script.</param>
      <param name="layer">The layer.</param>
      <param name="debugName">Name of the debug.</param>
      <returns>The OrbitDebugScript.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.OrbitDebugScript.Create(Assets.Scripts.Flight.Sim.Node,System.Func{Assets.Scripts.Flight.Sim.Orbit},Assets.Scripts.Flight.MapView.MapViewScript,System.Int32,System.String)">
      <summary>
            Creates the specified node to debug.
            </summary>
      <param name="nodeToDebug">The node to debug.</param>
      <param name="orbitToDebugFunc">The orbit to debug function.</param>
      <param name="mapViewScript">The map view script.</param>
      <param name="layer">The layer.</param>
      <param name="debugName">Name of the debug.</param>
      <returns>
            The OrbitDebugScript.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.OrbitDebugScript.RunTestFromOrbitalElements(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,Assets.Scripts.Flight.MapView.MapViewScript)">
      <summary>
            Runs the test from state vectors.
            </summary>
      <param name="eccentricity">The eccentricity.</param>
      <param name="semiMajorAxis">The semi major axis.</param>
      <param name="periapsisAngle">The periapsis angle.</param>
      <param name="trueAnomaly">The true anomaly.</param>
      <param name="inclination">The inclination.</param>
      <param name="rightAscentionOfAscendingNode">The right ascention of ascending node.</param>
      <param name="prograde">if set to <c>true</c> [prograde].</param>
      <param name="mapViewScript">The map view script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.OrbitDebugScript.RunTestFromStateVectors(UnityEngine.Vector3d,UnityEngine.Vector3d,System.Double,Assets.Scripts.Flight.MapView.MapViewScript)">
      <summary>
            Runs the test from state vectors.
            </summary>
      <param name="position">The position.</param>
      <param name="velocity">The velocity.</param>
      <param name="mapViewScript">The map view script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.OrbitDebugScript.Initialize(Assets.Scripts.Flight.Sim.Node,System.Func{Assets.Scripts.Flight.Sim.Orbit},Assets.Scripts.Flight.MapView.MapViewScript)">
      <summary>
            Initializes the specified node to debug.
            </summary>
      <param name="nodeToDebug">The node to debug.</param>
      <param name="orbitToDebugFunc">The orbit to debug function.</param>
      <param name="mapViewScript">The map view script.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker">
      <summary>
            Debug class which keeps track of world/screen space coords.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker._camera">
      <summary>
            The camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker._space">
      <summary>
            The space
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker._transToTrack">
      <summary>
            The trans to track
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker._type">
      <summary>
            The type
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker.SpaceType">
      <summary>
            The type of space the coords are in.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker.SpaceType.World">
      <summary>
            World space
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker.SpaceType.Local">
      <summary>
            Local space
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker.TransType">
      <summary>
            The transform type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker.TransType.ScreenPoint">
      <summary>
            Screen point
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker.TransType.ViewportPoint">
      <summary>
            Viewport point
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapDebug.WorldToScreenSpaceTracker.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapUtils">
      <summary>
            General-purpose utility methods for MapView.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapUtils.AreUnstableFeaturesEnabled">
      <summary>
            Returns a value indicating whether features marked as unstable are currently enabled.  Used to disable features for release builds.
            </summary>
      <returns>
        <c>true</c> unstable features are currently enabled, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapUtils.DrawDebugBall(ModApi.Flight.Sim.IOrbitNode,ModApi.Flight.Sim.IOrbitPoint,System.String,UnityEngine.Color)">
      <summary>
            Draws a debug ball at the given orbit position.
            </summary>
      <param name="parentNode">The point's parent node.</param>
      <param name="point">The point relative to parentNode.</param>
      <param name="name">The name.</param>
      <param name="color">The color.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapUtils.DrawDebugRay(System.String,ModApi.Flight.Sim.IOrbitNode,ModApi.Flight.Sim.IOrbitPoint,UnityEngine.Vector3d,System.Double,UnityEngine.Color)">
      <summary>
            Draws the gizmo with the specified name.  Successive calls with the same name will update the gizmo.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="parentNode">The parent node.</param>
      <param name="originPoint">The origin of the ray.</param>
      <param name="direction">The direction of the ray.</param>
      <param name="length">The length of the ray.</param>
      <param name="color">The color of the ray.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapUtils.DrawDebugRay(System.String,ModApi.Flight.Sim.IOrbitNode,UnityEngine.Vector3d,UnityEngine.Vector3d,System.Double,UnityEngine.Color)">
      <summary>
            Draws the gizmo with the specified name.  Successive calls with the same name will update the gizmo.
            </summary>
      <param name="name">The name of the gizmo.</param>
      <param name="parentNode">The parent node.</param>
      <param name="origin">The origin of the ray.</param>
      <param name="direction">The direction of the ray.</param>
      <param name="length">The length of the ray.</param>
      <param name="color">The color of the ray.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapUtils.GetCommonAncestor(ModApi.Flight.Sim.IOrbitNode,ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Gets the common ancestor between the two nodes.
            </summary>
      <param name="nodeA">The node a.</param>
      <param name="nodeB">The node b.</param>
      <returns>The common ancestor between the two nodes.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapUtils.GetNextBool(System.Nullable{System.Boolean})">
      <summary>
            Gets the next bool value going from true-&gt;false-&gt;null.
            </summary>
      <param name="current">The value.</param>
      <returns>The next bool value</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapUtils.SamePlanet(ModApi.Flight.Sim.IPlanetNode,ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            This method checks to see if two planet nodes are "pointing" to the same underlying planet even if they're two distinct planet node "instances".
            It is possible for two distinct instances of the same planet node to exist with each representing the planet at different points in time.
            </summary>
      <param name="planetA">The planet a.</param>
      <param name="planetB">The planet b.</param>
      <returns>
        <c>true</c> if the two planet nodes represent the same underlying planet, otherwise <c>false</c>.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapViewManagerScript">
      <summary>
            Script which loads the main map view manager prefab and creates/initializes it.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewManagerScript._currentMapView">
      <summary>
            The current map view
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.MapViewManagerScript.ForegroundStateChanged">
      <summary>
            Occurs when MapView's visibility has changed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.MapViewManagerScript.ForegroundStateChanging">
      <summary>
            Occurs when MapView's visibility is about to change.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewManagerScript.IsInForeground">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.MapViewManagerScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewManagerScript.MapView">
      <summary>
            Gets the map view.
            </summary>
      <value>
            The map view.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewManagerScript.ModApi#Flight#MapView#IMapViewManager#MapView">
      <summary>
            Gets the map view.
            </summary>
      <value>
            The map view.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewManagerScript.MapViewCamera">
      <summary>
            Gets the map view camera.
            </summary>
      <value>
            The map view camera.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewManagerScript.Create(Assets.Scripts.Flight.Sim.PlanetNode,UnityEngine.Transform)">
      <summary>
            Creates the specified root node.
            </summary>
      <param name="rootNode">The root node.</param>
      <param name="container">The container.</param>
      <returns>The MapViewManagerScript.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewManagerScript.SetProcessingModes(System.Nullable{Assets.Scripts.Flight.MapView.MapViewScript.RenderingModeType},System.Nullable{Assets.Scripts.Flight.MapView.MapViewScript.NodeProcessingModeType})">
      <summary>
            Sets the processing modes.
            </summary>
      <param name="renderingMode">The rendering mode.</param>
      <param name="nodeProcessingMode">The node processing mode.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewManagerScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewManagerScript.Initialize(Assets.Scripts.Flight.Sim.PlanetNode)">
      <summary>
            Initializes the MapViewManagerScript.
            </summary>
      <param name="rootNode">The root node of the solar system.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapViewScript">
      <summary>
            Script for map view.  Mostly a dumping ground for various functionality to satisfy interfaces which don't live on their on objects.
            One major non-interface related thing it does take care of is floating origin.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._cameraScript">
      <summary>
            The camera script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._containerObject">
      <summary>
            The container object
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._containerReferences">
      <summary>
            The container references
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._directionalLight">
      <summary>
            The directional light
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._firstTimeBeingVisible">
      <summary>
            The first time being visible
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._gameCamera">
      <summary>
            The game camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._gameViewAudioListener">
      <summary>
            The game view audio listener
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._itemRegistry">
      <summary>
            The item registry
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._mapCamera">
      <summary>
            The map camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._mapViewAudioListener">
      <summary>
            The map view audio listener
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._mapViewAudioListenerPositionOffset">
      <summary>
            The offset from the camera target to the audio listener when game view was exited.  This delta is preserved
            to retain the audio in map view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._mapViewStateData">
      <summary>
            The map view state data
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._navigationTargetProvider">
      <summary>
            The navigation target provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._objectContainerProvider">
      <summary>
            The object container provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._orbitDrawMode">
      <summary>
            The orbit draw mode
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._physicsRaycaster">
      <summary>
            The physics ray-caster
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._playerCraft">
      <summary>
            The craft's MapItem.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript._renderTexture">
      <summary>
            The render texture to render map view into for a PIP.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.MapViewScript.Initialized">
      <summary>
            Occurs when [map view initialized].
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.MapViewScript.PlayerCraftChanged">
      <summary>
            Occurs when the player craft has changed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapViewScript.NodeProcessingModeType">
      <summary>
            The node processing type mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript.NodeProcessingModeType.Disabled">
      <summary>
            The disabled
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript.NodeProcessingModeType.CraftOnly">
      <summary>
            The craft only
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript.NodeProcessingModeType.Full">
      <summary>
            The full
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapViewScript.RenderingModeType">
      <summary>
            The map view rendering mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript.RenderingModeType.Disabled">
      <summary>
            The disabled
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript.RenderingModeType.Texture">
      <summary>
            The texture
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.MapViewScript.RenderingModeType.Screen">
      <summary>
            The screen
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#CanvasesRoot">
      <summary>
            Gets the root container for canvases.
            </summary>
      <value>
            The root container for canvases.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#CraftCanvases">
      <summary>
            Gets the craft canvases container.
            </summary>
      <value>
            The craft canvases container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IDrawModeProvider#CraftNode">
      <summary>
            Gets the craft node.
            </summary>
      <value>
            The craft node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#Crafts">
      <summary>
            Gets the crafts container.
            </summary>
      <value>
            The crafts container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IMapStateProvider#Data">
      <summary>
            Gets the <see cref="T:ModApi.State.MapView.MapViewData" /></summary>
      <value>
            The <see cref="T:ModApi.State.MapView.MapViewData" /></value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.DrawMode">
      <summary>
            Gets the draw mode to use to position items in Map View.
            </summary>
      <value>
            The draw mode to use to position items in Map View.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#FloatingOriginIgnoreContainer">
      <summary>
            Gets the floating origin ignore container.
            </summary>
      <value>
            The floating origin ignore container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.FloatingOriginOffset">
      <summary>
            Gets the offset.
            </summary>
      <value>
            The offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#General">
      <summary>
            Gets the  general(uncategorized) container.
            </summary>
      <value>
            The  general(uncategorized) container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.IsInForeground">
      <summary>
            Gets a value indicating whether this instance is in foreground.
            </summary>
      <value>
        <c>true</c> if this instance is in foreground; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#ILightPosition#LightPosition">
      <summary>
            Gets the light position, in scene coordinates.
            </summary>
      <value>
            The light position, in scene coordinates.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.MapCamera">
      <summary>
            Gets the map camera.
            </summary>
      <value>
            The map camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.MapCameraScript">
      <summary>
            Gets the MapCameraScript.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.MapScale">
      <summary>
            Gets the map scale.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.MapViewUi">
      <summary>
            Gets the map view UI.
            </summary>
      <value>
            The map view UI.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.NodeProcessingMode">
      <summary>
            Gets the node processing mode.
            </summary>
      <value>
            The node processing mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#OrbitCanvases">
      <summary>
            Gets the orbit canvases container.
            </summary>
      <value>
            The orbit canvases container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#OrbitContainer">
      <summary>
            Gets the orbit container.
            </summary>
      <value>
            The orbit container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.OrbitLineManager">
      <summary>
            Gets the orbit line manager.
            </summary>
      <value>
            The orbit line manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.PhysicsRaycaster">
      <summary>
            Gets the physics raycaster.
            </summary>
      <value>
            The physics raycaster.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#Planets">
      <summary>
            Gets the planets container.
            </summary>
      <value>
            The planets container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#PlanetsCanvases">
      <summary>
            Gets the planet canvases container.
            </summary>
      <value>
            The planets canvases container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.PlayerCraft">
      <summary>
            Gets the craft's MapItem.
            </summary>
      <value>
            The craft's MapItem.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IPlayerCraftProvider#PlayerCraft">
      <summary>
            Gets the player craft.
            </summary>
      <value>
            The player craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.PlayerCraftNode">
      <summary>
            Gets the craft node.
            </summary>
      <value>
            The craft node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.RenderingMode">
      <summary>
            Gets the rendering mode.
            </summary>
      <value>
            The rendering mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IRenderTextureProvider#RenderTexture">
      <summary>
            Gets the render texture.
            </summary>
      <value>
            The render texture.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#Root">
      <summary>
            Gets the root transform for MapView.
            </summary>
      <value>
            The root transform for MapView.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Assets#Scripts#Flight#MapView#Interfaces#IObjectContainerProvider#UiContainer">
      <summary>
            Gets the UI container.
            </summary>
      <value>
            The UI container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.UiPanelsVisible">
      <summary>
            Gets or sets a value indicating whether MapView's UI panels are visible.
            </summary>
      <value>
        <c>true</c> MapView's UI panels are visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.Visible">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.MapViewScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.Create(Assets.Scripts.Flight.MapView.MapViewManagerScript,System.Double,Assets.Scripts.Flight.Sim.PlanetNode)">
      <summary>
            Creates the specified map view manager.
            </summary>
      <param name="mapViewManager">The map view manager.</param>
      <param name="scale">The scale.</param>
      <param name="rootNode">The root node.</param>
      <returns>
            The requested map view manager.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.ConvertAbsoluteToWorldMapPosition(UnityEngine.Vector3d)">
      <summary>
            Converts the absolute to world position (non-floated to floated).
            </summary>
      <param name="absolutePosition">The absolute position.</param>
      <returns>The world (floated) position of the supplied absolute position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.ConvertMapViewToSolar(UnityEngine.Vector3d)">
      <summary>
            Converts the a MapView-space to a solar, orbit-space position.  Takes care of floating origin and MapView scale conversions.
            </summary>
      <param name="mapViewPosition">The map view-space position.</param>
      <returns>The solar, orbit-space position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.ConvertSolarToMapView(UnityEngine.Vector3d)">
      <summary>
            Converts the a solar, orbit-space to a MapView-space position.  Takes care of floating origin and MapView scale conversions.
            </summary>
      <param name="solarPosition">The orbit-space position.</param>
      <returns>The MapView-space position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.ConvertWorldToAbsoluteMapPosition(UnityEngine.Vector3d)">
      <summary>
            Converts the world to absolute position (floated to non-floated).
            </summary>
      <param name="worldPosition">The world position.</param>
      <returns>The absolute (non-floated) position of the supplied world position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.Initialize(Assets.Scripts.Flight.MapView.MapViewManagerScript,System.Double,Assets.Scripts.Flight.Sim.PlanetNode)">
      <summary>
            Initializes this instance of MapViewScript.
            </summary>
      <param name="mapViewManager">The map view manager.</param>
      <param name="scale">The scale.</param>
      <param name="rootNode">The root node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.PerformMapClosedUpdates">
      <summary>
            Performs updates which need to occur when MapView is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.SetCameraFocus(Assets.Scripts.Flight.MapView.UI.ICameraFocusable,Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed,System.Boolean)">
      <summary>
            Sets the camera focus.
            </summary>
      <param name="cameraFocus">The camera focus.</param>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.SetForeground(System.Boolean)">
      <summary>
            Sets the foreground.
            </summary>
      <param name="foreground">if set to <c>true</c> [foreground].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.SetProcessingModes(System.Nullable{Assets.Scripts.Flight.MapView.MapViewScript.RenderingModeType},System.Nullable{Assets.Scripts.Flight.MapView.MapViewScript.NodeProcessingModeType})">
      <summary>
            Sets the processing modes.
            </summary>
      <param name="renderingMode">The rendering mode.</param>
      <param name="nodeProcessingMode">The node processing mode.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.SetOrbitDrawMode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode)">
      <summary>
            Sets the orbit draw mode.
            </summary>
      <param name="newDrawMode">The new draw mode.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.AddAutoArrangeControls">
      <summary>
            Adds the automatic arrange controls.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.AddCraft(Assets.Scripts.Flight.Sim.CraftNode,UnityEngine.Camera)">
      <summary>
            Adds the craft.
            </summary>
      <param name="craftNode">The craft node.</param>
      <param name="mapCamera">The map camera.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.AddDynamicCraft(Assets.Scripts.Flight.Sim.CraftNode,UnityEngine.Camera)">
      <summary>
            Adds the craft.
            </summary>
      <param name="craftNode">The craft node.</param>
      <param name="mapCamera">The map camera.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.AddPlanet(Assets.Scripts.Flight.Sim.PlanetNode,UnityEngine.Camera)">
      <summary>
            Adds the planet.
            </summary>
      <param name="planetNode">The planet node.</param>
      <param name="mapCamera">The map camera.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.AddStaticOrbit(Assets.Scripts.Flight.Sim.OrbitNode,UnityEngine.Camera)">
      <summary>
            Adds the static orbit.
            </summary>
      <param name="orbitNode">The orbit node.</param>
      <param name="mapCamera">The map camera.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.CheckFloatingOrigin">
      <summary>
            Checks for floating origin.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.CreateContainer(System.String,UnityEngine.Transform)">
      <summary>
            Creates the container to satisfy IObjectContainerProvider requests.
            </summary>
      <param name="name">The name.</param>
      <param name="parent">The parent.</param>
      <returns>The newly created container.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.CreateContainers">
      <summary>
            Creates the containers to satisfy the IObjectContainerProvider interface.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.FirstTimeInitialization">
      <summary>
            Firsts the time initialization.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.FloatOrigin">
      <summary>
            Floats the origin.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.FloatOriginAtFrameEnd">
      <summary>
            Floats the origin at end of frame.
            </summary>
      <returns>The IEnumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.ItemClicked(System.Object,Assets.Scripts.Flight.MapView.Items.MapItem.ItemClickedEventArgs)">
      <summary>
            Handles the ItemClicked event of the MapItem control.
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem.ItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.LateUpdate">
      <summary>
            Lates the update.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.OnCraftNodeAdded(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Called when a craft node has been added to the flight scene.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.OnMapViewDataGeneratingXml(ModApi.State.MapView.MapViewData)">
      <summary>
            Called before map view data generates XML.
            </summary>
      <param name="source">The source MapViewData instance.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.OnPlayerCraftNodeChanged(ModApi.Craft.ICraftNode)">
      <summary>
            Called when the player craft node changed to a new craft node.
            </summary>
      <param name="craftNode">The craft node.</param>
      <exception cref="T:System.ArgumentException">Thrown when the CraftNode can't be matched to a corresponding MapCraft item.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.RenderMapViewToTexture">
      <summary>
            Renders the map view to texture.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.RunOrbitTestVerifyConstructorTypeEquality">
      <summary>
            Runs the orbit tests.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.RunOrbitTestVerifyNewGetPoints">
      <summary>
            Runs the orbit test verify new get points.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.UpdateMapItems">
      <summary>
            Updates the map items.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapViewScript.OriginFloatedEventArgs">
      <summary>
            Fired when the MapView's origin is floated.
            </summary>
      <seealso cref="T:System.EventArgs" />
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.MapViewScript.OriginFloatedEventArgs.#ctor(UnityEngine.Vector3d)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.MapViewScript.OriginFloatedEventArgs" /> class.
            </summary>
      <param name="delta">The delta.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.OriginFloatedEventArgs.Delta">
      <summary>
            Gets or sets the delta.
            </summary>
      <value>
            The delta.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences">
      <summary>
            Holds references to various transforms used to satisfy the IObjectContainerProvider interface.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.CanvasesRoot">
      <summary>
            Gets or sets the root container for canvases.
            </summary>
      <value>
            The root container for canvases.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.CraftCanvases">
      <summary>
            Gets or sets the craft canvases container.
            </summary>
      <value>
            The craft canvases container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.Crafts">
      <summary>
            Gets or sets the crafts transform.
            </summary>
      <value>
            The crafts transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.FloatingOriginIgnoreContainer">
      <summary>
            Gets or sets the floating origin ignore container transform.
            </summary>
      <value>
            The floating origin ignore container transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.General">
      <summary>
            Gets or sets the general (uncategorized) container transform.
            </summary>
      <value>
            The general (uncategorized) container transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.OrbitCanvases">
      <summary>
            Gets or sets the orbit canvases container.
            </summary>
      <value>
            The orbit canvases container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.OrbitContainer">
      <summary>
            Gets or sets the orbit container transform.
            </summary>
      <value>
            The orbit container transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.Planets">
      <summary>
            Gets or sets the planets transform.
            </summary>
      <value>
            The planets transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.PlanetsCanvases">
      <summary>
            Gets or sets the planet canvases container.
            </summary>
      <value>
            The planets canvases container.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.Root">
      <summary>
            Gets or sets the root transform.
            </summary>
      <value>
            The root transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.MapViewScript.ContainerReferences.UiContainer">
      <summary>
            Gets or sets the UI container transform.
            </summary>
      <value>
            The UI container transform.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Options.Interfaces.ICraftOptions">
      <summary>
            Options related to the player craft.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.ICraftOptions.ContinuouslyUpdateChain">
      <summary>
            Gets a value indicating whether to continuously update the node chain.
            </summary>
      <value>
        <c>true</c> if the node chain should be continuously updated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.ICraftOptions.ThrustScale">
      <summary>
            Gets the current thrust scale to be used by engines for debugging purposes.
            </summary>
      <value>
            The thrust scale.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Options.Interfaces.IManeuverNodeOptions">
      <summary>
            Options related to maneuver nodes.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IManeuverNodeOptions.DisplayInfoWhenAdjusting">
      <summary>
            Gets or sets a value indicating whether to display orbit information when adjusting burn nodes.
            </summary>
      <value>
        <c>true</c> if orbit information should be displayed when adjusting burn nodes; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IManeuverNodeOptions.MaxGizmoMultiplier">
      <summary>
            Gets the maximum multiplier that the ui gizmo will provide to deltaV calculations.  ie. dragging the gizmo further than a certain distance away will begin to clamp the values.
            </summary>
      <value>
            The maximum multiplier that the ui gizmo will provide to deltaV calculations.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IManeuverNodeOptions.SensitivityExpo">
      <summary>
            Gets the sensitivity with expo for maneuver node adjustments.
            </summary>
      <value>
            The sensitivity with expo for maneuver node adjustments.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IManeuverNodeOptions.SensitivityLinear">
      <summary>
            Gets or sets the linear sensitivity for maneuver node adjustments.
            </summary>
      <value>
            The linear sensitivity for maneuver node adjustments.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IManeuverNodeOptions.ShowBurnAccuracyDebugGizmos">
      <summary>
            Gets or sets a value indicating whether to show burn accuracy debug gizmos.
            </summary>
      <value>
            The value indicating whether to show burn accuracy debug gizmos
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Options.Interfaces.OrbitUiVerbosity">
      <summary>
            The Orbit UI verbosity level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.Interfaces.OrbitUiVerbosity.High">
      <summary>
            High verbosity level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.Interfaces.OrbitUiVerbosity.Medium">
      <summary>
            Medium/default verbosity level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.Interfaces.OrbitUiVerbosity.Low">
      <summary>
            Low verbosity level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.Interfaces.OrbitUiVerbosity.Minimal">
      <summary>
            Minimal verbosity level.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Options.Interfaces.IMapOptions">
      <summary>
            Gives access to interfaces to various map-view options providers.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IMapOptions.Craft">
      <summary>
            Gets the craft options.
            </summary>
      <value>
            The craft options.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IMapOptions.ManeuverNodes">
      <summary>
            Gets the maneuver node options.
            </summary>
      <value>
            The maneuver node options.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IMapOptions.NodeNav">
      <summary>
            Gets NodeNav options interface.
            </summary>
      <value>
            The Node nav options interface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IMapOptions.OrbitUiVerbosity">
      <summary>
            Gets or sets the orbit UI verbosity level.
            </summary>
      <value>
            The orbit UI verbosity level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.IMapOptions.Targeting">
      <summary>
            Gets the targeting options interface.
            </summary>
      <value>
            The targeting options interface.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Options.Interfaces.INodeNavOptions">
      <summary>
            Options related to node navigation.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.INodeNavOptions.AutoDeleteManeuverNodes">
      <summary>
            Gets a value indicating whether to delete maneuver nodes after they're completed.
            </summary>
      <value>
        <c>true</c> if maneuver nodes should be auto-deleted after being completed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.INodeNavOptions.AutoWarpToNextNode">
      <summary>
            Gets a value indicating whether to automatically warp to the next node after completing a burn.
            </summary>
      <value>
        <c>true</c> if we should automatically warp to the next node after completing a burn.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.INodeNavOptions.ChangeCameraWhenWarping">
      <summary>
            Gets a value indicating whether to change the camera target when warping to a node.
            </summary>
      <value>
        <c>true</c> if the camera target should be changed when warping to a node; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.INodeNavOptions.CheatAutoBurns">
      <summary>
            Gets a value indicating whether to cheat auto burns by simply setting the craft's velocity instead of doing the burn.
            </summary>
      <value>
        <c>true</c> if auto-burns should be cheated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.INodeNavOptions.MaxBurnTimePerPass">
      <summary>
            Gets or sets the maximum allowable burn times without breaking into multiple burns.
            </summary>
      <value>
            The maximum allowable burn times without breaking into multiple burns
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.INodeNavOptions.ShowAutoBurnVectors">
      <summary>
            Gets a value indicating whether to show auto-burn related vector lines.
            </summary>
      <value>
        <c>true</c> if auto-burn related vector lines should be shown; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.INodeNavOptions.WarpBufferSeconds">
      <summary>
            Gets the number of seconds before a maneuver node to complete the warp.  This buffer is in addition to the auto-calculated burn times.
            </summary>
      <value>
            The number of seconds before a maneuver node to complete the warp.  This buffer is in addition to the auto-calculated burn times.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.INodeNavOptions.WarpSpeedModifier">
      <summary>
            Gets a value indicating how fast to perform the auto-warps. Increasing this value can potentially sacrifice accuracy. A value of 1 indicates default speed.
            </summary>
      <value>
            The speed at which to perform auto-warps. Increasing this value can potentially sacrifice accuracy. A value of 1 indicates default speed.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Options.Interfaces.ITargetingOptions">
      <summary>
            Interface to get options related to targeting other nodes in map view.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.ITargetingOptions.CraftSoiDistance">
      <summary>
            Gets or sets the distance to use as the SOI when calculation encounters between two crafts.
            </summary>
      <value>
            The distance to use as the SOI when calculation encounters between two crafts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.ITargetingOptions.PeriodsInFutureToBegin">
      <summary>
            Gets the number of periods in the future (for player craft) to being searching for closest encounter info.
            </summary>
      <value>
            The number of periods in the future (for player craft) to being searching for closest encounter info.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.ITargetingOptions.SearchWholeOrbit">
      <summary>
            Gets or sets a value indicating whether to search the whole orbit, or only sections which are determined to potentially have an encounter.
            </summary>
      <value>
        <c>true</c> if the targeting system should search the whole orbit, or only sections which are determined to potentially have an encounter.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.ITargetingOptions.SoiEntryLocalMinimaModifier">
      <summary>
            Gets or sets the local minima modifier. <see cref="M:Assets.Scripts.Flight.Sim.OrbitAnalyser.GetClosestEncoutnerInfoRanged(ModApi.Flight.Sim.IOrbitNode,ModApi.Flight.Sim.IOrbitNode,System.Double,System.Double,System.Double,System.Double,System.String,Assets.Scripts.Flight.MapView.Options.Interfaces.IMapOptions)" /> for more info.
            </summary>
      <value>
            The local minima modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.Interfaces.ITargetingOptions.UseBinarySearch">
      <summary>
            Gets or sets a value indicating whether use a binary search for finding closest encounter with target instead regular step intervals.
            </summary>
      <value>
        <c>true</c> if the targeting system should use a binary search for finding closest encounter with target instead regular step intervals; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Options.MapOptionsScript">
      <summary>
            Supplies access to interfaces which provide options data.  The options may be implemented as inspector properties on this class. Or if a proper UI is
            constructed an interface which that UI will be supplied.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Options.Interfaces.IMapOptions" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Options.Interfaces.ITargetingOptions" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.DebugGroupCraft">
      <summary>
            The debug group for craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.DebugGroupManeuverNodes">
      <summary>
            The debug group for maneuver nodes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.DebugGroupNodeNav">
      <summary>
            The debug group for node nav.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.DebugGroupTargeting">
      <summary>
            The debug group for targeting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._autoDeleteCompletedManeuverNodes">
      <summary>
            The cheat automatic burns
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._autoWarpToNextNode">
      <summary>
            The cheat automatic burns
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._changeCameraWhenWarping">
      <summary>
            The change camera target during warps option.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._cheatAutoBurns">
      <summary>
            The cheat automatic burns
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._continuouslyUpdateChain">
      <summary>
            The continuously update chain option.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._craftSoiDistance">
      <summary>
            The craft soi distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._displayInfoWhenAdjusting">
      <summary>
            The display info when adjusting burn nodes option.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._maneuverNodeSensitivityExpo">
      <summary>
            The sensitivity with expo for maneuver node adjustments.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._maneuverNodeSensitivityLinear">
      <summary>
            The maneuver nodes sensitivity option.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._maxBurnTimePerPass">
      <summary>
            The maximum burn time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._maxManeuverNodeGizmoMultiplier">
      <summary>
            The max multiplier for maneuver node ui gizmos.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._offsetWithinPeriod">
      <summary>
            The offset within period
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._periodsInFutureToBegin">
      <summary>
            The periods in the future to begin with.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._searchWholeOrbit">
      <summary>
            Value indicating whether to search the whole orbit, or only sections which are determined to potentially have an encounter.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._showAutoBurnVectors">
      <summary>
            The show auto burn vectors option.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._showBurnAccuracyDebugGizmos">
      <summary>
            The show burn accuracy debug gizmos
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._soiEntryResolutionModifier">
      <summary>
            The soi entry resolution modifier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._thrustScale">
      <summary>
            The thrust scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._useBinarySearch">
      <summary>
            Determines whether a binary is search is performed to get closest encounter information, or whether the normal method is used (stepping at regular intervals).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._warpBufferSeconds">
      <summary>
            The warp buffer seconds
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Options.MapOptionsScript._warpSpeedModifier">
      <summary>
            The speed up auto-warp option.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#INodeNavOptions#AutoDeleteManeuverNodes">
      <summary>
            Gets a value indicating whether to delete maneuver nodes after they're completed.
            </summary>
      <value>
        <c>true</c> if maneuver nodes should be auto-deleted after being completed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#INodeNavOptions#AutoWarpToNextNode">
      <summary>
            Gets a value indicating whether to automatically warp to the next node after completing a burn.
            </summary>
      <value>
        <c>true</c> if we should automatically warp to the next node after completing a burn.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#INodeNavOptions#ChangeCameraWhenWarping">
      <summary>
            Gets a value indicating whether to change the camera target when warping to a node.
            </summary>
      <value>
        <c>true</c> if the camera target should be changed when warping to a node; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#INodeNavOptions#CheatAutoBurns">
      <summary>
            Gets a value indicating whether to cheat auto burns by simply setting the craft's velocity instead of doing the burn.
            </summary>
      <value>
        <c>true</c> if auto-burns should be cheated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#ICraftOptions#ContinuouslyUpdateChain">
      <summary>
            Gets a value indicating whether to continuously update the node chain.
            </summary>
      <value>
        <c>true</c> if the node chain should be continuously updated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IMapOptions#Craft">
      <summary>
            Gets the craft options.
            </summary>
      <value>
            The craft options.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#ITargetingOptions#CraftSoiDistance">
      <summary>
            Gets or sets the distance to use as the SOI when calculation encounters between two crafts.
            </summary>
      <value>
            The distance to use as the SOI when calculation encounters between two crafts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IManeuverNodeOptions#DisplayInfoWhenAdjusting">
      <summary>
            Gets or sets a value indicating whether to display orbit information when adjusting burn nodes.
            </summary>
      <value>
        <c>true</c> if orbit information should be displayed when adjusting burn nodes; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IMapOptions#ManeuverNodes">
      <summary>
            Gets the maneuver node options.
            </summary>
      <value>
            The maneuver node options.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#INodeNavOptions#MaxBurnTimePerPass">
      <summary>
            Gets or sets the maximum allowable burn times without breaking into multiple burns.
            </summary>
      <value>
            The maximum allowable burn times without breaking into multiple burns
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IManeuverNodeOptions#MaxGizmoMultiplier">
      <summary>
            Gets the maximum multiplier that the ui gizmo will provide to deltaV calculations.  ie. dragging the gizmo further than a certain distance away will begin to clamp the values.
            </summary>
      <value>
            The maximum multiplier that the ui gizmo will provide to deltaV calculations.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IMapOptions#NodeNav">
      <summary>
            Gets NodeNav options interface.
            </summary>
      <value>
            The Node nav options interface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IMapOptions#OrbitUiVerbosity">
      <summary>
            Gets or sets the orbit UI verbosity level.
            </summary>
      <value>
            The orbit UI verbosity level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#ITargetingOptions#PeriodsInFutureToBegin">
      <summary>
            Gets the number of periods in the future (for player craft) to being searching for closest encounter info.
            </summary>
      <value>
            The number of periods in the future (for player craft) to being searching for closest encounter info.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#ITargetingOptions#SearchWholeOrbit">
      <summary>
            Gets or sets a value indicating whether to search the whole orbit, or only sections which are determined to potentially have an encounter.
            </summary>
      <value>
        <c>true</c> if the targeting system should search the whole orbit, or only sections which are determined to potentially have an encounter.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IManeuverNodeOptions#SensitivityExpo">
      <summary>
            Gets the sensitivity with expo for maneuver node adjustments.
            </summary>
      <value>
            The sensitivity with expo for maneuver node adjustments.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IManeuverNodeOptions#SensitivityLinear">
      <summary>
            Gets or sets the linear sensitivity for maneuver node adjustments.
            </summary>
      <value>
            The linear sensitivity for maneuver node adjustments.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#INodeNavOptions#ShowAutoBurnVectors">
      <summary>
            Gets a value indicating whether to show auto-burn related vector lines.
            </summary>
      <value>
        <c>true</c> if auto-burn related vector lines should be shown; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IManeuverNodeOptions#ShowBurnAccuracyDebugGizmos">
      <summary>
            Gets or sets a value indicating whether to show burn accuracy debug gizmos.
            </summary>
      <value>
            The value indicating whether to show burn accuracy debug gizmos
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#ITargetingOptions#SoiEntryLocalMinimaModifier">
      <summary>
            Gets or sets the SOI entry resolution modifier.
            </summary>
      <value>
            The SOI entry resolution modifier
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#IMapOptions#Targeting">
      <summary>
            Gets the targeting options interface.
            </summary>
      <value>
            The targeting options interface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#ICraftOptions#ThrustScale">
      <summary>
            Gets the current thrust scale to be used by engines for debugging purposes.
            </summary>
      <value>
            The thrust scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#ITargetingOptions#UseBinarySearch">
      <summary>
            Gets or sets a value indicating whether use a binary search for finding closest encounter with target instead regular step intervals.
            </summary>
      <value>
        <c>true</c> if the targeting system should use a binary search for finding closest encounter with target instead regular step intervals; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#INodeNavOptions#WarpBufferSeconds">
      <summary>
            Gets the number of seconds before a maneuver node to complete the warp.  This buffer is in addition to the auto-calculated burn times.
            </summary>
      <value>
            The number of seconds before a maneuver node to complete the warp.  This buffer is in addition to the auto-calculated burn times.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Assets#Scripts#Flight#MapView#Options#Interfaces#INodeNavOptions#WarpSpeedModifier">
      <summary>
            Gets a value indicating whether to speed up automatic warp, potentially sacrificing accuracy.
            </summary>
      <value>
        <c>true</c> if automatic warping should be sped up; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Create(UnityEngine.GameObject)">
      <summary>
            Creates an instance of a <see cref="T:Assets.Scripts.Flight.MapView.Options.MapOptionsScript" /> and attaches it to the specified parent.
            </summary>
      <param name="parent">The parent to attach to.  Has no requirements.</param>
      <returns>The <see cref="T:Assets.Scripts.Flight.MapView.Options.MapOptionsScript" /> created.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Options.MapOptionsScript.OnValidate">
      <summary>
            Called when an inspector property changes.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.OrbitInteractionScript">
      <summary>
            Monitors cursor activity over orbits and kicks off events (HoverEnter/Stay/Exit) to listeners.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript.PointerDebugToggleButton">
      <summary>
            The pointer debug toggle button name.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript._activeCursorInfo">
      <summary>
            Info for the orbit that the cursor is currently closest to, or <c>null</c> if there isn't one.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript._chainNodeList">
      <summary>
            The chain node list
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript._coordinateConverter">
      <summary>
            The coordinate converter
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript._craftinfo">
      <summary>
            The craftinfo
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript._hoveredOrbitCachedInstances">
      <summary>
            A cached instance of ClosestPointInfo to prevent excessive new-age.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript._hoveredOrbitLastUsedCachedInstance">
      <summary>
            Identifies the last cached instance that was used when UpdateIfCloser was last called with a null currentClosestOrbitInfo.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript._hoverStartTime">
      <summary>
            The hover start time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript._mapView">
      <summary>
            The map view
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.OrbitInteractionScript._pointerDebug">
      <summary>
            The pointer debug
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitInteractionDelegate">
      <summary>
            Delegate for NodeListChanged event.
            </summary>
      <param name="source">The OrbitInteractionDelegate sending the event.</param>
      <param name="pointInfo">The point information.</param>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.OrbitInteractionScript.HoverEnter">
      <summary>
            Occurs when an orbit has started being hovered by the cursor.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.OrbitInteractionScript.HoverExit">
      <summary>
            Occurs when an orbit has stopped being hovered by the cursor.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.OrbitInteractionScript.HoverStay">
      <summary>
            Occurs every frame while the cursor is hovering over an orbit.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.OrbitInteractionScript.CursorInfo">
      <summary>
            Gets the cursor information.
            </summary>
      <value>
            The cursor information.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.Create(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext)">
      <summary>
            Creates the specified craft.
            </summary>
      <param name="craftContext">The craft context.</param>
      <returns>
            The OrbitInteractionScript
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.GetOrbitPointFromScreenPosition(Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,UnityEngine.Camera,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,UnityEngine.Vector3)">
      <summary>
            Gets the true anomaly from screen position.
            </summary>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="camera">The camera.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="screenPos">The screen position.</param>
      <returns>
            The true anomaly from the screen position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OnBeforeCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.GetClosestPointOnOrbit(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,UnityEngine.Vector3d,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,System.Boolean,System.Nullable{UnityEngine.Vector3d}@)">
      <summary>
            Gets the closest point to the orbit from the supplied position, in map-view coords.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <param name="mapViewOrbitalPlanePosition">The map-view pointer position.  Note: The position must be on the supplied node's orbital plane.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="showDebugLine">if set to <c>true</c> [show debug line].</param>
      <param name="closestPointMapCoords">The closest point true anomaly.</param>
      <returns>
            The closest point to the orbit from the supplied position, in map-view coords.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.GetPointerPositionOnOrbitalPlane(UnityEngine.Vector3,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,UnityEngine.Camera)">
      <summary>
            Gets the world position (map-view coords) of the mouse cursor projected onto the supplied orbit node's orbital plane.
            </summary>
      <param name="cursorPosition">The cursor position.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="camera">The camera.</param>
      <returns>
            The world position (map-view coords) of the mouse cursor projected onto the supplied orbit node's orbital plane.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.Initialize(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext)">
      <summary>
            Initializes the specified craft.
            </summary>
      <param name="craftContext">The craft context.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OnHoverEnter(Assets.Scripts.Flight.MapView.OrbitInteractionScript,Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Called when [hover enter].
            </summary>
      <param name="source">The source.</param>
      <param name="pointInfo">The point information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OnHoverExit(Assets.Scripts.Flight.MapView.OrbitInteractionScript,Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Called when [hover exit].
            </summary>
      <param name="source">The source.</param>
      <param name="pointInfo">The point information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OnHoverStay(Assets.Scripts.Flight.MapView.OrbitInteractionScript,Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Called when [hover stay].
            </summary>
      <param name="source">The source.</param>
      <param name="pointInfo">The point information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.UpdateIfCloser(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,UnityEngine.Vector3,Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo@,System.Double)">
      <summary>
            Updates the supplied <c>OrbitCursorInfo</c> if the mouse cursor is closer to the provided orbit.
            </summary>
      <param name="orbitInfo">The orbit node to check if it's closer than the current values.</param>
      <param name="screenPos">The screen position.</param>
      <param name="currentClosestOrbitInfo">The current closest orbit and cursor information.  Will be updated if the supplied orbit is closer to the cursor.</param>
      <param name="prevClosestSqrDistance">The current closest distance, squared.</param>
      <returns>
            The new closest distance, squared.
            </returns>
      <remarks>
            Only points within an orbits valid true anomaly start/end range are considered.
            </remarks>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.UpdatePointerDebugInfo(UnityEngine.Vector3d,UnityEngine.Vector3)">
      <summary>
            Method used to display/update debug info about the pointer position for adding maneuver nodes.
            </summary>
      <param name="closestPoint">The closest point.</param>
      <param name="worldPointerPosition">The world pointer position.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.UpdatePointerHoverEvents">
      <summary>
            Checks to see if any orbits are being hovered and sends out enter/stay/exit hover notifications.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo">
      <summary>
            Contains information about the mouse cursor and a related orbit.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo.ClosestPoint">
      <summary>
            Gets the closest point.
            </summary>
      <value>
            The closest point.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo.ClosestPositionMapViewCoords">
      <summary>
            Gets or sets the position on the orbit that the cursor is closest to, in map view coordinates.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo.ClosestPositionOnOrbitScreen">
      <summary>
            Gets or sets the position on the orbit that the cursor is closest to, in screen coordinates.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo.CursorPosition">
      <summary>
            Gets or sets the exact cursors position, in map view coordinates.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo.HoverStartTime">
      <summary>
            Gets the hover start time.
            </summary>
      <value>
            The hover start time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo.HoverTime">
      <summary>
            Gets the time in seconds that the orbit has been hovered over.
            </summary>
      <value>
            The time in seconds that the orbit has been hovered over.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo.OrbitInfo">
      <summary>
            Gets or sets the orbit node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo.SetTimes(System.Single,System.Single)">
      <summary>
            Sets the times associated with the orbit cursor info.
            </summary>
      <param name="startTime">The start time.</param>
      <param name="currentTime">The current time.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager">
      <summary>
            Manages the list of chain nodes, which can be maneuver nodes, or auto-created enter/exit nodes.  It does not create nodes. A chain node manager instance belongs to a specific craft.
            The chain node manager calls per-frame update methods for each chain node.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeOptions" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager._craft">
      <summary>
            The map craft that this chain node manager is assigned to.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager._infoPanel">
      <summary>
            The information panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager._lastManeuverNodeUpdateTime">
      <summary>
            The last maneuver node update time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager._navSphere">
      <summary>
            The nav sphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager._orbitChainNodes">
      <summary>
            The list of chained orbits.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager._orphanedNodes">
      <summary>
            The list of chained orbits.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager._sendPulseStartTime">
      <summary>
            The send pulse start time
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.#ctor(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,Assets.Scripts.Flight.MapView.Items.MapCraft)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager" /> class.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="craft">The craft that this instance will manage chain nodes for.</param>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.NodeAdded">
      <summary>
            Occurs when a node has been added to the list.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.NodeListChanged">
      <summary>
            Occurs when the node list is updated (item added/removed).
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.RemovingNode">
      <summary>
            Occurs when a node has been removed from the list
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.ChainNodes">
      <summary>
            Gets the chain nodes.
            </summary>
      <value>
            The chain nodes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.FirstEncounter">
      <summary>
            Gets the first encounter.
            </summary>
      <value>
            The first encounter.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.FirstIncompleteManeuverNode">
      <summary>
            Gets the first maneuver node which has not been executed.
            </summary>
      <value>
            The first maneuver node which has not been executed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.FirstManeuverNode">
      <summary>
            Gets the first maneuver node.
            </summary>
      <value>
            The first maneuver node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.FirstNode">
      <summary>
            Gets the first node, which is the craft node at the root of the list.
            </summary>
      <value>
            The first node, which is the craft node at the root of the list.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.FirstNonCraftNode">
      <summary>
            Gets the first node in the chain after the root node (which is the craft).
            </summary>
      <value>
            The first node in the chain after the root node (which is the craft)..
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.LastNode">
      <summary>
            Gets the last node.
            </summary>
      <value>
            The last node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.ShowNodeInfo">
      <summary>
            Gets a value indicating whether to show node UI information.
            </summary>
      <value>
        <c>true</c> if to show node UI information; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.TimeToNextNode">
      <summary>
            Gets the time to next node (maneuver or encounter) if exists, or <c>null</c> if there is no nodes.
            </summary>
      <value>
            The time to next node (maneuver or encounter) if exists, or <c>null</c> if there is no nodes.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.AddAfter(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Func{System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Adds an entry to the list after the specified node.
            </summary>
      <param name="addAfter">The <see cref="T:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit" /> to add after.</param>
      <param name="creationMethod">A method which creates the new <see cref="T:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit" /> item which will be added to the list.</param>
      <param name="category">The change category.</param>
      <returns>
            The node added.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.DestroyNodes">
      <summary>
            Destroys all nodes in the list after the root node (craft).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.DestroyOrphanedNodes">
      <summary>
            Destroys all orphaned nodes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.OnBeforeCameraPositioned">
      <summary>
            Called before the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.PerformValidityChecks">
      <summary>
            Called after all updating is done for the frame.  This is a debug method which allows chain-able items a chance to check their current state and report any errors.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.Remove(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Boolean,System.Boolean,Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Deletes this orbit and associated node (if it has one).  Optionally deletes children.
            </summary>
      <param name="orbitLineNode">The orbit line node.</param>
      <param name="deleteChildren">if set to <c>true</c> deletes children as well as this orbit.</param>
      <param name="destroy">if set to <c>true</c> also destroys the GameObjects associated with the chain node.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.RemoveAfter``1(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Boolean,Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Removes nodes matching the specified type, which are after the provided node.
            </summary>
      <typeparam name="T">The IChainableOrbit orbit type.</typeparam>
      <param name="orbitLineNode">The orbit line node to remove any following nodes.</param>
      <param name="consecutiveOccurrencesOnly">If set to <c>true</c> will only remove consecutive occurrences of type T, otherwise will remove all that proceed it.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.RemoveType``1(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Boolean,Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Removes the supplied node and all that follow given they're of type T, optionally also only removing consecutive occurrences.
            </summary>
      <typeparam name="T">The type of chain node to remove.</typeparam>
      <param name="startingNodeToDelete">The first node of type <typeparamref name="T" /> to remove.</param>
      <param name="consecutiveOccurrencesOnly">If set to <c>true</c> will only remove consecutive occurrences of type T, otherwise will remove all that proceed it.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.SetOrphaned(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Sets the orphaned.
            </summary>
      <param name="maneuverNodeScript">The maneuver node script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.ActivateOrphaned(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Activates the orphaned.
            </summary>
      <param name="maneuverNodeScript">The maneuver node script.</param>
      <param name="previous">The previous.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.AddFirst(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit,Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Adds the first entry to the list of chain nodes.
            </summary>
      <param name="chainableOrbit">The chain-able orbit to add.</param>
      <param name="category">The category.</param>
      <returns>
            The node added.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.DestroyNode(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Destroys the node.
            </summary>
      <param name="node">The node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.Initialize(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,Assets.Scripts.Flight.MapView.Items.MapCraft)">
      <summary>
            Initializes the specified parent orbit.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="craft">The craft.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.MonitorOrphanedNodes">
      <summary>
            Monitors the orphaned nodes, and re-activates/deletes when necessary.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.OnManeuverNodeAdjusted(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Called when a maneuver node has been adjusted.
            </summary>
      <param name="source">The source maneuver node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.OnManeuverNodeExecutionCompleted(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Called when the current maneuver node execution completed.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.OnNodeAdded(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Called when a node has been added.
            </summary>
      <param name="newNode">The new node.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.OnNodeListChanged(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Called when the node-list has changed (item removed/added).
            </summary>
      <param name="node">The node.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.OnNodeRemoved(Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Called when a node has been removed.
            </summary>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.OnRemovingNode(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Called when a node is about to be removed.
            </summary>
      <param name="nodeBeingRemoved">The node being removed.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.OrphanManeuverNode(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Orphans the maneuver node.
            </summary>
      <param name="maneuverNodeScript">The maneuver node script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.QuickSaveNodeChain">
      <summary>
            Saves the node chain.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.RegisterInfoPanel">
      <summary>
            Registers the information panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.RestoreNodeChainQuickSave">
      <summary>
            Restores the node chain.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.StartPulse">
      <summary>
            Sends a highlight pulse through the chain of orbit lines.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.UpdateFirstOfTypeReferences">
      <summary>
            Updates the first of type references.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.UpdateOrbitLineHighlight">
      <summary>
            Updates highlight position for orbit lines.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection">
      <summary>
            Manages the process of selecting chain nodes.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection._cameraTarget">
      <summary>
            The camera target interface.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection._chainNodeList">
      <summary>
            The chain node manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection._lastSelectedNode">
      <summary>
            The last selected node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection._selectedNode">
      <summary>
            The currently selected chain node with its maneuver node adjustor GUI showing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.#ctor(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection" /> class.
            </summary>
      <param name="craftContext">The craft context.</param>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.ChainNodeSelectionChanged">
      <summary>
            Occurs when the chain node selection has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.HasSelection">
      <summary>
            Gets a value indicating whether a chain node is currently selected.
            </summary>
      <value>
        <c>true</c> if a chain node is currently selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.Selected">
      <summary>
            Gets the selected chain node.
            </summary>
      <value>
            The selected chain node, or <c>null</c> if none is selected.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.SelectNext(Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed,System.Boolean)">
      <summary>
            Selects the next node.
            </summary>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.SelectPrevious(Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed,System.Boolean)">
      <summary>
            Selects the node previous to the currently selected node, if it exists.
            </summary>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.SetSelected(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Sets the selected chain node without changing the camera target.
            </summary>
      <param name="chainNode">The chain node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.SetSelected(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed,System.Boolean)">
      <summary>
            Sets the selected chain node as well as the camera focus.
            </summary>
      <param name="chainNode">The chain node.</param>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.ToggleSelected">
      <summary>
            Toggles between selected/de-selected for the current node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.DeselectCurrentNode">
      <summary>
            De-selects the current node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.OnNodeAdded(Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Called when a node is being added.
            </summary>
      <param name="source">The source.</param>
      <param name="node">The node being removed.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.OnRemovingNode(Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Called when a node is being removed.
            </summary>
      <param name="source">The source.</param>
      <param name="node">The node being removed.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.SelectNode(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Selects the node.
            </summary>
      <param name="chainNode">The chain node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeSelection.SetSelected(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Nullable{Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed},System.Boolean)">
      <summary>
            Sets the selected chain node.
            </summary>
      <param name="chainNode">The chain node.</param>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO">
      <summary>
            Provides IO functionality for chain nodes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.NodeElementName">
      <summary>
            The chain node XML element name.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO._chainNodeManager">
      <summary>
            The chain node manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO._maneuverNodeManager">
      <summary>
            The maneuver node manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO._rootNode">
      <summary>
            The chain-able orbit
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.#ctor(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit,Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager,Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO" /> class.
            </summary>
      <param name="rootNode">The root chain-able orbit.</param>
      <param name="chainNodeManager">The chain node manager.</param>
      <param name="maneuverNodeManager">The maneuver node manager.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.NodeChainQuickSaveLocation">
      <summary>
            Gets the node chain quick-save location
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.GenerateXml">
      <summary>
            Generates the XML.
            </summary>
      <returns>The XML containing chain node information.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.QuickSaveNodeChain">
      <summary>
            Saves the node chain.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.RestoreNodeChain(System.Xml.Linq.XElement)">
      <summary>
            Restores the node chain.
            </summary>
      <param name="maneuverNodes">The maneuver nodes.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.RestoreQuickSaveNodeChain">
      <summary>
            Restores the node chain.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.GenerateXmlAttributes(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Adds any XML attributes needed to restore state.
            </summary>
      <param name="chainNode">The chain node to generate XML attributes for.</param>
      <returns>
            Original list with any custom attributes added.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.GenerateXmlFromNodeChain(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Generates XML chain node info XML.
            </summary>
      <param name="node">The current node.</param>
      <returns>The XML generated.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.LogRestoreNodeChainError(System.String)">
      <summary>
            Logs the restore node chain error.
            </summary>
      <param name="desc">The desc.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.GetNodeStack(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Gets the node stack string description.
            </summary>
      <param name="lastNode">The last node.</param>
      <returns>The node stack string description.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.RestoreManeuverNode(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit,System.Xml.Linq.XElement)">
      <summary>
            Restores the maneuver node.
            </summary>
      <param name="prevNode">The previous node.</param>
      <param name="node">The node.</param>
      <returns>The ManeuverNodeScript restored from XML.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.RestoreNode(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit,System.Xml.Linq.XElement)">
      <summary>
            Restores the node.
            </summary>
      <param name="prevNode">The previous node.</param>
      <param name="node">The node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.VerifyEncounterCreated(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit,System.String)">
      <summary>
            Verifies the encounter created.
            </summary>
      <param name="node">The node.</param>
      <param name="type">The type.</param>
      <returns>
        <c>true</c> if the correct type was created, otherwise <c>false</c>.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.ChainNodeIOConstants">
      <summary>
            ChainNodeIO constants.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.ChainNodeIOConstants.DeltaV">
      <summary>
            The delta v
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.ChainNodeIOConstants.ManeuverNodeScriptType">
      <summary>
            The soi exit node script type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.ChainNodeIOConstants.SoiEnterNodeScriptType">
      <summary>
            The soi enter node script type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.ChainNodeIOConstants.SoiExitNodeScriptType">
      <summary>
            The soi exit node script type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.ChainNodeIOConstants.TrueAnomalyOnPreviousOrbit">
      <summary>
            The true anomaly on previous
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.FileIO.ChainNodeIO.ChainNodeIOConstants.Type">
      <summary>
            The type
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeOptions">
      <summary>
            Interface to access options for chain nodes.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeOptions.ShowNodeInfo">
      <summary>
            Gets a value indicating whether to show node UI information.
            </summary>
      <value>
        <c>true</c> if to show node UI information; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.ChainNodeSelectionHandler">
      <summary>
            Delegate for chain node selection related events.
            </summary>
      <param name="chainNode">The chain node.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection">
      <summary>
            Interface to functionality to access chain node selection info.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection.ChainNodeSelectionChanged">
      <summary>
            Occurs when the chain node selection has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection.HasSelection">
      <summary>
            Gets a value indicating whether a chain node is currently selected.
            </summary>
      <value>
        <c>true</c> if a chain node is currently selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection.Selected">
      <summary>
            Gets the selected chain node.
            </summary>
      <value>
            The selected chain node, or <c>null</c> if none is selected.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection.SelectNext(Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed,System.Boolean)">
      <summary>
            Selects the node after to the currently selected node, if it exists.
            </summary>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection.SelectPrevious(Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed,System.Boolean)">
      <summary>
            Selects the node previous to the currently selected node, if it exists.
            </summary>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection.SetSelected(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.CameraTransitionSpeed,System.Boolean)">
      <summary>
            Sets the selected chain node as well as the camera focus.
            </summary>
      <param name="chainNode">The newly selected chain node, or <c>null</c> if there is none selected.</param>
      <param name="transitionSpeed">The camera transition speed to use to switch to the new target.</param>
      <param name="repositionCamDuringTransition">If set to <c>true</c> the camera's will track toward the target during the transition, if <c>false</c> it will only rotate toward it.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection.SetSelected(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Sets the selected chain node without changing the camera target.
            </summary>
      <param name="chainNode">The newly selected chain node, or <c>null</c> if there is none selected.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection.ToggleSelected">
      <summary>
            Toggles between selected/de-selected for the current node.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnAccuracy">
      <summary>
            Enum containing burn accuracy types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnAccuracy.High">
      <summary>
            The high
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnAccuracy.Med">
      <summary>
            The med
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnAccuracy.Low">
      <summary>
            The low
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnAccuracy.NotRecommended">
      <summary>
            The not recommended
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData">
      <summary>
            Information about the burn times for maneuver node navigation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData._maneuverNode">
      <summary>
            The maneuver node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData._options">
      <summary>
            The options
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.#ctor(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript,ModApi.Craft.ICraftScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData" /> class.
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.BurnAccuracy">
      <summary>
            Gets the burn accuracy.
            </summary>
      <value>
            The burn accuracy.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.BurnDuration">
      <summary>
            Gets the burn duration in seconds required to execute the maneuver node, at maximum thrust.
            </summary>
      <value>
            The burn duration in seconds required to execute the maneuver node, at maximum thrust.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.BurnPasses">
      <summary>
            Gets the number of burn passes required to keep each burn time below the current setting.
            </summary>
      <value>
            The number of burn passes required to keep each burn time below the current setting.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.BurnTimeRemaining">
      <summary>
            Gets the burn time remaining.
            </summary>
      <value>
            The burn time remaining.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.DeltaVApplied">
      <summary>
            Gets the delta v applied.
            </summary>
      <value>
            The delta v applied.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.DeltaVMagRemaining">
      <summary>
            Gets the delta v mag remaining.
            </summary>
      <value>
            The delta v mag remaining.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.DeltaVPerPass">
      <summary>
            Gets the delta v per pass.
            </summary>
      <value>
            The delta v per pass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.DeltaVRemaining">
      <summary>
            Gets the delta v remaining.
            </summary>
      <value>
            The delta v remaining.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.EstimatedAutoBurnDuration">
      <summary>
            Gets the estimated auto-burn duration, in seconds.
            </summary>
      <value>
            The estimated auto-burn duration, in seconds.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.PercentNormal">
      <summary>
            Gets the percent of the burn in the normal direction.
            </summary>
      <value>
            The percent of the burn in the normal direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.PercentPrograde">
      <summary>
            Gets the percent of the burn in the prograde direction.
            </summary>
      <value>
            The percent of the burn in the prograde direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.PercentRadial">
      <summary>
            Gets the percent of the burn in the radial direction.
            </summary>
      <value>
            The percent of the burn in the radial direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.TimeToInitiateBurn">
      <summary>
            Gets the time to initiate burn.
            </summary>
      <value>
            The time to initiate burn.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.TimeToInitiateTurn">
      <summary>
            Gets the time to initiate turn.
            </summary>
      <value>
            The time to initiate turn.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.TimeToLockNode">
      <summary>
            Gets the time to lock node.
            </summary>
      <value>
            The time to lock node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.TimeToNode">
      <summary>
            Gets the time to node.
            </summary>
      <value>
            The time to node.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.ShouldInitiateBurn">
      <summary>
            Determines whether the burn should be initiated.
            </summary>
      <returns>
        <c>true</c> if it should be initiated, otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.ShouldInitiateTurn">
      <summary>
            Determines whether the turn should be initiated.
            </summary>
      <returns>
        <c>true</c> if it should be initiated, otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.ShouldLockNode">
      <summary>
            Determines whether the node should be locked.
            </summary>
      <returns>
        <c>true</c> if it should be locked, otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.Update(System.Boolean)">
      <summary>
            Updates teh burn data for the
            </summary>
      <param name="burnInProgress">If set to <c>true</c> a burn in currently in progress for the burn node which this data belongs to.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnData.GetBurnAccuracy(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript,System.Boolean)">
      <summary>
            Gets the estimated burn accuracy for the maneuver node.
            </summary>
      <param name="maneuverNode">The maneuver node.</param>
      <param name="showDebug">if set to <c>true</c> [show debug].</param>
      <returns>
            A value approaching 1 where 1 is the highest possible accuracy
            </returns>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.ManeuverNodeHandler">
      <summary>
            Handler for general maneuver node events.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodeAdjustments">
      <summary>
            Interface which provides info about maneuver node adjustment activities.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodeAdjustments.ManeuverNodeAdjusted">
      <summary>
            Occurs when a maneuver node's dv has been adjusted.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodeEventsProvider">
      <summary>
            Interface to provide access to maneuver node events.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodeEventsProvider.ManeuverNodeAdjustmentChangeBeginEvent">
      <summary>
            Occurs when a maneuver node adjustment has begun.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodeEventsProvider.ManeuverNodeAdjustmentChangeEndEvent">
      <summary>
            Occurs when a maneuver node adjustment has ended.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodeEventsProvider.ManeuverNodeAdjustmentChangingEvent">
      <summary>
            Occurs when a maneuver node adjustment is occurring.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodePositionProvider">
      <summary>
            Provides position information for maneuver node adjustor handles.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodePositionProvider.CameraDistance">
      <summary>
            Gets the camera distance.
            </summary>
      <value>
            The camera distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodePositionProvider.ExtensionPercent">
      <summary>
            Gets the extension percent of the gizmo line.
            </summary>
      <value>
            The extension percent of the gizmo line.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodePositionProvider.NodeScreenPosition">
      <summary>
            Gets the node screen position.
            </summary>
      <value>
            The node screen position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodePositionProvider.NodeWorldPosition">
      <summary>
            Gets the node world position.
            </summary>
      <value>
            The node world position.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript">
      <summary>
            Class which manages the UI and deltaV contribution of each maneuver node adjustor type (prograde/retrograde/normal, anti-normal, etc.)
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IDragHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IEndDragHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IBeginDragHandler" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.SelectionChangedAnimDuration">
      <summary>
            How long in seconds it takes for the selection/deselection transition animation to complete.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._adjustorExtensionPercent">
      <summary>
            The ratio (between 0 and 1) of the current position of the adjustor icon vs. it's standard position (used to animate them).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._beginDrag">
      <summary>
            Set to <c>true</c> the first frame when a drag has begun.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._canvas">
      <summary>
            The canvas where node info is drawn.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._connectingLine">
      <summary>
            The UI line connecting the adjustor to the center of the node.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._connectingLineColor">
      <summary>
            The connecting line color
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._currentMousePos">
      <summary>
            The current mouse position in screen coords.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._deltaV">
      <summary>
            The deltaV contribution of this adjustor
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._dragging">
      <summary>
        <c>true</c> if we are currently dragging the adjustor, otherwise, <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._dragState">
      <summary>
            The drag state
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._dragVec">
      <summary>
            The screen-space vector of the pointer drag gesture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._drawModeProvider">
      <summary>
            The draw mode provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._icon">
      <summary>
            The icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._iconColor">
      <summary>
            The icon color
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._lineScaleBaseSize">
      <summary>
            The line scale base size
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._maneuverScreenVec">
      <summary>
            The screen-space vector of this node.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._maneuverVec">
      <summary>
            The world-space vector of the maneuver node, which defines if it is prograde, retrograde, etc.  It defines the deltaV contribution from this adjustor.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._maneuverVecFunc">
      <summary>
            Function used get the current vector for this node adjustor (primarily after parent nodes change).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._mapOptions">
      <summary>
            The map options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._orbitInfoProvider">
      <summary>
            The orbit information provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._positionProvider">
      <summary>
            The position provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._selected">
      <summary>
        <c>true</c> if this node is currently selected (active), otherwise <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._selectionChangedTime">
      <summary>
            The time that selection type (slected/deselcted) was changed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._selectionChanging">
      <summary>
        <c>true</c> if the selection has recently changed and the adjustor is transitioning, otherwise, <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript._startingMousePos">
      <summary>
            The starting mouse position when dragging the adjustor.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.ManeuverNodeAdjustorChangeDelegate">
      <summary>
            Responds to changes made to a maneuver node.
            </summary>
      <param name="source">The source maneuver node script.</param>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.ManeuverNodeAdjustmentChangeBeginEvent">
      <summary>
            Occurs when a maneuver node adjustment has begun.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.ManeuverNodeAdjustmentChangeEndEvent">
      <summary>
            Occurs when a maneuver node adjustment has ended.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.ManeuverNodeAdjustmentChangingEvent">
      <summary>
            Occurs when a maneuver node adjustment is occurring.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.DragState">
      <summary>
            The current drag state.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.DragState.Drag">
      <summary>
            The drag
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.DragState.End">
      <summary>
            The end
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.DeltaV">
      <summary>
            Gets the deltaV contribution of this adjustor
            </summary>
      <value>
            The the deltaV contribution of this adjustor
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.Create(UnityEngine.Canvas,UnityEngine.Transform,System.Func{UnityEngine.Vector3d},Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodePositionProvider,Assets.Scripts.Flight.MapView.Interfaces.IOrbitInfoProvider,Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider,System.String,System.String,UnityEngine.Color)">
      <summary>
            Creates a maneuver adjustor for a specific node.
            </summary>
      <param name="canvas">The canvas to draw on.</param>
      <param name="parent">The parent.</param>
      <param name="maneuverVec">The maneuver vector (prograde, retrograde, etc.).</param>
      <param name="positionProvider">The position provider.</param>
      <param name="orbitInfoProvider">The orbit information provider.</param>
      <param name="drawModeProvider">The draw mode provider.</param>
      <param name="name">The name of the adjustor.</param>
      <param name="iconName">The icon name.</param>
      <param name="lineColor">Color of the line.</param>
      <returns>
            The maneuver node adjustor for a specific node.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.ForceStopDrag">
      <summary>
            Forces dragging to stop if one is in progress.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule before a drag is started.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When draging is occuring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule when a drag is ended.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.SetDeltaV(UnityEngine.Vector3d)">
      <summary>
            Sets the deltaV of this adjustor.
            </summary>
      <param name="deltaV">The deltaV to set this adjustor to.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.UpdateVector">
      <summary>
            Updates the adjustment vector.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.OnDeselected">
      <summary>
            Called when the parent node has been de-selected/activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.OnSelected">
      <summary>
            Called when the parent node has been selected/activated.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.LateUpdate">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.GetDvScalar(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Gets a scalar of appropriate magnitude used to scale deltaV changes by.
            </summary>
      <param name="orbit">The orbit.</param>
      <returns>A scalar of appropriate magnitude used to scale deltaV changes by.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.DoSelectionChangingAnimations">
      <summary>
            Updates animations when changing from selected/de-selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.GetIconTransparency(UnityEngine.Vector3d)">
      <summary>
            Gets the icon transparency.
            </summary>
      <param name="worldSpaceAdjustorPosition">The world space adjustor position.</param>
      <returns>The icon transparency.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.Initialize(UnityEngine.Canvas,System.Func{UnityEngine.Vector3d},Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodePositionProvider,Assets.Scripts.Flight.MapView.Interfaces.IOrbitInfoProvider,Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider,System.String,System.String,UnityEngine.Color)">
      <summary>
            Initializes the maneuver node adjustor (prograde/retro/etc)
            </summary>
      <param name="canvas">The canvas.</param>
      <param name="maneuverVec">The maneuver vec.</param>
      <param name="positionProvider">The position provider.</param>
      <param name="orbitInfoProvider">The orbit information provider.</param>
      <param name="drawModeProvider">The draw mode provider.</param>
      <param name="name">The name.</param>
      <param name="iconName">The icon name.</param>
      <param name="lineColor">Color of the line.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.OnDestroy">
      <summary>
            Called when the gameobject is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript.StopDrag">
      <summary>
            Stops the drag.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript">
      <summary>
            Manages the creation of maneuver nodes in response to click events.
            Listens for events (HoverEnter/Exit/Stay) and forwards them onto the appropriate chain node.
            Updates cursor icon position.
            Updates periapsis icon visibility for chain nodes.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerClickHandler" />
      <seealso cref="T:System.IDisposable" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodeAdjustments" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._addNodeIcon">
      <summary>
            The add node icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._addSprite">
      <summary>
            The add sprite
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._anyItemsBeingHovered">
      <summary>
        <c>true</c> if any MapItems are being hovered by the mouse otherwise, <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._anyItemsBeingHoveredWhichPreventManeuverNodeAdder">
      <summary>
            Any items being hovered which prevent maneuver node adder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._chainNodeList">
      <summary>
            The chain node manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._chainSelection">
      <summary>
            The chain selection
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._craft">
      <summary>
            The MapCraft this is assigned to.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._craftContext">
      <summary>
            The craft context
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._infoPanel">
      <summary>
            The information panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._itemRegistry">
      <summary>
            The item registry
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._lockedSprite">
      <summary>
            The locked sprite
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._navigationTargetProvider">
      <summary>
            The navigation target provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._nodeAdderGraphicContainer">
      <summary>
            The node adder graphic container
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript._pointerDebugText">
      <summary>
            The information text for the node adder icon.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.ManeuverNodeAdjusted">
      <summary>
            Occurs when a maneuver node's dv has been adjusted.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.AnyItemsBeingHovered">
      <summary>
            Gets a value indicating whether any UI items are being hovered over by the mouse.
            </summary>
      <value>
            A value indicating whether any UI items are being hovered over by the mouse.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.ManeuverNodeCreationEnabled">
      <summary>
            Gets a value indicating whether maneuver node creation is enabled.
            </summary>
      <value>
        <c>true</c> if maneuver node creation is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.CoordinateConverter">
      <summary>
            Gets the map view script.
            </summary>
      <value>
            The map view script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.Create(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,Assets.Scripts.Flight.MapView.Items.MapPlayerCraft)">
      <summary>
            Creates the specified PlayerOrbit.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="craft">The craft.</param>
      <returns>
            The created PlayerOrbit
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.AddManeuverNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double,UnityEngine.Vector3d,System.Boolean)">
      <summary>
            Adds a maneuver node
            </summary>
      <param name="originatingOrbitInfo">The orbit that the new maneuver node originates from.</param>
      <param name="trueAnomalyOnOriginatingOrbit">The true anomaly of the maneuver node on originating orbit...where does the maneuver node occur on the "parent" orbit.</param>
      <param name="deltaV">The initial deltaV of the maneuver node.</param>
      <param name="restoring">if set to <c>true</c> then this maneuver node is being added during a restore process.</param>
      <returns>
            The ManeuverNodeScript created.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.OnBeforeCameraPositioned">
      <summary>
            Called each frame before the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Responds to when the add maneuver node icon is clicked.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.GetManeuverNodeDeltaV">
      <summary>
            Gets the first maneuver node's the delta v.
            </summary>
      <returns>The first maneuver node's the delta v.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.GetManeuverNodeDeltaVToComplete">
      <summary>
            Gets the first maneuver node's deltaV required to complete the maneuver.  This may differ from the node's DV if of-target burns have occurred.
            </summary>
      <returns>The first maneuver node's deltaV required to complete the maneuver.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.Initialize(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,Assets.Scripts.Flight.MapView.Items.MapPlayerCraft)">
      <summary>
            Initializes the specified parent orbit.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="craft">The craft.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.OnHoverExit(Assets.Scripts.Flight.MapView.OrbitInteractionScript,Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Called when the mouse stops hovering over an orbit.
            </summary>
      <param name="source">The source orbit interaction script.</param>
      <param name="orbitCursorInfo">The orbit and cursor information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.OnHoverStay(Assets.Scripts.Flight.MapView.OrbitInteractionScript,Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Called every frame while the cursor is hovering over an orbit.
            </summary>
      <param name="source">The source orbit interaction script.</param>
      <param name="orbitCursorInfo">The orbit and cursor information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.OnManeuverNodeAdjustmentChanging(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript,ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called when [maneuver node adjustment changing].
            </summary>
      <param name="source">The source.</param>
      <param name="orbtiUpdated">The orbti updated.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.OnManeuverNodeBeingDragged(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript)">
      <summary>
            Called when a maneuver node is being dragged.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.OnShowTargetChanged(System.Boolean)">
      <summary>
            Called when [show target changed].
            </summary>
      <param name="state">if set to <c>true</c> [state].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.SetAddIconEnabled(System.Boolean)">
      <summary>
            Sets the add icon enabled.
            </summary>
      <param name="enabled">if set to <c>true</c> [enabled].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.UpdateNodeAdderIcon(Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Updates the node adder icon.
            </summary>
      <param name="orbitCursorInfo">The orbit cursor information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeManagerScript.UpdatePointerDebugInfo(Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Updates the pointer debug information.
            </summary>
      <param name="orbitCursorInfo">The orbit cursor information.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript">
      <summary>
            Maneuver node "orbit"
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._cameraDistance">
      <summary>
            The camera distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._cameraTarget">
      <summary>
            The camera target info
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._chainList">
      <summary>
            The chain list
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._chainSelection">
      <summary>
            The chain selection
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._craftInfo">
      <summary>
            The craft information
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._deleteNodeIcon">
      <summary>
            The delete node icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._deltaV">
      <summary>
            The deltaV contribution of this node adjustor.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._draggingManeuverNode">
      <summary>
            The dragging maneuver node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._drawModeProvider">
      <summary>
            The draw mode provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._dvChangeBegin">
      <summary>
            The dv change begin
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._dvChanged">
      <summary>
            The dv changed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._dvChangeEnd">
      <summary>
            The dv change end
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._dvChanging">
      <summary>
            The dv changing
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._gizmoState">
      <summary>
            The gizmo state
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._infoCanvas">
      <summary>
            The canvas where information is drawn.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._lockedNodeIcon">
      <summary>
            The select node icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._maneuverNodeAdjustorBeingDragged">
      <summary>
            The maneuver node adjustor currently being dragged, or null if one is not being dragged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._maneuverNodeAdjustorContainer">
      <summary>
            The maneuver node adjustor container
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._maneuverNodeAdjustors">
      <summary>
            The maneuver node adjustors (prograde, retrograde, radial, etc).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._nextAutoLockAvailability">
      <summary>
            The time when this maneuver node will next be able to auto-lock.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._nodeScreenPosition">
      <summary>
            The node screen position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._nodeWorldPosition">
      <summary>
            The node world position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._normalReferenceVec">
      <summary>
            The normal vector of the reference orbit.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._normalVec">
      <summary>
            The normal vec
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._options">
      <summary>
            The map options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._orbitLine">
      <summary>
            The orbit line
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._prevDeltaV">
      <summary>
            The previous deltaV
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._previousNodeDepthBeforeOrphan">
      <summary>
            The value of the previous node's "depth" (index) in the chain node list, at a time when it wasn't orphaned.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._progradeReferenceVec">
      <summary>
            The prograde vector of the reference orbit.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._progradeVec">
      <summary>
            The prograde vec
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._radialReferenceVec">
      <summary>
            The radial vector of the reference orbit.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._radialVec">
      <summary>
            The radial vec
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._referenceOrbit">
      <summary>
            The maneuver node's base orbit...the orbit as it was before any deltaV was applied
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._referenceOrbitChanged">
      <summary>
            The reference orbit changed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._selected">
      <summary>
            The selected
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._selectNodeIcon">
      <summary>
            The select node icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript._selectNodeIconSize">
      <summary>
            The select node icon size
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ManeuverNodeAdjustmentChangeDelegate">
      <summary>
            Responds to changes made to a maneuver node.
            </summary>
      <param name="source">The source maneuver node script.</param>
      <param name="newOrbit">The new orbit after the adjustment has been applied.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ManeuverNodeHandler">
      <summary>
            Delegate for ManeuverNodeDelegate events.
            </summary>
      <param name="source">The ManeuverNodeScript sending the event.</param>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Deleted">
      <summary>
            Occurs when this maneuver node is being deleted.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ExecutionCompleted">
      <summary>
            Occurs when this maneuver node's execution completes.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ManeuverNodeAdjustmentChangeBeginEvent">
      <summary>
            Occurs when a maneuver node adjustment has begun.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ManeuverNodeAdjustmentChangeEndEvent">
      <summary>
            Occurs when a maneuver node adjustment has ended.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ManeuverNodeAdjustmentChangingEvent">
      <summary>
            Occurs when a maneuver node adjustment is occurring.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.NodeDraggingEvent">
      <summary>
            Occurs when a maneuver node is being dragged to a different position.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.GizmoState">
      <summary>
            Define gizmo states.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.GizmoState.Extended">
      <summary>
            The gizmos are extended to allow delta-v adjustments and deletion.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.GizmoState.Retracted">
      <summary>
            The gizmos are retracted and a selection icon is at the maneuver node.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.BurnData">
      <summary>
            Gets the burn data.
            </summary>
      <value>
            The burn data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Assets#Scripts#Flight#MapView#Orbits#Chain#ManeuverNodes#Interfaces#IManeuverNodePositionProvider#CameraDistance">
      <summary>
            Gets the camera distance.
            </summary>
      <value>
            The camera distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.DeltaV">
      <summary>
            Gets the delta v.
            </summary>
      <value>
            The delta v.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.DeltaVMag">
      <summary>
            Gets the delta V magnitude.
            </summary>
      <value>
            The delta V magnitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.DeltaVNormal">
      <summary>
            Gets the delta V applied to the normal direction.
            </summary>
      <value>
            The delta V applied to the normal direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.DeltaVPrograde">
      <summary>
            Gets the delta V applied to the prograde direction.
            </summary>
      <value>
            The delta V applied to the prograde direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.DeltaVRadial">
      <summary>
            Gets the delta V applied to the radial direction.
            </summary>
      <value>
            The delta V applied to the radial direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ExecutionComplete">
      <summary>
            Gets a value indicating whether this maneuver node has been executed.
            </summary>
      <value>
        <c>true</c> if this maneuver node has been executed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Assets#Scripts#Flight#MapView#Orbits#Chain#ManeuverNodes#Interfaces#IManeuverNodePositionProvider#ExtensionPercent">
      <summary>
            Gets the extension percent of the gizmo line.
            </summary>
      <value>
            The extension percent of the gizmo line.
            </value>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Hovered">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript" /> is being hovered over by the mouse.
            </summary>
      <value>
        <c>true</c> if is being hovered over by the mouse; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Assets#Scripts#Flight#MapView#Orbits#Chain#ManeuverNodes#Interfaces#IManeuverNodePositionProvider#NodeScreenPosition">
      <summary>
            Gets the node screen position.
            </summary>
      <value>
            The node screen position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Assets#Scripts#Flight#MapView#Orbits#Chain#ManeuverNodes#Interfaces#IManeuverNodePositionProvider#NodeWorldPosition">
      <summary>
            Gets the node world position.
            </summary>
      <value>
            The node world position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Orphaned">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript" /> is orphaned.
            </summary>
      <value>
        <c>true</c> if orphaned; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Selected">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript" /> is selected, and has the adjustment gizmos out.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.SelectionIconSize">
      <summary>
            Gets the size of the selection icon.
            </summary>
      <value>
            The size of the selection icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ReferenceOrbit">
      <summary>
            Gets the node's base orbit...the orbit as it was before any deltaV was applied
            </summary>
      <value>
            The reference orbit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.CraftNode">
      <summary>
            Gets the craft node.
            </summary>
      <value>
            The craft node.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.CanManeuverNodeMove(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Determines whether the maneuver node specified can be moved to the specified time without skipping over an adjacent node.
            </summary>
      <param name="maneuverNodeOrbitInfo">The maneuver node orbit information.</param>
      <param name="newProposedTime">The new proposed time.</param>
      <param name="prevOrbitInfo">The previous orbit information.</param>
      <param name="nextOrbitInfo">The next orbit information.</param>
      <returns>
        <c>true</c> if the maneuver node specified can be moved to the specified time without skipping over an adjacent node; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Create(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine,System.Double,UnityEngine.Vector3d,Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Creates the specified parent.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="listNode">The list node.</param>
      <param name="orbitLine">The orbit info for this node.</param>
      <param name="trueAnomalyOnPrevious">The true anomaly of the maneuver node on the preceding orbit.</param>
      <param name="deltaV">The initial deltaV of the maneuver node.</param>
      <param name="changeCategory">The change category.</param>
      <returns>
            The maneuver node that was added.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Delete">
      <summary>
            Deletes this maneuver node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.GetDeltaVToCompleteManeuver">
      <summary>
            Gets the maneuver node's deltaV required to complete the maneuver.  If a burn is in progress it will show the dv remaining.
            </summary>
      <returns>The maneuver node's deltaV required to complete the maneuver.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.IsAutoLockAvailable">
      <summary>
            Determines whether this burn node can auto-lock, or if the auto-lock cooldown is in effect.
            </summary>
      <returns>
        <c>true</c> if this burn node can auto-lock; otherwise, <c>false</c> if the auto-lock cooldown is in effect.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.IsSuitableForAdoption(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Determines whether the specified node is suitable to "adopt" this orphaned maneuver node.
            </summary>
      <param name="previous">The previous.</param>
      <returns>
        <c>true</c> if the specified node is suitable to "adopt" this orphaned maneuver node.; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.IsValidPreviousNode(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Determines whether this instance would be orphaned if the node provided was its previous node.
            </summary>
      <param name="previous">The previous node.</param>
      <returns>
        <c>true</c> if this instance would be orphaned if the node provided was its previous node; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.LockNode">
      <summary>
            Locks the node.  This node will no-longer process updates from its predecessor nor propagate them to children.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnAfterInitialized">
      <summary>
            Called after the main initialization, when it is save to access chain node information.
            </summary>
      <remarks>The way <see cref="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ChainNodeManager.AddAfter(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},System.Func{System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)" /> works, we cannot safely access our chain node list information b/c it is still null at that point.</remarks>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule before a drag is started.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnDeselected">
      <summary>
            Called when this chain node has been de-selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When dragging is occurring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule when a drag is ended.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnManeuverNodeExecutionComplete">
      <summary>
            Called when this maneuver node has completed execution.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnOrphanedStateChanged(System.Boolean)">
      <summary>
            Called when the orphaned state of this maneuver node has changed.
            </summary>
      <param name="orphaned">if set to <c>true</c> this maneuver node has been orphaned, otherwise <c>false</c> if it has been activated.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
             Called when one of the maneuver node's icons (select/delete) are clicked.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer enters over the item.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer exits the item.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnSelected">
      <summary>
            Called when this chain node has been selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.SetDeltaV(UnityEngine.Vector3d)">
      <summary>
            Sets the deltaV of this maneuver node.
            </summary>
      <param name="deltaV">The deltaV of this maneuver node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.UnlockNode">
      <summary>
            Unlocks the node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.UpdateBurnInfo">
      <summary>
            Updates burn related information for this maneuver node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.Initialize(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine,UnityEngine.Vector3d,Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Initializes the specified true anomaly.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="orbitLine">The orbit line.</param>
      <param name="deltaV">The initial deltaV of the maneuver node.</param>
      <param name="changeCategory">The change category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnAfterNodeUpdated(ModApi.Flight.Sim.IOrbit,System.Boolean)">
      <summary>
            Called after this node has been updated and all child nodes have had changes propagated to configured to do so.
            </summary>
      <param name="previousOrbit">The previous orbit.</param>
      <param name="changesPropagated">if set to <c>true</c> changes were propagated to child chain nodes.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnBeforeNodeUpdated">
      <summary>
            Called before this node has been updated and allows updating to be aborted if this node is no-longer valid.
            </summary>
      <returns>
        <c>true</c> if updating should continue, otherwise <c>false</c> to stop it.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnDestroy">
      <summary>
            Called when [destroy].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnPreviousNodeOrbitChanged(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called to perform any updates to this chain node necessary when the previous orbit changes.
            </summary>
      <param name="previousOrbit">The previous orbit.</param>
      <returns>
        <c>true</c> if the chain node is still active, <c>false</c> if it has been deleted.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ActivateAutolockCooldown">
      <summary>
            Activate's the auto-lock cool-down, preventing auto-lock from occurring for a small amount of time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.CalculateDeltaV">
      <summary>
            Calculates the delta v.
            </summary>
      <returns>The current DV of the adjustors.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.CreateAdjustor(System.Func{UnityEngine.Vector3d},System.String,UnityEngine.Color)">
      <summary>
            Creates the adjustor.
            </summary>
      <param name="maneuverVec">The maneuver vec.</param>
      <param name="iconName">The name.</param>
      <param name="color">The color.</param>
      <returns>
            The maneuver node adjustor.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.GetNodeDepth(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Gets the node's depth (aka it's index in the linked list).
            </summary>
      <param name="node">The node to check.</param>
      <returns>The node's depth (aka it's index in the linked list).</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.InitializeUi(Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider)">
      <summary>
            Initializes the UI.
            </summary>
      <param name="drawModeProvider">The draw mode provider.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnAdjustorChangeBegin(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript)">
      <summary>
            Called when an adjustor has begun to change.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnAdjustorChangeEnd(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript)">
      <summary>
            Called when an adjustor has stopped changing.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnAdjustorChanging(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeAdjustorScript)">
      <summary>
            Called while an adjustor changes.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnDeleteClicked">
      <summary>
            Called when the delete button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnDraggingManeuverNode(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when a maneuver node is being dragged to another position.
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnNodeListChanged(Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Called when the node list changed.
            </summary>
      <param name="source">The source.</param>
      <param name="node">The node.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnReferenceOrbitChanged(ModApi.Flight.Sim.IOrbit,System.Double)">
      <summary>
            Updates the reference orbit.
            </summary>
      <param name="orbit">The orbit.</param>
      <param name="nu">The nu.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnSelectClicked">
      <summary>
            Called when the select button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnStartDraggingManeuverNode">
      <summary>
            Called when [start dragging maneuver node].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OnStopDraggingManeuverNode">
      <summary>
            Called when [stop dragging maneuver node].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OrderIndependentUpdate">
      <summary>
            This method should only contain per-frame update tasks that don't depend on any specific order (such as before/after camera, etc).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.OrphanIfNecessary">
      <summary>
            Checks if this maneuver node should be orphaned, and orphans it if so.
            </summary>
      <returns>
        <c>true</c> if the maneuver node has been orphaned, otherwise; <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.SetDeltaV(UnityEngine.Vector3d,System.Boolean)">
      <summary>
            Sets the deltaV of this maneuver node.
            </summary>
      <param name="deltaV">The deltaV of this maneuver node.</param>
      <param name="updateAdjustors">if set to <c>true</c> the adjustors are updated to the specified deltaV.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.SetGizmoState(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.GizmoState)">
      <summary>
            Sets the state of the gizmo.
            </summary>
      <param name="state">The state to set the gizmos to.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.ToggleGizmoState">
      <summary>
            Toggles the state of the gizmos between extended/retracted.
            </summary>
      <returns>The new gizmo state.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.UpdateManeuverVectors">
      <summary>
            Updates the maneuver vectors (prograde, radial, normal).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.UpdateOrbit(System.Boolean)">
      <summary>
            Updates the orbit from our reference orbit and current deltaV.
            </summary>
      <param name="propagateChanges">if set to <c>true</c> propagate changes onto child nodes.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.UpdatePositions">
      <summary>
            Updates the IManeuverNodePositionProvider positions.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.UpdateReferenceOrbitVectors">
      <summary>
            Updates the reference orbit vectors.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.UpdateUi">
      <summary>
            Updates the UI for overall node info
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.DataIoConstants">
      <summary>
            Constants related to DataIO.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript.DataIoConstants.DeltaV">
      <summary>
            The deltaV attribute name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverSimNode">
      <summary>
            An OrbitNode which represents a maneuver node's orbital params.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.Sim.OrbitNode" />
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverSimNode.#ctor(ModApi.Flight.Sim.IOrbit,ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverSimNode" /> class.
            </summary>
      <param name="orbit">The orbit.</param>
      <param name="parent">The parent.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider">
      <summary>
            Provides meta information about an IChainableOrbit.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider._chainNode">
      <summary>
            The chain node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider._craft">
      <summary>
            The craft
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TimeDisplayType">
      <summary>
            The time display type.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TimeDisplayType.Hours">
      <summary>
            The hours
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TimeDisplayType.Days">
      <summary>
            The days
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TimeDisplayType.DaysIfMoreThanADay">
      <summary>
            The days if more than a day
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.ApoapsisDistance">
      <summary>
            Gets the apoapsis distance.
            </summary>
      <value>
            The apoapsis distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.ApoapsisOnVisibleOrbit">
      <summary>
            Gets a value indicating whether [apoapsis on visible orbit].
            </summary>
      <value>
        <c>true</c> if [apoapsis on visible orbit]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.BurnTime">
      <summary>
            Gets the burn time.
            </summary>
      <value>
            The burn time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.DeltaV">
      <summary>
            Gets the delta v.
            </summary>
      <value>
            The delta v.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.Eccentricity">
      <summary>
            Gets the eccentricity.
            </summary>
      <value>
            The eccentricity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.EndTime">
      <summary>
            Gets the end time.
            </summary>
      <value>
            The end time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.Inclination">
      <summary>
            Gets the inclination.
            </summary>
      <value>
            The inclination.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.OrbitDebugInfo">
      <summary>
            Gets the orbit debug information.
            </summary>
      <value>
            The orbit debug information.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.PeriapsisAngle">
      <summary>
            Gets the periapsis angle.
            </summary>
      <value>
            The periapsis angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.PeriapsisDistance">
      <summary>
            Gets the periapsis distance.
            </summary>
      <value>
            The periapsis distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.PeriapsisOnVisibleOrbit">
      <summary>
            Gets a value indicating whether [periapsis on visible orbit].
            </summary>
      <value>
        <c>true</c> if [periapsis on visible orbit]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.Period">
      <summary>
            Gets the period.
            </summary>
      <value>
            The period.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.PeriodText">
      <summary>
            Gets the period text.
            </summary>
      <value>
            The period text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.PlanetIntersection">
      <summary>
            Gets a value indicating whether [planet intersection].
            </summary>
      <value>
        <c>true</c> if [planet intersection]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.RightAscentionOfAscendingNode">
      <summary>
            Gets the right ascention of ascending node.
            </summary>
      <value>
            The right ascention of ascending node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.SemiMajorAxis">
      <summary>
            Gets the semi major axis.
            </summary>
      <value>
            The semi major axis.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.StartTime">
      <summary>
            Gets the start time.
            </summary>
      <value>
            The start time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TimeToNode">
      <summary>
            Gets the time to node.
            </summary>
      <value>
            The time to node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TimeToNodeText">
      <summary>
            Gets the time to node text.
            </summary>
      <value>
            The time to node text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TransitTimeText">
      <summary>
            Gets the transit t dime text.
            </summary>
      <value>
            The transit t dime text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TrueAnomalyEnd">
      <summary>
            Gets the true anomaly end.
            </summary>
      <value>
            The true anomaly end.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TrueAnomalyEndExcludingPlanetIntersection">
      <summary>
            Gets the true anomaly end excluding planet intersection.
            </summary>
      <value>
            The true anomaly end excluding planet intersection.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TrueAnomalyStart">
      <summary>
            Gets the true anomaly start.
            </summary>
      <value>
            The true anomaly start.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TypeDesc">
      <summary>
            Gets the type description.
            </summary>
      <value>
            The type description.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.SetCraft(Assets.Scripts.Flight.MapView.Items.MapPlayerCraft)">
      <summary>
            Sets the craft.
            </summary>
      <param name="craft">The craft.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.SetNode(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Sets the node, and recalculates the meta information.
            </summary>
      <param name="chainNode">The chain node to produce meta information for.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.UpdateDynamicValues">
      <summary>
            Updates the dynamic values.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.ConvertTimeToText(System.Single,Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.TimeDisplayType)">
      <summary>
            Converts the time to text.
            </summary>
      <param name="time">The time.</param>
      <param name="displayType">The display type.</param>
      <returns>
            The time value converted to text in the format specified.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeMetaProvider.UpdateStaticValues(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Updates the static values.
            </summary>
      <param name="chainNode">The chain node.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript">
      <summary>
            Represents an orbit in an orbit chain, such as a maneuver node, or SOI encounters, often a combination of both.
            Responsible for detecting SOI encounters originating from itself and creating the appropriate Enter/Exit node as a result.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <summary>
            Partial class for OrbitChainNodeScript, which implements debug stuff.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._cameraFocusableDestroyed">
      <summary>
            The camera focusable destroyed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._cameraFocusableLockPositionNu">
      <summary>
            If set, we're overriding the normal camera position, using the chain node's original position at the end of the previous node.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._chainNodeOptions">
      <summary>
            Gets the chain node options.
            </summary>
      <value>
            The chain node options.
            </value>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._craftContext">
      <summary>
            The craft context
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._craftInfo">
      <summary>
            The MapCraft that this chain node belongs to.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._drawModeProvider">
      <summary>
            The draw mode provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._listNode">
      <summary>
            The linked list node in the orbit chain for this instance.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._locked">
      <summary>
        <c>true</c> if this chain node is locked, otherwise <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._options">
      <summary>
            The map options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._orbitLine">
      <summary>
            The orbit line
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._trueAnomalyOnPreviousChanged">
      <summary>
        <c>true</c> if this node's position on its previous node has changed during the frame, otherwise <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript._trueAnomalyOnPreviousOrbit">
      <summary>
            The true anomaly/position on the previous orbit in the chain where this node resides.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Destroyed">
      <summary>
            Occurs when this item has been destroyed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.ShowDebug">
      <summary>
            Gets or sets a value indicating whether to show orbit debug info.
            </summary>
      <value>
        <c>true</c> if to show orbit debug info; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#AssociatedPlanet">
      <summary>
            Gets the planet associated w/this item.
            </summary>
      <value>
            The planet associated w/this item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#FocusByClick">
      <summary>
            Gets a value indicating whether camera focus should be set when clicked.
            </summary>
      <value>
        <c>true</c> if camera focus should be set when clicked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.ListNode">
      <summary>
            Gets the linked list node in the orbit chain for this node.
            </summary>
      <value>
            The linked list node in the orbit chain for this node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Locked">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript" /> is locked, and will
            not update/respond to changes in its previous node, otherwise <c>false</c>.
            </summary>
      <value>
        <c>true</c> if locked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#MinZoomDistance">
      <summary>
            Gets the minimum distance that the camera should zoom on this position.
            </summary>
      <value>
            The minimum distance that the camera should zoom on this position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Name">
      <summary>
            Gets the name of this IChainableOrbit.
            </summary>
      <value>
            The name of this IChainableOrbit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.OrbitInfo">
      <summary>
            Gets the orbit information.
            </summary>
      <value>
            The orbit information.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Position">
      <summary>
            Gets the position the camera should focus on, in map view coordinates.
            </summary>
      <value>
            The position the camera should focus on, in map view coordinates.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.PropagateChanges">
      <summary>
            Gets or sets a value indicating whether changes to this node should propagate to children.
            </summary>
      <value>
        <c>true</c> if changes to this node should propagate to children; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.TimeToNode">
      <summary>
            Gets the time in seconds to the node.
            </summary>
      <value>
            The time in seconds to the node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.TrueAnomalyOnPreviousOrbit">
      <summary>
            Gets the true anomaly/position on the preceding orbit in the chain where this node resides.
            </summary>
      <value>
            The true anomaly/position on the preceding orbit in the chain where this node resides.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.CheckAndCreateEncounter(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,System.Double,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,UnityEngine.Color)">
      <summary>
            Checks for enter/exit encounters, creating them if necessary.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="localMinimaModifier">The SOI entry resolution modifier. A value of 1 means use default.</param>
      <param name="orbitInfo">The orbit information related to the node to check encounters for.</param>
      <param name="color">The color.</param>
      <returns>
            The encounter which was created, otherwise <c>null</c> if not encounter was created.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.CreatePredictedExitSoiOrbit(Assets.Scripts.Flight.Sim.OrbitAnalyser.SoiExitInfo)">
      <summary>
            Creates an orbit which represents the resulting orbit after the specified SOI exit encounter.
            </summary>
      <param name="encounterInfo">The encounter information.</param>
      <returns>
            The orbit which represents the resulting orbit after the specified SOI exit encounter.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.GetNodeIndex(Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript)">
      <summary>
            Gets the zero-based index of the node...how "far away" it is from the craft in the chain.
            </summary>
      <param name="chainNode">The chain node.</param>
      <returns>The zero-based index of the node...the number of nodes it away from the craft, minus one.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.ShouldShowDebug(Assets.Scripts.Flight.MapView.Orbits.Chain.Interfaces.IChainNodeSelection,Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Determines whether debug information should be shown for the chainable orbit.
            </summary>
      <param name="selectionManager">The selection manager.</param>
      <param name="chainableOrbit">The chainable orbit.</param>
      <returns>
        <c>true</c> if debug information should be shown for the specified orbit, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.CheckAndCreateEncounter">
      <summary>
            Checks the and create encounter.
            </summary>
      <returns>The SoiEncounterNodeScript created.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.CheckForIncompatibleState">
      <summary>
            Performs a very quick check for validity/compatibility and removes if invalid.  This does not perform full encounter checks, and only meant to remove nodes that could cause errors if they were allowed to remain.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.GetTimeToNode(System.Boolean,System.Boolean)">
      <summary>
            Gets the time to maneuver node.
            </summary>
      <param name="fullTime">if set to <c>true</c> then will get the full time to the node, which is the time from the ship's current position to this node...includeing any
            nodes in between, otherwise it just returns the time from the parent node's position to the beginning of this node.</param>
      <param name="absoluteTime">if set to <c>true</c> the absolute game time is returned (seconds to the node, plus the current time), otherwise the seconds in future.</param>
      <returns>
            The time to this maneuver node.
            </returns>
      <remarks>
            You can only get the absolute time to a node if you are also getting the full time.  It wouldn't make sense to get the absolute time of a single node.
            </remarks>
      <example>
            GetTimeToNode(true, true) // Game time that node will start (doesn't change between calls unless burn/node changes).
            GetTimeToNode(true, false) // Seconds in future that node will start ("countdown").
            GetTimeToNode(false, false) // Time in seconds from previous node (doesn't change between calls unless burn/node changes).
            GetTimeToNode(false, true) // Invalid usage.
            </example>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.LockNode">
      <summary>
            Locks the node.  This node will no-longer process updates from its predecessor nor propagate them to children.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.OnDeselected">
      <summary>
            Called when this chain node has been de-selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.OnSelected">
      <summary>
            Called when this chain node has been selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.OnTrueAnomalyOnPreviousOrbitChanged(System.Double)">
      <summary>
            Called when the true anomaly on previous orbit changes.
            </summary>
      <param name="nu">The true anomaly on previous orbit.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.SendPreviousNodeOrbitChanged(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called when a previous node's orbit has changed, and propagates the notification to children.
            </summary>
      <param name="previousOrbit">The preceding orbit.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.SetListNode(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Sets the list node.
            </summary>
      <param name="listNode">The list node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.SetTrueAnomalyOnPrevious(System.Double)">
      <summary>
            Sets the true anomaly where this chain node occurs on the previous orbit.
            </summary>
      <param name="nu">The nu.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.UnlockNode">
      <summary>
            Unlocks the node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Create``1(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,System.String,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine,System.Double)">
      <summary>
            Creates the specified map view script.
            </summary>
      <typeparam name="T">The OrbitChainNodeScriptNew type.</typeparam>
      <param name="craftContext">The craft context.</param>
      <param name="name">The name.</param>
      <param name="listNode">The list node.</param>
      <param name="orbitLine">The orbit line.</param>
      <param name="trueAnomalyOnPrevious">The true anomaly on previous.</param>
      <returns>
            The OrbitChainNode which was created.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.OnAfterNodeUpdated(ModApi.Flight.Sim.IOrbit,System.Boolean)">
      <summary>
            Called after this node has been updated and all child nodes have had changes propagated to configured to do so.
            </summary>
      <param name="previousOrbit">The previous orbit.</param>
      <param name="changesPropagated">if set to <c>true</c> changes were propagated to child chain nodes.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.OnBeforeNodeUpdated">
      <summary>
            Called before this node has been updated and allows updating to be aborted if this node is no-longer valid.
            </summary>
      <returns>
        <c>true</c> if updating should continue, otherwise <c>false</c> to stop it.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.OnDestroy">
      <summary>
            Called when [destroy].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.OnPreviousNodeOrbitChanged(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called to perform any updates to this chain node necessary when the previous orbit changes.
            </summary>
      <param name="precedingOrbit">The preceding orbit.</param>
      <returns>
        <c>true</c> if the chain node is still active, <c>false</c> if it has been deleted.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.SetCameraPositionLocked(System.Boolean)">
      <summary>
            Sets the camera position locked parameter. If locked, the position reported through ICameraFocusable will not change until it is set to false.
            </summary>
      <param name="locked">If set to <c>true</c> the camera position is locked for this node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.CreateSoiEnterNode(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.Sim.OrbitAnalyser.SoiEnterInfo,UnityEngine.Color)">
      <summary>
            Creates a new chain node and orbit line from an SOI enter encounter.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="nodeBranchedFrom">The node being branched from to create the new SOI encounter node.</param>
      <param name="encounterInfo">The encounter information.</param>
      <param name="color">The color.</param>
      <returns>
            The MapCraftOrbitLine with an associated soi encounter node.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.CreateSoiExitNode(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.Sim.OrbitAnalyser.SoiExitInfo,UnityEngine.Color)">
      <summary>
            Creates a new chain node and orbit line from an SOI exit encounter.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="nodeBranchedFrom">The node being branched from to create the new SOI encounter node.</param>
      <param name="encounterInfo">The encounter information.</param>
      <param name="color">The color.</param>
      <returns>
            The SoiExitNodeScript
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.DoesNodeOrbit(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit,ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Checks to see if the node orbits the specified planet.
            </summary>
      <param name="node">The chain node to check to see if it orbits the specified planet.</param>
      <param name="planet">The planet to check if the node orbits.</param>
      <returns>
        <c>true</c> if the node orbits the specified planet, otherwise <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.HasEncounterBeenCreated``1(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit,ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Determines whether an encounter of the specified type already exists for the planet which would apply to the given chain node. We are NOT checking "Has ANY encounter of this type from
            this planet node been created"...only those that would potentially be placed starting at startNode.  We therefore only check up to the first encounter of the given type.
            </summary>
      <typeparam name="T">The encounter type to check for.</typeparam>
      <param name="startNode">The first node to check for the encounter...nodes following it will be checked up to the first encounter of the given type.</param>
      <param name="planet">The planet node to check for encounters.</param>
      <returns>
        <c>true</c> if an encounter of the given type has been created for the planet that would apply to the given chain node; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.UpdateUi(Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript)">
      <summary>
            Updates the UI.
            </summary>
      <param name="chainNode">The chain node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.Initialize(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,System.String,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine,System.Double)">
      <summary>
            Initializes the specified map view script.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="name">The name.</param>
      <param name="listNode">The list node.</param>
      <param name="orbitLine">The orbit line.</param>
      <param name="trueAnomalyOnPrevious">The true anomaly on previous.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.PerformValidityCheck">
      <summary>
            Called after all updating is done for the frame.  This is a debug method which allows chain-able items a chance to check their current state and report any errors.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript.PerformValidityChecksWhichMayTemporarilyOccur">
      <summary>
            Performs checks which may fail during times when maneuver/encounter nodes are no-longer valid, but will soon be removed/orphaned.  These are "good" checks, but were showing up
            during normal operation.  I didn't want to lose the asserts, but needed to quarantine them in a way that they could be disabled most of the time.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterNodeScript">
      <summary>
            Represents an orbit chain node where an SOI encounter occurs (either enter/exit).
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.OrbitChainNodeScript" />
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterOrbitSimNode">
      <summary>
            Node used only by MapView to insert nodes created by SOI encounters.  When an orbit reaches the SOI of a planet, we'll need a node which represents that
            orbit which is now a child of the planet.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.Sim.OrbitNode" />
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterOrbitSimNode.#ctor(ModApi.Flight.Sim.IOrbit,ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterOrbitSimNode" /> class.
            </summary>
      <param name="orbit">The orbit.</param>
      <param name="parent">The parent.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterOrbitSimNode.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,Assets.Scripts.Flight.Sim.PlanetNode)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterOrbitSimNode" /> class.
            </summary>
      <param name="time">The time.</param>
      <param name="e">The eccentricity.</param>
      <param name="a">The semi-major axis.</param>
      <param name="w">The periapsis angle.</param>
      <param name="nu">The true anomaly.</param>
      <param name="inclination">The inclination.</param>
      <param name="ra">The right ascension of the ascending node.</param>
      <param name="prograde">if set to <c>true</c> [prograde].</param>
      <param name="parent">The parent.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterPlanetSimNode">
      <summary>
            A PlanetNode which represents another PlanetNode except at a different point in time.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.Sim.PlanetNode" />
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterPlanetSimNode.#ctor(ModApi.Planet.IPlanetData,ModApi.Flight.Sim.IOrbit,ModApi.Flight.Sim.IPlanetNode,ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterPlanetSimNode" /> class.
            </summary>
      <param name="planetData">The planet data.</param>
      <param name="orbit">The orbit.</param>
      <param name="parent">The parent.</param>
      <param name="referencePlanet">The "reference planet"...the planet that this node is a "copy" of, just at a different point in time.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterPlanetSimNode.ReferencePlanet">
      <summary>
            Gets the planet that this node is representing in the future.
            </summary>
      <value>
            The planet that this node is representing in the future.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript">
      <summary>
            Represents an orbit chain node when an SOI is sibling orbit is entered.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterNodeScript" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript._chainList">
      <summary>
            The chain list
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript._chainNodeSelection">
      <summary>
            The chain node selection
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript._mapOptions">
      <summary>
            The map options
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript.EncounterInfo">
      <summary>
            Gets the encounter information.
            </summary>
      <value>
            The encounter information.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript.Create(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine,Assets.Scripts.Flight.Sim.OrbitAnalyser.SoiEnterInfo,System.Double)">
      <summary>
            Creates the specified encounter node.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="listNode">The list node.</param>
      <param name="orbitLine">The orbit line.</param>
      <param name="enterInfo">The encounter information.</param>
      <param name="trueAnomalyOnPrevious">The true anomaly on previous.</param>
      <returns>
            The SoiEncounterNodeScript
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript.CheckForIncompatibleState">
      <summary>
            Performs a very quick check for validity/compatibility and removes if invalid.  This does not perform full encounter checks, and only meant to remove nodes that could cause errors if they were allowed to remain.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript.OnPreviousNodeOrbitChanged(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called to perform any updates to this chain node necessary when the previous orbit changes.
            </summary>
      <param name="precedingOrbit">The preceding orbit.</param>
      <returns>
        <c>true</c> if the chain node is still active, <c>false</c> if it has been deleted.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript.GetName(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the name.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The name for the enter node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEnterNodeScript.Initialize(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,Assets.Scripts.Flight.Sim.OrbitAnalyser.SoiEnterInfo)">
      <summary>
            Initializes the specified encounter information.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="encounterInfo">The encounter information.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiExitNodeScript">
      <summary>
            Represents an orbit chain node when an SOI is exited into a parent SOI.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiEncounterNodeScript" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiExitNodeScript._chainNodeList">
      <summary>
            The chain node list
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiExitNodeScript.Create(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine,System.Double)">
      <summary>
            Creates the specified encounter node.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="listNode">The linked list node for this orbit chain script.</param>
      <param name="orbitLine">The orbit info for this node.</param>
      <param name="trueAnomalyOnPrevious">The true anomaly on previous.</param>
      <returns>
            The SoiEncounterNodeScript
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiExitNodeScript.GenerateExitInfo(Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiExitNodeScript)">
      <summary>
            Generates updated SOI exit encounter information.
            </summary>
      <param name="exitNode">The exit node to generate exit encounter info for.</param>
      <returns>
            The SOI exit encounter information for the specified node, or <c>null</c> if this exit encounter is no-longer valid.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiExitNodeScript.OnPreviousNodeOrbitChanged(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called to perform any updates to this chain node necessary when the previous orbit changes.
            </summary>
      <param name="precedingOrbit">The preceding orbit.</param>
      <returns>
        <c>true</c> if the chain node is still active, <c>false</c> if it has been deleted.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiExitNodeScript.GetName(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the name.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The name for the exit node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Chain.SoiEncounters.SoiExitNodeScript.Initialize(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext)">
      <summary>
            Initializes the specified craft context.
            </summary>
      <param name="craftContext">The craft context.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode">
      <summary>
            The basic draw mode w/minimal code.  Meant to be a high-performance version for mobile, etc.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode" />
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.Mode">
      <summary>
            Gets the enumeration value identifying this draw mode.
            </summary>
      <value>
            The mode.
            </value>
      <remarks>
            This is used by the UI to display info and select modes...would be nice to refactor so it isn't necessary.
            </remarks>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.UpdateReferencePerPoint">
      <summary>
            Gets a value indicating whether the draw mode is updated for every point, otherwise <c>false</c> if it is updated once per orbit.
            </summary>
      <value>
        <c>true</c> if [update reference per point]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.GetLineEndNu(ModApi.Flight.Sim.IPlanetNode,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the line end true anomaly point, returning <c>null</c> means use the default value.
            </summary>
      <param name="referenceNode">The reference node.</param>
      <param name="orbitInfo">The orbit information.</param>
      <returns>
            The end true anomaly of the line.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.GetReferenceNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.GetReferenceSolarNodePosition(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo)">
      <summary>
            Gets the reference node's position.
            </summary>
      <param name="refInfo">The reference point information.</param>
      <returns>
            The reference node's position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.GetReferenceSolarPosition(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference solar position.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node's solar position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.GetSolarPosition(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Gets the solar position.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <param name="point">The point.</param>
      <returns>The solar position of the node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.GetSolarPosition(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Gets the solar position.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="point">The point.</param>
      <returns>The solar position of the node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.GetSolarPositionAtCurrent(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the solar position corresponding to the specified true anomaly.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>
            The final solar position corresponding to the specified true anomaly.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.GetSolarPositionFromNu(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Gets the final solar position corresponding to the specified true anomaly.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <param name="trueAnomaly">The true anomaly.</param>
      <returns>
            The final solar position corresponding to the specified true anomaly.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.UpdateReferenceNode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node using the supplied information according to the current draw mode.
            Note: Not all params will necessarily be used for all draw modes.  They're all sent so we have one main method which all calls
            funnel into regardless of draw mode.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointTime">The point time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.UpdateReferenceNodeFromNu(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node from nu.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointNu">The point nu.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.UpdateReferenceNodeFromPoint(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Updates the reference node from the orbit point.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="point">The point.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.BasicDrawMode.UpdateReferenceNoderPerOrbit(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Updates the reference node for modes that use a pre-determined time.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode">
      <summary>
            Defines how orbit lines should be drawn.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.Mode">
      <summary>
            Gets the enumeration value identifying this draw mode.
            </summary>
      <value>
            The mode.
            </value>
      <remarks>
            This is used by the UI to display info and select modes...would be nice to refactor so it isn't necessary.
            </remarks>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.UpdateReferencePerPoint">
      <summary>
            Gets a value indicating whether the draw mode is updated for every point, otherwise <c>false</c> if it is updated once per orbit.
            </summary>
      <value>
        <c>true</c> if [update reference per point]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetLuna(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Gets the Luna.
            </summary>
      <param name="nodeInChain">The node in chain.</param>
      <returns>
            Luna's node.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetLineEndNu(ModApi.Flight.Sim.IPlanetNode,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the line end true anomaly point, returning <c>null</c> means use the default value.
            </summary>
      <param name="referenceNode">The reference node.</param>
      <param name="orbitInfo">The orbit information.</param>
      <returns>
            The line end true anomaly point, returning <c>null</c> means use the default value.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetReferenceNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetReferenceSolarNodePosition(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo)">
      <summary>
            Gets the reference node's solar position.
            </summary>
      <param name="refInfo">The reference information.</param>
      <returns>
            The reference node's solar position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetReferenceSolarPosition(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node's solar position.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>
            The reference node's solar position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetSolarPosition(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Gets the solar position of the node being drawn.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="point">The point.</param>
      <returns>
            The solar position of the node being drawn.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetSolarPosition(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Gets the solar position of the node being drawn.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <param name="point">The point.</param>
      <returns>
            The solar position of the node being drawn.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetSolarPositionAtCurrent(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the solar position corresponding to the specified true anomaly.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The final solar position corresponding to the specified true anomaly.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetSolarPositionFromNu(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Gets the final solar position corresponding to the specified true anomaly.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <param name="trueAnomaly">The true anomaly.</param>
      <returns>
            The final solar position corresponding to the specified true anomaly.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.UpdateReferenceNode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node using the supplied information according to the current draw mode.
            Note: Not all params will necessarily be used for all draw modes.  They're all sent so we have one main method which all calls
            funnel into regardless of draw mode.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointTime">The point time.</param>
      <exception cref="T:System.InvalidOperationException">Thrown when called while an invalid draw mode is set.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.UpdateReferenceNodeFromNu(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node from nu.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointNu">The point nu.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.UpdateReferenceNodeFromPoint(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Updates the reference node from the orbit point.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="point">The point.</param>
      <exception cref="T:System.InvalidOperationException">Thrown when called while an invalid draw mode is set.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.UpdateReferenceNoderPerOrbit(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Updates the reference node for modes that use a pre-determined time.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetPositionRelativeToReferenceNode(ModApi.Flight.Sim.IOrbitNode,System.Double,UnityEngine.Vector3d,ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Gets the point's position relative to the reference node.
            </summary>
      <param name="pointNode">The point node.</param>
      <param name="pointTime">The point time.</param>
      <param name="localPosition">The local position.</param>
      <param name="referenceNode">The reference node.</param>
      <returns>
            The point's position relative to the reference node.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode.GetSolarPosition(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double,UnityEngine.Vector3d)">
      <summary>
            Gets the solar position.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="pointTime">The point time.</param>
      <param name="localPosition">The local position.</param>
      <returns>The solar position of the node being drawn.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo">
      <summary>
            The DrawModeReferencePointInfo
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo.ReferenceNode">
      <summary>
            Gets or sets the reference node.
            </summary>
      <value>
            The reference node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo.ReferenceNodeParentTime">
      <summary>
            Gets or sets the time that the reference node's parent's position should be sampled at.
            </summary>
      <value>
            The time that the reference node's parent's position should be sampled at.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo.ReferenceNodeTime">
      <summary>
            Gets or sets the time that the reference node's position should be sampled at.
            </summary>
      <value>
            The time that the reference node's position should be sampled at.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.EncounterNodeAtExitTime">
      <summary>
            The EncounterNodeAtExitTime draw mode.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.DrawModes.EncounterNodeAtExitTime._hybridTime">
      <summary>
            The hybrid time
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.EncounterNodeAtExitTime.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.EncounterNodeAtExitTime" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.EncounterNodeAtExitTime.Mode">
      <summary>
            Gets the enumeration value identifying this draw mode.
            </summary>
      <value>
            The mode.
            </value>
      <remarks>
            This is used by the UI to display info and select modes...would be nice to refactor so it isn't necessary.
            </remarks>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.EncounterNodeAtExitTime.UpdateReferencePerPoint">
      <summary>
            Gets a value indicating whether the draw mode is updated for every point, otherwise <c>false</c> if it is updated once per orbit.
            </summary>
      <value>
        <c>true</c> if [update reference per point]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.EncounterNodeAtExitTime.GetReferenceNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.EncounterNodeAtExitTime.UpdateReferenceNode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node using the supplied information according to the current draw mode.
            Note: Not all params will necessarily be used for all draw modes.  They're all sent so we have one main method which all calls
            funnel into regardless of draw mode.
            </summary>
      <param name="refnfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointTime">The point time.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.HybridTime">
      <summary>
            The hybrid time draw mode.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode" />
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.HybridTime.Mode">
      <summary>
            Gets the enumeration value identifying this draw mode.
            </summary>
      <value>
            The mode.
            </value>
      <remarks>
            This is used by the UI to display info and select modes...would be nice to refactor so it isn't necessary.
            </remarks>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.HybridTime.UpdateReferencePerPoint">
      <summary>
            Gets a value indicating whether the draw mode is updated for every point, otherwise <c>false</c> if it is updated once per orbit.
            </summary>
      <value>
        <c>true</c> if [update reference per point]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.HybridTime.GetReferenceNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.HybridTime.UpdateReferenceNode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node using the supplied information according to the current draw mode.
            Note: Not all params will necessarily be used for all draw modes.  They're all sent so we have one main method which all calls
            funnel into regardless of draw mode.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointTime">The point time.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType">
      <summary>
            The orbit draw mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType.HybridTime">
      <summary>
            The hybrid time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType.EncounterNodeAtExitTime">
      <summary>
            The encounter node at exit time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType.ParentAtReferenceTime">
      <summary>
            Draws points relative to their parent at the parent orbit's "reference time".  The reference time is whatever
            time is currently stored in the parent's Orbit.  For "normal" objects, this should be the game's current time.
            For maneuver nodes/encounters, it will be when the maneuver node/encounter occurs along the orbit.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType.ParentAtPointTime">
      <summary>
            Draws points relative to the solar system center.  It calculates the parent's true solar position for
            every point along the orbit, so is expensive to calculate.  This mode results in orbits having wavy lines in the
            solar direction of their parents orbit, or just a regular elliptical orbit if their parent is the sun.
            Note: If it followed the naming convention of other modes, it could be called ParentAtIndividualTime since there
            is no single time used for all points...it uses each point's time and uses that to determine the parents position,
            and therefore it's final solar position.  "Solar" seemed more descriptive though..."ParentAtPointTime" doesn't tell
            you much.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType.ParentAtCurrentTime">
      <summary>
            Draws points relative to their parent at the game's current time. This mode will make sure that all maneuver
            nodes are close to the parent planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType.SiblingAtPointTime">
      <summary>
            The sibling at point time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType.Basic">
      <summary>
            The basic
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode">
      <summary>
            Defines the interface required to create a draw mode for orbit lines.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.Mode">
      <summary>
            Gets the enumeration value identifying this draw mode.
            </summary>
      <value>
            The mode.
            </value>
      <remarks>This is used by the UI to display info and select modes...would be nice to refactor so it isn't necessary.</remarks>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.UpdateReferencePerPoint">
      <summary>
            Gets a value indicating whether the draw mode is updated for every point, otherwise <c>false</c> if it is updated once per orbit.
            </summary>
      <value>
        <c>true</c> if [update reference per point]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.GetLineEndNu(ModApi.Flight.Sim.IPlanetNode,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the line end true anomaly point, returning <c>null</c> means use the default value.
            </summary>
      <param name="referenceNode">The reference node.</param>
      <param name="orbitInfo">The orbit information.</param>
      <returns>
            The line end true anomaly point, returning <c>null</c> means use the default value.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.GetReferenceNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.GetReferenceSolarNodePosition(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo)">
      <summary>
            Gets the reference node's solar position.
            </summary>
      <param name="refInfo">The reference information.</param>
      <returns>
            The reference node's solar position.
            </returns>
      <exception cref="T:System.InvalidOperationException">Thrown when called while an invalid draw mode is set.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.GetReferenceSolarPosition(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node's solar position.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node's solar position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.GetSolarPosition(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Gets the solar position of the node being drawn.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <param name="point">The point.</param>
      <returns>The solar position of the node being drawn.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.GetSolarPosition(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Gets the solar position of the node being drawn.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="point">The point.</param>
      <returns>The solar position of the node being drawn.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.GetSolarPositionAtCurrent(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the solar position corresponding to the specified orbit info.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The final solar position corresponding to the specified true anomaly.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.GetSolarPositionFromNu(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Gets the final solar position corresponding to the specified true anomaly.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <param name="trueAnomaly">The true anomaly.</param>
      <returns>
            The final solar position corresponding to the specified true anomaly.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.UpdateReferenceNode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference info using the supplied information.
            Note: Not all params will necessarily be used for all draw modes.  They're all sent so we have one main method which all calls
            funnel into regardless of draw mode.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointTime">The point time.</param>
      <exception cref="T:System.InvalidOperationException">Thrown when called while an invalid draw mode is set.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.UpdateReferenceNodeFromNu(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node from nu.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointNu">The point nu.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.UpdateReferenceNodeFromPoint(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Updates the reference node from the orbit point.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="point">The point.</param>
      <exception cref="T:System.InvalidOperationException">Thrown when called while an invalid draw mode is set.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.IDrawMode.UpdateReferenceNoderPerOrbit(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Updates the reference node for modes that use a pre-determined time.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtCurrentTime">
      <summary>
            The ParentAtCurrentTime draw mode.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode" />
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtCurrentTime.Mode">
      <summary>
            Gets the enumeration value identifying this draw mode.
            </summary>
      <value>
            The mode.
            </value>
      <remarks>
            This is used by the UI to display info and select modes...would be nice to refactor so it isn't necessary.
            </remarks>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtCurrentTime.UpdateReferencePerPoint">
      <summary>
            Gets a value indicating whether the draw mode is updated for every point, otherwise <c>false</c> if it is updated once per orbit.
            </summary>
      <value>
        <c>true</c> if [update reference per point]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtCurrentTime.GetReferenceNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtCurrentTime.UpdateReferenceNode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the anchor using the supplied information according to the current draw mode.
            Note: Not all params will necessarily be used for all draw modes.  They're all sent so we have one main method which all calls
            funnel into regardless of draw mode.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointTime">The point time.</param>
      <exception cref="T:System.InvalidOperationException">Thrown when called while an invalid draw mode is set.</exception>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtPointTime">
      <summary>
            Theh ParentAtPointTime draw mode.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode" />
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtPointTime.Mode">
      <summary>
            Gets the enumeration value identifying this draw mode.
            </summary>
      <value>
            The mode.
            </value>
      <remarks>
            This is used by the UI to display info and select modes...would be nice to refactor so it isn't necessary.
            </remarks>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtPointTime.UpdateReferencePerPoint">
      <summary>
            Gets a value indicating whether the draw mode is updated for every point, otherwise <c>false</c> if it is updated once per orbit.
            </summary>
      <value>
        <c>true</c> if [update reference per point]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtPointTime.GetReferenceNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtPointTime.UpdateReferenceNode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node using the supplied information according to the current draw mode.
            Note: Not all params will necessarily be used for all draw modes.  They're all sent so we have one main method which all calls
            funnel into regardless of draw mode.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointTime">The point time.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtReferenceTime">
      <summary>
            The ParentAtReferenceTime draw mode.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode" />
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtReferenceTime.Mode">
      <summary>
            Gets the enumeration value identifying this draw mode.
            </summary>
      <value>
            The mode.
            </value>
      <remarks>
            This is used by the UI to display info and select modes...would be nice to refactor so it isn't necessary.
            </remarks>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtReferenceTime.UpdateReferencePerPoint">
      <summary>
            Gets a value indicating whether the draw mode is updated for every point, otherwise <c>false</c> if it is updated once per orbit.
            </summary>
      <value>
        <c>true</c> if [update reference per point]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtReferenceTime.GetReferenceNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.ParentAtReferenceTime.UpdateReferenceNode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node.
            </summary>
      <param name="refnfo">The refnfo.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="pointTime">The point time.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.SiblingAtPointTime">
      <summary>
            The SiblingAtPointTime draw mode.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawMode" />
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.SiblingAtPointTime.Mode">
      <summary>
            Gets the enumeration value identifying this draw mode.
            </summary>
      <value>
            The mode.
            </value>
      <remarks>
            This is used by the UI to display info and select modes...would be nice to refactor so it isn't necessary.
            </remarks>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.DrawModes.SiblingAtPointTime.UpdateReferencePerPoint">
      <summary>
            Gets a value indicating whether the draw mode is updated for every point, otherwise <c>false</c> if it is updated once per orbit.
            </summary>
      <value>
        <c>true</c> if [update reference per point]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.SiblingAtPointTime.GetReferenceNode(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Gets the reference node.
            </summary>
      <param name="orbitInfo">The orbit information.</param>
      <returns>The reference node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.DrawModes.SiblingAtPointTime.UpdateReferenceNode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double)">
      <summary>
            Updates the reference node using the supplied information according to the current draw mode.
            Note: Not all params will necessarily be used for all draw modes.  They're all sent so we have one main method which all calls
            funnel into regardless of draw mode.
            </summary>
      <param name="refInfo">The reference information.</param>
      <param name="orbitInfo">The point orbit information.</param>
      <param name="pointTime">The point time.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Interfaces.IOrbitLineManager">
      <summary>
            The interface to the orbit line manager.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Interfaces.IOrbitLineManager.Drawmode">
      <summary>
            Gets the orbit draw mode.
            </summary>
      <value>
            The orbit draw mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.Interfaces.IOrbitLineManager.ShowApsidesInfo">
      <summary>
            Gets a value indicating whether to show apsides information.
            </summary>
      <value>
        <c>true</c> if apsides information should be shown; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.Interfaces.IOrbitLineManager.SetOrbitDrawMode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType,System.Boolean)">
      <summary>
            Sets the orbit draw mode.
            </summary>
      <param name="newMode">The new mode.</param>
      <param name="craftOnly">if set to <c>true</c> [craft only].</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.MapCraftOrbitLine">
      <summary>
            The craft's orbit line (its current line, maneuver nodes, soi encounters).
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine" />
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapCraftOrbitLine.Create(ModApi.Flight.Sim.IOrbitNode,ModApi.State.MapView.MapItemData,UnityEngine.Color,System.String,UnityEngine.Camera,UnityEngine.Material)">
      <summary>
            Creates the specified orbit.
            </summary>
      <param name="node">The node.</param>
      <param name="data">The data to use for this orbit line.</param>
      <param name="color">The color.</param>
      <param name="name">The name.</param>
      <param name="mapCamera">The map camera.</param>
      <param name="lineMaterial">The line material.</param>
      <returns>
            The MapOrbit.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapCraftOrbitLine.OnNewNextNode">
      <summary>
            Called when this orbit line's next node has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapCraftOrbitLine.OnLineCreated(Vectrosity.VectorLine)">
      <summary>
            Called when the vectrocity line has been created.
            </summary>
      <param name="vectrocityLine">The vectrocity line.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapCraftOrbitLine.UpdateEndColor">
      <summary>
            Updates the end color.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo">
      <summary>
            Encapsulates all of the orbit related information relevant to drawing and manipulating orbit's, maneuver nodes, and soi encounters for the MapView.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo._chainNodeList">
      <summary>
            The chain node list
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo._chainNodeScript">
      <summary>
            The chain node script associated with this MapOrbitInfo instance.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo._craftnode">
      <summary>
            The craftnode associated with this orbit info, or null if it isn't a craft node.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo._maneuverNodeScript">
      <summary>
            The maneuver node script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo._orbitLine">
      <summary>
            The orbit line.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo._planetIntersectionPointCache">
      <summary>
            The IOrbitPoint cache for PlanetIntersection property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo._playerCraftProvider">
      <summary>
            The player craft provider
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.#ctor(ModApi.Flight.Sim.IOrbitNode,UnityEngine.Camera,Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo" /> class.
            </summary>
      <param name="orbitNode">The orbit node.</param>
      <param name="mapCamera">The map camera.</param>
      <param name="orbitLine">The orbit line.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.OrbitInfoCreator">
      <summary>
            Delegate used to create a MapOrbitInfo or a subclass of one.
            </summary>
      <param name="orbitNode">The orbit node.</param>
      <param name="mapCamera">The map camera.</param>
      <param name="orbitLine">The orbit line.</param>
      <param name="chainNodeScript">The chain node script.</param>
      <returns>
            The MapOrbitInfo created.
            </returns>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.ApoapsisOnVisibleOrbit">
      <summary>
            Gets a value indicating whether the apoapsis is on a portion of the orbit which is currently visible (between start/end true anomalies).
            </summary>
      <value>
        <c>true</c> if the apoapsis is on a portion of the orbit which is currently visible (between start/end true anomalies).; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.ChainNode">
      <summary>
            Gets the chain node.
            </summary>
      <value>
            The chain node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.CoordinateConverter">
      <summary>
            Gets the map view script.
            </summary>
      <value>
            The map view script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.DrawModeProvider">
      <summary>
            Gets the draw mode provider.
            </summary>
      <value>
            The draw mode provider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.EndTime">
      <summary>
            Gets the end time.
            </summary>
      <value>
            The end time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.EndTimeExcludingPlanetIntersection">
      <summary>
            Gets the end time excluding planet intersection.
            </summary>
      <value>
            The end time excluding planet intersection.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.Id">
      <summary>
            Gets the identifier.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.InContactWithPlanet">
      <summary>
            Gets a value indicating whether the node is in contact with a planet.
            </summary>
      <value>
        <c>true</c> if the node is in contact with a planet; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.IsCurrentPlayer">
      <summary>
            Gets a value indicating whether this orbit info belongs to the current player craft.
            </summary>
      <value>
        <c>true</c> if this instance belongs to the current player; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.IsPartOfPlayerChain">
      <summary>
            Gets a value indicating whether this instance is part of player's chain.
            </summary>
      <value>
        <c>true</c> if this instance is part of the player's chain; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.ManeuverNode">
      <summary>
            Gets the maneuver node.
            </summary>
      <value>
            The maneuver node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.OrbitColor">
      <summary>
            Gets the color of the orbit.
            </summary>
      <value>
            The color of the orbit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.OrbitInteractionEventRecipient">
      <summary>
            Gets the orbit interaction event recipient.
            </summary>
      <value>
            The orbit interaction event recipient.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.OrbitNode">
      <summary>
            Gets the orbit node associated with this MapOrbitInfo.
            </summary>
      <value>
            The orbit node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.PeriapsisOnVisibleOrbit">
      <summary>
            Gets a value indicating whether the periapsis is on a portion of the orbit which is currently visible (between start/end true anomalies).
            </summary>
      <value>
        <c>true</c> if the periapsis is on a portion of the orbit which is currently visible (between start/end true anomalies).; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.PlanetIntersection">
      <summary>
            Gets the planet intersection orbit point if there is one, otherwise <c>null</c> if there is no planet intersection.
            </summary>
      <value>
            The planet intersection orbit point if there is one, otherwise <c>null</c> if there is no planet intersection.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.PlanetIntersectionOnVisibleOrbit">
      <summary>
            Gets a value indicating whether [planet intersection on visible orbit].
            </summary>
      <value>
        <c>true</c> if [planet intersection on visible orbit]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.RootTransform">
      <summary>
            Gets the root transform.
            </summary>
      <value>
            The root transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.Selected">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo" /> is selected.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.StartTime">
      <summary>
            Gets the start time.
            </summary>
      <value>
            The start time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.UiCeterOffset">
      <summary>
            Gets the offset from the center that UI elements should start at to be clear of any node-related UI elements.
            </summary>
      <value>
            The offset from the center that UI elements should start at to be clear of any node-related UI elements.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.ValidTrueAnomalyEnd">
      <summary>
            Gets the end point of the valid true anomaly range for this instance.
            </summary>
      <value>
            The end point of the valid true anomaly range for this instance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.ValidTrueAnomalyEndExcludingPlanetIntersection">
      <summary>
            Gets the valid true anomaly end value excluding planet intersection.  ie, our end nu as if we didn't have any planet intersections.
            </summary>
      <value>
            The valid true anomaly end value excluding planet intersection. ie, our end nu as if we didn't have any planet intersections.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.ValidTrueAnomalyStart">
      <summary>
            Gets the start point of the valid true anomaly range for this instance.
            </summary>
      <value>
            The start point of the valid true anomaly range for this instance.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.DestroyOrbitLine">
      <summary>
            Destroys the orbit line.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.DisableOrbitLine">
      <summary>
            Disables the orbit line.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.EnableOrbitLine">
      <summary>
            Enables the orbit line.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.IsAssociatedWith(Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine)">
      <summary>
            Determines whether the map orbit info is associated with the specified orbit line.
            </summary>
      <param name="orbitLine">The orbit line.</param>
      <returns>
        <c>true</c> if is associated with the specified orbit line; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.IsAssociatedWith(Assets.Scripts.Flight.MapView.UI.ICameraFocusable)">
      <summary>
            Determines whether this orbit info is associated with the specified <see cref="T:Assets.Scripts.Flight.MapView.UI.ICameraFocusable" /> object.
            </summary>
      <param name="cameraFocusable">The target.</param>
      <returns>
        <c>true</c> if this orbit info is associated with the specified <see cref="T:Assets.Scripts.Flight.MapView.UI.ICameraFocusable" /> object; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.RemoveIcon(UnityEngine.UI.Image)">
      <summary>
            Removes the icon.
            </summary>
      <param name="icon">The icon.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.SetChainNodeInfo(Assets.Scripts.Flight.MapView.Interfaces.Contexts.ICraftContext,Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Sets the chain node information for this instance.  Not all have chain node info.
            </summary>
      <param name="craftContext">The craft context.</param>
      <param name="orbitChainNodeScript">The orbit chain node script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.SetPlanetIntersection(ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Sets the planet intersection orbit point if there is one, otherwise <c>null</c> if there is no planet intersection.
            </summary>
      <param name="planetIntersection">The planet intersection point, <c>null</c> if there is no planet intersection.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.UpdateOrbit(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Updates the orbit.
            </summary>
      <param name="newOrbit">The orbit.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.UpdateUiComponentFromPoint(UnityEngine.Component,ModApi.Flight.Sim.IOrbitPoint,System.Boolean)">
      <summary>
            Updates the icon from point.
            </summary>
      <param name="component">The icon.</param>
      <param name="point">The point.</param>
      <param name="autoDisable">if set to <c>true</c> [automatic disable].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.OnNewNextNode">
      <summary>
            Called when we have a new next node...one was just added after us.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.SetOrbitLine(Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine)">
      <summary>
            Sets the orbit line.
            </summary>
      <param name="mapOrbitLine">The map orbit line.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.SetOrbitLineColor(UnityEngine.Color)">
      <summary>
            Sets the color of the orbit line.
            </summary>
      <param name="orbitColor">Color of the orbit.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo.UpdateUiComponentFromCurrentPosition(UnityEngine.Component)">
      <summary>
            Updates the icon from current position.
            </summary>
      <param name="component">The icon.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.IOrbitInteractionEventRecipient">
      <summary>
            Interface to provide access to event handler methods w/o a hard reference to MapOrbitLine.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.IOrbitInteractionEventRecipient.OnHoverEnter">
      <summary>
            Gets the on hover enter.
            </summary>
      <value>
            The on hover enter.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.IOrbitInteractionEventRecipient.OnHoverExit">
      <summary>
            Gets the on hover exit.
            </summary>
      <value>
            The on hover exit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.IOrbitInteractionEventRecipient.OnHoverStay">
      <summary>
            Gets the on hover stay.
            </summary>
      <value>
            The on hover stay.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine">
      <summary>
            Orbit on the map view.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Items.MapItem" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.UI.ICameraFocusable" />
      <seealso cref="T:Assets.Scripts.Flight.MapView.Orbits.IOrbitInteractionEventRecipient" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OrbitLineSegmentsDefault">
      <summary>
            The orbit line segments default
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._apoapsisIcon">
      <summary>
            The apoapsis icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._apoDistanceText">
      <summary>
            The apo distance text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._ascendingNodeIcon">
      <summary>
            The periapsis icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._cameraFocusableDestroyed">
      <summary>
            The camera focusable destroyed
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._cameraTarget">
      <summary>
            The camera target
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._debugEnabled">
      <summary>
            Variable used mark an orbit as having debugging enabled to allow me to write/check debug info per orbit.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._descendingNodeIcon">
      <summary>
            The periapsis icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._drawModeReferenceInfo">
      <summary>
            The draw mode reference point information
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._forceUpdateOrbitLine">
      <summary>
            Property to allow forcing this orbit line to be updated via the inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._isSharedMaterial">
      <summary>
            If set to <c>true</c> the material is shared and should not be deleted.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._lineManager">
      <summary>
            The line manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._lineMaterial">
      <summary>
            The animated shader material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._maneuverNodeEventsProvider">
      <summary>
            The maneuver node events provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._navigationTargetProvider">
      <summary>
            The navigation target provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._options">
      <summary>
            The map options.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._orbitChanging">
      <summary>
            The orbit changing
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._orbitLineRenderer">
      <summary>
            The orbit line renderer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._orbitPointSet">
      <summary>
            The orbit point set.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._periapsisIcon">
      <summary>
            The periapsis icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._periDistanceText">
      <summary>
            The peri distance text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._planetIntersectionIcon">
      <summary>
            The planet intersection icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._playerCraft">
      <summary>
            The player craft provider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._scaledLocalOrbitPointsCache">
      <summary>
            The orbit points with local positions which have been scaled to MapView size.  It is in a kind of "hybrid" state between
            an orbit position (since it isn't floated) and MapView (since it is scaled).
            </summary>
      <remarks>
            1. Reduces the number of math operations when repositioning orbits which don't change orbital params often, or at all (like the planets).
            2. We could use Vectrocity's point set, but we'd have to store what the parent's position/floating origin offset were at the time the points were created.
               Then we'd have to subtract those out (per point) before adding the changed values in (per point).  It would be slower, but wouldn't require this point cache (less memory).
            3. It might be worth investigating if Vectrocity now supports lines whose transform can be moved away from the origin.  If so the orbit's transform
               could just be moved around w/o worrying about all this...but I'm sure Vectrocity does it to reduce math operations, so it would probably be a wash
               performance-wise, although would clean our code up.  It actually might be slower if to support it, Vectrocity required an add/subtract per-point every frame as
               a result (to move it back to the origin), even if the line didn't change.
            </remarks>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._showApoapsis">
      <summary>
            Indicates whether the apoapsis icon is showing.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._showPeriapsis">
      <summary>
            Indicates whether the periapsis icon is showing.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._targetAscendingNodeIcon">
      <summary>
            The target ascending node icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._targetDescendingNodeIcon">
      <summary>
            The target descending node icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine._vectrocityLine">
      <summary>
            The vectrocity line
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Destroyed">
      <summary>
            Occurs when this item has been destroyed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ApoapsisOnVisibleOrbit">
      <summary>
            Gets a value indicating whether the apoapsis is on a portion of the orbit which is currently visible (between start/end true anomalies).
            </summary>
      <value>
        <c>true</c> if the apoapsis is on a portion of the orbit which is currently visible (between start/end true anomalies).; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#AssociatedPlanet">
      <summary>
            Gets the planet associated w/this item.
            </summary>
      <value>
            The planet associated w/this item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugEnabled">
      <summary>
            Gets or sets a value indicating whether to mark an orbit as having debugging enabled to allow me to write/check debug info per orbit.
            </summary>
      <value>
        <c>true</c> if an orbit has debugging enabled to allow me to write/check debug info per orbit.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfo">
      <summary>
            Gets the debug information
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DrawFullOrbit">
      <summary>
            Gets or sets a value indicating whether [draw full orbit].
            </summary>
      <value>
        <c>true</c> if [draw full orbit]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#FocusByClick">
      <summary>
            Gets a value indicating whether camera focus should be set when clicked.
            </summary>
      <value>
        <c>true</c> if camera focus should be set when clicked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Id">
      <summary>
            Gets the unique MapOrbitLine identifier.
            </summary>
      <value>
            The unique MapOrbitLine identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.IsDrawing">
      <summary>
            Gets a value indicating whether this instance is drawing.
            </summary>
      <value>
        <c>true</c> if this instance is drawing; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.LineMaterial">
      <summary>
            Gets the line material.
            </summary>
      <value>
            The line material.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.MapPosition">
      <summary>
            Gets the map position.
            </summary>
      <value>
            The map position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#MinZoomDistance">
      <summary>
            Gets the minimum distance that the camera should zoom on this position.
            </summary>
      <value>
            The minimum distance that the camera should zoom on this position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Assets#Scripts#Flight#MapView#Orbits#IOrbitInteractionEventRecipient#OnHoverEnter">
      <summary>
            Gets the on hover enter.
            </summary>
      <value>
            The on hover enter.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Assets#Scripts#Flight#MapView#Orbits#IOrbitInteractionEventRecipient#OnHoverExit">
      <summary>
            Gets the on hover exit.
            </summary>
      <value>
            The on hover exit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Assets#Scripts#Flight#MapView#Orbits#IOrbitInteractionEventRecipient#OnHoverStay">
      <summary>
            Gets the on hover stay.
            </summary>
      <value>
            The on hover stay.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OrbitHoveredWithDelay">
      <summary>
            Gets a value indicating whether the orbit is being hovered for longer than a short delay.
            </summary>
      <value>
        <c>true</c> if the orbit is being hovered for longer than a short delay.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OrbitLineSegments">
      <summary>
            Gets the orbit line segments.
            </summary>
      <value>
            The orbit line segments.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.PeriapsisOnVisibleOrbit">
      <summary>
            Gets a value indicating whether the periapsis is on a portion of the orbit which is currently visible (between start/end true anomalies).
            </summary>
      <value>
        <c>true</c> if the periapsis is on a portion of the orbit which is currently visible (between start/end true anomalies).; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.PlanetIntersectionOnVisibleOrbit">
      <summary>
            Gets a value indicating whether [planet intersection on visible orbit].
            </summary>
      <value>
        <c>true</c> if [planet intersection on visible orbit]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Assets#Scripts#Flight#MapView#UI#ICameraFocusable#Position">
      <summary>
            Gets the position the camera should focus on, in map view coordinates.
            </summary>
      <value>
            The position the camera should focus on, in map view coordinates.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ShowApoapsisIcon">
      <summary>
            Gets a value indicating whether the apoapsis icon is showing.
            </summary>
      <value>
        <c>true</c> if the apoapsis icon is showing; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ShowApoapsisInfoText">
      <summary>
            Gets a value indicating whether to show apoapsis information text.
            </summary>
      <value>
        <c>true</c> if to show apoapsis information text; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ShowApsidesInfoText">
      <summary>
            Gets a value indicating whether [show apsides information text].
            </summary>
      <value>
        <c>true</c> if [show apsides information text]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ShowAscendingDescendingNodeIcons">
      <summary>
            Gets a value indicating whether [show ascending descending node icon].
            </summary>
      <value>
        <c>true</c> if [show ascending descending node icon]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ShowPeriapsisIcon">
      <summary>
            Gets a value indicating whether the peri/apoapsis icons are showing.
            </summary>
      <value>
        <c>true</c> if the peri/apoapsis icons are showing; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ShowPeriapsisInfoText">
      <summary>
            Gets a value indicating whether to show periapsis information text.
            </summary>
      <value>
        <c>true</c> if to show periapsis information text; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ShowPlanetIntersectionIcon">
      <summary>
            Gets a value indicating whether to show the planet intersection icon.
            </summary>
      <value>
        <c>true</c> if to show the planet intersection icon; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ShowTargetAscendingDescNodeIcons">
      <summary>
            Gets a value indicating whether to show ascending/desc node icons with reference to the target.
            </summary>
      <value>
        <c>true</c> if to show ascending/desc node icons with reference to the target.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Data">
      <summary>
            Gets the data.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Create(ModApi.Flight.Sim.IOrbitNode,ModApi.State.MapView.MapItemData,UnityEngine.Color,System.String,UnityEngine.Camera,UnityEngine.Material,System.Boolean)">
      <summary>
            Creates the specified orbit.
            </summary>
      <param name="node">The node.</param>
      <param name="data">The data to use for this orbit line.</param>
      <param name="color">The color.</param>
      <param name="name">The name.</param>
      <param name="mapCamera">The map camera.</param>
      <param name="lineMaterial">The line material.</param>
      <param name="isSharedMaterial">If set to <c>true</c> the material is shared and should not be deleted.</param>
      <returns>
            The MapOrbit.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.RepositionOrbitLine(System.Collections.Generic.List{UnityEngine.Vector3d},Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,Vectrosity.VectorLine,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter)">
      <summary>
            Repositions the current orbit line...keeps the same orbital parameters (shape).
            </summary>
      <param name="scaledOrbitPonitsCache">The scaled orbit ponits cache.</param>
      <param name="drawModeProvider">The draw mode provider.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="orbitLine">The orbit line.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.UpdateLine(Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine,Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider,Assets.Scripts.Flight.MapView.Orbits.DrawModes.DrawModeReferenceInfo@,ModApi.Flight.Sim.IOrbitPointSet@,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider,System.Collections.Generic.List{UnityEngine.Vector3d}@,UnityEngine.Renderer@)">
      <summary>
            Updates the orbit line using the supplied orbit data.
            Note: This should be called when the orbital parameters change, not simply when the orbit needs moved (use RepositionOrbitLine).
            </summary>
      <param name="orbitLine">The orbit line.</param>
      <param name="drawModeProvider">The draw mode provider.</param>
      <param name="drawModeReferenceInfo">The draw mode reference information.</param>
      <param name="orbitPointSet">The orbit point set.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="containerProvider">The container provider.</param>
      <param name="scaledPointsCache">The scaled points cache.</param>
      <param name="lineRenderer">The line renderer.</param>
      <exception cref="T:System.InvalidOperationException">Thrown when called when an unsupported draw mode is set.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Destroy">
      <summary>
            Destroys this MapItem.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnAfterCameraPositioned">
      <summary>
            Called each frame after the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnBeforeCameraPositioned">
      <summary>
            Called each frame before the camera has been positioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnNewNextNode">
      <summary>
            Called when we have a new next node...one was just added after us.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.RegisterIcon(UnityEngine.UI.Image)">
      <summary>
            Registers the icon.
            </summary>
      <param name="icon">The icon.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.RemoveIcon(UnityEngine.UI.Image)">
      <summary>
            Removes the icon.
            </summary>
      <param name="icon">The icon.</param>
      <exception cref="T:System.NotImplementedException">Not implemented</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.RepositionOrbitLine">
      <summary>
            Repositions the orbit line.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.SetDrawingAllowed(System.Boolean)">
      <summary>
            Tells the orbit if drawing should be allowed.  This does not necessarily display the orbit line as the line might be disabled via user settings.
            </summary>
      <param name="allowed">if set to <c>true</c> drawing of the orbit line is allowed.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.SetManeuverNodeEventsProvider(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.Interfaces.IManeuverNodeEventsProvider)">
      <summary>
            Sets the maneuver node events provider.
            </summary>
      <param name="maneuverNodeEventsProvider">The maneuver node events provider.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.UpdateLine">
      <summary>
            If enabled, updates the orbit line with the current orbit data.
            Note: This should be called when the orbital parameters change, not simply when the orbit needs moved (use RepositionOrbitLine).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.UpdateUiComponentFromCurrentPosition(UnityEngine.Component,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo)">
      <summary>
            Updates the icon from current position.
            </summary>
      <param name="component">The icon.</param>
      <param name="orbitInfo">The orbit information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.UpdateUiComponentFromPoint(UnityEngine.Component,ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Updates the icon from point.
            </summary>
      <param name="component">The component.</param>
      <param name="point">The point.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Disable">
      <summary>
            Disables the orbit line.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Enable">
      <summary>
            Enables the orbit line.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.SetColor(UnityEngine.Color)">
      <summary>
            Sets the color.
            </summary>
      <param name="color">The color.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Create``1(ModApi.Flight.Sim.IOrbitNode,ModApi.State.MapView.MapItemData,UnityEngine.Color,System.String,UnityEngine.Camera,UnityEngine.Material,System.Boolean)">
      <summary>
            Creates the specified orbit.
            </summary>
      <typeparam name="T">The MapOrbit type</typeparam>
      <param name="node">The node.</param>
      <param name="data">The data to use for this orbit line.</param>
      <param name="color">The color.</param>
      <param name="name">The name.</param>
      <param name="mapCamera">The map camera.</param>
      <param name="lineMaterial">The line material.</param>
      <param name="isSharedMaterial">If set to <c>true</c> the material is shared and should not be deleted.</param>
      <returns>
            The MapOrbit.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.Initialize(ModApi.State.MapView.MapItemData,UnityEngine.Color,UnityEngine.Material,System.Boolean)">
      <summary>
            Initializes the specified orbit.
            </summary>
      <param name="data">The data to use for this orbit line.</param>
      <param name="color">The color.</param>
      <param name="lineMaterial">The line material.</param>
      <param name="isSharedMaterial">If set to <c>true</c> the material is shared and should not be deleted.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnDisable">
      <summary>
            Called when the behaviour is disabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnEnable">
      <summary>
            Called when the behaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnLineCreated(Vectrosity.VectorLine)">
      <summary>
            Called when the vectrocity line has been created.
            </summary>
      <param name="vectrocityLine">The vectrocity line.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.CreateLine(UnityEngine.Transform,UnityEngine.Color,System.String,System.Int32)">
      <summary>
            Creates the line.
            </summary>
      <param name="parent">The parent.</param>
      <param name="color">The color.</param>
      <param name="name">The name.</param>
      <param name="layer">The layer.</param>
      <returns>
            The vectrocity line.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DuplicateParentSimNodes(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Duplicates the parent sim nodes.
            </summary>
      <param name="top">The top.</param>
      <returns>The duplicate parent node as a sim node.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.ShouldUiComponentBeEnabled(System.Double,System.Double,System.Double)">
      <summary>
            Determines whether the UI component should be enabled.
            </summary>
      <param name="trueAnomalyOfIcon">The true anomaly of icon.</param>
      <param name="startNu">The start nu.</param>
      <param name="endNu">The end nu.</param>
      <returns>
        <c>true</c> if the UI component should be enabled, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.UpdateGetPointsParams(Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Boolean,System.Double@)">
      <summary>
            Updates the parameters to be passed to a call to OrbitMath.GetPoints().
            </summary>
      <param name="drawmodeProvider">The drawmode provider.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="fullOrbit">if set to <c>true</c> the full orbit is desired, otherwise just the currently valid portion of it.</param>
      <param name="endNu">The end nu to use for a call to OrbitMath.GetPoints().</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnDataShowOrbitLineChanged(System.Boolean)">
      <summary>
            Called when the ShowOrbitLine data setting has changed.
            </summary>
      <param name="shouldDraw">If set to <c>true</c> then the orbit line should be drawn.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnHoverEnter(Assets.Scripts.Flight.MapView.OrbitInteractionScript,Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Called when [hover enter].
            </summary>
      <param name="source">The source.</param>
      <param name="pointInfo">The point information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnHoverExit(Assets.Scripts.Flight.MapView.OrbitInteractionScript,Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Called when [hover exit].
            </summary>
      <param name="source">The source.</param>
      <param name="pointInfo">The point information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnHoverStay(Assets.Scripts.Flight.MapView.OrbitInteractionScript,Assets.Scripts.Flight.MapView.OrbitInteractionScript.OrbitCursorInfo)">
      <summary>
            Called when [hover stay].
            </summary>
      <param name="source">The source.</param>
      <param name="pointInfo">The point information.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnManeuverNodeAdjustmentChangeBegin(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript,ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called when [maneuver node adjustment change begin].
            </summary>
      <param name="source">The source.</param>
      <param name="updatedOrbit">The updated orbit.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnManeuverNodeAdjustmentChangeEnd(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript,ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called when [maneuver node adjustment change end].
            </summary>
      <param name="source">The source.</param>
      <param name="updatedOrbit">The updated orbit.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.OnManeuverNodeAdjustmentChanging(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.ManeuverNodeScript,ModApi.Flight.Sim.IOrbit)">
      <summary>
            Called when a maneuver node adjustment is occurring.
            </summary>
      <param name="source">The source maneuver node.</param>
      <param name="updatedOrbit">The updated orbit.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.SetIsDrawing(System.Boolean)">
      <summary>
            Sets whether the orbit line is drawing, or not.
            </summary>
      <param name="drawing">If set to <c>true</c> the line will be drawn, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.UpdateEventSubscriptions(System.Boolean)">
      <summary>
            Updates the event subscriptions.
            </summary>
      <param name="subscribe">if set to <c>true</c> events are subscribed to, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.UpdateIcons(System.Boolean)">
      <summary>
            Updates the icons.
            </summary>
      <param name="canShowGlobal">If set to <c>true</c> the icons may show, if their conditions are met, if <c>false</c> then all icons should hide.</param>
      <exception cref="T:System.InvalidOperationException">Thrown when called while an invalid draw mode is set.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.UpdateLine(System.Boolean)">
      <summary>
            If enabled (or forceUpdate is <c>true</c>), updates the orbit line with the current orbit data.
            Note: This should be called when the orbital parameters change, not simply when the orbit needs moved (use RepositionOrbitLine).
            </summary>
      <param name="forceUpdate">if set to <c>true</c> an updated should be forced even if the line is disabled.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.UpdateText(System.Boolean)">
      <summary>
            Updates the UI.
            </summary>
      <param name="canShowGlobal">If set to <c>true</c> the icons may show, if their conditions are met, if <c>false</c> then all icons should hide.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType">
      <summary>
            Debug information related to MapOrbitLine
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.PointsInfo">
      <summary>
            The points information
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo">
      <summary>
            GetPoints data from the last call.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo.EndOverride">
      <summary>
            The end override
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo.MaxDist">
      <summary>
            The maximum dist
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo.MinDist">
      <summary>
            The minimum dist
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo.NuEnd">
      <summary>
            The nu end
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo.NuStart">
      <summary>
            The nu start
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo.Orbit">
      <summary>
            The orbit
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo.Resolution">
      <summary>
            The resolution
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo.#ctor(ModApi.Flight.Sim.IOrbit,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLine.DebugInfoType.GetPointsInfo" /> struct.
            </summary>
      <param name="orbit">The orbit.</param>
      <param name="res">The resource.</param>
      <param name="nuStart">The nu start.</param>
      <param name="nuEnd">The nu end.</param>
      <param name="minDist">The minimum dist.</param>
      <param name="maxDist">The maximum dist.</param>
      <param name="endOverride">if set to <c>true</c> [end override].</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript">
            REFAC_PT: MapOrbitLineManager doesn't appear to be doing that much.
            <summary>
            Takes care of higher-level stuff regarding the orbit lines...like initiating a draw mode switch.
            </summary><seealso cref="T:UnityEngine.MonoBehaviour" /></member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript._craftOnlyWhenSwitchingModes">
      <summary>
            The craft only when switching modes
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript._infoPanel">
      <summary>
            The information panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript._orbitLineManager">
      <summary>
            The orbit line manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript._showApsidesInfo">
      <summary>
            The show apsides information
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript.Assets#Scripts#Flight#MapView#Orbits#Interfaces#IOrbitLineManager#Drawmode">
      <summary>
            Gets the orbit draw mode.
            </summary>
      <value>
            The orbit draw mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript.Assets#Scripts#Flight#MapView#Orbits#Interfaces#IOrbitLineManager#ShowApsidesInfo">
      <summary>
            Gets a value indicating whether [show apsides information].
            </summary>
      <value>
        <c>true</c> if [show apsides information]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript.MapViewScript">
      <summary>
            Gets or sets the map view script.
            </summary>
      <value>
            The map view script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript.Create(Assets.Scripts.Flight.MapView.MapViewScript)">
      <summary>
            Creates the specified map view script.
            </summary>
      <param name="mapViewScript">The map view script.</param>
      <returns>The specified map view script.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript.Assets#Scripts#Flight#MapView#Orbits#Interfaces#IOrbitLineManager#SetOrbitDrawMode(Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType,System.Boolean)">
      <summary>
            Switches the draw mode.
            </summary>
      <param name="newMode">The new mode.</param>
      <param name="craftOnly">if set to <c>true</c> [craft only].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript.Initialize(Assets.Scripts.Flight.MapView.MapViewScript)">
      <summary>
            Initializes the specified map view script.
            </summary>
      <param name="mapViewScript">The map view script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Orbits.MapOrbitLineManagerScript.OnDestroy">
      <summary>
            Called when this object is being destroyed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Shaders.CraftOrbitShaderStyle">
      <summary>
            Defines the modes for the craft's shader.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.CraftOrbitShaderStyle.Whole">
      <summary>
            The mode where the line is colored by lerping between two colors across the entire orbit chain.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.CraftOrbitShaderStyle.Self">
      <summary>
            The mode where the line is colored by lerping between two colors across only the current sections.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragSubTypes">
      <summary>
            Shader frag sub-types
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragSubTypes.Default">
      <summary>
            The default
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragSubTypes.Alternate1">
      <summary>
            The alternate1
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragSubTypes.Alternate2">
      <summary>
            The alternate2
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragSubTypes.Alternate3">
      <summary>
            The alternate3
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragSubTypes.Debug">
      <summary>
            The debug
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragTypes">
      <summary>
            Shader frag types
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragTypes.Default">
      <summary>
            The default
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragTypes.Gray">
      <summary>
            The gray
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragTypes.AnimatedStripes">
      <summary>
            The animated stripes
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderFragTypes.Debug">
      <summary>
            The debug
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderVertTypes">
      <summary>
            Defines shader vert types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderVertTypes.Default">
      <summary>
            The default
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderVertTypes.Buldge">
      <summary>
            The buldge
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderVertTypes.MildlyWavy">
      <summary>
            The mildly wavy
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderVertTypes.HeavilyWavy">
      <summary>
            The heavily wavy
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Orbits.Shaders.ShaderVertTypes.Debug">
      <summary>
            The debug
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript">
      <summary>
            Script for helping to display target info.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerEnterHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerExitHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerClickHandler" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.DistanceTextName">
      <summary>
            The distance text name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.DvTextName">
      <summary>
            The dv text name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.HoverContentsName">
      <summary>
            The hover contents name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.TimeTextName">
      <summary>
            The time text name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript._captured">
      <summary>
            The captured
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript._clicked">
      <summary>
            The clicked
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript._distanceText">
      <summary>
            The text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript._dvText">
      <summary>
            The dv text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript._hoverContents">
      <summary>
            The hover contents
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript._hovering">
      <summary>
            The hovering
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript._hoverStartTime">
      <summary>
            The hover start time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript._iconImage">
      <summary>
            The icon image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript._secondsInFutureText">
      <summary>
            The time text
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.CapturedIconColor">
      <summary>
            Gets the color of the captured icon.
            </summary>
      <value>
            The color of the captured icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.NotCapturedIconColor">
      <summary>
            Gets the color of the not captured icon.
            </summary>
      <value>
            The color of the not captured icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.AlwaysShowContents">
      <summary>
            Gets or sets a value indicating whether to always show detailed contents.
            </summary>
      <value>
        <c>true</c> if detailed contents should always be shown; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.CanvasGroup">
      <summary>
            Gets the canvas group.
            </summary>
      <value>
            The canvas group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.Captured">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript" /> is captured.
            </summary>
      <value>
        <c>true</c> if captured; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.DeltaVelocity">
      <summary>
            Gets or sets the delta velocity.
            </summary>
      <value>
            The delta velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.Distance">
      <summary>
            Gets or sets the distance.
            </summary>
      <value>
            The distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.SecondsInFuture">
      <summary>
            Gets or sets the seconds in the future when the encounter is predicted.
            </summary>
      <value>
            The time.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Use this callback to detect clicks.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.OnPointerEnter(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer enters.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.OnPointerExit(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer exits.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Targeting.TargetingManager">
      <summary>
            Responsible for setting targets and displaying targeting related information.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._canvas">
      <summary>
            The canvas for the targeting manager.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._chainNodeOverride">
      <summary>
            If set, we have an explicitly set override for what node is being used for targeting info.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._chainNodeSelection">
      <summary>
            The chain node selection interface.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._containerProvider">
      <summary>
            The container provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._coordinateConverter">
      <summary>
            The coordinate converter
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._craftUiInfo">
      <summary>
            The craft icons
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._enabled">
      <summary>
            Flag used to enable/disable targeting manager.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._itemRegistry">
      <summary>
            The item registry
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._lastClosest">
      <summary>
            When set, defines the start of the current target's period check for closest encounters. When not set, all periods will be checked (up to one period of the craft).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._navigationTarget">
      <summary>
            The navigation target
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._options">
      <summary>
            The options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._orbitInteractionScript">
      <summary>
            The orbit interaction script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._pinnedPoint">
      <summary>
            The pinned point
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._playerCraftProvider">
      <summary>
            The player craft provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._targetAtCursorUiInfo">
      <summary>
            The target at cursor position encounter script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._targetBoxIcon">
      <summary>
            The target box icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._targetIsSameNodeAsChainNodeParent">
      <summary>
            The target is same node as chain node parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._targetOrbitLineSettingBackup">
      <summary>
            The vale of the target's ShowOrbitLine setting.  Used to restore original value before being enabled while targeted.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.Targeting.TargetingManager._targetUiInfo">
      <summary>
            The planet icons
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.#ctor(Assets.Scripts.Flight.MapView.Interfaces.IPlayerCraftProvider,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,Assets.Scripts.Flight.MapView.Interfaces.IObjectContainerProvider,Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.Targeting.TargetingManager" /> class.
            </summary>
      <param name="playerCraftProvider">The player craft provider.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="containerProvider">The container provider.</param>
      <param name="itemRegistry">The item registry.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.TargetChangedHandler">
      <summary>
            Delegate to handle notifications when the target has changed.
            </summary>
      <param name="source">The targeting manager sending the notification.</param>
      <param name="newTarget">The new target.</param>
      <param name="oldTarget">The old target.</param>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.TargetChanged">
      <summary>
            Occurs when the map view target has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.ShowDebug">
      <summary>
            Gets or sets a value indicating whether to show orbit debug info.
            </summary>
      <value>
        <c>true</c> if to show orbit debug info; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.ChainNodeToGetTargetInfoFor">
      <summary>
            Gets the chain node that is being used to display target information for.
            </summary>
      <value>
            The chain node that is being used to display target information for.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.NavigationTarget">
      <summary>
            Gets the navigation target.
            </summary>
      <value>
            The navigation target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.Pinned">
      <summary>
            Gets a value indicating whether an orbital period for the target is pinned.  See SetPinned method for more info.
            </summary>
      <value>
        <c>true</c> if pinned; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.ShowEncounterInfo">
      <summary>
            Gets or sets a value indicating whether to show encounter information.
            </summary>
      <value>
        <c>true</c> if [show encounter information]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.IsProcessingTargetInformationFor(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Determines whether the navigation system is currently processing target information for the specified chainable orbit.
            </summary>
      <param name="chainableOrbit">The chainable orbit to see if target information is being processed for.</param>
      <returns>
        <c>true</c> if the navigation system is currently processing target information for the specified chainable orbit; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.IsValidTarget(Assets.Scripts.Flight.MapView.Items.ITargetableItem)">
      <summary>
            Determines whether the target is a is valid target for navigation.
            </summary>
      <param name="target">The target.</param>
      <returns>
        <c>true</c> if it is a valid target; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnAfterCameraRepositioned">
      <summary>
            Called after the camera has been repositioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnBeforeCameraRepositioned">
      <summary>
            Called before the camera has been repositioned.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.SelectDefaultNodeForTargetingInfo">
      <summary>
            Call to automatically select an appropriate node to display targeting information for.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.SetChainNodeOverride(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Sets the chain node override.
            </summary>
      <param name="chainNodeOverride">The chain node override.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.SetNavigationTarget(Assets.Scripts.Flight.MapView.Items.ITargetableItem)">
      <summary>
            Sets the navigation target.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.SetNavSphereTarget(ModApi.Flight.UI.INavSphereTarget)">
      <summary>
            Sets the nav sphere's target.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.SetPinned(System.Boolean)">
      <summary>
            Sets the pinned state, which is a value indicating whether an orbital period for the target is pinned, and we're only searching for closest encounters within that period.
            When it is set to <c>true</c>, the current closest encounter's orbital period for the target is used as the pinned period.
            This is used when a user is trying to dial in on a specific encounter and no-longer wants the closest encounter swapped out for a closer one.  They want to work w/the
            maneuver nodes to get a specific encounter.
            </summary>
      <param name="pinned">if set to <c>true</c> [pinned].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.CreateBall(UnityEngine.Transform,System.String,System.Int32,UnityEngine.Color,UnityEngine.Color)">
      <summary>
            Creates the ball.
            </summary>
      <param name="parent">The parent.</param>
      <param name="name">The name.</param>
      <param name="layer">The layer.</param>
      <param name="color">The color.</param>
      <param name="emissive">The emissive.</param>
      <returns>Creates a sphere.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.CreateTargetingIcon(UnityEngine.Canvas,Assets.Scripts.Flight.MapView.Items.ITargetableItem,System.Boolean,System.String)">
      <summary>
            Creates the targeting icon.
            </summary>
      <param name="canvas">The canvas.</param>
      <param name="targetableItem">The target-able item.</param>
      <param name="raycastTarget">If set to <c>true</c> the icon will have raycastTarget set to true and be clickable.</param>
      <param name="name">The name.</param>
      <returns>
            A new targeting icon.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.UpdateClosestEncounter(Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double,System.Double,System.Double,System.Double,System.Double,Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript,Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,Assets.Scripts.Flight.MapView.Interfaces.INavigationTargetProvider,Assets.Scripts.Flight.MapView.Interfaces.IItemRegistry,System.String)">
      <summary>
            Updates the closest encounter.
            </summary>
      <param name="craftOrbitInfo">The craft orbit information.</param>
      <param name="targetOrbitInfo">The target orbit information.</param>
      <param name="timeToStartSearch">The time to begin searching.  Usually the current time unles searching for encounters in future periods.</param>
      <param name="currentGameTime">The current game time.</param>
      <param name="localMinimaModifier">The local minima modifier.  <see cref="M:Assets.Scripts.Flight.Sim.OrbitAnalyser.GetClosestEncoutnerInfoRanged(ModApi.Flight.Sim.IOrbitNode,ModApi.Flight.Sim.IOrbitNode,System.Double,System.Double,System.Double,System.Double,System.String,Assets.Scripts.Flight.MapView.Options.Interfaces.IMapOptions)" /> for more info.</param>
      <param name="craftSoi">The craft soi.</param>
      <param name="targetSoi">The target soi.</param>
      <param name="craftUiInfoScript">The craft encoutner script.</param>
      <param name="targetUiInfoScript">The target ecnounter script.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="navigationTargetProvider">The navigation target provider.</param>
      <param name="itemRegistry">The item registry.</param>
      <param name="debugDescription">Set to <c>null</c> for normal operation.  If set, debug info will be shown and the description is used to make unique names for debug gizmos.</param>
      <returns>
            SoiEnterInfo of closest point.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.UpdateClosestEncounterIcons(Assets.Scripts.Flight.Sim.OrbitAnalyser.SoiEnterInfo,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,System.Double,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript,Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript)">
      <summary>
            Updates the closest encounter icons.
            </summary>
      <param name="closestPoint">The closest points.</param>
      <param name="craftOrbitInfo">The craft orbit information.</param>
      <param name="currentGameTime">The current game time.</param>
      <param name="targetOrbitInfo">The target orbit information.</param>
      <param name="craftEncoutnerScript">The craft encoutner script.</param>
      <param name="targetEcnounterScript">The target ecnounter script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnActiveCraftDestroyed">
      <summary>
            Called when the active craft has been destroyed...so the player is sitting w/o a "valid" craft, so the corresponding MapView componenets have been destroyed due to the craft's OnDestroy being
            called.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnChainNodeOrTargetChanged">
      <summary>
            Called when the chain node or target has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnChainNodeSelectionChanged(System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit})">
      <summary>
            Called when [chain node selection changed].
            </summary>
      <param name="chainNode">The chain node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnCraftChangedSoi(ModApi.Flight.Sim.IOrbitNode)">
      <summary>
            Called when the craft has changed soi.
            </summary>
      <param name="source">The source orbit node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnCraftDestroyed(ModApi.Flight.Sim.INode)">
      <summary>
            Called when the craft has been destroyed.
            </summary>
      <param name="node">The node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnCraftInitialized(Assets.Scripts.Flight.MapView.Items.MapPlayerCraft)">
      <summary>
            Called when the craft is initialized.
            </summary>
      <param name="initializedCraft">The initialized craft.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnItemClicked(System.Object,Assets.Scripts.Flight.MapView.Items.MapItem.ItemClickedEventArgs)">
      <summary>
            Called when any MapItem is clicked.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:Assets.Scripts.Flight.MapView.Items.MapItem.ItemClickedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnPlayerCraftChanged(Assets.Scripts.Flight.MapView.Items.MapPlayerCraft,Assets.Scripts.Flight.MapView.Items.MapPlayerCraft)">
      <summary>
            Called when the player craft has changed.
            </summary>
      <param name="newCraft">The new craft.</param>
      <param name="oldCraft">The old craft.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnTargetChanged(Assets.Scripts.Flight.MapView.Items.ITargetableItem,Assets.Scripts.Flight.MapView.Items.ITargetableItem)">
      <summary>
            Called when [target changed].
            </summary>
      <param name="newTarget">The new target.</param>
      <param name="oldTarget">The old target.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.OnTargetDestroyed(ModApi.Flight.Sim.INode)">
      <summary>
            Called when the navigation target has been destroyed.
            </summary>
      <param name="targetnode">The target node which was destroyed.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.SetNavigationTarget(Assets.Scripts.Flight.MapView.Items.ITargetableItem,ModApi.Flight.UI.INavSphereTarget)">
      <summary>
            Sets the navigation target.
            </summary>
      <param name="target">The target.</param>
      <param name="navSphereTarget">The nav sphere target.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.Targeting.TargetingManager.UpdatePredictedPositionsAtCursor(Assets.Scripts.Flight.MapView.Targeting.EncounterInfoScript)">
      <summary>
            Updates the predicted positions at cursor.
            </summary>
      <param name="targetAtCursorUiInfo">The target at cursor, EncounterInfoScript.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.ClickableGameObjectScript">
      <summary>
            This script just serves to identify which gameobject should handle click events when any of its children's colliders
            are clicked on.  All messages will funnel up to this gameobject, and then be sent to any behaviours which implement
            IDragHandler, IPointerClickHandler, etc...
            /// </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.ClickableGameObjectScript._selectable">
      <summary>
            The selectable
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.ClickableGameObjectScript.Selectable">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.UI.ClickableGameObjectScript" /> is selectable.
            </summary>
      <value>
        <c>true</c> if selectable; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Controllers.MapViewUiController">
      <summary>
            UI controller for the Map View.
            </summary>
      <seealso cref="T:UI.Xml.XmlLayoutController" />
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.MapViewUiController._searchPanel">
      <summary>
            The search panel
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.MapViewUiController.MapView">
      <summary>
            Gets the map view.
            </summary>
      <value>
            The map view.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.MapViewUiController.MapViewInspector">
      <summary>
            Gets the map view inspector.
            </summary>
      <value>
            The map view inspector.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.MapViewUiController.Create(UnityEngine.Transform,Assets.Scripts.Flight.MapView.MapViewScript)">
      <summary>
            Creates the map view UI controller.
            </summary>
      <param name="parent">The parent.</param>
      <param name="mapView">The map view.</param>
      <returns>
            The Map View UI controller.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.MapViewUiController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.MapViewUiController.OnSearchButtonClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the search button is clicked.
            </summary>
      <param name="button">The button.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel">
      <summary>
            Manages the search panel on the map view UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._cameraTarget">
      <summary>
            The camera target
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._contentRoot">
      <summary>
            The content root
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._itemRegistry">
      <summary>
            The item registry
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._items">
      <summary>
            The items
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._itemTemplate">
      <summary>
            The item template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._mapViewUi">
      <summary>
            The map view UI
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._panelElement">
      <summary>
            The search panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._rebuildRequired">
      <summary>
            The rebuild required
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._searchInput">
      <summary>
            The search input
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._selectedItem">
      <summary>
            The selected item
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel._visible">
      <summary>
            The visible flag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.#ctor(Assets.Scripts.Flight.MapView.UI.Controllers.MapViewUiController,UI.Xml.XmlElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel" /> class.
            </summary>
      <param name="mapViewUi">The map view UI.</param>
      <param name="panelElement">The panel element.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SelectedItem">
      <summary>
            Gets or sets the selected item.
            </summary>
      <value>
            The selected item.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.OnSearchButtonClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the search button is clicked.
            </summary>
      <param name="button">The button.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.AddElement(System.String,Assets.Scripts.Flight.MapView.Items.MapItem,System.Boolean)">
      <summary>
            Adds the element.
            </summary>
      <param name="name">The name.</param>
      <param name="mapItem">The map item.</param>
      <param name="allowRename">if set to <c>true</c> then renaming this item is allowed.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.FilterSearchItems">
      <summary>
            Filters the search items.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.OnItemClicked(Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem)">
      <summary>
            Called when the item is clicked.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.OnMapItemsChanged">
      <summary>
            Called when the map items have changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.OnRenameItemClicked(Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem)">
      <summary>
            Called when the rename item is clicked.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.OnSelectTarget(Assets.Scripts.Flight.MapView.UI.ICameraFocusable)">
      <summary>
            Called when the camera target has changed.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.RebuildSearchItems">
      <summary>
            Rebuilds the search items.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.RenameNode(Assets.Scripts.Flight.Sim.CraftNode,Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem,System.String)">
      <summary>
            Renames the node.
            </summary>
      <param name="node">The node.</param>
      <param name="item">The item.</param>
      <param name="inputText">The input text.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem">
      <summary>
            The search item.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem._selected">
      <summary>
            The selected
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem.AllowRename">
      <summary>
            Gets or sets a value indicating whether this item can be renamed.
            </summary>
      <value>
        <c>true</c> if this item can be renamed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem.Button">
      <summary>
            Gets or sets the button.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem.Element">
      <summary>
            Gets or sets the element.
            </summary>
      <value>
            The element.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem.MapItem">
      <summary>
            Gets or sets the map item.
            </summary>
      <value>
            The map item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem.NameElement">
      <summary>
            Gets or sets the name element.
            </summary>
      <value>
            The name element.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem.Selected">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem" /> is selected.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem.Target">
      <summary>
            Gets or sets the target.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Controllers.SearchPanel.SearchItem.SetNameText(System.String)">
      <summary>
            Sets the name text.
            </summary>
      <param name="name">The name.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.CameraFocusableItemDestroyedHandler">
      <summary>
            Delegate used to notify when a ICameraFocusable item is destroyed.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.ICameraFocusable">
      <summary>
            Provides information required to focus the camera on a certain position in the map view.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.MapView.UI.ICameraFocusable.Destroyed">
      <summary>
            Occurs when this item has been destroyed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.ICameraFocusable.AssociatedPlanet">
      <summary>
            Gets the parent planet associated w/this item.
            </summary>
      <value>
            The parent planet associated w/this item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.ICameraFocusable.FocusByClick">
      <summary>
            Gets a value indicating whether camera focus should be set when clicked.
            </summary>
      <value>
        <c>true</c> if camera focus should be set when clicked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.ICameraFocusable.MinZoomDistance">
      <summary>
            Gets the minimum distance that the camera should zoom on this position.
            </summary>
      <value>
            The minimum distance that the camera should zoom on this position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.ICameraFocusable.Position">
      <summary>
            Gets the position the camera should focus on, in map view coordinates.
            </summary>
      <value>
            The position the camera should focus on, in map view coordinates.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel">
      <summary>
            View model for a selected item in the map view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel._chainableOrbit">
      <summary>
            The chainable orbit
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel._deleteAction">
      <summary>
            The delete action
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel._maneuverNode">
      <summary>
            The maneuver node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel._mapOrbitNode">
      <summary>
            The map orbit node.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel._mvi">
      <summary>
            The map view inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel._target">
      <summary>
            The target
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.#ctor(Assets.Scripts.Flight.MapView.UI.ICameraFocusable,Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel" /> class.
            </summary>
      <param name="target">The target.</param>
      <param name="mapViewInspector">The map view inspector.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ArrivalTime">
      <summary>
            Gets the arrival time to the maneuver node.
            </summary>
      <value>
            The arrival time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.BurnAccuracy">
      <summary>
            Gets the burn accuracy.
            </summary>
      <value>
            The burn accuracy.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.BurnDuration">
      <summary>
            Gets the burn time required for the manuever node.
            </summary>
      <value>
            The burn time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.CanDelete">
      <summary>
            Gets a value indicating whether this instance can destroy.
            </summary>
      <value>
        <c>true</c> if this instance can destroy; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.CanLock">
      <summary>
            Gets a value indicating whether this instance can lock.
            </summary>
      <value>
        <c>true</c> if this instance can lock; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.CanSelectPlayer">
      <summary>
            Gets a value indicating whether this instance can select player.
            </summary>
      <value>
        <c>true</c> if this instance can select player; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.CanTakeControl">
      <summary>
            Gets a value indicating whether this instance can take control.
            </summary>
      <value>
        <c>true</c> if this instance can take control; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.CanTarget">
      <summary>
            Gets a value indicating whether this instance can target.
            </summary>
      <value>
        <c>true</c> if this instance can target; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ChainableOrbit">
      <summary>
            Gets the chainable orbit (chainable orbit is a craft, one of its maneuver nodes, or soi enter/exit)
            </summary>
      <value>
            The chainable orbit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.DeleteConfirmation">
      <summary>
            Gets the delete confirmation message, or null if a confirmation is not required.
            </summary>
      <value>
            The delete confirmation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.DeltaV">
      <summary>
            Gets the delta v for the manuever node.
            </summary>
      <value>
            The delta v.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.IsChainableOrbit">
      <summary>
            Gets a value indicating whether this instance is chainable orbit.
            </summary>
      <value>
        <c>true</c> if this instance is chainable orbit; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.IsLocked">
      <summary>
            Gets a value indicating whether this instance is locked.
            </summary>
      <value>
        <c>true</c> if this instance is locked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.IsManeuverNode">
      <summary>
            Gets a value indicating whether this instance is maneuver node.
            </summary>
      <value>
        <c>true</c> if this instance is maneuver node; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.IsMapOrbitNode">
      <summary>
            Gets a value indicating whether the selected item is a <see cref="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.MapOrbitNode" />.
            </summary>
      <value>
        <c>true</c> if the selected item is a <see cref="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.MapOrbitNode" />; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.IsPerformingBurn">
      <summary>
            Gets a value indicating whether this instance is performing a burn.
            </summary>
      <value>
        <c>true</c> if this instance is a performing burn; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.IsTargeted">
      <summary>
            Gets a value indicating whether this instance is targeted.
            </summary>
      <value>
        <c>true</c> if this instance is targeted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ItemType">
      <summary>
            Gets the type of the item.
            </summary>
      <value>
            The type of the item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.MapOrbitNode">
      <summary>
            Gets the selected item as a <see cref="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.MapOrbitNode" /> or <c>null</c> if it isn't one.
            </summary>
      <value>
            The selected item as a <see cref="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.MapOrbitNode" /> or <c>null</c> if it isn't one.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.Name">
      <summary>
            Gets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.Orbit">
      <summary>
            Gets the orbit.
            </summary>
      <value>
            The orbit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ShowArrivalTime">
      <summary>
            Gets or sets a value indicating whether to show arrival time.
            </summary>
      <value>
        <c>true</c> if [show arrival time]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ShowAutoBurn">
      <summary>
            Gets a value indicating whether this instance should show the auto-burn toggle button.
            </summary>
      <value>
        <c>true</c> if this instance should show the auto-burn toggle button; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ShowName">
      <summary>
            Gets a value indicating whether to show the name.
            </summary>
      <value>
        <c>true</c> if [show name]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ShowNodeNavigation">
      <summary>
            Gets a value indicating whether to show node navigation.
            </summary>
      <value>
        <c>true</c> if [show node navigation]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ShowNodeNextButton">
      <summary>
            Gets or sets a value indicating whether to show the next node button.
            </summary>
      <value>
        <c>true</c> if show node next button; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ShowNodePrevButton">
      <summary>
            Gets or sets a value indicating whether to show the previous node button.
            </summary>
      <value>
        <c>true</c> if show node previous button; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ShowWarpToNext">
      <summary>
            Gets a value indicating whether this instance should show the warp to next node button.
            </summary>
      <value>
        <c>true</c> if this instance should show the warp to next node button; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.Target">
      <summary>
            Gets the target.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.NodeNavigator">
      <summary>
            Gets the node navigator.
            </summary>
      <value>
            The node navigator.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.Delete">
      <summary>
            Deletes the item.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.GetCraftNode">
      <summary>
            Gets the craft node associated with this item.
            </summary>
      <returns>The craft node, or null if it does not have a craft.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.OnDeselected">
      <summary>
            Called when the item is deselected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.OnSelected">
      <summary>
            Called when the item is selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ToggleLock">
      <summary>
            Toggles the lock on the chain node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ToggleTarget">
      <summary>
            Toggles the target.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.ClampStringLength(System.String,System.Int32)">
      <summary>
            Clamps the string to the specified length.
            </summary>
      <param name="s">The string.</param>
      <param name="length">The length.</param>
      <returns>The clamped string.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.GetBurnAccuracyDesc(Assets.Scripts.Flight.MapView.Orbits.Chain.ManeuverNodes.BurnAccuracy)">
      <summary>
            Gets the burn accuracy description from burnAccuracy value.
            </summary>
      <param name="burnAccuracy">The burn accuracy value.</param>
      <returns>The burn accuracy description.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.GetNodeTypeName(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Gets the name of the node type.
            </summary>
      <param name="node">The chain node.</param>
      <returns>The name of the node type.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.DeleteCraftNode">
      <summary>
            Deletes the craft node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.DeleteManeuverNode">
      <summary>
            Deletes the maneuver node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.OnNodeListChanged(Assets.Scripts.Flight.MapView.Interfaces.IChainNodeList,System.Collections.Generic.LinkedListNode{Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit},Assets.Scripts.Flight.MapView.Interfaces.NodeListChangeCategory)">
      <summary>
            Called when the node list changes.
            </summary>
      <param name="source">The source.</param>
      <param name="node">The node.</param>
      <param name="category">The category.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel.UpdateNodeNavSpinners">
      <summary>
            Updates the node navigation spinner arrows.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel">
      <summary>
            Class for item visibilty options in the map view inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel._craftDefaults">
      <summary>
            The craft defaults
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel._iconsVisibilityButton">
      <summary>
            The icons visibility button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel._mapItemDataSet">
      <summary>
            The map item data set
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel._mapOrbitNode">
      <summary>
            The map item
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel._mapState">
      <summary>
            The map state
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel._orbitLineVisibilityButton">
      <summary>
            The orbit line visibility button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel._planetDefaults">
      <summary>
            The planet defaults
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.Group">
      <summary>
            Gets or sets the group.
            </summary>
      <value>
            The group.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.ItemChanged(Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel)">
      <summary>
            Items the changed.
            </summary>
      <param name="newItem">The new item.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.UpdateVisibilityButton(ModApi.Ui.Inspector.LabelButtonModel,System.Nullable{System.Boolean},System.Boolean)">
      <summary>
            Updates the orbit line visibility button.
            </summary>
      <param name="button">The button.</param>
      <param name="rawValue">The raw value.</param>
      <param name="defaultedValue">The value which has the default, if raw is <c>null</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.OnIconsVisibilityClicked(ModApi.Ui.Inspector.LabelButtonModel)">
      <summary>
            Called when the icons visibility button has been clicked.
            </summary>
      <param name="button">The button.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.OnOrbitLineVisibilityclicked(ModApi.Ui.Inspector.LabelButtonModel)">
      <summary>
            Called when the orbit line vilibility button has been clicked.
            </summary>
      <param name="button">The button.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.ResetNodesToDefaults">
      <summary>
            Resets item visibility to defaults.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.ResetVisibilityDefaults">
      <summary>
            Resets the visibility defaults.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.ToggleAllDefaults">
      <summary>
            Toggles all visibilty defaults.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.ItemVisibilityModel.UpdateUi">
      <summary>
            Updates the UI.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel">
      <summary>
            Class for options in the map view inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel._mapOptions">
      <summary>
            The map options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel._navigationTargetProvider">
      <summary>
            The targeting manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel._orbitLineManager">
      <summary>
            The orbit line manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel._pinEncounterButton">
      <summary>
            The pin encounter button
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel.Group">
      <summary>
            Gets or sets the group.
            </summary>
      <value>
            The group.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel.GetPinnedButtonText">
      <summary>
            Gets the button text for the pinned toggle button.
            </summary>
      <returns>The button text for the pinned toggle button.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel.OnDrawModeValueChanged(Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType,Assets.Scripts.Flight.MapView.Orbits.DrawModes.Interfaces.IDrawMode.ModeType)">
      <summary>
            Called when the draw mode value changed.
            </summary>
      <param name="newVal">The new value.</param>
      <param name="oldVal">The old value.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapDebugModel.PinCurrentEncounter">
      <summary>
            Pins the current encounter.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript">
      <summary>
            Script that controls an inspector panel that displays information about the map view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._cameraTarget">
      <summary>
            The camera target
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._debugModel">
      <summary>
            The debug model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._flightScene">
      <summary>
            The flight scene
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._inspectorModel">
      <summary>
            The inspector model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._inspectorPanel">
      <summary>
            The inspector panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._itemVisibilityModel">
      <summary>
            The item visibility model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._nodeModel">
      <summary>
            The node model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._optionsModel">
      <summary>
            The options model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._orbitModel">
      <summary>
            The orbit model
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._playerCraftProvider">
      <summary>
            The player craft provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._selectedItem">
      <summary>
            The selected item
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript._selectedModel">
      <summary>
            The selected model
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.NavigationTargetProvider">
      <summary>
            Gets the navigation target provider.
            </summary>
      <value>
            The navigation target provider.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.PlayerCraft">
      <summary>
            Gets the player craft.
            </summary>
      <value>
            The player craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.SelectedItem">
      <summary>
            Gets the selected item.
            </summary>
      <value>
            The selected item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.SelectedModel">
      <summary>
            Gets the selected model.
            </summary>
      <value>
            The selected model.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.Create">
      <summary>
            Creates this instance.
            </summary>
      <returns>The map view inspector.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.Refresh">
      <summary>
            Refreshes the inspector for the currently selected item.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.SelectItem(Assets.Scripts.Flight.MapView.UI.ICameraFocusable)">
      <summary>
            Selects the item.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.SetTarget(Assets.Scripts.Flight.MapView.UI.ICameraFocusable)">
      <summary>
            Sets the target.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.ShowMessage(System.String)">
      <summary>
            Shows the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript.OnSelectTarget(Assets.Scripts.Flight.MapView.UI.ICameraFocusable)">
      <summary>
            Called when the camera target has changed.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel">
      <summary>
            Model for the node section of the map view inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel._chainOrbit">
      <summary>
            The currently selected chain orbit
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel._mapViewInspector">
      <summary>
            The map view inspector
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel._progressBar">
      <summary>
            The progress bar
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel._selectedNodeName">
      <summary>
            The selected node name
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.#ctor(Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel" /> class.
            </summary>
      <param name="mapViewInspector">The map view inspector.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.ArrivalTime">
      <summary>
            Gets the arrival time.
            </summary>
      <value>
            The arrival time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.BurnTime">
      <summary>
            Gets the burn time.
            </summary>
      <value>
            The burn time.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.DeltaV">
      <summary>
            Gets the delta v.
            </summary>
      <value>
            The delta v.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.Group">
      <summary>
            Gets the group.
            </summary>
      <value>
            The group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.ManeuverNode">
      <summary>
            Gets the player chain orbit.
            </summary>
      <value>
            The player chain orbit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.Progress">
      <summary>
            Gets the current progress of the burn (0 to 1).
            </summary>
      <value>
            The progress.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.NodeNavigator">
      <summary>
            Gets the node navigator.
            </summary>
      <value>
            The node navigator.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.NodeModel.UpdateInfo(Assets.Scripts.Flight.MapView.Interfaces.IChainableOrbit)">
      <summary>
            Updates the information based on the specified chainable orbit.
            </summary>
      <param name="chainableOrbit">The chainable orbit.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Inspector.OptionsModel">
      <summary>
            Class for options in the map view inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.OptionsModel._mapOptions">
      <summary>
            The map options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.OptionsModel._orbitLineVisibilityButton">
      <summary>
            The orbit line visibility button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.OptionsModel._sensitivitySlider">
      <summary>
            The sensitivity slider
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.OptionsModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.UI.Inspector.OptionsModel" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.OptionsModel.Group">
      <summary>
            Gets or sets the group.
            </summary>
      <value>
            The group.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.OptionsModel.OnApsidesVilibilityChanged(Assets.Scripts.Flight.MapView.Options.Interfaces.OrbitUiVerbosity,Assets.Scripts.Flight.MapView.Options.Interfaces.OrbitUiVerbosity)">
      <summary>
            Called when the apsides vilibility changed.
            </summary>
      <param name="newVal">The new value.</param>
      <param name="oldVal">The old value.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel">
      <summary>
            Model for the orbit section of the map view inspector.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.ArgumentOfPeriapsis">
      <summary>
            Gets the argument of periapsis.
            </summary>
      <value>
            The argument of periapsis.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.Eccentricity">
      <summary>
            Gets the eccentricity.
            </summary>
      <value>
            The eccentricity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.Group">
      <summary>
            Gets the group.
            </summary>
      <value>
            The group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.Inclination">
      <summary>
            Gets the inclination.
            </summary>
      <value>
            The inclination.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.Period">
      <summary>
            Gets the period.
            </summary>
      <value>
            The period.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.RightAscension">
      <summary>
            Gets the right ascension.
            </summary>
      <value>
            The right ascension.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.SemiMajorAxis">
      <summary>
            Gets the semi major axis.
            </summary>
      <value>
            The semi major axis.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.TrueAnomaly">
      <summary>
            Gets the true anomaly.
            </summary>
      <value>
            The true anomaly.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.OrbitModel.Update(ModApi.Flight.Sim.IOrbit)">
      <summary>
            Updates the specified orbit.
            </summary>
      <param name="orbit">The orbit.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel">
      <summary>
            The model the selected item section of the map view inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._burnProgressBar">
      <summary>
            The burn progress bar
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._buttonAutoBurn">
      <summary>
            The button automatic burn
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._buttonDelete">
      <summary>
            The destroy button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._buttonSelectPlayer">
      <summary>
            The select player button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._buttonTakeControl">
      <summary>
            The take control button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._buttonToggleLock">
      <summary>
            The button toggle lock
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._buttonToggleTarget">
      <summary>
            The toggle target button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._buttonWarpToNode">
      <summary>
            The button warp to node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._iconButtons">
      <summary>
            The non player icons
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._mapViewInspector">
      <summary>
            The map view inspector
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._nodeArrivalTime">
      <summary>
            The node arrival time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._nodeBurnAccuracy">
      <summary>
            The burn node accuracy
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._nodeBurnTime">
      <summary>
            The node burn time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._nodeDeltaV">
      <summary>
            The node delta v
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._nodeSpinner">
      <summary>
            The node spinner
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel._selectedText">
      <summary>
            The selected text
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.#ctor(Assets.Scripts.Flight.MapView.UI.Inspector.MapViewInspectorScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel" /> class.
            </summary>
      <param name="mapViewInspector">The map view inspector.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.BurnAccuracy">
      <summary>
            Gets the burn accuracy.
            </summary>
      <value>
            The burn accuracy.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.BurnProgress">
      <summary>
            Gets the burn progress.
            </summary>
      <value>
            The burn progress.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.Group">
      <summary>
            Gets the group.
            </summary>
      <value>
            The group.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.SelectedItem">
      <summary>
            Gets the selected map item.
            </summary>
      <value>
            The selected map item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.SelectedNodeName">
      <summary>
            Gets or sets the type of the node.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.SelectPlayerButton">
      <summary>
            Gets the select player button.
            </summary>
      <value>
            The select player button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.Target">
      <summary>
            Gets the target.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.NodeNavigator">
      <summary>
            Gets the node navigator.
            </summary>
      <value>
            The node navigator.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.SelectedCraftNode">
      <summary>
            Gets the selected craft node.
            </summary>
      <value>
            The selected craft node.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnSelectedItemChanged(Assets.Scripts.Flight.MapView.UI.Inspector.InspectorItemViewModel)">
      <summary>
            Called when the selected item has changed.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.AdvanceNode(System.Int32)">
      <summary>
            Advances the node.
            </summary>
      <param name="direction">The direction.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnAutoBurnClicked">
      <summary>
            Called when the automatic burn button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnConfirmDestroyClicked(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when the confirm destroy button is clicked.
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnConfirmTakeControlClicked(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when the confirm take control button is clicked.
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnDestroyClicked">
      <summary>
            Called when the destroy button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnNodeSpinnerElementCreated(ModApi.Ui.Inspector.IItemElement)">
      <summary>
            Called when [node spinner element created].
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnSelectedTextElementCreated(ModApi.Ui.Inspector.IItemElement)">
      <summary>
            Called when [selected text element created].
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnSelectPlayer">
      <summary>
            Called when the select player button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnTakeControlClicked">
      <summary>
            Called when the take control button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnToggleLockClicked">
      <summary>
            Called when the toggle lock button is clicked
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnToggleTargetClicked">
      <summary>
            Called when the toggle target button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.Inspector.SelectedModel.OnWarpToNodeClicked">
      <summary>
            Called when the warp to node button is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript">
      <summary>
            This is a physics ray-caster replacement for Unity's b/c w/Unity's version, every click-able object has to be a child of the camera, which does not work for us.
            To get the click events which will be sent onto world objects, this physics ray-caster needs to be on a canvas component with a GraphicRaycaster.
            This component receives click events from the GraphicRaycaster, shoots a ray out into the world, and checks to see if items hit have implemented
            any of the input interfaces (IDragHandler, IPointerClickHandler, etc).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript._camera">
      <summary>
            The _camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript._currentHovered">
      <summary>
            The current hovered
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript._dragging">
      <summary>
        <c>true</c> if something is currently being dragged, otherwise <c>false</c>.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript._inputResponder">
      <summary>
            The input responder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript._selectedObject">
      <summary>
            The currently selected object (if any).
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.InputResponder">
      <summary>
            Gets the input responder.
            </summary>
      <value>
            The input responder.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule before a drag is started.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
            Called by the EventSystem when a new object is being selected.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When dragging is occurring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.OnDrop(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule on a target that can accept a drop.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule when a drag is ended.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When clicked.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When the button is pressed.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When the button is released.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.OnSelect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
            When selected.
            </summary>
      <param name="eventData">Current event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.DetectPointerEnterExit">
      <summary>
            Detects the pointer enter exit.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.PhysicsRaycasterCustomScript.GetHit(UnityEngine.Vector2,Assets.Scripts.Flight.MapView.UI.ClickableGameObjectScript@)">
      <summary>
            Gets the ClickableGameObjectScripts found under the supplied screen position.
            </summary>
      <param name="screenPos">The screen position to check under.</param>
      <param name="clickableGameObjectScript">The click-able game object script.</param>
      <returns>
        <c>true</c> if a hit was found, otherwise <c>false</c></returns>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.UiConstants">
      <summary>
            Constants related to UI resources.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconApoapsis">
      <summary>
            The icon apoapsis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconAscendingNode">
      <summary>
            The icon ascending node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconAscendingNodeOfTarget">
      <summary>
            The icon ascending node of target
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnAntiNormal">
      <summary>
            The icon burn anti normal
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnNodeAdd">
      <summary>
            The icon burn node add
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnNodeDelete">
      <summary>
            The icon burn node delete
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnNodeLocked">
      <summary>
            The icon burn node locked
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnNodeSphere">
      <summary>
            The icon burn node sphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnNormal">
      <summary>
            The icon burn normal
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnPrograde">
      <summary>
            The icon burn prograde
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnRadialIn">
      <summary>
            The icon burn radial in
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnRadialOut">
      <summary>
            The icon burn radial out
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconBurnRetrograde">
      <summary>
            The icon burn retrograde
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconDescendingNode">
      <summary>
            The icon descending node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconDescendingNodeOfTarget">
      <summary>
            The icon descending node of target
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconNonPlayerCraft">
      <summary>
            The icon non player craft
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconNonPlayerCraftAlternative">
      <summary>
            The icon non player craft alternative
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconPeriapsis">
      <summary>
            The icon periapsis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconPlanet">
      <summary>
            The icon planet
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconPlanetIntersection">
      <summary>
            The icon planet intersection
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconPlayerCraft">
      <summary>
            The icon player craft
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconPlayerCraftAlternative">
      <summary>
            The icon player craft alternative
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiConstants.IconTargetBox">
      <summary>
            The icon target box
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.UiUtils">
      <summary>
            Utilities related to MapView UI components.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.CreateUiIcon(UnityEngine.Canvas,System.String,System.Boolean,System.Nullable{UnityEngine.Vector2})">
      <summary>
            Creates the UI icon.
            </summary>
      <param name="parentCanvas">The parent canvas.</param>
      <param name="iconName">Name of the icon.</param>
      <param name="clickable">if set to <c>true</c> the icon will be able to respond to click events, otherwise <c>false</c>.</param>
      <param name="pivot">The optional pivot. Set as null to use default of 0.5, 0.5.</param>
      <returns>
            The Image
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.CreateUiText(UnityEngine.Transform,System.String,System.Boolean,System.Single,TMPro.TextAlignmentOptions)">
      <summary>
            Creates the UI text.
            </summary>
      <param name="parent">The parent.</param>
      <param name="name">The name.</param>
      <param name="clickable">if set to <c>true</c> the text will be click-able.</param>
      <param name="fontSize">The size.</param>
      <param name="alignment">The alignment.</param>
      <returns>
            The TextMesh for the UI text.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.GetRandomOrbitLineColor">
      <summary>
            Gets a random orbit line color.
            </summary>
      <returns>A random orbit line color.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.LoadIconSprite(System.String)">
      <summary>
            Loads a sprite for the specified MapView icon.
            </summary>
      <param name="iconName">Name of the icon.</param>
      <returns>The requested sprite.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.UpdateUiComponentFromCurrentPosition(UnityEngine.Component,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,UnityEngine.Camera,System.Single)">
      <summary>
            Updates the UI component from current position.
            </summary>
      <param name="component">The component.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="drawModeProvider">The draw mode provider.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="uiCamera">The UI camera.</param>
      <param name="maxDist">The maximum dist.</param>
      <returns>The visibility information for the component.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.UpdateUiComponentFromNu(UnityEngine.Component,System.Double,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,UnityEngine.Camera,System.Single,UnityEngine.Vector2)">
      <summary>
            Updates the UI component from a true anomaly on an orbit.
            </summary>
      <param name="component">The component.</param>
      <param name="nu">The nu.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="drawModeProvider">The draw mode provider.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="uiCamera">The UI camera.</param>
      <param name="maxDist">The maximum dist.</param>
      <param name="offset">The offset.</param>
      <returns>The visibility information for the component.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.UpdateUiComponentFromPoint(UnityEngine.Component,ModApi.Flight.Sim.IOrbitPoint,Assets.Scripts.Flight.MapView.Orbits.MapOrbitInfo,Assets.Scripts.Flight.MapView.Interfaces.IDrawModeProvider,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,UnityEngine.Camera,System.Single)">
      <summary>
            Updates the UI component from an orbit point.
            </summary>
      <param name="component">The component.</param>
      <param name="point">The point.</param>
      <param name="orbitInfo">The orbit information.</param>
      <param name="drawModeProvider">The draw mode provider.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="uiCamera">The UI camera.</param>
      <param name="maxDist">The maximum dist.</param>
      <returns>The visibility information for the component.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.UiComponentSetEnabled(UnityEngine.Component,System.Boolean)">
      <summary>
            Enabled or disables the UI component per the supplied flag.
            </summary>
      <param name="uiComponent">The UI component to enable/disable..</param>
      <param name="enabled">if set to <c>true</c> the component is enabled, otherwise it is disabled.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.UpdateUiComponent(UnityEngine.Component,UnityEngine.Vector3d,Assets.Scripts.Flight.MapView.Interfaces.IMapViewCoordinateConverter,UnityEngine.Camera,System.Single,UnityEngine.Vector2)">
      <summary>
            Updates the icon.
            </summary>
      <param name="component">The icon.</param>
      <param name="solarPosition">The solar position.</param>
      <param name="coordinateConverter">The coordinate converter.</param>
      <param name="uiCamera">The UI camera.</param>
      <param name="maxDist">The maximum dist.</param>
      <param name="offset">The offset.</param>
      <returns>The visibility information for the component.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.MapView.UI.UiUtils.UIComponentVisibility">
      <summary>
            Contains visibilty information for a UI component, in MapView.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiUtils.UIComponentVisibility.Visibility">
      <summary>
            The visibility, in a range from 0 to 1 (not visible, to fully visible)
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.MapView.UI.UiUtils.UIComponentVisibility.VisibilityUnclamped">
      <summary>
            The visibility, unclamped.  May go hugely negative, indicitating just how invisible it really is!
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.MapView.UI.UiUtils.UIComponentVisibility.#ctor(System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.MapView.UI.UiUtils.UIComponentVisibility" /> struct.
            </summary>
      <param name="visibility">The visibility.</param>
      <param name="visibilityUnclamped">The visibility unclamped.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript">
      <summary>
            Script for a planet in scaled space.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript.PlanetNode">
      <summary>
            Gets the planet node.
            </summary>
      <value>
            The planet node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript.Renderer">
      <summary>
            Gets the renderer.
            </summary>
      <value>
            The renderer.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript.Initialize(ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Initializes the specified planet node.
            </summary>
      <param name="planetNode">The planet node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript.SetRenderer(Assets.Scripts.Terrain.Rendering.IScaledSpaceRenderer)">
      <summary>
            Sets the renderer.
            </summary>
      <param name="renderer">The renderer.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript">
      <summary>
            Script for scaled space.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._instance">
      <summary>
            The instance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._camera">
      <summary>
            The camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._cameraPosition">
      <summary>
            The camera position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._cameraRotation">
      <summary>
            The camera rotation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._commandBuffer">
      <summary>
            The command buffer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._flightSceneScript">
      <summary>
            The flight scene script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._gameCamera">
      <summary>
            The game camera script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._gameView">
      <summary>
            The game view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._planets">
      <summary>
            The planets.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._planetScript">
      <summary>
            The planet script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript._sun">
      <summary>
            The sun
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.RenderTextureChangedHandler">
      <summary>
            Handler for when the render texture changes.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.Instance">
      <summary>
            Gets the instance.
            </summary>
      <value>
            The instance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.Planets">
      <summary>
            Gets the planets.
            </summary>
      <value>
            The planets.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.Sun">
      <summary>
            Gets the sun.
            </summary>
      <value>
            The sun.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.OnLateUpdate">
      <summary>
            Called when the late update should run.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.CreatePlanets(ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Creates the scaled space plane and any children.
            </summary>
      <param name="root">The planet node to create scaled space planets from..</param>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.DisableCommandBuffer">
      <summary>
            Disables the command buffer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.EnableCommandBuffer">
      <summary>
            Enables the command buffer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.OnPlanetScriptQuadSphereEnabledChanged(System.Object,ModApi.Planet.Events.PlanetQuadSphereEventArgs)">
      <summary>
            Called when [planet script quad sphere enabled changed].
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Planet.Events.PlanetQuadSphereEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.ScaledSpace.ScaledSpaceScript.OnScaledSpacePlanetEnabledChanged(Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript,Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript,System.Boolean)">
      <summary>
            Called when the scaled space planet enabled state has changed.
            </summary>
      <param name="source">The source.</param>
      <param name="planetScript">The planet script.</param>
      <param name="enabled">if set to <c>true</c> [enabled].</param>
    </member>
    <member name="T:Assets.Scripts.Flight.Sim.CraftNode">
      <summary>
            Node for a craft. Manages the orbital movement and entering and exiting the reference frame.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.Sim.ShipNode" />
      <seealso cref="T:ModApi.Craft.ICraftNode" />
      <seealso cref="T:ModApi.Flight.UI.INavSphereTarget" />
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._cameraTargetPlanetPosition">
      <summary>
            The camera target planet position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._craftData">
      <summary>
            The craft data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._flightState">
      <summary>
            The flight state
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._gameView">
      <summary>
            The game view
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._pendingCraftXml">
      <summary>
            XML that has been generated since the last time the craft XML was saved.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._physicsEnabledBeforeWarp">
      <summary>
            The physics enabled before warp flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._requiresSave">
      <summary>
            Flag that is set when the craft has been changed and needs to be saved.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._timeWarpForceTotal">
      <summary>
            The total of the forces applied during this step of time warp.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.CraftNode._warp">
      <summary>
            The warp
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.#ctor(ModApi.Scripts.State.ICraftNodeData,Assets.Scripts.State.FlightState,System.Double,ModApi.Craft.CraftData,Assets.Scripts.Craft.CraftScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.Sim.CraftNode" /> class. This constructor allows optional craftData and
            craftScript arguments. If they are not provided, the CraftNode will load them from file when loaded into the Game View.
            </summary>
      <param name="data">The data.</param>
      <param name="flightState">State of the flight.</param>
      <param name="primaryMass">The primary mass.</param>
      <param name="craftData">The craft data.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.#ctor(UnityEngine.Vector3d,UnityEngine.Vector3d,UnityEngine.Quaterniond,Assets.Scripts.State.FlightState,System.Double,ModApi.Craft.CraftData,Assets.Scripts.Craft.CraftScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.Sim.CraftNode" /> class.
            </summary>
      <param name="position">The position.</param>
      <param name="velocity">The velocity.</param>
      <param name="heading">The heading.</param>
      <param name="flightState">State of the flight.</param>
      <param name="primaryMass">The primary mass.</param>
      <param name="craftData">The craft data.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.CraftNode.ActiveCommandPodChanged">
      <summary>
            Occurs when active command pod has changed for this craft node.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.CraftNode.LoadedIntoGameView">
      <summary>
            Occurs when the node is loaded into the game view.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.CraftNode.PhysicsDisabled">
      <summary>
            Occurs when physics is being disabled for a craft node. The orbit's position/velocity will be updated by calling AdvanceTime() on the orbit.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.CraftNode.PhysicsEnabled">
      <summary>
            Occurs when physics has been enabled for the craft node. The orbit's position/velocity will be manually set from the craft's current world pos/vel.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.CraftNode.TimeMultiplierModeChanged">
      <summary>
            Occurs after the time multiplier changes, and after this <see cref="T:ModApi.Craft.ICraftNode" /> has finished processing the event.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.CraftNode.UnloadedFromGameView">
      <summary>
            Occurs when the node is removed from the game view.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.ActiveCommandPod">
      <summary>
            Gets the command pod currently being controlled by the player.
            </summary>
      <value>
            The active command pod.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.AltitudeAgl">
      <summary>
            Gets the altitude above ground level.
            </summary>
      <value>
            The altitude above ground level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.CameraTargetPlanetPosition">
      <summary>
            Gets the position on the node where the camera should focus, in planet coordinates.
            </summary>
      <value>
            The camera target planet position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.CameraTargetPosition">
      <summary>
            Gets the position on the node where the camera should focus, in frame coordinates.
            </summary>
      <value>
            The camera target position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.CanWarp">
      <summary>
            Gets a value indicating whether this can currently support warp.
            </summary>
      <value>
        <c>true</c> if this craft is stationary; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.Controls">
      <summary>
            Gets the controls.
            </summary>
      <value>
            The controls.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.CraftMass">
      <summary>
            Gets the craft's scaled mass.
            NOTE: This is only updated periodically and may be inconsistent with the actual craft's mass.
            </summary>
      <value>
            The craft mass.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.CraftPartCount">
      <summary>
            Gets the craft's part count.
            NOTE: This is only updated periodically and may be inconsistent with the actual craft's part count.
            </summary>
      <value>
            The number crafts parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.CraftScript">
      <summary>
            Gets the craft script.
            </summary>
      <value>
            The craft script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.FlightState">
      <summary>
            Gets the flight state.
            </summary>
      <value>
            The flight state.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.FramePosition">
      <summary>
            Gets the position of the craft in the frame.
            </summary>
      <value>
            The frame position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.FrameVelocity">
      <summary>
            Gets the velocity of the craft in the frame.
            </summary>
      <value>
            The frame velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.GameObject">
      <summary>
            Gets the corresponding game object.
            </summary>
      <value>
            The corresponding game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.GameView">
      <summary>
            Gets the game view.
            </summary>
      <value>
            The game view.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.GameViewLoadDistance">
      <summary>
            Gets the distance in meters at which the node will be loaded into the game view.
            </summary>
      <value>
            The game view load distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.GameViewObject">
      <summary>
            Gets the game view object.
            </summary>
      <value>
            The game view object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.HasCommandPod">
      <summary>
            Gets or sets a value indicating whether this instance has command pod. All craft's have a command
            pod except for when they break apart and new craft nodes are created from their debris.
            </summary>
      <value>
        <c>true</c> if this instance has command pod; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.Heading">
      <summary>
            Gets the heading.
            </summary>
      <value>
            The heading.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.InContactWithPlanet">
      <summary>
            Gets or sets a value indicating whether this craft is touching the ground.
            </summary>
      <value>
        <c>true</c> if grounded; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.InitialLaunch">
      <summary>
            Gets a value indicating whether this is the craft's initial launch. After its craft script has been loaded
            this flag will be reset to false.
            </summary>
      <value>
        <c>true</c> if [initial launch]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.InitialLaunchHeadingIsDirectionOfTravel">
      <summary>
            Gets or sets a value indicating whether the heading for an initial launch is the direction the craft should
            be pointing its direction of travel. This is not true when launching from a ground position, because rovers
            and airplanes are pointing one way and rockets point another, but when launching from a position in the air
            they should all be pointing in the same direction.
            </summary>
      <value>
        <c>true</c> if the launch heading is the direction of travel; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.IsLoadedInGameView">
      <summary>
            Gets a value indicating whether this instance is loaded in the game view.
            </summary>
      <value>
        <c>true</c> if this instance is loaded in game view; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.IsPhysicsEnabled">
      <summary>
            Gets a value indicating whether physics is enabled.
            </summary>
      <value>
        <c>true</c> if physics is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.Name">
      <summary>
            Gets or sets the name of the orbit node.
            </summary>
      <value>
            The name of the orbit node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.NodeId">
      <summary>
            Gets or sets the node identifier.
            </summary>
      <value>
            The node identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.ModApi#Flight#UI#INavSphereTarget#OrbitNode">
      <summary>
            Gets the orbit node associated with this nav sphere target.
            </summary>
      <value>
            The orbit node associated with this nav sphere target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.Position">
      <summary>
            Gets the position relative to it's parent.
            </summary>
      <value>
            The position the position relative to it's parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.ReferenceFrame">
      <summary>
            Gets the reference frame.
            </summary>
      <value>
            The reference frame.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.SurfacePosition">
      <summary>
            Gets the surface position, or null if not currently touching the ground.
            </summary>
      <value>
            The surface position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.SurfaceRotation">
      <summary>
            Gets the surface rotation, or null if not currently touching the ground.
            </summary>
      <value>
            The surface rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.SurfaceVelocity">
      <summary>
            Gets the surface velocity, or null if not currently touching the ground.
            </summary>
      <value>
            The surface velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.CraftNode.Velocity">
      <summary>
            Gets the velocity relative to it's parent.
            </summary>
      <value>
            The velocity relative to it's parent.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.IsOrbitSuitableToRestore(ModApi.Flight.Sim.OrbitData)">
      <summary>
            Determines whether the <see cref="T:ModApi.Flight.Sim.OrbitData" /> is suitable to be used to restore a <see cref="T:Assets.Scripts.Flight.Sim.CraftNode" />.
            </summary>
      <param name="orbitData">The orbit data to check for suitability.</param>
      <returns>
        <c>true</c> if the orbitData is suitable to be used to restore the craft node, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.AddTimeWarpForce(UnityEngine.Vector3)">
      <summary>
            Applies the force during time warp. Note: these forces do not apply torques.
            </summary>
      <param name="force">The force.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.CalculateParentPlanetOcclusion(ModApi.Craft.CraftFlightData)">
      <summary>
            Calculates the parent planet occlusion and updates the flight data accordingly.
            </summary>
      <param name="flightData">The flight data to update.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.CalculateSolarRadiation(ModApi.Craft.CraftFlightData)">
      <summary>
            Calculates the solar radiation that the craft should receive at its current distance from the sun,
            taking into account being occluded by its parent planet.
            Sources:
            https://en.wikipedia.org/wiki/Sunlight#Intensity_in_the_Solar_System
            https://en.wikipedia.org/wiki/Inverse-square_law
            </summary>
      <param name="flightData">The flight data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.DestroyCraft">
      <summary>
            Called when the craft is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.FlightEnd">
      <summary>
            Called when the flight scene is being destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.FlightStart">
      <summary>
            Called when the flight scene is starting.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.FlightUpdate(System.Double,System.Double)">
      <summary>
            Updates the node. Called every frame. Elapsed time can vary greatly depending on the current
            warp mode.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
      <param name="currentTime">The current game time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.Initialize">
      <summary>
            Called after the node hierarchy has been created and before the simulation has started.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.RecalculateFrameState(ModApi.Flight.GameView.IReferenceFrame)">
      <summary>
            Called when the node should recalculate it's state (position/velocity) within the reference frame.
            </summary>
      <remarks>This may be called either when the reference frame recenters, or when the node's orbit position/velocity is manually
            updated such as while warping.</remarks>
      <param name="referenceFrame">The reference frame.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.SetActiveCommandPod(ModApi.Craft.Parts.ICommandPod)">
      <summary>
            Sets the command pod.
            </summary>
      <param name="commandPod">The command pod.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.SetPhysicsEnabled(System.Boolean,ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Enables/disables physics for the ship.
            </summary>
      <param name="enabled">if set to <c>true</c> then physics is enabled, otherwise <c>false</c>.</param>
      <param name="reason">The reason for the change.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.SetStateVectors(UnityEngine.Vector3d,UnityEngine.Vector3d,System.Double)">
      <summary>
            Sets the state vectors.
            </summary>
      <param name="position">The position.</param>
      <param name="velocity">The velocity.</param>
      <param name="time">The time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.SynchronizeData">
      <summary>
            Synchronizes the state of this craft node with its data object.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.OnLoadIntoGameView(ModApi.Flight.GameView.IGameView)">
      <summary>
            Called when the object should be loaded into the game view.
            </summary>
      <param name="gameView">The game view that the object is being loaded into.</param>
      <returns>
            The root transform of the game view object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.OnUnloadFromGameView(System.Boolean)">
      <summary>
            Called when removed from game view.
            </summary>
      <param name="flightEnd">if set to <c>true</c> ship is being unloaded due to the flight ending.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.ApplyTimeWarpForce(System.Double)">
      <summary>
            Calculates the change in velocity due to the forces applied during time warp this frame.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.InitializeCommon(Assets.Scripts.State.FlightState,ModApi.Craft.CraftData,Assets.Scripts.Craft.CraftScript)">
      <summary>
            Performs initialization tasks common to all.
            </summary>
      <param name="flightState">State of the flight.</param>
      <param name="craftData">The craft data.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.InitializeFromData(ModApi.Scripts.State.ICraftNodeData,Assets.Scripts.State.FlightState,System.Double,ModApi.Craft.CraftData,Assets.Scripts.Craft.CraftScript)">
      <summary>
            Performs initialization from an existing <see cref="T:ModApi.Scripts.State.ICraftNodeData" /></summary>
      <param name="data">The data to restore this node with.</param>
      <param name="flightState">State of the flight.</param>
      <param name="primaryMass">The primary mass.</param>
      <param name="craftData">The craft data.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.InitializeFromStateVectors(UnityEngine.Vector3d,UnityEngine.Vector3d,Assets.Scripts.State.FlightState,System.Double,ModApi.Craft.CraftData,Assets.Scripts.Craft.CraftScript)">
      <summary>
            Performs initialization from orbital state vectors./&gt;
            </summary>
      <param name="position">The position.</param>
      <param name="velocity">The velocity.</param>
      <param name="flightState">State of the flight.</param>
      <param name="primaryMass">The primary mass.</param>
      <param name="craftData">The craft data.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.OnTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called when the time multiplier mode has changed.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.SavePendingCraftXmlChanges">
      <summary>
            Saves any changes to the craft XML to a temporary variable. The XML will be written to file in SynchronizeData.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.UpdateCraft(System.Double,System.Double)">
      <summary>
            Updates the craft from the craft's rigid body if physics are enabled, or from the orbit if in warp mode.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
      <param name="currentTime">The current game time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.UpdateCraftMetaData">
      <summary>
            Updates the craft meta data. This is not important for operation, but might be used by
            UIs to display information about the craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.UpdatePlayerCraftBiomeData(ModApi.Planet.PlanetVertexData)">
      <summary>
            Updates the player craft biome data.
            </summary>
      <param name="vertexData">The vertex data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftNode.UpdateSurfaceParameters">
      <summary>
            Calculates the surface parameters when a craft becomes grounded and physics disabled.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.Sim.CraftSplitter">
      <summary>
            Handles splitting and merging of craft nodes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftSplitter.MergeCraftNode(Assets.Scripts.Flight.Sim.CraftNode,Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Merges the source craft script with the target craft script. The bodies and parts in the source craft script
            will be moved into the target craft script and the source craft script will be destroyed.
            Note: When merging a craft node with the player, the player must always be the target craft node. This is
            because the player craft node cannot be deleted.
            </summary>
      <param name="sourceCraftNode">The source craft node.</param>
      <param name="targetCraftNode">The target craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftSplitter.ProcessDisconnectedBody(ModApi.Craft.BodyData,Assets.Scripts.Craft.CraftScript)">
      <summary>
            Processes the disconnected body.
            </summary>
      <param name="body">The body.</param>
      <param name="craftScript">The craft script that currently owns the body scripts.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftSplitter.SplitCraftNode(Assets.Scripts.Flight.Sim.CraftNode,ModApi.Craft.Assembly)">
      <summary>
            Creates a new craft script and craft node with the bodies and parts contained in the specified assembly.
            </summary>
      <param name="craftNode">The craft node.</param>
      <param name="assembly">The assembly.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftSplitter.CreateCraftScriptFromDisconnectedBodies(ModApi.Craft.ICraftScript,ModApi.Craft.Assembly)">
      <summary>
            Creates the craft script from disconnected bodies contained in the assembly.
            </summary>
      <param name="sourceCraftScript">The source craft script.</param>
      <param name="assembly">The assembly.</param>
      <returns>
            The craft script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftSplitter.DetermineCraftNodeEligibility(System.Collections.Generic.List{ModApi.Craft.IBodyScript})">
      <summary>
            Determines if the disconnected body scripts should be separated into their own craft node.
            </summary>
      <param name="bodyScripts">The bodies.</param>
      <returns>
            True if it should be separated into a new craft node, otherwise false.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftSplitter.GetConnectedBodies(ModApi.Craft.IBodyScript,System.Collections.Generic.List{ModApi.Craft.IBodyScript})">
      <summary>
            Recursive method that gets all connected bodies.
            </summary>
      <param name="bodyScript">The body script.</param>
      <param name="connectedBodies">The connected bodies.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftSplitter.MoveBodiesToAssembly(System.Collections.Generic.IEnumerable{ModApi.Craft.IBodyScript},ModApi.Craft.Assembly,ModApi.Craft.Assembly)">
      <summary>
            Moves the bodies from the source assembly to the target assembly.
            </summary>
      <param name="bodies">The bodies.</param>
      <param name="sourceAssembly">The source assembly.</param>
      <param name="targetAssembly">The target assembly.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.CraftSplitter.MoveBodyToNewCraftNode(System.Collections.Generic.List{ModApi.Craft.IBodyScript},Assets.Scripts.Craft.CraftScript)">
      <summary>
            Moves the bodies from a craft script to a new craft node.
            </summary>
      <param name="bodyScripts">The body scripts.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.Sim.Node">
      <summary>
            Base class for different types of orbiting objects.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.Node.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.Sim.Node" /> class.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.Node.Destroyed">
      <summary>
            Occurs when the node is destroyed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.Node.GameViewLoadDistance">
      <summary>
            Gets the distance in meters at which the node will be loaded into the game view.
            </summary>
      <value>
            The game view load distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.Node.GameViewObject">
      <summary>
            Gets the game view object.
            </summary>
      <value>
            The game view object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.Node.IsDestroyed">
      <summary>
            Gets or sets a value indicating whether this instance is destroyed.
            </summary>
      <value>
        <c>true</c> if this instance is destroyed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.Node.Parent">
      <summary>
            Gets or sets the parent planet.
            </summary>
      <value>
            The parent planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.Node.Position">
      <summary>
            Gets the position relative to it's parent.
            </summary>
      <value>
            The position the position relative to it's parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.Node.SolarPosition">
      <summary>
            Gets the position of this planet relative to the closest sun.
            </summary>
      <value>
            The solar position.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.Node.FlightEnd">
      <summary>
            Called when the node is being removed from the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.Node.FlightLateUpdate(System.Double)">
      <summary>
            Called at the end of every frame. Elapsed time can vary greatly depending on the current warp mode.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.Node.FlightStart">
      <summary>
            Called when the flight scene is starting.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.Node.FlightUpdate(System.Double,System.Double)">
      <summary>
            Updates the node. Called every frame. Elapsed time can vary greatly depending on the current
            warp mode.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
      <param name="currentTime">The current game time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.Node.Initialize">
      <summary>
            Called after the node hierarchy has been created and before the simulation has started.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.Node.SynchronizeData">
      <summary>
            Called when the node should synchronize any data objects with the current state of the node
            before those data objects are serialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.Node.RaiseDestroyedEvent">
      <summary>
            Raises the destroyed event.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.Sim.OrbitNode">
      <summary>
            Represents a node which can be in orbit.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.Sim.Node" />
      <seealso cref="T:ModApi.Flight.Sim.IOrbitNode" />
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.OrbitNode._flightSceneScript">
      <summary>
            The flight scene script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.OrbitNode._orbit">
      <summary>
            The orbit for the OrbitNode.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.OrbitNode.ChangedSoI">
      <summary>
            Occurs when this node has transitioned to a new soi.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.MinimumOrbitVelocity">
      <summary>
            Gets the minimum orbit velocity allowed to prevent orbit from becoming essentially parabolic, which will cause issues.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.Name">
      <summary>
            Gets or sets the name of the orbit node.
            </summary>
      <value>
            The name of the orbit node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.NestedDepth">
      <summary>
            Gets the nested depth of this Node.  If the node is the Sun, it is at zero, if it is Earth: 1, Moon: 2, etc.
            </summary>
      <value>
            The nested depth of this node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.NodeExitsSoi">
      <summary>
            Gets a value indicating whether this node will exit its parent's sphere of influence.
            </summary>
      <value>
        <c>true</c> if this node will exit its parent's sphere of influence; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.Orbit">
      <summary>
            Gets or sets the orbit.
            </summary>
      <value>
            The orbit.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.OrbitUpdated">
      <summary>
            Gets or sets a value indicating whether the orbit has updated (TODO: Since when? Is this only used by MapView?)
            </summary>
      <value>
        <c>true</c> if [orbit updated]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.Position">
      <summary>
            Gets the position relative to it's parent.
            </summary>
      <value>
            The position the position relative to it's parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.SolarPosition">
      <summary>
            Gets the position of this planet relative to the closest sun.
            </summary>
      <value>
            The solar position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.SolarVelocity">
      <summary>
            Gets the velocity of this node relative to the closest sun.
            </summary>
      <value>
            The velocity of this node relative to the closest sun.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.SphereOfInfluence">
      <summary>
            Gets the sphere of influence.
            </summary>
      <value>
            The sphere of influence.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitNode.Velocity">
      <summary>
            Gets the velocity relative to it's parent.
            </summary>
      <value>
            The velocity relative to it's parent.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.GetAtmosphereEntryPoint">
      <summary>
            Gets the atmosphere entry point (or planet impact if no atmosphere exists) for the node.  Returns <c>null</c> if the node is already inside the atmosphere, or it does not enter it.
            </summary>
      <returns>The atmosphere entry point (or planet impact if no atmosphere exists) for the node. Returns <c>null</c> if the node is already inside the atmosphere, or it does not enter it.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.GetCurrentPoint">
      <summary>
            Gets the point at current time.
            </summary>
      <returns>
            The orbit's current point.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.GetNodeAtDepth(System.Int32)">
      <summary>
            Gets the node at the specified depth in this nodes parent chain (includes checking self).
            </summary>
      <param name="depth">The depth of the parent to get (can be this node's depth).</param>
      <returns>
            The node at the specified depth in this nodes parent chain (includes checking self).
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Node depth cannot be greater than current depth (can't access children).
            or
            Node depth must be &gt;= 0</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.GetPointAtTime(System.Double)">
      <summary>
            Gets the point at the specified time.
            </summary>
      <param name="time">The absolute time to get the point for.</param>
      <returns>
            The point at the specified time.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.GetSolarPositionAtTime(System.Double)">
      <summary>
            Gets the solar position at the specified time.
            </summary>
      <param name="time">The time to get the point for.</param>
      <returns>
            The solar position at the specified time.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.GetSolarVelocityAtTime(System.Double)">
      <summary>
            Gets the solar velocity at the specified time.
            </summary>
      <param name="time">The time to get the velocity for.</param>
      <returns>
            The solar velocity at the specified time.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.Initialize">
      <summary>
            Called after the node hierarchy has been created and before the simulation has started.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.IsDescendantOf(ModApi.Flight.Sim.IOrbitNode,System.Boolean)">
      <summary>
            Determines whether this node is a descendant of the supplied node.
            </summary>
      <param name="node">A node to determine if this node is an ancestor of.</param>
      <param name="includeSelf">If set to <c>true</c> will also return true if the supplied node is the same as this node.</param>
      <returns>
        <c>true</c> if this node is a descendant of the supplied node. If includeSelf is true, will also return true if they are the same; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.SetStateVectors(UnityEngine.Vector3d,UnityEngine.Vector3d,System.Double)">
      <summary>
            Sets the state vectors.
            </summary>
      <param name="position">The position.</param>
      <param name="velocity">The velocity.</param>
      <param name="time">The time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.SetStateVectorsAtDefaultTime(UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Sets the state vectors, defaulting to the current game-time.
            </summary>
      <param name="position">The position.</param>
      <param name="velocity">The velocity.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitNode.TransitionToNewSoi(ModApi.Flight.Sim.IPlanetNode,UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Transitions to new soi.
            </summary>
      <param name="newParent">The new parent.</param>
      <param name="newPosition">The new position.</param>
      <param name="newVelocity">The new velocity.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.Sim.OrbitPoint">
      <summary>
            Represents an orbital point.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.OrbitPoint._eccentricAnomaly">
      <summary>
            The eccentric anomaly.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.OrbitPoint._position">
      <summary>
            The position of the point.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.OrbitPoint._time">
      <summary>
            The time of the point.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.OrbitPoint._trueAnomaly">
      <summary>
            The true anomaly
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.OrbitPoint._velocity">
      <summary>
            The velocity.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPoint.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.Sim.OrbitPoint" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPoint.#ctor(ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.Sim.OrbitPoint" /> class.
            </summary>
      <param name="point">The point to make a copy of.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitPoint.EccentricAnomaly">
      <summary>
            Gets the eccentric anomaly.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitPoint.Position">
      <summary>
            Gets the position of the point.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitPoint.Time">
      <summary>
            Gets the time of the point.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitPoint.TrueAnomaly">
      <summary>
            Gets the true anomaly
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitPoint.Velocity">
      <summary>
            Gets the velocity at the point.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPoint.Set(UnityEngine.Vector3d,UnityEngine.Vector3d,System.Double,System.Double,System.Double)">
      <summary>
            Sets the orbit point's parameters.
            </summary>
      <param name="p">The position of the point.</param>
      <param name="v">The velocity of the point.</param>
      <param name="nu">The true anomaly of the point.</param>
      <param name="ea">The eccentric anomaly.</param>
      <param name="t">The time of the point.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPoint.Set(ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Sets this IOrbitPoint to be the same as the specified IOrbitPoint.
            </summary>
      <param name="point">The point to copy.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPoint.VerifyPoint(System.Double)">
      <summary>
            Verifies that point is valid given an orbit of the specified eccentricity.
            </summary>
      <param name="eccentricity">The orbital eccentricity to verify the point against.</param>
      <returns>
        <c>true</c> if the point is valid, otherwise <c>false</c>.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Flight.Sim.OrbitPointSet">
      <summary>
            Class that contains a list of points for an orbit.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.OrbitPointSet._period">
      <summary>
            The period of the orbit being represented by the point set.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.OrbitPointSet._points">
      <summary>
            The _points
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPointSet.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.Sim.OrbitPointSet" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitPointSet.Closed">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.Sim.OrbitPointSet" /> is closed.
            </summary>
      <value>
        <c>true</c> if closed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitPointSet.Count">
      <summary>
            Gets the number of points in the set.
            </summary>
      <value>
            The count.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitPointSet.IntersectsPlanet">
      <summary>
            Gets or sets a value indicating whether the orbit point set intersects the parent planet.
            </summary>
      <value>
        <c>true</c> if the orbit point set intersects the parent planet.; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.OrbitPointSet.Period">
      <summary>
            Gets the period of the orbit being represented by the point set.
            </summary>
      <value>
            The period of the orbit being represented by the point set.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPointSet.AddPoint(ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Adds the point.
            </summary>
      <param name="orbitPoint">The orbit point to add.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPointSet.GetPoint(System.Int32)">
      <summary>
            Gets the point at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>The point.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPointSet.Initialize(System.Double)">
      <summary>
            Initializes the time.
            </summary>
      <param name="period">The period.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.OrbitPointSet.Last(System.Int32)">
      <summary>
            Lasts the specified index from end.
            </summary>
      <param name="indexFromEnd">The index from end.</param>
      <returns>The specified point at index from end.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.Sim.PlanetNode">
      <summary>
            Node for a planet.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.Sim.OrbitNode" />
      <seealso cref="T:ModApi.Flight.Sim.IPlanetNode" />
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.PlanetNode._childPlanets">
      <summary>
            The child planets.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.PlanetNode._data">
      <summary>
            The node data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.PlanetNode._dynamicNodes">
      <summary>
            The dynamic nodes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.PlanetNode._recalculateInverse">
      <summary>
            The recalculate inverse flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.PlanetNode._rotationAngle">
      <summary>
            The rotation angle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.PlanetNode._rotationInverse">
      <summary>
            The rotation inverse.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.PlanetNode._sphereOfInfluence">
      <summary>
            The sphere of influence
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.#ctor(ModApi.Flight.Sim.PlanetNodeData,ModApi.Planet.IPlanetData,ModApi.Flight.Sim.IOrbit)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.Sim.PlanetNode" /> class.
            </summary>
      <param name="data">The data.</param>
      <param name="planetData">The planet data.</param>
      <param name="orbit">The orbit to use for this planet.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.ChildPlanets">
      <summary>
            Gets the child planets. Excludes the dynamic nodes.
            </summary>
      <value>
            The child planets.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.DynamicNodes">
      <summary>
            Gets the list of dynamic child nodes of this planet. Excludes child planet nodes.
            </summary>
      <value>
            The dynamic nodes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.Name">
      <summary>
            Gets the name of the orbit node.
            </summary>
      <value>
            The name of the orbit node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.ModApi#Flight#UI#INavSphereTarget#OrbitNode">
      <summary>
            Gets the orbit node associated with this nav sphere target.
            </summary>
      <value>
            The orbit node associated with this nav sphere target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.PlanetData">
      <summary>
            Gets the planet data.
            </summary>
      <value>
            The planet data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.Rotation">
      <summary>
            Gets the rotation quaternion. Planet's can only rotate on their Y-axis, so this will be generated
            with a call to Quaternion.Euler(0, RotationAngle, 0).
            </summary>
      <value>
            The rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.RotationAngle">
      <summary>
            Gets or sets the rotation angle of the reference frame.
            </summary>
      <value>
            The rotation angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.RotationInverse">
      <summary>
            Gets the rotation quaternion.
            </summary>
      <value>
            The rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.SphereOfInfluence">
      <summary>
            Gets the sphere of influence.
            </summary>
      <value>
            The sphere of influence.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.SphereOfInfluenceExitDistance">
      <summary>
            Gets the sphere of influence distance with a small buffer added which is the optimal SOI transfer distance to preven SOI back/forth swapping.
            </summary>
      <value>
            The sphere of influence distance with a small buffer added which is the optimal SOI transfer distance to preven SOI back/forth swapping.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.TerrainDataLoaded">
      <summary>
            Gets a value indicating whether the terrain data has been loaded.
            </summary>
      <value>
        <c>true</c> if the terrain data has been loaded; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.PlanetNode.TerrainGenerator">
      <summary>
            Gets the terrain generator.
            </summary>
      <value>
            The terrain generator.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.AddChildNode(ModApi.Flight.Sim.INode)">
      <summary>
            Adds the child node.
            </summary>
      <param name="node">The node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.CalculateGravityVector(UnityEngine.Vector3d,System.Double)">
      <summary>
            Calculates the gravity force vector at the specified position with the specified mass.
            </summary>
      <param name="position">The position of the orbiting body.</param>
      <param name="mass">The mass of the orbiting body.</param>
      <returns>
            The gravity force vector.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.CalculateSurfaceVelocity(UnityEngine.Vector3d)">
      <summary>
            Calculates the velocity of a point on the surface of the planet. The velocity vector is in surface coordinates. In order
            to convert that to planet coordinates, it needs to be multiplied by the planet's rotation quaternion.
            Here's a very poor diagram: http://imgur.com/852uxET
            </summary>
      <param name="surfacePoint">The surface point. The magnitude of this point should be equal to the radius of the planet.</param>
      <returns>The velocity in surface coordinates.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.FindPlanet(System.String)">
      <summary>
            Finds the planet.
            </summary>
      <param name="name">The name.</param>
      <returns>The planet node, or null if does not exist.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.FlightEnd">
      <summary>
            Called when the flight scene is being destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.FlightUpdate(System.Double,System.Double)">
      <summary>
            Updates the node. Called every frame. Elapsed time can vary greatly depending on the current
            warp mode.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
      <param name="currentTime">The current game time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.GetSurfaceCoordinates(UnityEngine.Vector3d,System.Double@,System.Double@)">
      <summary>
            Gets the latitude and longitude from the surface position. Zero lat and zero long would be (0,0,1) on a planet of radius 1.
            </summary>
      <param name="surfacePosition">The surface position.</param>
      <param name="latitude">The latitude in radians, which can be -PI to PI. Zero is the equator.</param>
      <param name="longitude">The longitude in radians, which can be Zero to 2*PI.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.GetSurfacePosition(System.Double,System.Double,System.Double)">
      <summary>
            Gets the surface position from lat/long/AGL coordinates. Zero lat and zero long would be (0,0,1) on a planet of radius 1.
            </summary>
      <param name="latitude">The latitude in radians, which can be -PI to PI. Zero is the equator.</param>
      <param name="longitude">The longitude in radians, which can be Zero to 2*PI.</param>
      <param name="altitudeAboveGroundLevel">The altitude above ground level.</param>
      <returns>The surface position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.GetTerrainHeight(UnityEngine.Vector3d)">
      <summary>
            Gets the height of the planet terrain under the specified planet position.
            </summary>
      <param name="planetPosition">The planet position.</param>
      <returns>The height of the terrain.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.GetTerrainVertexData(UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Gets the terrain vertex data under the specified planet position.
            </summary>
      <param name="planetPosition">The planet position.</param>
      <param name="planetNormal">The planet normal.</param>
      <returns>The terrain vertex data under the specified planet position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.LoadTerrainData">
      <summary>
            Loads the terrain data and creates the terrain generator.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.PlanetVectorToSurfaceVector(UnityEngine.Vector3d)">
      <summary>
            Converts the vector from planet coordinates to surface coordinates.
            </summary>
      <param name="planetVector">The planet position.</param>
      <returns>The surface position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.RemoveChildNode(ModApi.Flight.Sim.INode)">
      <summary>
            Removes the child node.
            </summary>
      <param name="node">The node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.SurfaceVectorToPlanetVector(UnityEngine.Vector3d)">
      <summary>
            Converts the vector from surface coordinates to a planet coordinates.
            </summary>
      <param name="surfaceVector">The surface position.</param>
      <returns>The planet position.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.SynchronizeData">
      <summary>
            Synchronizes the data object with the current state of the planet node.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.UnloadTerrainData">
      <summary>
            Unloads the terrain data and destroys the terrain generator.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.UpdateRotation(System.Double)">
      <summary>
            Updates the rotation of the planet.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.PlanetNode.SetSphereOfInfluence">
      <summary>
            Sets the sphere of influence.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.Sim.ShipNode">
      <summary>
            Orbiting node for a ship.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.Sim.OrbitNode" />
      <seealso cref="T:ModApi.Flight.GameView.IGameViewObject" />
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.ShipNode.LoadedIntoGameView">
      <summary>
            Occurs when the node is loaded into the game view.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.ShipNode.UnloadedFromGameView">
      <summary>
            Occurs when the node is removed from the game view.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.Altitude">
      <summary>
            Gets or sets the altitude.
            </summary>
      <value>
            The altitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.CameraTargetPlanetPosition">
      <summary>
            Gets the position on the node where the camera should focus, in planet coordinates.
            </summary>
      <value>
            The camera target planet position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.CameraTargetPosition">
      <summary>
            Gets the position on the node where the camera should focus, in frame coordinates.
            </summary>
      <value>
            The camera target position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.FramePosition">
      <summary>
            Gets the position of the ship in the frame.
            </summary>
      <value>
            The frame position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.FrameVelocity">
      <summary>
            Gets the velocity of the ship in the frame.
            </summary>
      <value>
            The frame velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.GameObject">
      <summary>
            Gets the corresponding game object.
            </summary>
      <value>
            The corresponding game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.GameViewObject">
      <summary>
            Gets the game view object.
            </summary>
      <value>
            The game view object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.IsLoadedInGameView">
      <summary>
            Gets a value indicating whether this instance is loaded in game view.
            </summary>
      <value>
        <c>true</c> if this instance is loaded in game view; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.IsPhysicsEnabled">
      <summary>
            Gets a value indicating whether physics is enabled.
            </summary>
      <value>
        <c>true</c> if [physics enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.ShipNode.IsPlayer">
      <summary>
            Gets or sets a value indicating whether this CraftNode is being controlled by the player.
            </summary>
      <value>
        <c>true</c> if this instance is player; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.ShipNode.ModApi#Flight#GameView#IGameViewObject#LoadIntoGameView(ModApi.Flight.GameView.IGameView)">
      <summary>
            Called when the object should be loaded into the game view.
            </summary>
      <param name="gameView">The game view that the object is being loaded into.</param>
      <returns>
            The root transform of the game view object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.ShipNode.ModApi#Flight#GameView#IGameViewObject#OnReferenceFrameRecentered(ModApi.Flight.GameView.IReferenceFrame,UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Called when reference frame has been re-centered.
            It might seem odd that the position and velocity deltas are not provided to
            this method, but that is because the reference frame is moving all the time and
            each object will need to calculate its own position and velocity deltas.
            </summary>
      <param name="referenceFrame">The reference frame.</param>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.ShipNode.RecalculateFrameState(ModApi.Flight.GameView.IReferenceFrame)">
      <summary>
            Called when the <see cref="T:ModApi.Flight.GameView.IGameViewObject" /> should re-calculate its state (position/velocity) within the reference frame.
            This may be called whenever the reference frame has been recentered, when the reference frame is rotated (if it is surface locked), or any time
            this object's coordinates (i.e. orbital params) are manually changed outside the physics simulation (ex. warp).
            </summary>
      <param name="referenceFrame">The reference frame.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.ShipNode.SetPhysicsEnabled(System.Boolean,ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Enables/disables physics for the ship.
            </summary>
      <param name="enabled">if set to <c>true</c> then physics is enabled, otherwise <c>false</c>.</param>
      <param name="reason">The reason for the change.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.ShipNode.ModApi#Flight#GameView#IGameViewObject#UnloadFromGameView(System.Boolean)">
      <summary>
            Called when removed from game view.
            </summary>
      <param name="flightEnd">if set to <c>true</c> ship is being unloaded due to the flight ending.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.ShipNode.OnLoadIntoGameView(ModApi.Flight.GameView.IGameView)">
      <summary>
            Called when the object should be loaded into the game view.
            </summary>
      <param name="gameView">The game view that the object is being loaded into.</param>
      <returns>
            The root transform of the game view object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.ShipNode.OnUnloadFromGameView(System.Boolean)">
      <summary>
            Called when removed from game view.
            </summary>
      <param name="flightEnd">if set to <c>true</c> ship is being unloaded due to the flight ending.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.Sim.StructureNode">
      <summary>
            Orbiting node for a structure.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.Sim.Node" />
      <seealso cref="T:ModApi.Flight.GameView.IGameViewObject" />
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.StructureNode._gameView">
      <summary>
            The game view
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.StructureNode._position">
      <summary>
            The position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.Sim.StructureNode._transform">
      <summary>
            The transform of the game object loaded into the game view.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.StructureNode.#ctor(UnityEngine.Vector3d,UnityEngine.Quaterniond,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.Sim.StructureNode" /> class.
            </summary>
      <param name="surfacePosition">The surface position.</param>
      <param name="surfaceRotation">The surface rotation.</param>
      <param name="prefabName">Name of the prefab.</param>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.StructureNode.LoadedIntoGameView">
      <summary>
            Occurs when the node is loaded into the game view.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Flight.Sim.StructureNode.UnloadedFromGameView">
      <summary>
            Occurs when the node is removed from the game view.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.CameraTargetPlanetPosition">
      <summary>
            Gets the position on the node where the camera should focus, in planet coordinates.
            </summary>
      <value>
            The camera target planet position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.CameraTargetPosition">
      <summary>
            Gets the position on the node where the camera should focus, in frame coordinates.
            </summary>
      <value>
            The camera target position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.FramePosition">
      <summary>
            Gets the position of the ship in the frame.
            </summary>
      <value>
            The frame position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.GameObject">
      <summary>
            Gets the corresponding game object.
            </summary>
      <value>
            The corresponding game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.GameViewLoadDistance">
      <summary>
            Gets the distance in meters at which the node will be loaded into the game view.
            </summary>
      <value>
            The game view load distance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.GameViewObject">
      <summary>
            Gets the game view object.
            </summary>
      <value>
            The game view object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.IsLoadedInGameView">
      <summary>
            Gets a value indicating whether this instance is loaded in game view.
            </summary>
      <value>
        <c>true</c> if this instance is loaded in game view; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.IsPhysicsEnabled">
      <summary>
            Gets a value indicating whether physics is enabled.
            </summary>
      <value>
        <c>true</c> if physics is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.Position">
      <summary>
            Gets the position relative to it's parent.
            </summary>
      <value>
            The position the position relative to it's parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.PrefabName">
      <summary>
            Gets the name of the prefab.
            </summary>
      <value>
            The name of the prefab.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.SurfacePosition">
      <summary>
            Gets the surface position.
            </summary>
      <value>
            The surface position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.Sim.StructureNode.SurfaceRotation">
      <summary>
            Gets the rotation of the structure on the surface.
            </summary>
      <value>
            The rotation on the surface.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.StructureNode.FlightUpdate(System.Double,System.Double)">
      <summary>
            Updates the specified elapsed time.
            </summary>
      <param name="elapsedTime">The elapsed time.</param>
      <param name="currentTime">The current game time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.StructureNode.Initialize">
      <summary>
            Called after the node hierarchy has been created and before the simulation has started.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.StructureNode.LoadIntoGameView(ModApi.Flight.GameView.IGameView)">
      <summary>
            Called when the object should be loaded into the game view.
            </summary>
      <param name="gameView">The game view that the object is being loaded into.</param>
      <returns>
            The root transform of the game view object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.StructureNode.ModApi#Flight#GameView#IGameViewObject#OnReferenceFrameRecentered(ModApi.Flight.GameView.IReferenceFrame,UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Called when the reference frame has re-centered.
            </summary>
      <param name="referenceFrame">The reference frame.</param>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.StructureNode.RecalculateFrameState(ModApi.Flight.GameView.IReferenceFrame)">
      <summary>
            Called when the <see cref="T:ModApi.Flight.GameView.IGameViewObject" /> should re-calculate its state (position/velocity) within the reference frame.
            This may be called whenever the reference frame has been recentered, when the reference frame is rotated (if it is surface locked), or any time
            this object's coordinates (i.e. orbital params) are manually changed outside the physics simulation (ex. warp).
            </summary>
      <param name="referenceFrame">The reference frame.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.StructureNode.SetPhysicsEnabled(System.Boolean,ModApi.Flight.GameView.PhysicsChangeReason)">
      <summary>
            Enables/disables physics for the ship.
            </summary>
      <param name="enabled">if set to <c>true</c> then physics is enabled, otherwise <c>false</c>.</param>
      <param name="reason">The reason for the change.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.Sim.StructureNode.UnloadFromGameView(System.Boolean)">
      <summary>
            Called when removed from game view.
            </summary>
      <param name="flightEnd">if set to <c>true</c> object is being unloaded due to the flight ending.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.TimeManager">
      <summary>
            Manages time in the flight scene and transitions between different time multipliers.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager.NormalSpeedIndex">
      <summary>
            The normal speed index
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager.PauseSpeedIndex">
      <summary>
            The pause speed index
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager.SlowMoIndex">
      <summary>
            The slow mo index
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._atmosphereAltitudeAboveCenter">
      <summary>
            The atmosphere's altitude above the planet's center.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._craftPointAtmosEntryDuringWarp">
      <summary>
            The craft's point where it enters the atmosphere when warp began, or <c>null</c> if it doesn't.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._fastForward">
      <summary>
            The fast forward multiplier mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._fixedElapsedTime">
      <summary>
            The amount of time spent in FixedUpdate this frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._flightScene">
      <summary>
            The flight scene.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._modeIndex">
      <summary>
            The index of the current mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._modes">
      <summary>
            The modes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._realTime">
      <summary>
            The 1x real-time mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._reverseWarp">
      <summary>
            Used to allow reversing the progression of time in warp modes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._slowMotion">
      <summary>
            The slow motion speed mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.TimeManager._unPauseIndex">
      <summary>
            The index to set the mode to after unpausing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.#ctor(Assets.Scripts.Flight.FlightSceneScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.TimeManager" /> class.
            </summary>
      <param name="flightScene">The flight scene.</param>
    </member>
    <member name="E:Assets.Scripts.Flight.TimeManager.TimeMultiplierModeChanged">
      <summary>
            Occurs when the time multiplier mode has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.CanDecreaseTimeMultiplier">
      <summary>
            Gets a value indicating whether this instance can decrease time multiplier.
            </summary>
      <value>
        <c>true</c> if this instance can decrease time multiplier; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.CurrentMode">
      <summary>
            Gets the current mode.
            </summary>
      <value>
            The current mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.DeltaTime">
      <summary>
            Gets the delta time since the last frame, taking into account the current warp multiplier.
            </summary>
      <value>
            The time in seconds.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.FirstWarpMode">
      <summary>
            Gets the first warp mode index.
            </summary>
      <value>
            The first warp mode index.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.Modes">
      <summary>
            Gets the time multiplier modes.
            </summary>
      <value>
            The the time multiplier modes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.Paused">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.TimeManager" /> is paused.
            </summary>
      <value>
        <c>true</c> if paused; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.RealTime">
      <summary>
            Gets the 1x real-time mode.
            </summary>
      <value>
            The 1x real-time mode.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.CanIncreaseTimeMultiplier(System.String@)">
      <summary>
            Gets a value indicating whether the time multiplier can be increased.
            </summary>
      <param name="failRason">The fail rason.</param>
      <returns>
        <c>true</c> if the time multiplier can be increased; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.CanSetTimeMultiplierMode(System.Int32,System.String@)">
      <summary>
            Determines whether this time manager can set time multiplier mode to the specified mode.
            </summary>
      <param name="modeIndex">Index of the mode.</param>
      <param name="failReason">The fail reason.</param>
      <returns>
        <c>true</c> if this instance [can set time multiplier mode] the specified mode; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.CheckCurrentTimeMultiplier(ModApi.Craft.ICraftNode)">
      <summary>
            Checks the current time multiplier and reduces it if the craft is below the minimum altitude.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.DecreaseTimeMultiplier">
      <summary>
            Decreases the time multiplier.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.FixedUpdate(System.Single)">
      <summary>
            Called on the FixedUpdate of the Flight Scene.
            </summary>
      <param name="fixedDeltaTime">The fixed delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.FlightEnd">
      <summary>
            Called when the flight scene is being destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.IncreaseTimeMultiplier">
      <summary>
            Increases the time multiplier.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.RequestPauseChange(System.Boolean,System.Boolean)">
      <summary>
            Requests the pause change.
            </summary>
      <param name="paused">if set to <c>true</c> request the simulation to be paused, otherwise <c>false</c>.</param>
      <param name="userInitiated">if set to <c>true</c> this request is DIRECTLY user initiated by hitting the pause button, otherwise <c>false</c>.  This should be set to false even if the request is taken as a result of a user action (opening menu)...only when the user directly pauses the game should this be set to true.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.SetFastForwardMode">
      <summary>
            Sets the fast forward mode.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.SetMode(System.Int32,System.Boolean)">
      <summary>
            Sets the time multiplier mode.
            </summary>
      <param name="modeIndex">Index of the mode.</param>
      <param name="forceChange">If set to <c>true</c> change will occur even if it is the same as the current mode.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Mode index out of range: " + modeIndex</exception>
      <exception cref="T:System.ArgumentException">Mode index out of range.</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.SetMode(ModApi.Flight.ITimeMultiplierMode,System.Boolean)">
      <summary>
            Sets the time multiplier mode.
            </summary>
      <param name="mode">The mode to set to.</param>
      <param name="forceChange">If set to <c>true</c> change will occur even if it is the same as the current mode.</param>
      <exception cref="T:System.ArgumentException">Unknown multiplier mode provided</exception>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.SetNormalSpeedMode">
      <summary>
            Sets the normal speed mode.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.SetSlowMotionMode">
      <summary>
            Sets the slow motion mode.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.Update">
      <summary>
            Updates the Time manager and calculates the delta time for this frame, taking the current time multiplier into account.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.GetCraftAtmosphereEntryPoint">
      <summary>
            Gets the craft atmosphere entry/impact point.
            </summary>
      <returns>The craft atmosphere entry/impact point</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.OrbitAboveAtmosphere(ModApi.Craft.ICraftNode)">
      <summary>
            Checks if an orbit is above the primary's atmosphere, or if there's no atmosphere, then 50km.
            </summary>
      <param name="craftNode">The craft node.</param>
      <returns>True if above atmosphere, or false otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.AddWarpModes(System.Double)">
      <summary>
            Adds the warp modes which have a multiplier greater than minMultiplier.
            </summary>
      <param name="minMultiplier">The minimum multiplier.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.GetMaxWarp(ModApi.Flight.Sim.IOrbitPoint)">
      <summary>
            Gets the maximum available warp.
            </summary>
      <param name="atmosEntryPoint">The point at which the craft is predicted to enter the planet's atmosphere or impact the planet.</param>
      <returns>
            The maximum available warp
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.OnFastForwardSpeedChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{System.Single})">
      <summary>
            Called when the fast forward speed setting changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;float&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.OnSlowMotionSpeedChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{System.Single})">
      <summary>
            Called when the slow motion speed changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:ModApi.Settings.Core.Events.SettingChangedEventArgs&lt;float&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.OnWarpEntered">
      <summary>
            Called when warp has been entered.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.OnWarpExited">
      <summary>
            Called when warp has been exited.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.PreventWarpingThroughPhysics">
      <summary>
            Prevents warping through points where physics should be enabled, like planets and atmospheres.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.ReAddWarpModes">
      <summary>
            Re-adds the add warp modes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.SetModeEndOfFrame(System.Int32,System.Boolean)">
      <summary>
            Sets the mode at the end of the frame.
            </summary>
      <param name="modeIndex">Index of the mode.</param>
      <param name="forceChange">If set to <c>true</c> change will occur even if it is the same as the current mode.</param>
      <returns>
            Unity enumerator.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.SetModeImmediate(System.Int32,System.Boolean)">
      <summary>
            Sets the mode immediately.
            </summary>
      <param name="modeIndex">Index of the mode.</param>
      <param name="forceChange">If set to <c>true</c> change will occur even if it is the same as the current mode.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.TimeManager.TimeMultiplierMode">
      <summary>
            Contains data about a time multiplier mode.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.TimeManager.TimeMultiplierMode.#ctor(System.Double,System.Double,System.Boolean,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.TimeManager.TimeMultiplierMode" /> class.
            </summary>
      <param name="t">The t.</param>
      <param name="a">Minimum altitude.</param>
      <param name="warp">if set to <c>true</c> [warp].</param>
      <param name="name">The name.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.TimeMultiplierMode.MinimumAltitude">
      <summary>
            Gets or sets the minimum altitude.
            </summary>
      <value>
            The minimum altitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.TimeMultiplierMode.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.TimeMultiplierMode.TimeMultiplier">
      <summary>
            Gets or sets the time multiplier.
            </summary>
      <value>
            The time multiplier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.TimeManager.TimeMultiplierMode.WarpMode">
      <summary>
            Gets a value indicating whether [warp mode].
            </summary>
      <value>
        <c>true</c> if [warp mode]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.ActivationPanelController">
      <summary>
            Controller for the activation panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.UI.FlightPanelController" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ActivationPanelController._activationPanel">
      <summary>
            The activation panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ActivationPanelController._buttons">
      <summary>
            The buttons
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ActivationPanelController._noActivationGroupsText">
      <summary>
            The no activation groups text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ActivationPanelController._template">
      <summary>
            The template
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ActivationPanelController.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.UI.ActivationPanelController" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ActivationPanelController.CraftNodeChanged(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Called when the craft node has changed.
            </summary>
      <param name="craftNode">The craft node, or null if one is not currently set.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ActivationPanelController.CreateButtons">
      <summary>
            Creates the buttons.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ActivationPanelController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            This function will be called whenever the layout is rebuilt - if you have any setup code which needs to be executed after the layout is rebuilt, override this function and implement it here.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ActivationPanelController.UpdatePanel(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Updates the panel.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ActivationPanelController.OnActivationButtonClicked(Assets.Scripts.Flight.UI.ActivationPanelController.ActivationButton)">
      <summary>
            Called when an activation button is clicked.
            </summary>
      <param name="activationButton">The activation button.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.ActivationPanelController.ActivationButton">
      <summary>
            The activation button wrapper.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.ActivationPanelController.ActivationButton.ActivationGroup">
      <summary>
            Gets or sets the activation group number (1-based).
            </summary>
      <value>
            The number.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.ActivationPanelController.ActivationButton.Button">
      <summary>
            Gets or sets the button.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.ActivationPanelController.ActivationButton.NameText">
      <summary>
            Gets or sets the name text.
            </summary>
      <value>
            The name text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.ActivationPanelController.ActivationButton.NumberText">
      <summary>
            Gets or sets the number text.
            </summary>
      <value>
            The number text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.ActivationPanelController.ActivationButton.State">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.ActivationPanelController.ActivationButton" /> is state.
            </summary>
      <value>
        <c>true</c> if state; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.EndFlightDialogScript">
      <summary>
            Script for the end flight dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.EndFlightDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.EndFlightDialogScript._templateStatsRow">
      <summary>
            The template stats row
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.EndFlightDialogScript.Create(UnityEngine.Transform)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent canvas use for this dialog.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.EndFlightDialogScript.AddStat(System.String,System.String)">
      <summary>
            Adds the stat.
            </summary>
      <param name="label">The label.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.EndFlightDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.EndFlightDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.EndFlightDialogScript.OnCancelClicked">
      <summary>
            Called when the cancel button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.EndFlightDialogScript.OnExitClicked">
      <summary>
            Called when the exit button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.EndFlightDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout has been rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.EndFlightDialogScript.OnRetryClicked">
      <summary>
            Called when the retry button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.EndFlightDialogScript.UpdateStats">
      <summary>
            Updates the stats.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.FlightPanelController">
      <summary>
            The interface for a flight panel controller.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightPanelController.Active">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.FlightPanelController" /> is active.
            </summary>
      <value>
        <c>true</c> if active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightPanelController.CraftNode">
      <summary>
            Gets the craft node.
            </summary>
      <value>
            The craft node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightPanelController.FlightSceneUiController">
      <summary>
            Gets the flight scene UI controller.
            </summary>
      <value>
            The flight scene UI controller.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightPanelController.CraftNodeChanged(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Called when the craft node has changed.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightPanelController.CraftStructureChanged(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Called when the craft's structure has changed.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightPanelController.Initialize(Assets.Scripts.Flight.UI.FlightSceneUiController)">
      <summary>
            Initializes the panel.
            </summary>
      <param name="flightSceneUiController">The flight scene UI controller.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightPanelController.LateUpdatePanel(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            LateUpdate for the panel.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightPanelController.UpdatePanel(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Updates the panel.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript">
      <summary>
            Script for the flight scene interface.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript._controller">
      <summary>
            The controller.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript._controllerGameObject">
      <summary>
            The controller game object
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript._inputHandler">
      <summary>
            The input handler.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript._navSphere">
      <summary>
            The nav sphere.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript._navSphereInterfaceScript">
      <summary>
            The nav sphere interface script
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.Canvas">
      <summary>
            Gets the IFlightScene UI's canvas.
            </summary>
      <value>
            The IFlightScene UI's canvas.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.FlightScene">
      <summary>
            Gets the flight scene.
            </summary>
      <value>
            The flight scene.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.NavSphere">
      <summary>
            Gets the nav sphere.
            </summary>
      <value>
            The nav sphere.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.NavSphereVisible">
      <summary>
            Gets a value indicating whether nav sphere is currently visible.
            </summary>
      <value>
        <c>true</c> if the nav sphere is visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.Transform">
      <summary>
            Gets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.UiController">
      <summary>
            Gets the flight scene user interface controller.
            </summary>
      <value>
            The flight scene user interface controller.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.AddInputResponder(ModApi.Flight.UI.IInputResponder)">
      <summary>
            Adds the input responder.
            </summary>
      <param name="fullScreenInputResponderScript">The full screen input responder script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.OnBenchmarkButtonClicked">
      <summary>
            Called when the benchmark button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.RestoreNavSphereVisibility">
      <summary>
            Restores the visibility of the nav sphere in the current view.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.SetNavSphereVisibility(System.Boolean,System.Boolean)">
      <summary>
            Sets the nav sphere visibility.
            </summary>
      <param name="visible">if set to <c>true</c> then set the nav sphere visible. Otherwise, false.</param>
      <param name="updateSettings">if set to <c>true</c> then update settings to remember this setting
            for the nav sphere in the current view.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.ShowMessage(System.String,System.Single)">
      <summary>
            Shows the message.
            </summary>
      <param name="message">The message.</param>
      <param name="duration">The duration.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.ConfigureInputResponders">
      <summary>
            Configures the input responders.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneInterfaceScript.OnMapButtonClicked">
      <summary>
            Called when the map button is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.FlightSceneUiController">
      <summary>
            Controller for the flight scene XML UI.
            </summary>
      <seealso cref="T:UI.Xml.XmlLayoutController" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._altitude">
      <summary>
            The altitude. Setting to -1 here to force it to refresh on start.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._altitudeAboveGroundLevel">
      <summary>
            The altitude above ground level
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._altitudeText">
      <summary>
            The altitude text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._altitudeTypeText">
      <summary>
            The altitude type text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._craftNode">
      <summary>
            The craft node
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._fuelFill">
      <summary>
            The fuel fill
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._fuelText">
      <summary>
            The fuel text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._gameView">
      <summary>
            The game view
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._menu">
      <summary>
            The menu element.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._messageText">
      <summary>
            The message text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._messageTimer">
      <summary>
            The message timer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._navSphere">
      <summary>
            The nav sphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._panels">
      <summary>
            The panels
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._partInspectorPanels">
      <summary>
            The part inspector panels
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._recenterButton">
      <summary>
            The recenter button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._speedText">
      <summary>
            The speed text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._speedTypeText">
      <summary>
            The speed type text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._targetBox">
      <summary>
            The target box
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._throttleFill">
      <summary>
            The throttle fill
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._throttleText">
      <summary>
            The throttle text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._velocity">
      <summary>
            The velocity. Setting to -1 here to force it to refresh on start.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FlightSceneUiController._velocityMode">
      <summary>
            The velocity mode
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneUiController.CraftNode">
      <summary>
            Gets the craft node.
            </summary>
      <value>
            The craft node.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            This function will be called whenever the layout is rebuilt - if you have any setup code which needs to be executed after the layout is rebuilt, override this function and implement it here.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.RemovePanel(Assets.Scripts.Flight.UI.FlightPanelController)">
      <summary>
            Removes the panel.
            </summary>
      <param name="panel">The panel.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.SetDisplayAltitudeTypeAGL(System.Boolean)">
      <summary>
            Sets the display type of the altitude.
            </summary>
      <param name="aboveGroundLevel">if set to <c>true</c> display above ground level, otherwise altitude above sea level.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.ShowMessage(System.String,System.Single)">
      <summary>
            Shows the message.
            </summary>
      <param name="message">The message.</param>
      <param name="duration">The duration.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.LateUpdate">
      <summary>
            Unity LateUpdate method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.AddPanel(System.String)">
      <summary>
            Adds the panel with the specified name.
            </summary>
      <param name="name">The name.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.AddPanel(Assets.Scripts.Flight.UI.FlightPanelController)">
      <summary>
            Adds the panel.
            </summary>
      <param name="panel">The panel.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.ClosePartInspectorPanel(Assets.Scripts.Flight.UI.FlightSceneUiController.InspectorPanelWrapper)">
      <summary>
            Closes the part inspector panel.
            </summary>
      <param name="panel">The panel.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnActivationPanelToggleClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the activation panel toggle is clicked.
            </summary>
      <param name="toggle">The toggle.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnActiveCommandPodChanged(ModApi.Craft.ICraftNode)">
      <summary>
            Called when the active command pod has changed.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnAltitudeTypeClicked">
      <summary>
            Called when the altitude type is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnCraftChanged(ModApi.Craft.ICraftNode)">
      <summary>
            Called when the craft node has changed.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnCraftStructureChanged">
      <summary>
            Called when the craft structure has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnExitButtonClicked">
      <summary>
            Called when the exit button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnMapViewButtonClicked">
      <summary>
            Called when the map view button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnNavPanelToggleClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the nav panel toggle is clicked.
            </summary>
      <param name="toggle">The toggle.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnPhotoLibraryButtonClicked">
      <summary>
            Called when the photo library button has been clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnRecenterButtonClicked">
      <summary>
            Called when the recenter button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnRelaunchButtonClicked">
      <summary>
            Called when the relaunch button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnReportBugButtonClicked">
      <summary>
            Called when share the report bug button has been clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnRunBenchmarkButtonClicked">
      <summary>
            Called when the run benchmark button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnSelectedPartChanged(ModApi.Craft.Parts.IPartScript)">
      <summary>
            Called when the selected part has changed.
            </summary>
      <param name="partScript">The part script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnSettingsButtonClicked">
      <summary>
            Called when the settings button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnShareSandboxButtonClicked">
      <summary>
            Called when the share sandbox button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.OnSpeedTypeClicked">
      <summary>
            Called when the speed type is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.SetCraftNode(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Sets the craft.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.ShowListView(Assets.Scripts.Menu.ListView.ListViewModel)">
      <summary>
            Shows the ListView using the specified view model.
            </summary>
      <param name="viewModel">The list view model.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.ToggleMenu">
      <summary>
            Toggles the menu.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.UpdateAltitudeTypeText">
      <summary>
            Updates the altitude type text.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.FlightSceneUiController.InspectorPanelWrapper">
      <summary>
            Wraps an inspector panel along with the part that it is inspecting.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FlightSceneUiController.InspectorPanelWrapper.#ctor(ModApi.Ui.Inspector.IInspectorPanel,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.UI.FlightSceneUiController.InspectorPanelWrapper" /> class.
            </summary>
      <param name="inspectorPanel">The inspector panel.</param>
      <param name="partScript">The part script.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneUiController.InspectorPanelWrapper.InspectorPanel">
      <summary>
            Gets or sets the inspector panel.
            </summary>
      <value>
            The inspector panel.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FlightSceneUiController.InspectorPanelWrapper.PartScript">
      <summary>
            Gets or sets the part script.
            </summary>
      <value>
            The part script.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.FuelTransferPanelController">
      <summary>
            Panel for transferring fuel between parts in the craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FuelTransferPanelController._flightSceneUi">
      <summary>
            The flight scene UI
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FuelTransferPanelController._fuelStatuses">
      <summary>
            The fuel statuses
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.FuelTransferPanelController._fuelStatusTemplate">
      <summary>
            The fuel status template
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FuelTransferPanelController.Active">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.FlightPanelController" /> is active.
            </summary>
      <value>
        <c>true</c> if active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FuelTransferPanelController.Initialize(Assets.Scripts.Flight.UI.FlightSceneUiController)">
      <summary>
            Initializes the panel.
            </summary>
      <param name="flightSceneUiController">The flight scene UI controller.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FuelTransferPanelController.LateUpdatePanel(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            LateUpdate for the panel.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FuelTransferPanelController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            This function will be called whenever the layout is rebuilt - if you have any setup code which needs to be executed after the layout is rebuilt, override this function and implement it here.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FuelTransferPanelController.CreateFuelStatus(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Creates the fuel status UI from the template.
            </summary>
      <param name="fuelSource">The fuel source.</param>
      <returns>The fuel status.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FuelTransferPanelController.GetFuelStatus(ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Gets the fuel status associated with the specified fuel source.
            </summary>
      <param name="fuelSource">The fuel source.</param>
      <returns>
            The fuel status, or null if it does not exist.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FuelTransferPanelController.UpdateFuelStatus(Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus)">
      <summary>
            Updates the fuel status.
            </summary>
      <param name="fuelStatus">The fuel status.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus">
      <summary>
            Class that wraps a fuel source with its status display.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus.#ctor(UI.Xml.XmlElement,ModApi.Craft.Parts.IFuelSource)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus" /> class.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="fuelSource">The fuel source.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus.Active">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus" /> is active.
            </summary>
      <value>
        <c>true</c> if active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus.FuelSource">
      <summary>
            Gets the fuel source.
            </summary>
      <value>
            The fuel source.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus.ProgressImage">
      <summary>
            Gets the progress image.
            </summary>
      <value>
            The progress image.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus.RectTransform">
      <summary>
            Gets the rect transform.
            </summary>
      <value>
            The rect transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus.Text">
      <summary>
            Gets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.FuelTransferPanelController.FuelStatus.XmlElement">
      <summary>
            Gets the XML element.
            </summary>
      <value>
            The XML element.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.InputHandlerScript">
      <summary>
            Input handler script for the flight scene.
            </summary>
      <seealso cref="T:UnityEngine.EventSystems.IDragHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerClickHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerDownHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerUpHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IDropHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IEndDragHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IDeselectHandler" />
      <seealso cref="T:UnityEngine.EventSystems.ISelectHandler" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputHandlerScript._capturedInputResponder">
      <summary>
            The input responder which has captured input.  Only it will receive events until capture is released.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputHandlerScript._fullScreenInputResponders">
      <summary>
            The full screen input responders
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputHandlerScript._pinching">
      <summary>
            The pinching
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputHandlerScript._pinchLastDistance">
      <summary>
            The pinch last distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputHandlerScript._pinchStartDistance">
      <summary>
            The pinch start distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputHandlerScript._pinchStartMidpoint">
      <summary>
            The pinch start midpoint
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.AddInputResponder(ModApi.Flight.UI.IInputResponder)">
      <summary>
            Adds the input responder.
            </summary>
      <param name="fullScreenInputResponderScript">The full screen input responder script.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule before a drag is started.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnDeselect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
            Called by the EventSystem when an object has been de-selected.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called every frame the cursor is dragged.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnDrop(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule on a target that can accept a drop.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule when a drag is ended.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer clicks.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer is pressed on this view.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer has went up.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnScroll(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when a scroll occurs.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.OnSelect(UnityEngine.EventSystems.BaseEventData)">
      <summary>
            Called when an object is selected.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.CreatePinchEventData">
      <summary>
            Creates the pinch event data.
            </summary>
      <returns>The pinch event data.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.PerformPointerEventAction(System.Collections.Generic.List{ModApi.Flight.UI.IInputResponder},System.Func{ModApi.Flight.UI.IInputResponder,System.Boolean})">
      <summary>
            Performs an action on the supplied set of tools.
            </summary>
      <param name="inputResponders">The tools to perform the action on.</param>
      <param name="action">The action to perform on each tool.</param>
      <returns>The input responder which handled the event, or <c>null</c> if it was not handled.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.ReleaseCapture">
      <summary>
            Releases the input capture.  Events will no-longer go to a specific handler, and will resume normal handling.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputHandlerScript.StartInputCapture(ModApi.Flight.UI.IInputResponder)">
      <summary>
            Starts an input capture by the specified input responder.  Only the specified input responder will receive further events until capture is released.
            </summary>
      <param name="inputResponder">The input responder which has captured the input.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.InputResponder">
      <summary>
            InputResponder is used to allow an object to respond to input actions in a structured manner.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._defaultIsResponding">
      <summary>
            The true function
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._defaultPinchResponder">
      <summary>
            The default pinch responder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._defaultPointerResponder">
      <summary>
            The default pointer responder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._defaultSelectionResponder">
      <summary>
            The default pointer responder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._isRespondingToInputs">
      <summary>
            The delegate which is called to determine whether this instance is currently responding to inputs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onBeginDrag">
      <summary>
            The delegate which is called when a drag has begun.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onBeginPinch">
      <summary>
            The delegate which is called when the user begins a multi-touch pinch gesture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onDeselect">
      <summary>
            The delegate which is called when an object is de-selected.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onDrag">
      <summary>
            The delegate which is called when the pointer is dragged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onDrop">
      <summary>
            The delegate which is called when an object is dropped.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onEndDrag">
      <summary>
            The delegate which is called when a drag has ended.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onEndPinch">
      <summary>
            The delegate which is called when the user ends a multi-touch pinch gesture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onPinch">
      <summary>
            The delegate which is called when the user does a multi-touch pinch gesture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onPointerClick">
      <summary>
            The delegate which is called when the pointer is clicked.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onPointerDown">
      <summary>
            The delegate which is called when the pointer goes down.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onPointerUp">
      <summary>
            The delegate which is called when the pointer goes up.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onScroll">
      <summary>
            The delegate which is called when scrolling.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputResponder._onSelect">
      <summary>
            The delegate which is called when an object is selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputResponder.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.UI.InputResponder" /> class.
            </summary>
      <param name="name">The name of the input responder.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.IsResponding">
      <summary>
            Gets or sets the delegate to determine if this responder is currently responding to inputs.
            </summary>
      <value>
            The delegate to determine if this responder is currently responding to inputs.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.Name">
      <summary>
            Gets the name of the input responder.
            </summary>
      <value>
            The name of the input responder.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnBeginDrag">
      <summary>
            Gets or sets the delegate which is called when a drag has begun.
            </summary>
      <value>
            The delegate which is called when a drag has begun.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnBeginPinch">
      <summary>
            Gets or sets the delegate which is called when the user starts a multi-touch pinch gesture.
            </summary>
      <value>
            The delegate which is called when the user begins a multi-touch pinch gesture.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnDeselect">
      <summary>
            Gets or sets the delegate which is called when an object is de-selected.
            </summary>
      <value>
            The delegate which is called when an object is de-selected.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnDrag">
      <summary>
            Gets or sets the delegate which is called when the pointer is dragged.
            </summary>
      <value>
            The delegate which is called when the pointer is dragged.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnDrop">
      <summary>
            Gets or sets the delegate which is called when an object is dropped.
            </summary>
      <value>
            The delegate which is called when an object is dropped.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnEndDrag">
      <summary>
            Gets or sets the delegate which is called when a drag has ended.
            </summary>
      <value>
            The delegate which is called when a drag has ended.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnEndPinch">
      <summary>
            Gets or sets the delegate which is called when the user ends a multi-touch pinch gesture.
            </summary>
      <value>
            The delegate which is called when the user ends a multi-touch pinch gesture.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnPinch">
      <summary>
            Gets or sets the delegate which is called when the user does a multi-touch pinch gesture.
            </summary>
      <value>
            The delegate which is called when the user does a multi-touch pinch gesture.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnPointerClick">
      <summary>
            Gets or sets the delegate which is called when the pointer is clicked.
            </summary>
      <value>
            The delegate which is called when the pointer is clicked.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnPointerDown">
      <summary>
            Gets or sets the delegate which is called when the pointer goes down.
            </summary>
      <value>
            The delegate which is called when the pointer goes down.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnPointerUp">
      <summary>
            Gets or sets the delegate which is called when the pointer goes up.
            </summary>
      <value>
            The delegate which is called when the pointer goes up.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnScroll">
      <summary>
            Gets or sets the delegate which is called when scrolling.
            </summary>
      <value>
            The delegate which is called when sccrolling on scroll.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputResponder.OnSelect">
      <summary>
            Gets or sets the delegate which is called when an object is selected.
            </summary>
      <value>
            The delegate which is called when an object is selected.
            Note: Set to null for default behavior.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.InputSliderPanelController">
      <summary>
            Controller for the input slider panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.UI.FlightPanelController" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController._addSliderButtonTemplate">
      <summary>
            The add slider button template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController._addSliderPanel">
      <summary>
            The add slider panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController._addSliderParent">
      <summary>
            The add slider parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController._expanded">
      <summary>
            The expanded flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController._removeSliderButton">
      <summary>
            The remove slider button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController._sliderParent">
      <summary>
            The slider parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController._sliders">
      <summary>
            The sliders
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController._sliderTemplate">
      <summary>
            The slider template
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputSliderPanelController.Controls">
      <summary>
            Gets the controls.
            </summary>
      <value>
            The controls.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.CraftNodeChanged(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Called when the craft node has changed.
            </summary>
      <param name="craftNode">The craft node, or null if one is not currently set.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.Initialize(Assets.Scripts.Flight.UI.FlightSceneUiController)">
      <summary>
            Initializes the panel.
            </summary>
      <param name="flightSceneUiController">The flight scene UI controller.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            This function will be called whenever the layout is rebuilt - if you have any setup code which needs to be executed after the layout is rebuilt, override this function and implement it here.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.UpdatePanel(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Updates the panel.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.AddInputSlider(System.String,System.Func{System.Single},System.Action{System.Single})">
      <summary>
            Adds the input slider.
            </summary>
      <param name="sliderName">Name of the slider.</param>
      <param name="getAction">The get action.</param>
      <param name="setAction">The set action.</param>
      <returns>The input slider.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.ExpandPanel(System.Boolean)">
      <summary>
            Expands the panel.
            </summary>
      <param name="expand">if set to <c>true</c> [expand].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.OnAddSliderPanelClicked(Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider)">
      <summary>
            Called when the add slider panel button is clicked.
            </summary>
      <param name="slider">The slider.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.OnRemoveSliderClicked">
      <summary>
            Called when the remove slider button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.OnShowAddSliderPanelClicked">
      <summary>
            Called when the show add slider panel button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.UpdateLayout(System.Boolean)">
      <summary>
            Updates the layout.
            </summary>
      <param name="saveOpenSlidersState">if set to <c>true</c> save open sliders state.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider">
      <summary>
            Provides functionality to create and destroy a slider UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider._slider">
      <summary>
            The slider
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.#ctor(System.Func{System.Single},System.Action{System.Single})">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider" /> class.
            </summary>
      <param name="getAction">The get action.</param>
      <param name="setAction">The set action.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.AddButton">
      <summary>
            Gets or sets the add button.
            </summary>
      <value>
            The add button.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.AllowNegative">
      <summary>
            Gets or sets a value indicating whether to allow negative values.
            </summary>
      <value>
        <c>true</c> if [allow negative]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.Element">
      <summary>
            Gets the element.
            </summary>
      <value>
            The element.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.GetAction">
      <summary>
            Gets the get action.
            </summary>
      <value>
            The get action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.IsUiCreated">
      <summary>
            Gets a value indicating whether this instance is UI created.
            </summary>
      <value>
        <c>true</c> if this instance is UI created; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.SetAction">
      <summary>
            Gets the set action.
            </summary>
      <value>
            The set action.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.CreateUi(UI.Xml.XmlElement)">
      <summary>
            Called when the slider UI is created.
            </summary>
      <param name="xmlElement">The XML element.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider.DestroyUi">
      <summary>
            Destroys the UI.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.InputSliderScript">
      <summary>
            Script attached to an input slider.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IBeginDragHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IDragHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IEndDragHandler" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderScript._clickArea">
      <summary>
            The click area
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderScript._handle">
      <summary>
            The handle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderScript._height">
      <summary>
            The height of the area the handle can move.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderScript._inputSlider">
      <summary>
            The input slider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.InputSliderScript._sliderValue">
      <summary>
            The slider value
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.InputSliderScript.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderScript.Initialize(Assets.Scripts.Flight.UI.InputSliderPanelController.InputSlider)">
      <summary>
            Initializes the specified input slider.
            </summary>
      <param name="inputSlider">The input slider.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderScript.OnBeginDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule before a drag is started.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When dragging is occurring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderScript.OnEndDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule when a drag is ended.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderScript.OnPointerClick(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Use this callback to detect clicks.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.InputSliderScript.UpdateHandlePosition(UnityEngine.Vector2)">
      <summary>
            Updates the handle position.
            </summary>
      <param name="cursorPosition">The cursor position.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.NavPanelController">
      <summary>
            Controller for the nav panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.UI.FlightPanelController" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavPanelController._flightSceneUi">
      <summary>
            The flight scene UI
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavPanelController._lockHeadingButton">
      <summary>
            The lock heading button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavPanelController._navSphere">
      <summary>
            The nav sphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavPanelController._progradeButton">
      <summary>
            The prograde button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavPanelController._retrogradeButton">
      <summary>
            The retrograde button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavPanelController._targetButton">
      <summary>
            The target button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavPanelController._translationButton">
      <summary>
            The translation button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavPanelController._visibleButton">
      <summary>
            The visible button
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.CraftNodeChanged(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Called when the craft node has changed.
            </summary>
      <param name="craftNode">The craft node, or null if one is not currently set.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.Initialize(Assets.Scripts.Flight.UI.FlightSceneUiController)">
      <summary>
            Initializes the panel.
            </summary>
      <param name="flightSceneUiController">The flight scene UI controller.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            This function will be called whenever the layout is rebuilt - if you have any setup code which needs to be executed after the layout is rebuilt, override this function and implement it here.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.UpdatePanel(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Updates the panel.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.OnLockHeadingClicked">
      <summary>
            Called when the lock heading button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.OnProgradeClicked">
      <summary>
            Called when the prograde button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.OnRetrogradeClicked">
      <summary>
            Called when the retrograde button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.OnTargetClicked">
      <summary>
            Called when the target button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.OnTranslationClicked">
      <summary>
            Called when the translation button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.OnVisibleClicked">
      <summary>
            Called when the visible button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavPanelController.UpdateButton(UI.Xml.XmlElement,System.Boolean)">
      <summary>
            Updates the button to the selected state.
            </summary>
      <param name="button">The button.</param>
      <param name="selected">if set to <c>true</c> [selected].</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.NavSphereDiscType">
      <summary>
            The available disc types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscType.Heading">
      <summary>
            The heading disc type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscType.Pitch">
      <summary>
            The pitch disc type.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.NavSphereDiscScript">
      <summary>
            Script for a disc in the nav sphere.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._angle">
      <summary>
            The angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._collider">
      <summary>
            The collider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._colliderSphere">
      <summary>
            The sphere collider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._discType">
      <summary>
            The disc type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._flipped">
      <summary>
            The flipped flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._highlighted">
      <summary>
            The highlighted flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._locked">
      <summary>
            The locked flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._markings">
      <summary>
            The markings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._mesh">
      <summary>
            The mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._rootTransform">
      <summary>
            The root transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._selected">
      <summary>
            The selected flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._targetRotation">
      <summary>
            The target rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereDiscScript._usePlaneIntersection">
      <summary>
            The use plane intersection flag. When false, use a sphere intersection. When null, calculate which to use.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereDiscScript.Angle">
      <summary>
            Gets or sets the angle.
            </summary>
      <value>
            The angle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereDiscScript.ColliderEnabled">
      <summary>
            Gets or sets a value indicating whether [collider enabled].
            </summary>
      <value>
        <c>true</c> if [collider enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereDiscScript.DiscType">
      <summary>
            Gets the type of the disc.
            </summary>
      <value>
            The type of the disc.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereDiscScript.Flipped">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.NavSphereDiscScript" /> is flipped. This is used
            by the heading disc when the pitch goes past 90 degrees to visaully flip the heading indicator over to the
            other side. This just simply rotates the heading disc mesh 180 degrees.
            </summary>
      <value>
        <c>true</c> if flipped; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereDiscScript.Highlighted">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.NavSphereDiscScript" /> is highlighted.
            </summary>
      <value>
        <c>true</c> if highlighted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereDiscScript.Locked">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.NavSphereDiscScript" /> is locked.
            </summary>
      <value>
        <c>true</c> if locked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereDiscScript.Selected">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.NavSphereDiscScript" /> is selected.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereDiscScript.Animate(System.Single)">
      <summary>
            Animates the disc spinning towards target rotation.
            </summary>
      <param name="deltaTime">The delta time.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereDiscScript.CalculateRayIntersectionAngle(UnityEngine.Ray,System.Single@,System.Boolean)">
      <summary>
            Calculates the angle of the intersectio of the ray and the currently selected disc.
            </summary>
      <param name="ray">The ray.</param>
      <param name="angle">The angle.</param>
      <param name="initialRayCast">if set to <c>true</c> then it indicates this is the first ray cast and
            the disc should determine if plane or sphere intersections work best for the given ray direction.</param>
      <returns>
            True if there was an intersection.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereDiscScript.HideMarkings">
      <summary>
            Hides the markings.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereDiscScript.SetCameraDistance(System.Single)">
      <summary>
            Sets the camera distance. The shader needs to tweak its settings so that the
            rings fade correctly into the distance.
            </summary>
      <param name="distance">The distance.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereDiscScript.ShowMarkings(UnityEngine.Vector3)">
      <summary>
            Shows the markings.
            </summary>
      <param name="viewDirection">The view direction.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereDiscScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereDiscScript.UpdateMaterial">
      <summary>
            Updates the material.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.NavSphereIndicatorScript">
      <summary>
            Script for an indicator on the nav sphere.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereIndicatorScript._highlighted">
      <summary>
            The highlighted flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereIndicatorScript._indicatorType">
      <summary>
            The indicator type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereIndicatorScript._mesh">
      <summary>
            The mesh
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereIndicatorScript._name">
      <summary>
            The name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereIndicatorScript._selected">
      <summary>
            The selected flag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereIndicatorScript.Highlighted">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.NavSphereDiscScript" /> is highlighted.
            </summary>
      <value>
        <c>true</c> if highlighted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereIndicatorScript.IndicatorType">
      <summary>
            Gets the type of the indicator.
            </summary>
      <value>
            The type of the indicator.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereIndicatorScript.Name">
      <summary>
            Gets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereIndicatorScript.Selected">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Flight.UI.NavSphereIndicatorScript" /> is selected.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereIndicatorScript.Transform">
      <summary>
            Gets the transform.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereIndicatorScript.Visible">
      <summary>
            Gets a value indicating whether this instance is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereIndicatorScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereIndicatorScript.UpdateMaterial">
      <summary>
            Updates the material.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.NavSphereInterfaceScript">
      <summary>
            Script for the nav sphere interface.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IDragHandler" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerDownHandler" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.NavSphereLayer">
      <summary>
            The layer all of this nav sphere stuff is in.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._camera">
      <summary>
            The camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._discHeading">
      <summary>
            The disc heading
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._discPitch">
      <summary>
            The disc pitch
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._eventHandled">
      <summary>
            The event handled flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._headingLocked">
      <summary>
            The heading locked flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._highlightedDisc">
      <summary>
            The highlighted disc
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._highlightedIndicator">
      <summary>
            The highlighted indicator.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._hitRadius">
      <summary>
            The radius of the ray hit point (in disc local coordinates), in order for the hit to be counted.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._initialCameraPosition">
      <summary>
            The initial camera position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._inputResponder">
      <summary>
            The input responder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._navSphere">
      <summary>
            The nav ball
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._selectedDisc">
      <summary>
            The selected disc
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._soundDiscAngle">
      <summary>
            The angle of the disc the last time the nav sphere played a sound.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._soundTimer">
      <summary>
            The sound timer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._startDiscAngle">
      <summary>
            The disc angle when starting to drag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereInterfaceScript._startRayAngle">
      <summary>
            The ray intersection angle when starting to drag.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.InputResponder">
      <summary>
            Gets the input responder.
            </summary>
      <value>
            The input responder.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.Visible">
      <summary>
            Gets or sets a value indicating whether nav sphere is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.HighlightedDisc">
      <summary>
            Gets or sets the highlighted disc.
            </summary>
      <value>
            The highlighted disc.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.HighlightedIndicator">
      <summary>
            Gets or sets the highlighted indicator.
            </summary>
      <value>
            The highlighted indicator.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.LockIndicator(Assets.Scripts.Flight.UI.NavSphereIndicatorScript)">
      <summary>
            Locks the indicator.
            </summary>
      <param name="indicator">The indicator.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer is being dragged.
            </summary>
      <param name="eventData">The event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.OnInitializePotentialDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called by a BaseInputModule when a drag has been found but before it is valid to begin the drag.
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer goes down.
            </summary>
      <param name="eventData">The event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.OnPointerUp(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the pointer is released.
            </summary>
      <param name="eventData">The event data.</param>
      <returns>
        <c>true</c> if the event is considered handled (and should not propagate to other responders) otherwise <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.SetScale(System.Single)">
      <summary>
            Sets the scale of the nav sphere
            </summary>
      <param name="scale">The scale.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.GetDiscAtScreenPosition(UnityEngine.Vector2)">
      <summary>
            Gets the disc at screen position by casting a ray and seeing if it intersects either nav sphere disc collider.
            </summary>
      <param name="screenPosition">The screen position.</param>
      <returns>The disc, or null if none found.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.GetIndicatorAtScreenPosition(UnityEngine.Vector2)">
      <summary>
            Gets the indicator at screen position.
            </summary>
      <param name="screenPosition">The screen position.</param>
      <returns>The indicator.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereInterfaceScript.HandleEvent(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Handles the touch event.
            </summary>
      <param name="eventData">The event data.</param>
      <returns>True if the ray intersects the nav ball, otherwise false.</returns>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.NavSphereScript">
      <summary>
            Script for the nav sphere. The nav sphere is aligned so that following is true:
                (0 pitch, 0 heading) = target is pointing along +Y
                (90 pitch, 0 heading) = target is pointing along +Z
                (-90 pitch, 0 heading) = target is pointing along -Z
                (0 pitch, 90 heading) = target is pointing along -X
                (0 pitch, +/-180 heading) = target is pointing along -Y
                (0 pitch, 270/-90 heading) = target is pointing along +X
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._cameraRoot">
      <summary>
            The camera root
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._discHeading">
      <summary>
            The heading disc.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._discPitch">
      <summary>
            The pitch disc.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._flightScene">
      <summary>
            The flight scene
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._heading">
      <summary>
            The heading
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._headingLocked">
      <summary>
            The lock heading flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._lockedIndicator">
      <summary>
            The currently locked indicator, or null if none are locked.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._maneueverNodeIndicator">
      <summary>
            The burn node indicator
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._navRoot">
      <summary>
            The nav root
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._node">
      <summary>
            The node.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._referenceFrame">
      <summary>
            The reference frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._target">
      <summary>
            The target
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._targetIndicator">
      <summary>
            The target indicator
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._velocityIndicator">
      <summary>
            The prograde
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.NavSphereScript._velocityMagnitude">
      <summary>
            The velocity magnitude
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereScript.Heading">
      <summary>
            Gets the current heading.
            </summary>
      <value>
            The target heading.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereScript.HeadingLocked">
      <summary>
            Gets a value indicating whether [heading locked].
            </summary>
      <value>
        <c>true</c> if [heading locked]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereScript.LockedIndicator">
      <summary>
            Gets or setse the locked indicator.
            </summary>
      <value>
            The locked indicator.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereScript.ManeuverNodeDirection">
      <summary>
            Gets or sets the maneuver node direction. This will be null if the player
            does not currently have a maneuver node.
            </summary>
      <value>
            The maneuver node direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereScript.Pitch">
      <summary>
            Gets the current pitch.
            </summary>
      <value>
            The target pitch.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereScript.Target">
      <summary>
            Gets or sets the currently selected target.
            </summary>
      <value>
            The target node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereScript.VelocityMagnitude">
      <summary>
            Gets the magnitude of the velocity of the current velocity mode.
            </summary>
      <value>
            The velocity magnitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.NavSphereScript.VelocityMode">
      <summary>
            Gets or sets the velocity mode.
            </summary>
      <value>
            The velocity mode.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.Initialize(ModApi.Craft.ICraftNode,ModApi.Flight.GameView.IReferenceFrame)">
      <summary>
            Sets the node.
            </summary>
      <param name="node">The node.</param>
      <param name="referenceFrame">The reference frame.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.LockCurrentHeading">
      <summary>
            Locks the craft's current heading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.LockHeading(System.Single,System.Single)">
      <summary>
            Locks the heading / pitch angles.
            </summary>
      <param name="pitch">The pitch angle.</param>
      <param name="heading">The heading angle.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.LockHeading(UnityEngine.Vector3d)">
      <summary>
            Locks the heading direction. The heading direction must be in planet position coordinates.
            </summary>
      <param name="headingDirection">The heading direction.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.ToggleProgradeLock">
      <summary>
            Toggles the current prograde lock on or off.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.ToggleRetrogradeLock">
      <summary>
            Toggles the current retrograde lock on or off.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.ToggleTargetLock">
      <summary>
            Toggles the current target lock on or off.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.UnlockHeading">
      <summary>
            Unlocks the heading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.LockIndicator(Assets.Scripts.Flight.UI.NavSphereIndicatorScript)">
      <summary>
            Locks the indicator.
            </summary>
      <param name="indicator">The indicator.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.LockLocalPoint(UnityEngine.Vector3,System.Single)">
      <summary>
            Locks the local point, in local space relative to the navRoot game object.
            </summary>
      <param name="p">The local point.</param>
      <param name="stepScale">The scale to use when stepping towards the calculated pitch and heading,
            or zero if it should snap directly to it.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.OnPlayerCraftNodeChanged(ModApi.Craft.ICraftNode)">
      <summary>
            Called when the player craft node has changed.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.NavSphereScript.UpdateIndicatorLock(System.Single)">
      <summary>
            Updates target heading if the nav sphere is currently locked on any indicators.
            </summary>
      <param name="timeStep">The time step.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.RetryFlightDialogScript">
      <summary>
            Script for the retry flight dialog.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.RetryFlightDialogScript._levelRunning">
      <summary>
            The level running flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.RetryFlightDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.RetryFlightDialogScript.Create(UnityEngine.Transform,System.Boolean)">
      <summary>
            Creates the dialog.
            </summary>
      <param name="parent">The parent canvas use for this dialog.</param>
      <param name="levelRunning">if set to <c>true</c> if a level is currently running.</param>
      <returns>
            The newly created dialog.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.RetryFlightDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.RetryFlightDialogScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.RetryFlightDialogScript.RestorePreFlightGameState">
      <summary>
            Restores the state of the game state to the PreFlight tag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.RetryFlightDialogScript.OnCancelClicked">
      <summary>
            Called when the cancel button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.RetryFlightDialogScript.OnExitClicked">
      <summary>
            Player has elected to cancel their flight and revert back to as things were before launch.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.RetryFlightDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout,System.Boolean)">
      <summary>
            Called when the layout has been rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
      <param name="levelRunning">if set to <c>true</c> then a level is running.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.RetryFlightDialogScript.OnRetryClicked">
      <summary>
            Player has elected to retry the flight.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.StagingPanelController">
      <summary>
            Controller for the staging panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.UI.FlightPanelController" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.StagingPanelController._activationTypeCounts">
      <summary>
            The activation type counts. Doesn't need to be a member variable, just doing this to try and prevent garbage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.StagingPanelController._currentStage">
      <summary>
            The current stage
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.StagingPanelController._currentStageText">
      <summary>
            The current stage text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.StagingPanelController._parts">
      <summary>
            The parts that have been highlighted.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.StagingPanelController._stageGroups">
      <summary>
            The stage groups
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.UI.StagingPanelController" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.CraftNodeChanged(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Called when the craft node has changed.
            </summary>
      <param name="craftNode">The craft node, or null if one is not currently set.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.CraftStructureChanged(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Called when the craft's structure has changed.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            This function will be called whenever the layout is rebuilt - if you have any setup code which needs to be executed after the layout is rebuilt, override this function and implement it here.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.UpdatePanel(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Updates the panel.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.AddStageGroup(ModApi.Craft.Parts.StageActivationType,System.String)">
      <summary>
            Adds the stage group.
            </summary>
      <param name="stageActivationType">Type of the stage activation.</param>
      <param name="elementId">The element identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.HideStagingGroups">
      <summary>
            Hides the staging groups.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.HighlightStageGroup(Assets.Scripts.Flight.UI.StagingPanelController.StageGroup)">
      <summary>
            Highlights the stage group.
            </summary>
      <param name="stageGroup">The stage group.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.OnMouseEnter(UI.Xml.XmlElement)">
      <summary>
            Called when the mouse enters a stage group.
            </summary>
      <param name="xmlElement">The XML element.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.OnMouseExit(UI.Xml.XmlElement)">
      <summary>
            Called when the mouse exits.
            </summary>
      <param name="xmlElement">The XML element.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.OnStagingButtonClicked">
      <summary>
            Called when the staging button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.StagingPanelController.UpdateStaging(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Updates the staging.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.StagingPanelController.StageGroup">
      <summary>
            Wraps a stage group element in the UI.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.StagingPanelController.StageGroup.CountText">
      <summary>
            Gets or sets the count text.
            </summary>
      <value>
            The count text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.StagingPanelController.StageGroup.GameObject">
      <summary>
            Gets or sets the game object.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.StagingPanelController.StageGroup.StageActivationType">
      <summary>
            Gets or sets the type of the stage activation.
            </summary>
      <value>
            The type of the stage activation.
            </value>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.TargetBox">
      <summary>
            Manages a target box on the flight scene UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._active">
      <summary>
            The active flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._element">
      <summary>
            The element
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._flightSceneUiController">
      <summary>
            The flight scene UI controller
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._flipText">
      <summary>
            The flip text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._gameView">
      <summary>
            The game view
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._parentTransform">
      <summary>
            The parent transform
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._targetArrow">
      <summary>
            The target arrow
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._targetBox">
      <summary>
            The target box
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._targetName">
      <summary>
            The target name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TargetBox._targetNameElement">
      <summary>
            The target name element
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TargetBox.#ctor(UI.Xml.XmlElement,Assets.Scripts.Flight.UI.FlightSceneUiController)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Flight.UI.TargetBox" /> class.
            </summary>
      <param name="element">The element.</param>
      <param name="flightSceneUiController">The flight scene UI controller.</param>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.TargetBox.FlipText">
      <summary>
            Gets or sets a value indicating whether to flip the text.
            </summary>
      <value>
        <c>true</c> if [flip text]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TargetBox.Hide">
      <summary>
            Hides this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TargetBox.Update(ModApi.Flight.UI.INavSphereTarget)">
      <summary>
            Updates this instance.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.ThrottleScript">
      <summary>
            Script for the throttle control.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript.FuelSliderHeight">
      <summary>
            The fuel slider height.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript.ThrottleSliderHeight">
      <summary>
            The throttle slider height
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript._fuelPercentage">
      <summary>
            The current fuel percentage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript._fuelSlider">
      <summary>
            The fuel slider transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript._lastThrottleSound">
      <summary>
            The throttle level when the last sound was played.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript._soundTimer">
      <summary>
            The sound timer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript._throttle">
      <summary>
            The current throttle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript._throttleHandle">
      <summary>
            The throttle handle transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript._throttleSegments">
      <summary>
            The throttle segments transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.ThrottleScript._throttleText">
      <summary>
            The throttle text
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.ThrottleScript.FuelPercentage">
      <summary>
            Gets or sets the fuel percentage.
            </summary>
      <value>
            The fuel percentage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.UI.ThrottleScript.Throttle">
      <summary>
            Gets or sets the throttle.
            </summary>
      <value>
            The throttle.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ThrottleScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When draging is occuring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ThrottleScript.OnPointerDown(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when a pointer is pressed on the throttle control.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ThrottleScript.OnThrottleFullButtonClicked">
      <summary>
            Called when throttle full button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ThrottleScript.OnThrottleZeroButtonClicked">
      <summary>
            Called when throttle zero button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ThrottleScript.LateUpdate">
      <summary>
            Unity LateUpdate method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.ThrottleScript.OnThrottlePointerEvent(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            Called when the throttle needs to handle a pointer event.
            </summary>
      <param name="eventData">The event data.</param>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.TimeManagerScript">
      <summary>
            The time manager script. It manages time. What more do you want to know?
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript.WarpAnimateTime">
      <summary>
            The warp animate time.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._fastForwardButton">
      <summary>
            The fast forward button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._flightSceneUi">
      <summary>
            The flight scene UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._missionTime">
      <summary>
            The mission time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._missionTimeText">
      <summary>
            The mission time text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._playButton">
      <summary>
            The play button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._timeManager">
      <summary>
            The time manager.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._timeMultiplier">
      <summary>
            The time multiplier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._warpAnimateTimer">
      <summary>
            The warp animate timer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._warpButton">
      <summary>
            The warp button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._warpButtonText">
      <summary>
            The warp button text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._warpDecreaseButton">
      <summary>
            The warp decrease button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._warpIncreaseButton">
      <summary>
            The warp increase button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimeManagerScript._warpMode">
      <summary>
            The warp mode flag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.GetTimeString(System.Int64)">
      <summary>
            Gets the time string.
            </summary>
      <param name="missionTime">The mission time.</param>
      <returns>The time string.</returns>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.OnDecreaseWarpButtonClicked">
      <summary>
            Called when decrease warp button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.OnFastForwardButtonClicked">
      <summary>
            Called when fast forward button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.OnIncreaseWarpButtonClicked">
      <summary>
            Called when increase warp button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.OnPlayButtonClicked">
      <summary>
            Called when play button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.OnWarpButtonClicked">
      <summary>
            Called when warp button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.HighlightButton(UnityEngine.UI.Button,System.Boolean)">
      <summary>
            Highlights the button.
            </summary>
      <param name="button">The button.</param>
      <param name="highlight">if set to <c>true</c> [highlight].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.SetMode(ModApi.Flight.ITimeMultiplierMode)">
      <summary>
            Sets the mode.
            </summary>
      <param name="mode">The mode.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.SetWarpModeButtonText">
      <summary>
            Sets the warp mode button text.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimeManagerScript.UpdateMissionTime">
      <summary>
            Updates the mission time.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.UI.TimePanelController">
      <summary>
            Controller for the time panel.
            </summary>
      <seealso cref="T:Assets.Scripts.Flight.UI.FlightPanelController" />
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._displayTimeInDays">
      <summary>
            The display time in days
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._flightSceneUi">
      <summary>
            The flight scene UI
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._missionTime">
      <summary>
            The mission time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._modeFast">
      <summary>
            The mode fast
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._modeNormal">
      <summary>
            The mode normal
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._modeSlow">
      <summary>
            The mode slow
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._modeWarp">
      <summary>
            The mode warp
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._timeManager">
      <summary>
            The time manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._timeMultiplier">
      <summary>
            The time multiplier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._timeText">
      <summary>
            The time text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._warpButtonText">
      <summary>
            The warp button text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.UI.TimePanelController._warpPanel">
      <summary>
            The warp panel
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.Initialize(Assets.Scripts.Flight.UI.FlightSceneUiController)">
      <summary>
            Initializes the panel.
            </summary>
      <param name="flightSceneUiController">The flight scene UI controller.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            This function will be called whenever the layout is rebuilt - if you have any setup code which needs to be executed after the layout is rebuilt, override this function and implement it here.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.UpdatePanel(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Updates the panel.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.OnDecreaseWarpClicked">
      <summary>
            Called when decrease warp is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.OnFastForwardClicked">
      <summary>
            Called when [fast forward clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.OnIncreaseWarpClicked">
      <summary>
            Called when [increase warp clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.OnPlayClicked">
      <summary>
            Called when [play clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.OnSlowMotionClicked">
      <summary>
            Called when [slow motion clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.OnTimeClicked">
      <summary>
            Called when [time clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.OnWarpModeClicked">
      <summary>
            Called when [warp mode clicked].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.SelectButton(UI.Xml.XmlElement,System.Boolean)">
      <summary>
            Selects the button.
            </summary>
      <param name="button">The button.</param>
      <param name="select">if set to <c>true</c> [select].</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.SetMode(ModApi.Flight.ITimeMultiplierMode)">
      <summary>
            Sets the mode.
            </summary>
      <param name="mode">The mode.</param>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.SetWarpModeButtonText">
      <summary>
            Sets the warp mode button text.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.UI.TimePanelController.UpdateMissionTime">
      <summary>
            Updates the mission time.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Flight.ViewManagerScript">
      <summary>
            Script to take care of managing active views.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ViewManagerScript._flightSceneScript">
      <summary>
            The _flight scene script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ViewManagerScript._gameView">
      <summary>
            The game view
            </summary>
    </member>
    <member name="F:Assets.Scripts.Flight.ViewManagerScript._mapViewManager">
      <summary>
            The map view manager
            </summary>
    </member>
    <member name="P:Assets.Scripts.Flight.ViewManagerScript.GameView">
      <summary>
            Gets the game view.
            </summary>
      <value>
            The game view.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ViewManagerScript.ModApi#Flight#IViewManager#GameView">
      <summary>
            Gets the game view.
            </summary>
      <value>
            The game view.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ViewManagerScript.MapViewManager">
      <summary>
            Gets the map view manager.
            </summary>
      <value>
            The map view manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Flight.ViewManagerScript.ModApi#Flight#IViewManager#MapViewManager">
      <summary>
            Gets the map view manager.
            </summary>
      <value>
            The map view manager.
            </value>
    </member>
    <member name="M:Assets.Scripts.Flight.ViewManagerScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ViewManagerScript.Initialize">
      <summary>
            Initializes the View Manager Script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Flight.ViewManagerScript.ToggleMapView">
      <summary>
            Toggles the map view.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Game">
      <summary>
            Singleton class which provides various functions to the game.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Game.RequiredResourcesFolder">
      <summary>
            The required resources folder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Game.SessionID">
      <summary>
            The session identifier for the current game session.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Game.Version">
      <summary>
            The version.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Game._instance">
      <summary>
            The singleton instance (volatile for thread safety).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Game._lock">
      <summary>
            The lock object for thread safety.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Game._loop">
      <summary>
            The game loop registrar.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Game._gameState">
      <summary>
            The game state.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Game._rootGameObject">
      <summary>
            The root object that contains all game level persistent objects.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Game.#ctor">
      <summary>
            Prevents a default instance of the <see cref="T:Assets.Scripts.Game" /> class from being created.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Game.InDesignerScene">
      <summary>
            Gets a value indicating whether the game is currently in the designer scene.
            </summary>
      <value>
        <c>true</c> if the game is currently in the designer scene; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.InfiniteFuelEnabled">
      <summary>
            Gets or sets a value indicating whether the infinite fuel cheat is enabled. It's for debugging. And cheaters.
            </summary>
      <value>
        <c>true</c> if the infinite fuel cheat is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.InFlightScene">
      <summary>
            Gets a value indicating whether the game is currently in the flight scene.
            </summary>
      <value>
        <c>true</c> if the game is currently in the flight scene; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.InMenuScene">
      <summary>
            Gets a value indicating whether the game is currently in the menu scene.
            </summary>
      <value>
        <c>true</c> if the game is currently in the menu scene; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.Instance">
      <summary>
            Gets the singleton Game instance.
            </summary>
      <value>
            The singleton Game instance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.Loop">
      <summary>
            Gets the game loop registrar.
            </summary>
      <value>
            The game loop registrar.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.MaxWarpUnlocked">
      <summary>
            Gets or sets a value indicating whether maximum warp speed is unlocked or enforced.
            </summary>
      <value>
        <c>true</c> if maximum warp speed is unlocked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.PersistentDataPath">
      <summary>
            Gets the persistent data path.
            </summary>
      <value>
            The persistent data path.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.SimpleRocketsWebsiteUrl">
      <summary>
            Gets the SimpleRockets website URL.
            </summary>
      <value>
            The SimpleRockets website URL.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.AchievementManager">
      <summary>
            Gets the achievement manager.
            </summary>
      <value>
            The achievement manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.AudioPlayer">
      <summary>
            Gets the audio player.
            </summary>
      <value>
            The audio player.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.CachedDesignerParts">
      <summary>
            Gets the cached designer parts.
            </summary>
      <value>
            The cached designer parts.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.CraftDesigns">
      <summary>
            Gets the craft designs.
            </summary>
      <value>
            The craft designs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.CraftLoader">
      <summary>
            Gets the craft loader.
            </summary>
      <value>
            The craft loader.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.CraftThemes">
      <summary>
            Gets the craft themes.
            </summary>
      <value>
            The craft themes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.Debug">
      <summary>
            Gets the debug script.
            </summary>
      <value>
            The debug script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.Designer">
      <summary>
            Gets or sets the designer, or null if the game is not currently in the designer scene.
            </summary>
      <value>
            The designer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.DevConsole">
      <summary>
            Gets the dev console manager.
            </summary>
      <value>
            The dev console manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.Device">
      <summary>
            Gets information about the current device on which the game is running.
            </summary>
      <value>
            Information about the current device on which the game is running.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.FlightScene">
      <summary>
            Gets the flight scene.
            </summary>
      <value>
            The flight scene.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.FuselageMeshes">
      <summary>
            Gets the fuselage meshes.
            </summary>
      <value>
            The fuselage meshes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.GameState">
      <summary>
            Gets or sets the current game state.
            </summary>
      <value>
            The game state.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.GameStateManager">
      <summary>
            Gets the game state manager.
            </summary>
      <value>
            The game state manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.InputManager">
      <summary>
            Gets the input manager.
            </summary>
      <value>
            The input manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.Inputs">
      <summary>
            Gets the game inputs.
            </summary>
      <value>
            The game inputs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.LevelManager">
      <summary>
            Gets the level manager.
            </summary>
      <value>
            The level manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.ModManager">
      <summary>
            Gets the mod manager.
            </summary>
      <value>
            The mod manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.ModManagerScript">
      <summary>
            Gets the mod manager.
            </summary>
      <value>
            The mod manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.MusicPlayer">
      <summary>
            Gets the music player.
            </summary>
      <value>
            The music player.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.PartStyleManager">
      <summary>
            Gets the part style manager.
            </summary>
      <value>
            The part style manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.PartTypes">
      <summary>
            Gets the part types.
            </summary>
      <value>
            The part types.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.PropulsionData">
      <summary>
            Gets the propulsion data.
            </summary>
      <value>
            The propulsion data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.QualitySettings">
      <summary>
            Gets the game quality settings.
            </summary>
      <value>
            The game quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.ResourceLoader">
      <summary>
            Gets the resource loader that handles the loading of all resources for the game.
            </summary>
      <value>
            The resource loader that handles the loading of all resources for the game.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.SceneManager">
      <summary>
            Gets the scene manager.
            </summary>
      <value>
            The scene manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.Settings">
      <summary>
            Gets the overall application settings object.
            </summary>
      <value>
            The settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.ModApi#IGame#Settings">
      <summary>
            Gets the application settings.
            </summary>
      <value>
            The application settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.SocialPlatformManager">
      <summary>
            Gets the social platform manager.
            </summary>
      <value>
            The social platform manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.SolarSystemManager">
      <summary>
            Gets the solar system manager.
            </summary>
      <value>
            The solar system manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.ThemeManager">
      <summary>
            Gets the theme manager.
            </summary>
      <value>
            The theme manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.UrlHandler">
      <summary>
            Gets or sets the URL handler.
            </summary>
      <value>
            The URL handler.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.UserInterface">
      <summary>
            Gets the user interface.
            </summary>
      <value>
            The user interface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Game.ModApi#IGame#Version">
      <summary>
            Gets the version number for the game.
            </summary>
      <value>
            The version number for the game.
            </value>
    </member>
    <member name="M:Assets.Scripts.Game.EnsureInitialized">
      <summary>
            Ensures that the Game singleton is initialized. If it is already initialized, this method will do nothing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Game.InstallTextFileResource(System.String,System.String)">
      <summary>
            Installs the resource file to the target path.
            </summary>
      <param name="resourcePath">The resource path.</param>
      <param name="targetPath">The target path.</param>
    </member>
    <member name="M:Assets.Scripts.Game.Quit">
      <summary>
            Quits the game.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Game.BeginDesign(System.Boolean)">
      <summary>
            Begins the designer scene.
            </summary>
      <param name="saveGameState">If set to <c>true</c> the current game state will be saved before entering the designer scene.</param>
    </member>
    <member name="M:Assets.Scripts.Game.BeginFlight(System.String,System.String,System.String)">
      <summary>
            Begins the flight scene and creates a new craft node from the specified craft design ID.
            </summary>
      <param name="launchCraftDesignId">The craft design ID to use for the new craft.</param>
      <param name="launchCraftName">Name to use for the newly created craft node.</param>
      <param name="returnToScene">The name of the scene to return to after ending flight.</param>
    </member>
    <member name="M:Assets.Scripts.Game.ReloadGameFromState(System.String)">
      <summary>
            Reloads the game from the specified state.
            </summary>
      <param name="gameStateId">The game state identifier.</param>
    </member>
    <member name="M:Assets.Scripts.Game.ResumeFlight(System.Int32,System.String)">
      <summary>
            Resumes flight with the craft node with the specified ID.
            </summary>
      <param name="craftNodeId">The craft node identifier.</param>
      <param name="planetName">The name of the parent planet of the craft.</param>
    </member>
    <member name="M:Assets.Scripts.Game.ForceQuit">
      <summary>
            Forces the game to exit.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Game.WarnForOnDestroyUsage">
      <summary>
            Checks to see if OnDestroy is in the call stack and prints a warning if it is.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Game.Initialize">
      <summary>
            Initializes the game instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Game.InstallResources(System.String)">
      <summary>
            Installs files and folders from the embedded resources folder. The root folder must have a manifest
            which details all files and folders that are to be installed.
            </summary>
      <param name="rootFolder">The resource folder.</param>
    </member>
    <member name="M:Assets.Scripts.Game.LoadCraftData">
      <summary>
            Loads the craft data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Game.LoadGameState">
      <summary>
            Loads the game state with the ID specified in the user's settings.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Game.OnFocused(System.Boolean)">
      <summary>
            Called when the application focus state changes.
            </summary>
      <param name="focusState">The new application focus state.</param>
    </member>
    <member name="M:Assets.Scripts.Game.OnPaused(System.Boolean)">
      <summary>
            Called when the application pause state changes.
            </summary>
      <param name="pauseState">The new application pause state.</param>
    </member>
    <member name="M:Assets.Scripts.Game.OnQuit">
      <summary>
            Called right before the application exits.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Game.StartFlightScene(ModApi.Scenes.Parameters.FlightSceneLoadParameters)">
      <summary>
            Loads the flight scene.
            </summary>
      <param name="loadParameters">The flight scene load parameters.</param>
    </member>
    <member name="T:Assets.Scripts.GameData">
      <summary>
            A class containing information and functionality related to the storage and retrieval of persistent game data.
            </summary>
    </member>
    <member name="P:Assets.Scripts.GameData.ModsPath">
      <summary>
            Gets the path to the mods directory.
            </summary>
      <value>
            The path to the mods directory.
            </value>
    </member>
    <member name="P:Assets.Scripts.GameData.PersistentDataPath">
      <summary>
            Gets the persistent data path.
            </summary>
      <value>
            The persistent data path.
            </value>
    </member>
    <member name="P:Assets.Scripts.GameData.SettingsFileRelativePath">
      <summary>
            Gets the settings file path relative to the persistent data directory.
            </summary>
      <value>
            The settings file path relative to the persistent data directory.
            </value>
    </member>
    <member name="M:Assets.Scripts.GameData.LoadXml(System.String)">
      <summary>
            Loads the XML at the specified path.
            </summary>
      <param name="relativePath">The path of the XML document to load relative to the persistent data directory.</param>
      <returns>The loaded XML document.</returns>
    </member>
    <member name="M:Assets.Scripts.GameData.SaveXml(System.Xml.Linq.XDocument,System.String)">
      <summary>
            Saves the XML document in the persistent data directory at the specified path.
            </summary>
      <param name="xmlDocument">The XML document to save.</param>
      <param name="relativePath">The path relative to the persistent data directory.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.CustomPlayerLoop">
      <summary>
            Creates the custom Unity player loop for the game.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.CustomPlayerLoop._actionPostFixedUpdate">
      <summary>
            The PostFixedUpdate action.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.CustomPlayerLoop._actionPostLateUpdate">
      <summary>
            The PostLateUpdate action.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.CustomPlayerLoop._actionPostUpdate">
      <summary>
            The PostUpdate action.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.CustomPlayerLoop._actionPreFixedUpdate">
      <summary>
            The PreFixedUpdate action.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.CustomPlayerLoop._actionPreLateUpdate">
      <summary>
            The PreLateUpdate action.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.CustomPlayerLoop._actionPreUpdate">
      <summary>
            The PreUpdate action.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.ClearUpdateActions">
      <summary>
            Clears the update actions.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.SetUpdateActions(System.Action,System.Action,System.Action,System.Action,System.Action,System.Action)">
      <summary>
            Sets the update actions.
            </summary>
      <param name="preFixedUpdate">The pre fixed update.</param>
      <param name="postFixedUpdate">The post fixed update.</param>
      <param name="preUpdate">The pre update.</param>
      <param name="postUpdate">The post update.</param>
      <param name="preLateUpdate">The pre late update.</param>
      <param name="postLateUpdate">The post late update.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.AddPreAndPostSystems``3(UnityEngine.Experimental.LowLevel.PlayerLoopSystem@,UnityEngine.Experimental.LowLevel.PlayerLoopSystem.UpdateFunction,UnityEngine.Experimental.LowLevel.PlayerLoopSystem.UpdateFunction)">
      <summary>
            Updates the player loop, adding the specified pre and post actions before and after the requested system runs.
            </summary>
      <typeparam name="TSystem">The type of the system.</typeparam>
      <typeparam name="TPreSystem">The type of the pre system.</typeparam>
      <typeparam name="TPostSystem">The type of the post system.</typeparam>
      <param name="loop">The loop.</param>
      <param name="preAction">The pre action.</param>
      <param name="postAction">The post action.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.AppStart">
      <summary>
            Invoked when the application starts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.PrintPlayerLoopSystem(UnityEngine.Experimental.LowLevel.PlayerLoopSystem@)">
      <summary>
            Prints the player loop system.
            </summary>
      <param name="system">The system.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.PrintPlayerLoopSystem(UnityEngine.Experimental.LowLevel.PlayerLoopSystem@,System.Text.StringBuilder,System.Int32)">
      <summary>
            Prints the player loop system information to the specified string builder (called recursively).
            </summary>
      <param name="system">The system.</param>
      <param name="stringBuilder">The string builder.</param>
      <param name="depth">The depth.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.RunPostFixedUpdate">
      <summary>
            The callback for the PostFixedUpdate system.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.RunPostLateUpdate">
      <summary>
            The callback for the PostLateUpdate system.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.RunPostUpdate">
      <summary>
            The callback for the PostUpdate system.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.RunPreFixedUpdate">
      <summary>
            The callback for the PreFixedUpdate system.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.RunPreLateUpdate">
      <summary>
            The callback for the PreLateUpdate system.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.CustomPlayerLoop.RunPreUpdate">
      <summary>
            The callback for the PreUpdate system.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.CustomPlayerLoop.CustomSystems">
      <summary>
            A collection of types used to identify custom player loop systems.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.CustomPlayerLoop.CustomSystems.PostFixedUpdate">
      <summary>
            The PostFixedUpdate player loop system.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.CustomPlayerLoop.CustomSystems.PostLateUpdate">
      <summary>
            The PostLateUpdate player loop system.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.CustomPlayerLoop.CustomSystems.PostUpdate">
      <summary>
            The PostUpdate player loop system.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.CustomPlayerLoop.CustomSystems.PreFixedUpdate">
      <summary>
            The PreFixedUpdate player loop system.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.CustomPlayerLoop.CustomSystems.PreLateUpdate">
      <summary>
            The PreLateUpdate player loop system.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.CustomPlayerLoop.CustomSystems.PreUpdate">
      <summary>
            The PreUpdate player loop system.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.DesignerGameLoop">
      <summary>
            The designer scene game loop.
            </summary>
      <seealso cref="T:ModApi.GameLoop.Interfaces.IDesignerGameLoop" />
      <seealso cref="T:Assets.Scripts.GameLoop.GameLoopBase" />
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerGameLoop._frameData">
      <summary>
            The designer frame data object that gets passed to update methods.
            This is static so to avoid the update lambdas from creating a closure (at the cost of memory allocation and performance).
            It needs to be carefully managed so as not to create any memory leaks though.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerGameLoop._groupsEndOfFrameUpdate">
      <summary>
            The collection of update groups that run at the end of the frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerGameLoop._groupsFixedUpdate">
      <summary>
            The collection of update groups that run in the FixedUpdate method.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerGameLoop._groupsLateUpdate">
      <summary>
            The collection of update groups that run in the LateUpdate method.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerGameLoop._groupsUpdate">
      <summary>
            The collection of update groups that run in the Update method.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerGameLoop._scripts">
      <summary>
            The collection of scripts that have been registered with the game loop.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.Register(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Registers the specified script.
            </summary>
      <param name="script">The script to register.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.Unregister(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Unregisters the specified script.
            </summary>
      <param name="script">The script to unregister.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.EndOfFrame">
      <summary>
            Called every frame at the end of the frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.FixedUpdate">
      <summary>
            This function is called every fixed framerate frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.PostFixedUpdate">
      <summary>
            PostFixedUpdate is called every frame, after the FixedUpdate method runs for all other scripts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.PostLateUpdate">
      <summary>
            PostLateUpdate is called every frame, after the LateUpdate method runs for all other scripts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.PostUpdate">
      <summary>
            PostUpdate is called every frame, after the Update method runs for all other scripts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.PreFixedUpdate">
      <summary>
            PreFixedUpdate is called every frame, before the FixedUpdate method runs for any other script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.PreLateUpdate">
      <summary>
            PreLateUpdate is called every frame, before the LateUpdate method runs for any other script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.PreUpdate">
      <summary>
            PreUpdate is called every frame, before the Update method runs for any other script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.BeginUpdates(Assets.Scripts.GameLoop.IUpdateGroup[])">
      <summary>
            Begins the update cycle for a set of update groups.
            </summary>
      <param name="groups">The groups.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerGameLoop.EndUpdates(Assets.Scripts.GameLoop.IUpdateGroup[])">
      <summary>
            Ends the update cycle for a set of update groups.
            </summary>
      <param name="groups">The groups.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection">
      <summary>
            A collection of update groups for <see cref="T:ModApi.GameLoop.MonoBehaviourBase" /> scripts or scripts that are subclasses of it.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.EndOfFramePostUpdate">
      <summary>
            The end of frame post update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.EndOfFramePreUpdate">
      <summary>
            The end of frame pre update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.EndOfFrameUpdate">
      <summary>
            The end of frame update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.FixedUpdate">
      <summary>
            The fixed update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.LateUpdate">
      <summary>
            The late update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.PostFixedUpdate">
      <summary>
            The post fixed update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.PostLateUpdate">
      <summary>
            The post late update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.PostStart">
      <summary>
            The post start group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.PostUpdate">
      <summary>
            The post update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.PreFixedUpdate">
      <summary>
            The pre fixed update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.PreLateUpdate">
      <summary>
            The pre late update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.PreUpdate">
      <summary>
            The pre update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.Start">
      <summary>
            The start group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.Update">
      <summary>
            The update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.DefaultExecutionOrder">
      <summary>
            The default execution order.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection._registerDelegateCache">
      <summary>
            The register delegate cache.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection._unregisterDelegateCache">
      <summary>
            The unregister delegate cache.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.#ctor(Assets.Scripts.GameLoop.DesignerGameLoop)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection" /> class.
            </summary>
      <param name="loop">The loop.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.RegisterDelegate">
      <summary>
            The registration delegate.
            </summary>
      <param name="groups">The update group collection.</param>
      <param name="item">The item being registered.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.Register(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Registers the specified script.
            </summary>
      <param name="script">The script to register.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.Unregister(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Unregisters the specified script.
            </summary>
      <param name="script">The script to unregister.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.BuildRegistrationDelegates(System.Type,Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.RegisterDelegate@,Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.RegisterDelegate@)">
      <summary>
            Builds the registration delegates.
            </summary>
      <param name="type">The type being registered.</param>
      <param name="register">The register delegate.</param>
      <param name="unregister">The unregister delegate.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.BuildRegistrationDelegates``1(System.Func{Assets.Scripts.GameLoop.DesignerUpdateGroupCollection,Assets.Scripts.GameLoop.UpdateGroupBase{``0}},System.Type,Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.RegisterDelegate@,Assets.Scripts.GameLoop.DesignerUpdateGroupCollection.RegisterDelegate@)">
      <summary>
            Builds the registration delegates.
            </summary>
      <typeparam name="T">The type of the registration.</typeparam>
      <param name="group">The update group collection.</param>
      <param name="type">The type being registered.</param>
      <param name="register">The register delegate.</param>
      <param name="unregister">The unregister delegate.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.FlightGameLoop">
      <summary>
            The flight scene game loop.
            </summary>
      <seealso cref="T:ModApi.GameLoop.Interfaces.IFlightGameLoop" />
      <seealso cref="T:Assets.Scripts.GameLoop.GameLoopBase" />
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightGameLoop._frameData">
      <summary>
            The flight frame data object that gets passed to update methods.
            This is static so to avoid the update lambdas from creating a closure (at the cost of memory allocation and performance).
            It needs to be carefully managed so as not to create any memory leaks though.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightGameLoop._flightSceneScript">
      <summary>
            The flight scene script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightGameLoop._groupsEndOfFrameUpdate">
      <summary>
            The collection of update groups that run at the end of the frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightGameLoop._groupsFixedUpdate">
      <summary>
            The collection of update groups that run in the FixedUpdate method.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightGameLoop._groupsLateUpdate">
      <summary>
            The collection of update groups that run in the LateUpdate method.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightGameLoop._groupsUpdate">
      <summary>
            The collection of update groups that run in the Update method.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightGameLoop._scripts">
      <summary>
            The collection of scripts that have been registered with the game loop.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightGameLoop._timeManager">
      <summary>
            The time manager.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.Register(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Registers the specified script.
            </summary>
      <param name="script">The script to register.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.Unregister(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Unregisters the specified script.
            </summary>
      <param name="script">The script to unregister.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.EndOfFrame">
      <summary>
            Called every frame at the end of the frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.FixedUpdate">
      <summary>
            This function is called every fixed framerate frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.PostFixedUpdate">
      <summary>
            PostFixedUpdate is called every frame, after the FixedUpdate method runs for all other scripts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.PostLateUpdate">
      <summary>
            PostLateUpdate is called every frame, after the LateUpdate method runs for all other scripts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.PostUpdate">
      <summary>
            PostUpdate is called every frame, after the Update method runs for all other scripts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.PreFixedUpdate">
      <summary>
            PreFixedUpdate is called every frame, before the FixedUpdate method runs for any other script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.PreLateUpdate">
      <summary>
            PreLateUpdate is called every frame, before the LateUpdate method runs for any other script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.PreUpdate">
      <summary>
            PreUpdate is called every frame, before the Update method runs for any other script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.BeginUpdates(Assets.Scripts.GameLoop.IUpdateGroup[])">
      <summary>
            Begins the update cycle for a set of update groups.
            </summary>
      <param name="groups">The groups.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightGameLoop.EndUpdates(Assets.Scripts.GameLoop.IUpdateGroup[])">
      <summary>
            Ends the update cycle for a set of update groups.
            </summary>
      <param name="groups">The groups.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.FlightUpdateGroupCollection">
      <summary>
            A collection of update groups for the flight scene game loop.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.BodyScripts">
      <summary>
            The body scripts update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.EndOfFramePostUpdate">
      <summary>
            The end of frame post update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.EndOfFramePreUpdate">
      <summary>
            The end of frame pre update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.EndOfFrameUpdate">
      <summary>
            The end of frame update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.FixedUpdate">
      <summary>
            The fixed update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.FixedUpdateParallel">
      <summary>
            The parallel fixed update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.FixedUpdateWarp">
      <summary>
            The fixed update warp group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.LateUpdate">
      <summary>
            The late update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.LateUpdateParallel">
      <summary>
            The parallel late update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.LateUpdatePaused">
      <summary>
            The late update paused group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PostFixedUpdate">
      <summary>
            The post fixed update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PostFixedUpdateParallel">
      <summary>
            The parallel post fixed update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PostLateUpdate">
      <summary>
            The post late update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PostLateUpdateParallel">
      <summary>
            The parallel post late update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PostStart">
      <summary>
            The post start group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PostUpdate">
      <summary>
            The post update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PostUpdateParallel">
      <summary>
            The parallel post update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PreFixedUpdate">
      <summary>
            The pre fixed update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PreFixedUpdateParallel">
      <summary>
            The parallel pre fixed update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PreLateUpdate">
      <summary>
            The pre late update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PreLateUpdateParallel">
      <summary>
            The parallel pre late update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PreUpdate">
      <summary>
            The pre update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.PreUpdateParallel">
      <summary>
            The parallel pre update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.Start">
      <summary>
            The start group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.Update">
      <summary>
            The update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.UpdateParallel">
      <summary>
            The parallel update group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.UpdatePaused">
      <summary>
            The update paused group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.DefaultExecutionOrder">
      <summary>
            The default execution order.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection._registerDelegateCache">
      <summary>
            The register delegate cache.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.FlightUpdateGroupCollection._unregisterDelegateCache">
      <summary>
            The unregister delegate cache.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.#ctor(Assets.Scripts.GameLoop.FlightGameLoop)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.GameLoop.FlightUpdateGroupCollection" /> class.
            </summary>
      <param name="loop">The loop.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.RegisterDelegate">
      <summary>
            The registration delegate.
            </summary>
      <param name="groups">The update group collection.</param>
      <param name="item">The item being registered.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.Register(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Registers the specified script.
            </summary>
      <param name="script">The script to register.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.Unregister(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Unregisters the specified script.
            </summary>
      <param name="script">The script to unregister.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.BuildRegistrationDelegates(System.Type,Assets.Scripts.GameLoop.FlightUpdateGroupCollection.RegisterDelegate@,Assets.Scripts.GameLoop.FlightUpdateGroupCollection.RegisterDelegate@)">
      <summary>
            Builds the registration delegates.
            </summary>
      <param name="type">The type being registered.</param>
      <param name="register">The register delegate.</param>
      <param name="unregister">The unregister delegate.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.FlightUpdateGroupCollection.BuildRegistrationDelegates``1(System.Func{Assets.Scripts.GameLoop.FlightUpdateGroupCollection,Assets.Scripts.GameLoop.UpdateGroupBase{``0}},System.Type,Assets.Scripts.GameLoop.FlightUpdateGroupCollection.RegisterDelegate@,Assets.Scripts.GameLoop.FlightUpdateGroupCollection.RegisterDelegate@)">
      <summary>
            Builds the registration delegates.
            </summary>
      <typeparam name="T">The type of the registration.</typeparam>
      <param name="group">The update group collection.</param>
      <param name="type">The type being registered.</param>
      <param name="register">The register delegate.</param>
      <param name="unregister">The unregister delegate.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.GameLoopBase">
      <summary>
            The base class for a game loop.
            </summary>
      <seealso cref="T:ModApi.GameLoop.Interfaces.IGameLoop" />
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.GameLoop.GameLoopBase.DefaultParallelBatchSize">
      <summary>
            The default parallel batch size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.GameLoopBase.DefaultParallelThreshold">
      <summary>
            The default parallel threshold.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.GameLoopBase._debugData">
      <summary>
            The debug data to be displayed in the Unity inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.GameLoopBase._debugExecutionOrder">
      <summary>
            A value indicating whether to debug the execution order of scripts.
            If <c>true</c>, this will capture script references and some other data when executed and will display the scripts in the Unity inspector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.GameLoopBase._debugExecutionOrderLastFrameCount">
      <summary>
            The last frame number in which execution order debugging information was gathered.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.GameLoopBase._endOfFrameCoroutine">
      <summary>
            The end of frame coroutine.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.GameLoopBase._endOfFrameYieldInstruction">
      <summary>
            The cached wait until end of frame yield instruction.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.EndOfFrame">
      <summary>
            Called every frame at the end of the frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.FixedUpdate">
      <summary>
            This function is called every fixed framerate frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.GetDebugCallback">
      <summary>
            Gets the debug callback (if any).
            </summary>
      <returns>The debug callback or <c>null</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.OnDisable">
      <summary>
            This function is called when the behavior becomes disabled or inactive.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.OnEnable">
      <summary>
            This function is called when the object becomes enabled and active.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.PostFixedUpdate">
      <summary>
            PostFixedUpdate is called every frame, after the FixedUpdate method runs for all other scripts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.PostLateUpdate">
      <summary>
            PostLateUpdate is called every frame, after the LateUpdate method runs for all other scripts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.PostUpdate">
      <summary>
            PostUpdate is called every frame, after the Update method runs for all other scripts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.PreFixedUpdate">
      <summary>
            PreFixedUpdate is called every frame, before the FixedUpdate method runs for any other script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.PreLateUpdate">
      <summary>
            PreLateUpdate is called every frame, before the LateUpdate method runs for any other script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.PreUpdate">
      <summary>
            PreUpdate is called every frame, before the Update method runs for any other script.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.EndOfFrameCoroutine">
      <summary>
            The coroutine that waits until the end of the frame and then invokes the <see cref="M:Assets.Scripts.GameLoop.GameLoopBase.EndOfFrame" /> method.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopBase.LogInspectorData(System.String,System.Boolean,System.Int32,System.Collections.Generic.IEnumerable{ModApi.GameLoop.Interfaces.IGameLoopItem})">
      <summary>
            The handler for the debug callback.
            </summary>
      <param name="name">The name of the update cycle.</param>
      <param name="parallel">If set to <c>true</c>, the update group subset is threaded.</param>
      <param name="executionOrder">The execution order of the update group subset.</param>
      <param name="items">The items in the update group subset.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.GameLoopRegistrar">
      <summary>
            The game loop registrar.
            This handles the registration of various game loop items with the appropriate current game loop.
            </summary>
      <seealso cref="T:ModApi.GameLoop.Interfaces.IGameLoopRegistrar" />
    </member>
    <member name="F:Assets.Scripts.GameLoop.GameLoopRegistrar._designer">
      <summary>
            The designer game loop.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.GameLoopRegistrar._flight">
      <summary>
            The flight game loop.
            </summary>
    </member>
    <member name="P:Assets.Scripts.GameLoop.GameLoopRegistrar.Designer">
      <summary>
            Gets the designer game loop.
            </summary>
      <value>
            The designer game loop.
            </value>
    </member>
    <member name="P:Assets.Scripts.GameLoop.GameLoopRegistrar.Flight">
      <summary>
            Gets the flight game loop.
            </summary>
      <value>
            The flight game loop.
            </value>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopRegistrar.Register(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Registers the specified script.
            </summary>
      <param name="script">The script to register.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopRegistrar.Unregister(ModApi.GameLoop.Interfaces.IGameLoopItem)">
      <summary>
            Unregisters the specified script.
            </summary>
      <param name="script">The script to unregister.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopRegistrar.CreateDesignerLoop">
      <summary>
            Creates the designer game loop.
            </summary>
      <returns>The designer game loop.</returns>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopRegistrar.CreateFlightLoop">
      <summary>
            Creates the flight game loop.
            </summary>
      <returns>The flight game loop.</returns>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopRegistrar.DestroyDesignerLoop">
      <summary>
            Destroys the designer game loop.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.GameLoopRegistrar.DestroyFlightLoop">
      <summary>
            Destroys the flight game loop.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.UpdateGroupDebugCallback">
      <summary>
            The delegate for a debug callback for the update group.
            </summary>
      <param name="name">The name of the update cycle.</param>
      <param name="parallel">If set to <c>true</c>, the update group subset is threaded.</param>
      <param name="executionOrder">The execution order of the update group subset.</param>
      <param name="items">The items in the update group subset.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.IUpdateGroup">
      <summary>
            An interface for a update group in a game loop.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.IUpdateGroup.BeginUpdate(Assets.Scripts.GameLoop.UpdateGroupDebugCallback)">
      <summary>
            Tells the update group that the update cycle is begining.
            </summary>
      <param name="debugCallback">The debug callback for the update group.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.IUpdateGroup.EndUpdate">
      <summary>
            Tells the update group that the update cycle has finished.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GameLoop.StartGroup`1">
      <summary>
            An update group specific to running one-shot 'Start' methods.
            </summary>
      <typeparam name="T">The type of the update group.</typeparam>
      <seealso cref="T:Assets.Scripts.GameLoop.UpdateGroupBase`1" />
      <seealso cref="T:Assets.Scripts.GameLoop.IUpdateGroup" />
    </member>
    <member name="M:Assets.Scripts.GameLoop.StartGroup`1.#ctor(ModApi.GameLoop.Interfaces.IGameLoop)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.GameLoop.StartGroup`1" /> class.
            </summary>
      <param name="gameLoop">The game loop.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.StartGroup`1.EndUpdate">
      <summary>
            Tells the update group that the update cycle has finished.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.StartGroup`1.Update(System.Action{`0},System.String)">
      <summary>
            Updates the group, executing the specified action on all items.
            </summary>
      <param name="action">The action to execute.</param>
      <param name="description">The description of the update actions (used for profiler only).</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.UpdateGroup`1">
      <summary>
            A group of items that are updated together as part of a game loop.
            </summary>
      <typeparam name="T">The type of items to be updated.</typeparam>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroup`1._parallelAction">
      <summary>
            The action to execute during a parallel job.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroup`1.#ctor(ModApi.GameLoop.Interfaces.IGameLoop)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.GameLoop.UpdateGroup`1" /> class.
            </summary>
      <param name="gameLoop">The game loop.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroup`1.EndUpdate">
      <summary>
            Tells the update group that the update cycle has finished.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroup`1.Unity#Jobs#IJobParallelFor#Execute(System.Int32)">
      <summary>
            Executes the work of the parallel job.
            </summary>
      <param name="index">The index of the parallel for loop at which to perform work.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroup`1.ParallelUpdateAndComplete(System.Int32,System.Int32,System.Action{`0},System.String)">
      <summary>
            Updates the group, executing the specified action on all items.
            </summary>
      <param name="threshold">The number of items at which the updating becomes parallelized. Fewer items than this will be processed sequentially.</param>
      <param name="batchSize">The size of the batches to be processed in parallel.</param>
      <param name="action">The action to execute.</param>
      <param name="description">The description of the update actions (used for profiler only).</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroup`1.Update(System.Action{`0},System.String)">
      <summary>
            Updates the group, executing the specified action on all items.
            </summary>
      <param name="action">The action to execute.</param>
      <param name="description">The description of the update actions (used for profiler only).</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroup`1.Update``1(System.Action{`0},System.String,``0,System.Action{``0,System.Int32},System.Action{``0,System.Int32})">
      <summary>
            Updates the group, executing the specified action on all items.
            </summary>
      <typeparam name="TLoop">The type of the loop.</typeparam>
      <param name="action">The action to execute.</param>
      <param name="description">The description of the update actions (used for profiler only).</param>
      <param name="loop">The loop instance.</param>
      <param name="beforeSubsetCallback">The callback that fires before every subset is executed.</param>
      <param name="afterSubsetCallback">The callback that fires after every subset is executed.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.UpdateGroupBase`1">
      <summary>
            A group of items that are updated together as part of a game loop.
            </summary>
      <typeparam name="T">The type of items to be updated.</typeparam>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1._debugCallback">
      <summary>
            The debug callback.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1._executing">
      <summary>
            A value indicating whether this <see cref="T:Assets.Scripts.GameLoop.UpdateGroup`1" /> is executing.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1._gameLoop">
      <summary>
            The game loop reference.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1._subset">
      <summary>
            The active subset to act upon during a parallel job.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1._subsets">
      <summary>
            The collection of subsets that are executed sequentially (ordered according to script execution order).
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.#ctor(ModApi.GameLoop.Interfaces.IGameLoop)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.GameLoop.UpdateGroupBase`1" /> class.
            </summary>
      <param name="gameLoop">The game loop.</param>
    </member>
    <member name="P:Assets.Scripts.GameLoop.UpdateGroupBase`1.Executing">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.GameLoop.UpdateGroupBase`1" /> is executing.
            </summary>
      <value>
        <c>true</c> if executing; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.BeginUpdate(Assets.Scripts.GameLoop.UpdateGroupDebugCallback)">
      <summary>
            Tells the update group that the update cycle is begining.
            </summary>
      <param name="debugCallback">The debug callback for the update group.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.EndUpdate">
      <summary>
            Tells the update group that the update cycle has finished.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Register(`0,System.Int32)">
      <summary>
            Registers the specified item with the group.
            </summary>
      <param name="item">The item to be registered.</param>
      <param name="executionOrder">The execution order for the item.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Unregister(`0,System.Int32)">
      <summary>
            Unregisters the specified item from the group.
            </summary>
      <param name="item">The item to be unregistered.</param>
      <param name="executionOrder">The execution order for the item.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.GetSubset(System.Int32)">
      <summary>
            Gets the requested subset, creating it if needed.
            </summary>
      <param name="executionOrder">The execution order of the subset.</param>
      <returns>The requested subset.</returns>
    </member>
    <member name="T:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset">
      <summary>
            A subset of an update group.
            Subsets act sequentially based on execution order.
            </summary>
      <seealso cref="T:Assets.Scripts.GameLoop.IUpdateGroup" />
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.ExecutionOrder">
      <summary>
            The execution order of the subset.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.Count">
      <summary>
            The number of items in the group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.Items">
      <summary>
            The items in the group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset._indexLookup">
      <summary>
            The index lookup for the group.
            This is a dictionary keyed by object instance IDs with values that point to the index in the item array at which the object resides.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset._pendingRegistrations">
      <summary>
            The pending egistrations to this group.
            Items that are registered while the group is updating will be put here to be dealt with after execution finishes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset._pendingUnregistrations">
      <summary>
            The pending unregistrations to this group.
            Items that are unregistered while the group is updating will be put here to be dealt with after execution finishes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset._updateGroup">
      <summary>
            The update group.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.#ctor(Assets.Scripts.GameLoop.UpdateGroupBase{`0},System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset" /> class.
            </summary>
      <param name="updateGroup">The update group.</param>
      <param name="executionOrder">The execution order.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.ClearRegisteredItems">
      <summary>
            Clears all the registered items as well as the pending unregistrations.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.GetRegisteredItems">
      <summary>
            Gets an enumerable set of the registered items.
            </summary>
      <returns>An enumerable set of the registered items.</returns>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.ProcessPendingRegistrations">
      <summary>
            Processes the pending registrations.
            This should only be done while the group is not currently executing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.ProcessPendingUnregistrations">
      <summary>
            Processes the pending unregistrations.
            This should only be done while the group is not currently executing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.Register(`0)">
      <summary>
            Registers the specified item with the group.
            </summary>
      <param name="item">The item to be registered.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.Unregister(`0)">
      <summary>
            Unregisters the specified item from the group.
            </summary>
      <param name="item">The item to be unregistered.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.RegisterImmediate(`0)">
      <summary>
            Immediately registers the item with the group.
            </summary>
      <param name="item">The item to be registered.</param>
    </member>
    <member name="M:Assets.Scripts.GameLoop.UpdateGroupBase`1.Subset.UnregisterImmediate(`0)">
      <summary>
            Immediately unregisters the item from the group.
            </summary>
      <param name="item">The item to be unregistered.</param>
    </member>
    <member name="T:Assets.Scripts.GameLoop.UpdateGroupDebugData">
      <summary>
            A set of debug data for a game loop update group used to display in the Unity inspector window.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupDebugData.ExecutionOrder">
      <summary>
            The execution order of the subset.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupDebugData.Items">
      <summary>
            The collectin of items in the subset.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupDebugData.MultipleThreads">
      <summary>
            A value indicating whether multiple threads are used for the update cycle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupDebugData.Name">
      <summary>
            The name of the update cycle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.GameLoop.UpdateGroupDebugData.ExecutionOrderName">
      <summary>
            The execution order of the subset.
            </summary>
    </member>
    <member name="T:Assets.Scripts.GlobalDebugScript">
      <summary>
            A debug script that lives throughout the lifetime of the application.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="M:Assets.Scripts.GlobalDebugScript.Create(UnityEngine.GameObject)">
      <summary>
            Creates the global debug script.
            </summary>
      <param name="parent">The parent object.</param>
      <returns>The achievement manager script reference.</returns>
    </member>
    <member name="M:Assets.Scripts.GlobalDebugScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Input.DebugInput">
      <summary>
            Returns inputs in debug build
            </summary>
    </member>
    <member name="M:Assets.Scripts.Input.DebugInput.GetKey(UnityEngine.KeyCode)">
      <summary>
            Returns true while the user holds down the key identified by keyCode in a debug build
            </summary>
      <param name="keyCode">The key code.</param>
      <returns>True while the user holds down the key identified by keyCode in a debug build</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DebugInput.GetKeyDown(UnityEngine.KeyCode)">
      <summary>
            Returns true during the frame the user starts pressing down the key identified by keyCode in a debug build
            </summary>
      <param name="keyCode">The key code.</param>
      <returns>True during the frame the user starts pressing down the key identified by keyCode in a debug build</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DebugInput.GetKeyUp(UnityEngine.KeyCode)">
      <summary>
            Returns true during the frame the user releases the key identified by keyCode in a debug build
            </summary>
      <param name="keyCode">The key code.</param>
      <returns>True during the frame the user releases the key identified by keyCode in a debug build</returns>
    </member>
    <member name="T:Assets.Scripts.Input.DummyInput">
      <summary>
            A dummy input class used in place of inputs that fail to load.
            </summary>
      <seealso cref="T:ModApi.Input.IGameInput" />
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Input.DummyInput" /> class.
            </summary>
      <param name="id">The input identifier.</param>
    </member>
    <member name="P:Assets.Scripts.Input.DummyInput.DescriptiveName">
      <summary>
            Gets the descriptive name of the input.
            </summary>
      <value>
            The descriptive name of the input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.DummyInput.Enabled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:ModApi.Input.IGameInput" /> is enabled.
            A disabled input can still return valid values. Code can ignore the fact that an
            input has been disabled and continue to use it anyway.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.DummyInput.Id">
      <summary>
            Gets the identifier for the input.
            </summary>
      <value>
            The identifier for the input.
            </value>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetAxis">
      <summary>
            Gets the value of the input axis.
            </summary>
      <returns>The value of the input axis.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetAxisIfEnabled">
      <summary>
            Gets the value of the input axis or zero if the input has been disabled.
            </summary>
      <returns>The value of the input axis or zero if the input has been disabled.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetButton">
      <summary>
            Gets the state of the input button.
            </summary>
      <returns>
        <c>true</c> if the input button is active; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetButtonDown">
      <summary>
            Gets a value indicating if the input button was activated this frame.
            </summary>
      <returns>
        <c>true</c> if the input button was activated this frame; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetButtonDownIfEnabled">
      <summary>
            Gets a value indicating if the input button was activated this frame. This returns <c>false</c> if the input is disabled.
            </summary>
      <returns>
        <c>true</c> if the input button was activated this frame and the input is enabled; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetButtonIfEnabled">
      <summary>
            Gets the state of the input button.
            </summary>
      <returns>
        <c>true</c> if the input button is active and enabled; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetButtonRepeating">
      <summary>
            Gets the repeating button state of this input button.
            </summary>
      <returns>
        <c>true</c> when immediately pressed, then <c>false</c> until the input behavior repeat delay has elapsed, then <c>true</c> for a 1-frame duration repeating at the interval of the specified in the InputBehavior assigned to the input button.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetButtonTimePressed">
      <summary>
            Gets the length of time in seconds that the input button has been continuously held down.
            Returns 0 if the button is not currently pressed.
            </summary>
      <returns>
            The duration of the button hold.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetButtonUp">
      <summary>
            Gets a value indicating if the input button was deactivated this frame.
            </summary>
      <returns>
        <c>true</c> if the input button was deactivated this frame; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetButtonUpIfEnabled">
      <summary>
            Gets a value indicating if the input button was deactivated this frame. This returns <c>false</c> if the input is disabled.
            </summary>
      <returns>
        <c>true</c> if the input button was deactivated this frame and the input is enabled; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetControllerBindingText">
      <summary>
            Gets the controller binding text.
            </summary>
      <returns>The controller binding text or <c>null</c> if no binding exists.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetFirstBindingText">
      <summary>
            Gets the first binding text that can be found.
            </summary>
      <returns>The first binding text that can be found or <c>null</c> if no bindings can be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetKeyboardPrimaryBindingText">
      <summary>
            Gets the keyboard primary binding text.
            </summary>
      <returns>The keyboard primary binding text or <c>null</c> if no binding exists.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetKeyboardPrimaryNegativeBindingText">
      <summary>
            Gets the text of the primary keyboard binding for this input on the negative pole.
            </summary>
      <returns>
            The text of the primary keyboard binding for this input on the negative pole.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetKeyboardPrimaryPositiveBindingText">
      <summary>
            Gets the text of the primary keyboard binding for this input on the positive pole.
            </summary>
      <returns>
            The text of the primary keyboard binding for this input on the positive pole.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetKeyboardSecondaryBindingText">
      <summary>
            Gets the keyboard secondary binding text.
            </summary>
      <returns>The keyboard secondary binding text or <c>null</c> if no binding exists.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.DummyInput.GetMouseBindingText">
      <summary>
            Gets the mouse binding text.
            </summary>
      <returns>The mouse binding text or <c>null</c> if no binding exists.</returns>
    </member>
    <member name="T:Assets.Scripts.Input.GameInput">
      <summary>
            A class representing a game input and providing method to interact with the input.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.GameInput._DefaultCustomModifierCheck">
      <summary>
            The default custom modifier check function.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.GameInput._customModifierCheck">
      <summary>
            The custom modifier check function.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Input.GameInput" /> class.
            </summary>
      <param name="id">The identifier of the input.</param>
    </member>
    <member name="P:Assets.Scripts.Input.GameInput.ActionId">
      <summary>
            Gets the action identifier or -1 if it is unknown.
            </summary>
      <value>
            The action identifier or -1 if it is unknown.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInput.DescriptiveName">
      <summary>
            Gets the descriptive name of the input.
            </summary>
      <value>
            The descriptive name of the input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInput.Enabled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:ModApi.Input.IGameInput" /> is enabled.
            A disabled input can still return valid values. Code can ignore the fact that an
            input has been disabled and continue to use it anyway.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInput.Id">
      <summary>
            Gets the identifier for the input.
            </summary>
      <value>
            The identifier for the input.
            </value>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetAxis">
      <summary>
            Gets the value of the input axis.
            </summary>
      <returns>The value of the input axis.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetAxisIfEnabled">
      <summary>
            Gets the value of the input axis or zero if the input has been disabled.
            </summary>
      <returns>The value of the input axis or zero if the input has been disabled.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetButton">
      <summary>
            Gets the state of the input button.
            </summary>
      <returns>
        <c>true</c> if the input button is active; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetButtonDown">
      <summary>
            Gets a value indicating if the input button was activated this frame.
            </summary>
      <returns>
        <c>true</c> if the input button was activated this frame; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetButtonDownIfEnabled">
      <summary>
            Gets a value indicating if the input button was activated this frame. This returns <c>false</c> if the input is disabled.
            </summary>
      <returns>
        <c>true</c> if the input button was activated this frame and the input is enabled; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetButtonIfEnabled">
      <summary>
            Gets the state of the input button.
            </summary>
      <returns>
        <c>true</c> if the input button is active and enabled; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetButtonRepeating">
      <summary>
            Gets the repeating button state of this input button.
            </summary>
      <returns>
        <c>true</c> when immediately pressed, then <c>false</c> until the input behavior repeat delay has elapsed, then <c>true</c> for a 1-frame duration repeating at the interval of the specified in the InputBehavior assigned to the input button.
            </returns>
      <exception cref="T:System.NotImplementedException">Not implemented.</exception>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetButtonTimePressed">
      <summary>
            Gets the length of time in seconds that the input button has been continuously held down.
            Returns 0 if the button is not currently pressed.
            </summary>
      <returns>
            The duration of the button hold.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetButtonUp">
      <summary>
            Gets a value indicating if the input button was deactivated this frame.
            </summary>
      <returns>
        <c>true</c> if the input button was deactivated this frame; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetButtonUpIfEnabled">
      <summary>
            Gets a value indicating if the input button was deactivated this frame. This returns <c>false</c> if the input is disabled.
            </summary>
      <returns>
        <c>true</c> if the input button was deactivated this frame and the input is enabled; <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetControllerBindingText">
      <summary>
            Gets the controller binding text.
            </summary>
      <returns>The controller binding text or <c>null</c> if no binding exists.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetFirstBindingText">
      <summary>
            Gets the first binding text that can be found.
            </summary>
      <returns>The first binding text that can be found or <c>null</c> if no bindings can be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetKeyboardPrimaryBindingText(System.Nullable{Rewired.Pole})">
      <summary>
            Gets the keyboard primary binding text.
            </summary>
      <param name="axisContribution">The axis contribution.</param>
      <returns>
            The keyboard primary binding text or <c>null</c> if no binding exists.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetKeyboardPrimaryBindingText">
      <summary>
            Gets the keyboard primary binding text.
            </summary>
      <returns>The keyboard primary binding text or <c>null</c> if no binding exists.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetKeyboardPrimaryNegativeBindingText">
      <summary>
            Gets the text of the primary keyboard binding for this input on the negative pole.
            </summary>
      <returns>
            The text of the primary keyboard binding for this input on the negative pole.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetKeyboardPrimaryPositiveBindingText">
      <summary>
            Gets the text of the primary keyboard binding for this input on the positive pole.
            </summary>
      <returns>
            The text of the primary keyboard binding for this input on the positive pole.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetKeyboardSecondaryBindingText">
      <summary>
            Gets the keyboard secondary binding text.
            </summary>
      <returns>The keyboard secondary binding text or <c>null</c> if no binding exists.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.GetMouseBindingText">
      <summary>
            Gets the mouse binding text.
            </summary>
      <returns>The mouse binding text or <c>null</c> if no binding exists.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.ResetCustomModifier">
      <summary>
            Resets the custom modifier.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Input.GameInput.SetCustomModifier(System.Func{System.Boolean})">
      <summary>
            Sets the custom modifier.
            </summary>
      <param name="modifierCheck">The modifier check.</param>
    </member>
    <member name="T:Assets.Scripts.Input.GameInputs">
      <summary>
            The game inputs service.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.GameInputs._inputLookupByName">
      <summary>
            A dictionary for looking up inputs by lower case name.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.#ctor">
      <summary>
            Prevents a default instance of the <see cref="T:Assets.Scripts.Input.GameInputs" /> class from being created.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivateCameraLook">
      <summary>
            Gets the activate camera look.
            </summary>
      <value>
            The activate camera look.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivateStage">
      <summary>
            Gets the activate stage input.
            </summary>
      <value>
            The activate stage input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup1">
      <summary>
            Gets the activation group 1 input.
            </summary>
      <value>
            The activation group 1 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup10">
      <summary>
            Gets the activation group 10 input.
            </summary>
      <value>
            The activation group 10 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup2">
      <summary>
            Gets the activation group 2 input.
            </summary>
      <value>
            The activation group 2 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup3">
      <summary>
            Gets the activation group 3 input.
            </summary>
      <value>
            The activation group 3 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup4">
      <summary>
            Gets the activation group 4 input.
            </summary>
      <value>
            The activation group 4 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup5">
      <summary>
            Gets the activation group 5 input.
            </summary>
      <value>
            The activation group 5 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup6">
      <summary>
            Gets the activation group 6 input.
            </summary>
      <value>
            The activation group 6 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup7">
      <summary>
            Gets the activation group 7 input.
            </summary>
      <value>
            The activation group 7 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup8">
      <summary>
            Gets the activation group 8 input.
            </summary>
      <value>
            The activation group 8 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ActivationGroup9">
      <summary>
            Gets the activation group 9 input.
            </summary>
      <value>
            The activation group 9 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.AllInputs">
      <summary>
            Gets all of the game inputs.
            </summary>
      <value>
            All of the game inputs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Brake">
      <summary>
            Gets the brake input.
            </summary>
      <value>
            The brake input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.CameraLookLeftRight">
      <summary>
            Gets the camera look left/right input.
            </summary>
      <value>
            The camera look left/right input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.CameraLookUpDown">
      <summary>
            Gets the camera look up/down input.
            </summary>
      <value>
            The camera look up/down input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.CameraLookZoom">
      <summary>
            Gets the camera zoom in/out input.
            </summary>
      <value>
            The camera zoom in/out input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.CommandPodNext">
      <summary>
            Gets the command pod next input.
            </summary>
      <value>
            The command pod next input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.CommandPodPrevious">
      <summary>
            Gets the command pod previous input.
            </summary>
      <value>
            The command pod previous input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.DeleteSelectedPart">
      <summary>
            Gets the delete selected part input.
            </summary>
      <value>
            The delete selected part input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.DeveloperConsole">
      <summary>
            Gets the toggle developer console input.
            </summary>
      <value>
            The toggle developer console input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.FullThrottle">
      <summary>
            Gets the full throttle input.
            </summary>
      <value>
            The full throttle input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.KillThrottle">
      <summary>
            Gets the kill throttle input.
            </summary>
      <value>
            The kill throttle input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.LoadContentFromClipboardUrl">
      <summary>
            Gets the load content from clipboard URL input.
            </summary>
      <value>
            The load content from clipboard URL input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.LockHeading">
      <summary>
            Gets the lock heading input.
            </summary>
      <value>
            The lock heading input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.LockPrograde">
      <summary>
            Gets the lock prograde input.
            </summary>
      <value>
            The lock prograde input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.LockRetrograde">
      <summary>
            Gets the lock retrograde input.
            </summary>
      <value>
            The lock retrograde input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.LockTarget">
      <summary>
            Gets the lock target input.
            </summary>
      <value>
            The lock target input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.MapSetTargetModifier">
      <summary>
            Gets the map set target modifier.
            </summary>
      <value>
            The map set target modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.MouseWheelAlwaysZooms">
      <summary>
            Gets a value indicating whether the mouse wheel should always cause camera zooming in flight mode.
            </summary>
      <value>
        <c>true</c> if the mouse wheel should always cause camera zooming in flight mode; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.NudgePartNegativeX">
      <summary>
            Gets the nudge part negative x input.
            </summary>
      <value>
            The nudge part negative x input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.NudgePartNegativeY">
      <summary>
            Gets the nudge part negative y input.
            </summary>
      <value>
            The nudge part negative y input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.NudgePartNegativeZ">
      <summary>
            Gets the nudge part negative z input.
            </summary>
      <value>
            The nudge part negative z input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.NudgePartPositiveX">
      <summary>
            Gets the nudge part positive x input.
            </summary>
      <value>
            The nudge part positive x input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.NudgePartPositiveY">
      <summary>
            Gets the nudge part positive y input.
            </summary>
      <value>
            The nudge part positive y input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.NudgePartPositiveZ">
      <summary>
            Gets the nudge part positive z input.
            </summary>
      <value>
            The nudge part positive z input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.OpenPhotoLibrary">
      <summary>
            Gets the open photo library input
            </summary>
      <value>
            The open photo library input
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.OpenSymmetryTool">
      <summary>
            Gets the open symmetry tool input.
            </summary>
      <value>
            The open symmetry tool input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Pause">
      <summary>
            Gets the pause input.
            </summary>
      <value>
            The pause input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Pitch">
      <summary>
            Gets the pitch.
            </summary>
      <value>
            The pitch input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.PreventPartSelection">
      <summary>
            Gets the prevent part selection input.
            </summary>
      <value>
            The prevent part selection input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.QuickLoad">
      <summary>
            Gets the quick load input.
            </summary>
      <value>
            The quick load input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.QuickSave">
      <summary>
            Gets the quick save input.
            </summary>
      <value>
            The quick save input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ReattachSelectedPart">
      <summary>
            Gets the reattach selected part input.
            </summary>
      <value>
            The reattach selected part input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Redo">
      <summary>
            Gets the redo input.
            </summary>
      <value>
            The redo input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Roll">
      <summary>
            Gets the roll input.
            </summary>
      <value>
            The roll input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.RotateNegativeX">
      <summary>
            Gets the rotate negative x input.
            </summary>
      <value>
            The rotate negative x input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.RotateNegativeY">
      <summary>
            Gets the rotate negative y input.
            </summary>
      <value>
            The rotate negative y input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.RotateNegativeZ">
      <summary>
            Gets the rotate negative z input.
            </summary>
      <value>
            The rotate negative z input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.RotatePositiveX">
      <summary>
            Gets the rotate positive x input.
            </summary>
      <value>
            The rotate positive x input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.RotatePositiveY">
      <summary>
            Gets the rotate positive y input.
            </summary>
      <value>
            The rotate positive y input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.RotatePositiveZ">
      <summary>
            Gets the rotate positive z input.
            </summary>
      <value>
            The rotate positive z input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.SaveDesign">
      <summary>
            Gets the save design input.
            </summary>
      <value>
            The save design input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.SaveLaunchLocation">
      <summary>
            Gets the save launch location input.
            </summary>
      <value>
            The save launch location input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.SelectFuselageShapeTool">
      <summary>
            Gets the select fuselage tool input.
            </summary>
      <value>
            The select fuselage tool input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.SelectMovePartTool">
      <summary>
            Gets the select move part tool input.
            </summary>
      <value>
            The select move part tool input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.SelectNudgeTool">
      <summary>
            Gets the select nudge tool input.
            </summary>
      <value>
            The select nudge tool input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.SelectPaintTool">
      <summary>
            Gets the select paint tool input.
            </summary>
      <value>
            The select paint tool input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.SelectRotateTool">
      <summary>
            Gets the select rotate tool input.
            </summary>
      <value>
            The select rotate tool input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Slider1">
      <summary>
            Gets the slider 1 input.
            </summary>
      <value>
            The slider 1 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Slider2">
      <summary>
            Gets the slider 2 input.
            </summary>
      <value>
            The slider 2 input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.SymmetryModeNext">
      <summary>
            Gets the symmetry mode next input.
            </summary>
      <value>
            The symmetry mode next input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.SymmetryModePrevious">
      <summary>
            Gets the symmetry mode previous input.
            </summary>
      <value>
            The symmetry mode previous input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Throttle">
      <summary>
            Gets the throttle input.
            </summary>
      <value>
            The throttle input
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.TimeWarpDecrease">
      <summary>
            Gets the time warp decrease input.
            </summary>
      <value>
            The time warp decrease input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.TimeWarpIncrease">
      <summary>
            Gets the time warp increase input.
            </summary>
      <value>
            The time warp increase input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ToggleHideUI">
      <summary>
            Gets the toggle hide UI input.
            </summary>
      <value>
            The toggle hide UI input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ToggleMapView">
      <summary>
            Gets the toggle map view input.
            </summary>
      <value>
            The toggle map view input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ToggleMusic">
      <summary>
            Gets the toggle music input.
            </summary>
      <value>
            The toggle music input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ToggleNavSphere">
      <summary>
            Gets the toggle nav sphere input.
            </summary>
      <value>
            The toggle nav sphere input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.TogglePerformanceAnalyzer">
      <summary>
            Gets the toggle performance analyzer input.
            </summary>
      <value>
            The toggle performance analyzer input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ToggleTranslationMode">
      <summary>
            Gets the toggle translation mode input.
            </summary>
      <value>
            The toggle translation mode input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.ToolModifier">
      <summary>
            Gets the tool modifier input.
            </summary>
      <value>
            The tool modifier input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.UICancel">
      <summary>
            Gets the UI cancel input.
            </summary>
      <value>
            The UI cancel input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.UIHorizontal">
      <summary>
            Gets the UI horizontal input.
            </summary>
      <value>
            The UI horizontal input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.UISubmit">
      <summary>
            Gets the UI submit input.
            </summary>
      <value>
            The UI submit input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.UIVertical">
      <summary>
            Gets the UI vertical input.
            </summary>
      <value>
            The UI vertical input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Undo">
      <summary>
            Gets the undo input.
            </summary>
      <value>
            The undo input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.GameInputs.Yaw">
      <summary>
            Gets the yaw.
            </summary>
      <value>
            The yaw input.
            </value>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.Create">
      <summary>
            Creates a new instance of the game inputs class.
            </summary>
      <returns>A new instance of the game inputs class.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.FindById(System.String)">
      <summary>
            Looks up an input by its id.
            </summary>
      <param name="id">The input identifier.</param>
      <returns>The input with the specified id or <c>null</c> if a matching input could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.Initialize">
      <summary>
            Initializes this instance.
            </summary>
      <returns>The GameInputs.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.DoMouseWheelZoomHackyFixThingy">
      <summary>
            The camera zooming input can be derailed by the camera look modifier.
            For the mouse wheel, this can cause problems, especially for gamepad users with the modifier bound by default.
            We therefore do this hack to check if the mouse wheel is bound to zoom with no mouse conflict.
            If so, we always allow the mouse wheel to zoom so as not to confuse players.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.InitializeCustomModifier(ModApi.Input.IGameInput,ModApi.Input.IGameInput[])">
      <summary>
            Initializes the custom modifier which applies to the specified inputs.
            </summary>
      <param name="modifierInput">The modifier input.</param>
      <param name="modifierActivatedInputs">The inputs that are activated by the modifier input.</param>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.InitializeCustomModifier(ModApi.Input.IGameInput,System.Func{System.Boolean},System.Func{System.Boolean},ModApi.Input.IGameInput[])">
      <summary>
            Initializes the custom modifier which applies to the specified inputs.
            </summary>
      <param name="modifierInput">The modifier input.</param>
      <param name="activatedInputModifierCheck">The custom modifier check used for inputs activated by the modifier.</param>
      <param name="conflictedInputModifierCheck">The custom modifier check used for inputs conflicting with inputs activated by the modifier.</param>
      <param name="modifierActivatedInputs">The inputs that are activated by the modifier input.</param>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.InitializeCustomToggleModifier(ModApi.Input.IGameInput,ModApi.Input.IGameInput[])">
      <summary>
            Initializes the custom modifier which applies to the specified inputs.
            </summary>
      <param name="modifierInput">The modifier input.</param>
      <param name="modifierActivatedInputs">The inputs that are activated by the modifier input.</param>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.OnControlsChanged(System.Object,System.EventArgs)">
      <summary>
            Called when the controls have changed due to loading a new scene or updating the bindings via the controls dialog.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Input.GameInputs.ResetCustomModifiers">
      <summary>
            Resets the custom modifiers for all inputs.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Input.InputCategoryNames">
      <summary>
            A class containing the input category names.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.InputCategoryNames.Default">
      <summary>
            The default input category.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.InputCategoryNames.Designer">
      <summary>
            The default input category.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.InputCategoryNames.Flight">
      <summary>
            The default input category.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.InputCategoryNames.Other">
      <summary>
            The default input category.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Input.InputManagerScript">
      <summary>
            The game object responsible for input management.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="P:Assets.Scripts.Input.InputManagerScript.Inputs">
      <summary>
            Gets the game inputs.
            </summary>
      <value>
            The game inputs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.InputManagerScript.RewiredManager">
      <summary>
            Gets the rewired input manager.
            </summary>
      <value>
            The rewired input manager.
            </value>
    </member>
    <member name="M:Assets.Scripts.Input.InputManagerScript.Create(UnityEngine.GameObject)">
      <summary>
            Creates the input manager script.
            </summary>
      <param name="parent">The parent object.</param>
      <returns>The input manager script reference.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputManagerScript.EnableControlsForScene(System.String)">
      <summary>
            Enables the controls for current scene.
            </summary>
      <param name="sceneName">The name of the scene for which to enable controls. Use <c>null</c> to enable controls for the current scene.</param>
    </member>
    <member name="M:Assets.Scripts.Input.InputManagerScript.OnDisable">
      <summary>
            This function is called when the behavior becomes disabled or inactive.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Input.InputManagerScript.OnEnable">
      <summary>
            This function is called when the object becomes enabled and active.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Input.InputManagerScript.InitializeInputManager">
      <summary>
            Initializes the input manager.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Input.InputManagerScript.LegacyInputDataFileUpgrade(System.Version)">
      <summary>
            An fancy controls upgrade process for old versions.
            We just nuke the controls so they can be reset to defaults.
            </summary>
      <param name="appVersionLastRun">The application version last run.</param>
    </member>
    <member name="M:Assets.Scripts.Input.InputManagerScript.OnVersionUpgrade(System.Version,System.Version)">
      <summary>
            Called when a game version upgrade occurs.
            </summary>
      <param name="previousVersion">The game version the last time it was run.</param>
      <param name="currentVersion">The current game version.</param>
    </member>
    <member name="T:Assets.Scripts.Input.InputUtilities">
      <summary>
            Input utilities.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.InputUtilities._keycodeNameOverrides">
      <summary>
            The keycode name overrides
            </summary>
    </member>
    <member name="M:Assets.Scripts.Input.InputUtilities.GetBindingDisplayName(Rewired.ActionElementMap)">
      <summary>
            Gets the display name of the binding.
            </summary>
      <param name="actionElementMap">The action element map.</param>
      <returns>The text to display referring to the bound input (e.g. "Press [binding] to [action]").</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputUtilities.GetControllerMap(Rewired.Controller,System.String,System.String)">
      <summary>
            Gets the controller map.
            </summary>
      <param name="controller">The controller.</param>
      <param name="category">The category.</param>
      <param name="layout">The layout.</param>
      <returns>The controller map if valid, otherwise null</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputUtilities.GetKeyCodeDisplayName(System.Nullable{UnityEngine.KeyCode},System.String)">
      <summary>
            Gets the display name of the keyboard key code.
            </summary>
      <param name="keyCode">The keyboard key code.</param>
      <param name="defaultDisplayName">Name to display if the keyboard key code isn't overridden.</param>
      <returns>The string that should be displayed as the name of the keyboard key code.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputUtilities.InitializeKeycodeNameOverrides">
      <summary>
            Initializes the keycode name overrides dictionary and sets default overrides.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Input.InputWrapper">
      <summary>
            Handles all input functionality.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.InputWrapper.DefaultLayoutName">
      <summary>
            The default layout name.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.InputWrapper._axisOverides">
      <summary>
            A list of specifically tracked normal axis based controls (keyed by axis name)
            and a value indicating whether or not they are currently overridden by a non-normal-axis based control.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Input.InputWrapper._player">
      <summary>
            The player
            </summary>
    </member>
    <member name="E:Assets.Scripts.Input.InputWrapper.OnControlsChanged">
      <summary>
            Called when the controls have changed due to loading a new scene or updating the bindings via the controls dialog.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Input.InputWrapper.MouseScreenPosition">
      <summary>
            Gets the mouse screen position.
            </summary>
      <value>
            The mouse screen position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Input.InputWrapper.Player">
      <summary>
            Gets the player.
            </summary>
      <value>
            The player.
            </value>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetAllActionIds">
      <summary>
            Gets all action names that have been defined.
            </summary>
      <returns>All action names that have been defined.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetAxis(System.String)">
      <summary>
            Gets the axis value.
            </summary>
      <param name="axis">Name of the axis.</param>
      <returns>The axis value</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetAxis(System.Int32)">
      <summary>
            Gets the axis value.
            </summary>
      <param name="axis">Id of the axis.</param>
      <returns>The axis value</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButton(System.String)">
      <summary>
            Returns true every frame if the button is down.
            </summary>
      <param name="button">The button name.</param>
      <returns>
        <c>true</c> if the button is currently down, otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButton(System.Int32)">
      <summary>
            Returns true every frame if the button is down.
            </summary>
      <param name="button">The button id.</param>
      <returns>
        <c>true</c> if the button is currently down, otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButtonDown(System.Int32)">
      <summary>
            Gets a value indicating if the button associated with the specified button name has been pressed this frame.
            </summary>
      <param name="button">The button id.</param>
      <returns>
        <c>true</c> if the button associated with the specified button id has been pressed this frame, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButtonRepeating(System.String)">
      <summary>
            Gets the repeating button state of the button.
            </summary>
      <param name="button">The button.</param>
      <returns>
        <c>true</c> when immediately pressed, then <c>false</c> until the InputBehavior repeat delay has elapsed, then <c>true</c> for a 1-frame duration repeating at the interval of the specified in the InputBehavior assigned to the input button.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButtonRepeating(System.Int32)">
      <summary>
            Gets the repeating button state of the button.
            </summary>
      <param name="button">The button.</param>
      <returns>
        <c>true</c> when immediately pressed, then <c>false</c> until the InputBehavior repeat delay has elapsed, then <c>true</c> for a 1-frame duration repeating at the interval of the specified in the InputBehavior assigned to the input button.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButtonTimePressed(System.String)">
      <summary>
            Gets the length of time in seconds that the button has been continuously held down.
            Returns 0 if the button is not currently pressed.
            </summary>
      <param name="button">The button.</param>
      <returns>
            The duration of the button hold.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButtonTimePressed(System.Int32)">
      <summary>
            Gets the length of time in seconds that the button has been continuously held down.
            Returns 0 if the button is not currently pressed.
            </summary>
      <param name="button">The button.</param>
      <returns>
            The duration of the button hold.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButtonUp(System.String)">
      <summary>
            Gets a value indicating whether or not the button associated with the specified button name has been released this frame.
            </summary>
      <param name="button">The button to check.</param>
      <returns>
        <c>true</c> if the button associated with the specified button name has been released this frame, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButtonUp(System.Int32)">
      <summary>
            Gets a value indicating whether or not the button associated with the specified button id has been released this frame.
            </summary>
      <param name="button">The button to check.</param>
      <returns>
        <c>true</c> if the button associated with the specified button id has been released this frame, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.LastInputWasNormalAxis(ModApi.Input.IGameInput)">
      <summary>
            Determines if the last input applied to the specified axis was a normal axis-based input.
            </summary>
      <param name="input">The input to check.</param>
      <returns>
        <c>true</c> if the last input on the axis was a normal axis-based input.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.OnVersionUpgrade(System.Version,System.Version)">
      <summary>
            Called when a version upgrade occurs.
            </summary>
      <param name="newVersion">The new version.</param>
      <param name="oldVersion">The old version.</param>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.SetEnabledControlCategories(System.String[])">
      <summary>
            Sets the specified control categories to enabled and disables all other categories.
            </summary>
      <param name="categories">The control categories to enable.</param>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.SetLastInput(ModApi.Input.IGameInput,System.Boolean)">
      <summary>
            Sets a flag indicating whether the axis was last modified by a normal axis based control or something else.
            </summary>
      <param name="input">The input to set.</param>
      <param name="wasAxis">If set to <c>true</c> the axis was last modified by a normal axis based control.</param>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.UpdateLastInput(ModApi.Input.IGameInput)">
      <summary>
            A utility method to be called every frame that tracks an axis and determines whether or not
            its normal axis based input has been overridden by a non-normal-axis based control.
            </summary>
      <param name="input">The input for which to update.</param>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.GetButtonDown(System.String)">
      <summary>
            Gets a value indicating if the button associated with the specified button name has been pressed this frame.
            </summary>
      <param name="button">The button name.</param>
      <returns>
        <c>true</c> if the button associated with the specified button name has been pressed this frame, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.CreateKeyboardAssignment(System.String,System.String,UnityEngine.KeyCode,Rewired.ModifierKeyFlags,Rewired.Pole)">
      <summary>
            Creates a keyboard assignment.
            </summary>
      <param name="actionName">Name of the action.</param>
      <param name="actionCategory">The action category.</param>
      <param name="key">The key.</param>
      <param name="modifiers">The modifiers.</param>
      <param name="axisContribution">The axis contribution.</param>
    </member>
    <member name="M:Assets.Scripts.Input.InputWrapper.LogAllMapInformation">
      <summary>
            Logs all current map information.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Jobs.ManagedJobParallelFor">
      <summary>
            A parallel for job that executes work on a managed object.
            </summary>
      <seealso cref="T:Unity.Jobs.IJobParallelFor" />
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="F:Assets.Scripts.Jobs.ManagedJobParallelFor._managedObjectHandle">
      <summary>
            The managed object handle.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Jobs.ManagedJobParallelFor.#ctor(Unity.Jobs.IJobParallelFor)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Jobs.ManagedJobParallelFor" /> struct.
            </summary>
      <param name="job">The job.</param>
    </member>
    <member name="M:Assets.Scripts.Jobs.ManagedJobParallelFor.RunToCompletion(Unity.Jobs.IJobParallelFor,System.Int32,System.Int32)">
      <summary>
            Runs to completion.
            </summary>
      <param name="job">The job.</param>
      <param name="arrayLength">The number of iterations the for loop will execute.</param>
      <param name="innerloopBatchCount">Granularity in which workstealing is performed.
            A value of 32, means the job queue will steal 32 iterations and then perform them in an efficient inner loop.</param>
    </member>
    <member name="M:Assets.Scripts.Jobs.ManagedJobParallelFor.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Jobs.ManagedJobParallelFor.Execute(System.Int32)">
      <summary>
            Performs the job work at the specific iteration index.
            </summary>
      <param name="index">The index of the Parallel for loop at which to perform work.</param>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelData">
      <summary>
            A class containing information related to a level.
            </summary>
      <seealso cref="T:ModApi.Levels.ILevelData" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelData.#ctor(System.Xml.Linq.XElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelData" /> class.
            </summary>
      <param name="xml">The XML from which to load the level.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.Category">
      <summary>
            Gets the level category.
            </summary>
      <value>
            The level category.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.Description">
      <summary>
            Gets the level description.
            </summary>
      <value>
            The level description.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.DisplayName">
      <summary>
            Gets the level display name.
            </summary>
      <value>
            The level display name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.FlightStateId">
      <summary>
            Gets the flight state identifier.
            </summary>
      <value>
            The flight state identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.Icon">
      <summary>
            Gets the icon.
            </summary>
      <value>
            The icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.Id">
      <summary>
            Gets the unique level identifier.
            </summary>
      <value>
            The unique level identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.LaunchCraftId">
      <summary>
            Gets the identifier for the craft design to launch for this level for Flight level types. If this
            is null then the player will use a craft that is already included inside the flight state.
            </summary>
      <value>
            The launch craft identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.LevelType">
      <summary>
            Gets the type of the level.
            </summary>
      <value>
            The type of the level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.ScoreData">
      <summary>
            Gets the score data for the level.
            </summary>
      <value>
            The score data for the level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.ModApi#Levels#ILevelData#ScoreData">
      <summary>
            Gets the score data for the level.
            </summary>
      <value>
            The score data for the level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelData.Script">
      <summary>
            Gets the type name of the script that manages the level.
            </summary>
      <value>
            The type name of the script that manages the level.
            </value>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelDebugScript">
      <summary>
            Script used to launch directly into a level.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelDebugScript._levelId">
      <summary>
            The level ID to launch
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelDebugScript._startInFlight">
      <summary>
            The start in flight flag.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDebugScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelDesignerUIController">
      <summary>
            A UI controller for managing a designer level UI.
            </summary>
      <seealso cref="T:UI.Xml.XmlLayoutController" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelDesignerUIController._headerPanel">
      <summary>
            The header panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelDesignerUIController._infoPanel">
      <summary>
            The information panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelDesignerUIController._infoPanelPinned">
      <summary>
            The information panel pinned
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelDesignerUIController._levelDescription">
      <summary>
            The level description
            </summary>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelDesignerUIController.CustomUI">
      <summary>
            Gets a value indicating whether the level uses a custom UI.
            </summary>
      <value>
        <c>true</c> if the level uses a custom UI; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelDesignerUIController.InfoPanelPinned">
      <summary>
            Gets or sets a value indicating whether the info panel is pinned.
            </summary>
      <value>
        <c>true</c> if the info panel is pinned; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelDesignerUIController.Level">
      <summary>
            Gets the level associated with this UI.
            </summary>
      <value>
            The level associated with this UI.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelDesignerUIController.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:ModApi.Levels.ILevelUI" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.CreateUI(UnityEngine.RectTransform,ModApi.Levels.ILevel)">
      <summary>
            Creates the UI for the specified level.
            </summary>
      <param name="parent">The parent UI object.</param>
      <param name="level">The level for which to create the UI.</param>
      <returns>The requested UI.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the XML layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.OnSceneLoaded">
      <summary>
            Called when the scene has finished loading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.OnSceneUnloading">
      <summary>
            Called when the scene is unloading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.ShowMessage(System.String,System.Single)">
      <summary>
            Shows a message in the current scene's UI that will fade out after a specified duration.
            </summary>
      <param name="message">The message to show.</param>
      <param name="duration">The duration of the message.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.OnDisable">
      <summary>
            This function is called when the behavior becomes disabled or inactive.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.OnEnable">
      <summary>
            This function is called when the object becomes enabled and active.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.GetTotalCraftFuelString">
      <summary>
            Gets the total craft fuel string.
            </summary>
      <returns>The total craft fuel.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.OnCraftStructureChanged">
      <summary>
            Called when the craft structure changes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.OnExitClicked">
      <summary>
            Called when the exit button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.OnMouseClickPanel">
      <summary>
            Called when the mouse clicks the panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.OnMouseEnterPanel">
      <summary>
            Called when the mouse enters the panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.OnMouseExitPanel">
      <summary>
            Called when mouse exits the panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelDesignerUIController.UpdateDescriptionText">
      <summary>
            Updates the description text.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelFlightUIController">
      <summary>
            A UI controller for managing a flight level UI.
            </summary>
      <seealso cref="T:UI.Xml.XmlLayoutController" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController._endLevelButtons">
      <summary>
            The end level buttons
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController._headerPanel">
      <summary>
            The header panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController._infoPanel">
      <summary>
            The info panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController._infoPanelPinned">
      <summary>
            The info panel pinned flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController._levelMessage">
      <summary>
            The level message text control.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController._requirements">
      <summary>
            The requirements
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController._requirementTemplate">
      <summary>
            The requirement template
            </summary>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelFlightUIController.CustomUI">
      <summary>
            Gets a value indicating whether the level uses a custom UI.
            </summary>
      <value>
        <c>true</c> if the level uses a custom UI; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelFlightUIController.InfoPanelPinned">
      <summary>
            Gets or sets a value indicating whether the info panel is pinned.
            </summary>
      <value>
        <c>true</c> if the info panel is pinned; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelFlightUIController.Level">
      <summary>
            Gets the level associated with this UI.
            </summary>
      <value>
            The level associated with this UI.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelFlightUIController.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:ModApi.Levels.ILevelUI" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.CreateUI(UnityEngine.RectTransform,ModApi.Levels.ILevel)">
      <summary>
            Creates the UI for the specified level.
            </summary>
      <param name="parent">The parent UI object.</param>
      <param name="level">The level for which to create the UI.</param>
      <returns>The requested UI.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.LayoutRebuilt(UI.Xml.ParseXmlResult)">
      <summary>
            Called when the XML layout is rebuilt.
            </summary>
      <param name="parseResult">The parse result.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.OnSceneLoaded">
      <summary>
            Called when the scene has finished loading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.OnSceneUnloading">
      <summary>
            Called when the scene is unloading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.ShowMessage(System.String,System.Single)">
      <summary>
            Shows a message in the current scene's UI that will fade out after a specified duration.
            </summary>
      <param name="message">The message to show.</param>
      <param name="duration">The duration of the message.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.CreateRequirement(ModApi.Levels.Requirements.ILevelRequirement)">
      <summary>
            Creates the requirement.
            </summary>
      <param name="requirement">The requirement.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.OnExitClicked">
      <summary>
            Called when the exit button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.OnLevelFailed(System.Object,ModApi.Levels.Events.LevelCompletedEventArgs)">
      <summary>
            Called when the level has been failed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Levels.Events.LevelCompletedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.OnLevelPassed(System.Object,ModApi.Levels.Events.LevelCompletedEventArgs)">
      <summary>
            Called when the level has been passed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Levels.Events.LevelCompletedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.OnMouseClickPanel">
      <summary>
            Called when the mouse clicks the panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.OnMouseEnterPanel">
      <summary>
            Called when the mouse enters the panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.OnMouseExitPanel">
      <summary>
            Called when mouse exits the panel.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.OnRetryClicked">
      <summary>
            Called when the retry button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.ShowEndLevel(System.Boolean)">
      <summary>
            Shows the end level.
            </summary>
      <param name="passed">if set to <c>true</c> [passed].</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.UpdateLevelMessage">
      <summary>
            Updates the level message.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel">
      <summary>
            The view model for a requirement.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel._icon">
      <summary>
            The icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel._label">
      <summary>
            The label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel._status">
      <summary>
            The status
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel._value">
      <summary>
            The value
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel.#ctor(ModApi.Levels.Requirements.ILevelRequirement,UI.Xml.XmlElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel" /> class.
            </summary>
      <param name="requirement">The requirement.</param>
      <param name="element">The element.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel.Requirement">
      <summary>
            Gets the requirement.
            </summary>
      <value>
            The requirement.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel.RequirementElement">
      <summary>
            Gets or sets the requirement element.
            </summary>
      <value>
            The requirement element.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelFlightUIController.RequirementViewModel.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelManager">
      <summary>
            The level manager.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:ModApi.Levels.ILevelManager" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelManager._levels">
      <summary>
            The collection of levels that have been loaded by the game.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelManager.CurrentLevel">
      <summary>
            Gets the current level (if any).
            </summary>
      <value>
            The current level (if any).
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelManager.DebuggingFlightScene">
      <summary>
            Gets or sets a value indicating whether the level is currently being debugged and the developer
            wishes to enter the flight scene immediately.
            </summary>
      <value>
        <c>true</c> if enter flight immediately; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelManager.Levels">
      <summary>
            Gets the levels that have been loaded by the game.
            </summary>
      <value>
            The levels that have been loaded by the game.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelManager.ModApi#Levels#ILevelManager#Levels">
      <summary>
            Gets the levels that have been loaded by the game.
            </summary>
      <value>
            The levels that have been loaded by the game.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.EndLevel">
      <summary>
            Ends the current level (if any).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.StartLevel(ModApi.Levels.ILevelData)">
      <summary>
            Starts the specified level.
            </summary>
      <param name="level">The level to start.</param>
      <returns>
        <c>true</c> if the level is successfully starting; <c>false</c> if an error occurred.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.Create(UnityEngine.GameObject)">
      <summary>
            Creates the level manager.
            </summary>
      <param name="parent">The parent game object for the level manager.</param>
      <returns>The level manager reference.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.FixedUpdate">
      <summary>
            This function is called every fixed framerate frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.LoadFlightStateData(ModApi.Levels.ILevelData)">
      <summary>
            Loads the flight state data.
            </summary>
      <param name="level">The level.</param>
      <returns>The flight state data.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.GetLevelScriptType(ModApi.Levels.ILevelData)">
      <summary>
            Gets the type of the level script.
            </summary>
      <param name="level">The level for which to get the script type.</param>
      <returns>The type of the level script or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.Initialize">
      <summary>
            Initializes the level manager.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.LoadLevel(System.Xml.Linq.XElement)">
      <summary>
            Loads a level from the specified XML.
            </summary>
      <param name="xml">The XML from which to load a level.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.LoadStockLevels">
      <summary>
            Loads the stock levels.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.OnLevelEnded(System.Object,ModApi.Levels.Events.LevelEventArgs)">
      <summary>
            Called when the level has ended.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Levels.Events.LevelEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.OnLevelFailed(System.Object,ModApi.Levels.Events.LevelCompletedEventArgs)">
      <summary>
            Called when the level has been failed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Levels.Events.LevelCompletedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelManager.OnLevelPassed(System.Object,ModApi.Levels.Events.LevelCompletedEventArgs)">
      <summary>
            Called when the level has been passed successfully.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Levels.Events.LevelCompletedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.DockingPractice">
      <summary>
            A practice level for docking with a satellite.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.DockingPractice._dockRequirement">
      <summary>
            The dock requirement
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.DockingPractice.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.DockingPractice.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.DockingPractice" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.DockingPractice.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.DockingPractice.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.EscapeSoi">
      <summary>
            A level in which the goal is to escape Droo's SOI.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.EscapeSoi.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.EscapeSoi.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.EscapeSoi" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.EscapeSoi.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.EscapeSoi.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.EscapeSoi.OnInitialized">
      <summary>
            Called when the level is initialized.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript">
      <summary>
            The flight tutorial panel script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript._buttonAction">
      <summary>
            The action to execute when the button is clicked.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript._buttonPanel">
      <summary>
            The button panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript._highlight">
      <summary>
            The highlight image
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript._highlightColor">
      <summary>
            The highlight color
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript._highlightTarget">
      <summary>
            The highlight target
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript._highlightTime">
      <summary>
            The highlight time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript._instructionText">
      <summary>
            The message label
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript._progress">
      <summary>
            The progress
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript._stepText">
      <summary>
            The step text
            </summary>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.InstructionText">
      <summary>
            Gets or sets the message.
            </summary>
      <value>
            The message.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.StepText">
      <summary>
            Gets or sets the message.
            </summary>
      <value>
            The message.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.FindFlightUiGameObject(System.String)">
      <summary>
            Finds the UI game object in the flight scene, by its name.
            </summary>
      <param name="name">The name.</param>
      <returns>The game object, or null if it cannot be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.DisableButton">
      <summary>
            Disables the button.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.DisableHighlight">
      <summary>
            Disables the highlight.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.EnableButton(System.Action)">
      <summary>
            Enables the button.
            </summary>
      <param name="action">The action to execute when clicked.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.HighlightUiElement(System.String,UnityEngine.Vector2,System.Boolean)">
      <summary>
            Highlights the UI element.
            </summary>
      <param name="name">The name.</param>
      <param name="padding">The padding.</param>
      <param name="highlightEvenIfInactive">if set to <c>true</c> then highlight even if inactive.</param>
      <returns>
            True if the element was found and highlighted.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.HighlightUiElement(UnityEngine.GameObject,UnityEngine.Vector2,System.Boolean)">
      <summary>
            Highlights the UI element.
            </summary>
      <param name="gameObject">The game object.</param>
      <param name="padding">The padding.</param>
      <param name="highlightEvenIfInactive">if set to <c>true</c> then highlight even if inactive.</param>
      <returns>
            True if the element was found and highlighted.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.AnimateHighlightColors">
      <summary>
            Animates the target part material.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.EnableHighlight(UnityEngine.Vector3,System.Int32,System.Int32,UnityEngine.Color)">
      <summary>
            Enables the highlight.
            </summary>
      <param name="position">The position.</param>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <param name="color">The color.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.OnButtonClicked">
      <summary>
            Called when the button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.HighlightTarget">
      <summary>
            Contains data about an element that was highlighted.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.HighlightTarget.Padding">
      <summary>
            Gets or sets the padding.
            </summary>
      <value>
            The padding.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialPanelScript.HighlightTarget.Target">
      <summary>
            Gets or sets the target.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState">
      <summary>
            The flight tutorial state.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState._buttonsClicked">
      <summary>
            The buttons clicked
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState._flightTutorial">
      <summary>
            The flight tutorial
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState._pauseIfFailed">
      <summary>
            The pause if failed flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState._stepText">
      <summary>
            The instruction text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState._timers">
      <summary>
            The timers.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.#ctor(Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState" /> class.
            </summary>
      <param name="flightTutorial">The flight tutorial.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.MapView">
      <summary>
            Gets the map view.
            </summary>
      <value>
            The map view.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.MaxAllowableStage">
      <summary>
            Gets the maximum allowable stage.
            </summary>
      <value>
            The maximum allowable stage.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.Step">
      <summary>
            Gets the step.
            </summary>
      <value>
            The step.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.Controls">
      <summary>
            Gets the controls.
            </summary>
      <value>
            The controls.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.Craft">
      <summary>
            Gets the craft.
            </summary>
      <value>
            The craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.CraftAltitude">
      <summary>
            Gets the craft's current altitude.
            </summary>
      <value>
            The craft's current altitude.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.FlightScene">
      <summary>
            Gets the flight scene.
            </summary>
      <value>
            The flight scene.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.FlightSceneUI">
      <summary>
            Gets the flight scene UI.
            </summary>
      <value>
            The flight scene UI.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.MapViewVisible">
      <summary>
            Gets a value indicating whether map view is visible.
            </summary>
      <value>
        <c>true</c> if [map view visible]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.NavSphere">
      <summary>
            Gets the nav sphere.
            </summary>
      <value>
            The nav sphere.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.TutorialPanel">
      <summary>
            Gets the tutorial panel.
            </summary>
      <value>
            The tutorial panel.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.CompleteStep">
      <summary>
            Completes the step.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureActivationGroupActive(System.Int32)">
      <summary>
            Ensures the activation group is active.
            </summary>
      <param name="group">The group.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureActivationPanelOpen">
      <summary>
            Ensures the activation panel is open.
            </summary>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureApoapsisAltitude(System.Double)">
      <summary>
            Ensures the apoapsis altitude is greater than a specified altitude.
            </summary>
      <param name="altitude">The altitude.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureBegin">
      <summary>
            Called before the state starts ensuring things.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureButtonClicked(System.String)">
      <summary>
            Ensures the heading lock.
            </summary>
      <param name="buttonId">The button identifier.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureFastForward">
      <summary>
            Ensures the game is currently in fast forward.
            </summary>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureGameView">
      <summary>
            Ensures the game view is visible.
            </summary>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureGravityTurn(System.Int32,System.Boolean,System.String)">
      <summary>
            Ensures the gravity turn.
            </summary>
      <param name="pitch">The pitch.</param>
      <param name="reduceThrottle">if set to <c>true</c> throttle should be reduced.</param>
      <param name="message">The message.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureHeadingLock">
      <summary>
            Ensures the heading is locked.
            </summary>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureLockedOnPrograde">
      <summary>
            Ensures prograde vector is locked.
            </summary>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureLowTimeWarp(System.Double)">
      <summary>
            Ensures the game is currently in the slowest time warp mode.
            </summary>
      <param name="minTimeToApoapsis">The min amount of time to enforce this rule. After this time has passed, then this rule will always pass.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureMapView">
      <summary>
            Ensures the map view is visible.
            </summary>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureMapViewZoom(System.Single,System.Single)">
      <summary>
            Ensures the map view zoom is within a specific range.
            </summary>
      <param name="zoom">The zoom amount.</param>
      <param name="epsilon">The allowable range.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureMinimumAltitude(System.Single)">
      <summary>
            Ensures the player's altitude above sea level is above a minimum altitude.
            </summary>
      <param name="minimumAltitude">The minimum altitude.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureNavSphereHeadingEast(System.Int32)">
      <summary>
            Ensures the nav sphere heading is set to east.
            </summary>
      <param name="epsilon">The allowable variation.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureNavSpherePitch(System.Int32,System.Int32)">
      <summary>
            Ensures the nav sphere pitch is equal to the heading.
            </summary>
      <param name="pitch">The desired value.</param>
      <param name="epsilon">The allowable variation.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureNavSphereSettings(System.Int32,System.Int32)">
      <summary>
            Shortcut for setting up mutiple parameters on the nav sphere.
            </summary>
      <param name="heading">The heading.</param>
      <param name="pitch">The pitch.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureNavSphereVisible(System.Boolean)">
      <summary>
            Ensures the nav sphere matches the specified visibility.
            </summary>
      <param name="visible">if set to <c>true</c> then ensures visible.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureNoFuel">
      <summary>
            Ensures the active engines are out of fuel.
            </summary>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureNotPaused">
      <summary>
            Ensures the game is not paused.
            </summary>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureNotTimeWarp">
      <summary>
            Ensures the player is not currently time warp.
            </summary>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsurePeriapsisAltitude(System.Double)">
      <summary>
            Ensures the periapsis altitude is greater than a specified altitude.
            </summary>
      <param name="altitude">The altitude.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureStage(System.Int32,System.String)">
      <summary>
            Ensures the stage is at least as great as the specified stage.
            </summary>
      <param name="stage">The stage.</param>
      <param name="failMessage">The fail message.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureThrottle(System.Single,System.Single)">
      <summary>
            Ensures the throttle is set to a specific value.
            </summary>
      <param name="throttle">The desired throttle.</param>
      <param name="epsilon">The allow variation from the desired value.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.EnsureTimeToApoapsis(System.Double,System.String)">
      <summary>
            Ensures the time to apoapsis is less than the specified time.
            </summary>
      <param name="seconds">The time in seconds.</param>
      <param name="failMessage">The fail message.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.SetPauseIfFailed(System.Boolean)">
      <summary>
            Sets the pause if failed flag.
            </summary>
      <param name="value">if set to <c>true</c> [value].</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.SetStepLimits(System.Int32,System.Int32)">
      <summary>
            Sets the step limits.
            </summary>
      <param name="loseAltitude">The altitude at which they will lose if they go below for this step.</param>
      <param name="skipAltitude">The altitude at which the step will be skipped.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.SetStepText(System.String)">
      <summary>
            Sets the overall step text.
            </summary>
      <param name="stepText">The step text.</param>
      <returns>
            This object.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.ShowMessage(System.String,System.Object[])">
      <summary>
            Shows the message.
            </summary>
      <param name="message">The message.</param>
      <param name="args">The arguments.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.WaitForTimer(System.String,System.Single)">
      <summary>
            Waits for timer.
            </summary>
      <param name="name">The name of the timer to wait for.</param>
      <param name="time">The amount of time to wait.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.CheckTimerPastTime(System.String,System.Single)">
      <summary>
            Checks if the timer is past the specified time. If the timer has not been
            checked yet, it will be created.
            </summary>
      <param name="name">The name.</param>
      <param name="time">The time.</param>
      <returns>True if the timer is past the specifeid time. Otherwise, false.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.Ensure(System.Func{System.Boolean},System.Func{System.String})">
      <summary>
            Ensures the specified condition is true. If it is not, then it displays the fail message.
            </summary>
      <param name="condition">The condition.</param>
      <param name="failMessage">The fail message.</param>
      <returns>
            This object if it passes, or null if it fails.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.FlightTutorial.FlightTutorialState.PauseGame">
      <summary>
            Pauses the game.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.LandingPractice">
      <summary>
            A practice level for the final stage of landing on Luna.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LandingPractice.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LandingPractice.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.LandingPractice" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LandingPractice.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LandingPractice.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.LevelAltitude100">
      <summary>
            A level in which the goal is to see how fast the player can get their craft to reach 100 km altitude.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelAltitude100.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelAltitude100.InitializeRequirements">
      <summary>
            Initializes the requirements for the level.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelAltitude100.OnFirstStageActivated">
      <summary>
            Called when the player activates the first stage of their craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelAltitude100.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.LevelDesignerTutorial">
      <summary>
            The designer tutorial level.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelDesignerTutorial.InitializeRequirements">
      <summary>
            Initializes the requirements for the level.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelDesignerTutorial.OnDesignSceneLoading">
      <summary>
            Called when the designer scene is loading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelDesignerTutorial.OnDesignSceneReady">
      <summary>
            Called when the designer scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelDesignerTutorial.OnTutorialComplete(Assets.Scripts.Design.Tutorial.TutorialScript)">
      <summary>
            Called when the tutorial has been completed.
            </summary>
      <param name="tutorial">The tutorial.</param>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial">
      <summary>
            The flight tutorial level.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial._debugSkip">
      <summary>
            The debug skip flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial._state">
      <summary>
            The state
            </summary>
    </member>
    <member name="P:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial.TutorialPanel">
      <summary>
            Gets the tutorial panel.
            </summary>
      <value>
            The tutorial panel.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial.InitializeRequirements">
      <summary>
            Initializes the requirements for the level.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial.OnPlayerLose(System.String)">
      <summary>
            Called when the state has detected that the player has lost.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial.OnFlightSceneUnloading">
      <summary>
            Called when the flight scene is unloading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LevelFlightTutorial.Require(System.Boolean)">
      <summary>
            Requires the specified state result to be true. If it is true, then this method returns
            this object to enable a fluent API. Otherwise, this method returns null, stopping the
            subsequent calls, as long as they are using the null-conditional operator (?.).
            </summary>
      <param name="stateResult">if set to <c>true</c> [state result].</param>
      <returns>This object if the state result is true or null if the state result is false.</returns>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.LowFlyer">
      <summary>
            A level in which the goal is to fly as far as possible while staying below 5km altitude.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.LowFlyer._distanceRequirement">
      <summary>
            The SurfaceDistanceTravelRequirement.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LowFlyer.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LowFlyer.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.LowFlyer" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LowFlyer.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LowFlyer.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.LowOrbit">
      <summary>
            A level in which the goal is to get into low orbit around Earth.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LowOrbit.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LowOrbit.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.LowOrbit" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LowOrbit.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LowOrbit.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.LowOrbit.OnInitialized">
      <summary>
            Called when the level is initialized.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.MaximumSpeed">
      <summary>
            A level in which the goal is to exceed 30,000m/s.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.MaximumSpeed._velocityRequirement">
      <summary>
            The orbit velocity requirement.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MaximumSpeed.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MaximumSpeed.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.MaximumSpeed" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MaximumSpeed.OnFirstStageActivated">
      <summary>
            Called when the player activates the first stage of their craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MaximumSpeed.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.MaximumThrust">
      <summary>
            A level in which the goal is to output maximum thrust.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.MaximumThrust._velocityRequirement">
      <summary>
            The velocity requirement.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MaximumThrust.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MaximumThrust.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.MaximumThrust" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MaximumThrust.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MaximumThrust.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.MediumOrbit">
      <summary>
            A level in which the goal is to get into medium orbit around Droo.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MediumOrbit.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MediumOrbit.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.MediumOrbit" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MediumOrbit.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MediumOrbit.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MediumOrbit.OnInitialized">
      <summary>
            Called when the level is initialized.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.MoonLanding">
      <summary>
            A level in which the goal is to land on Luna with as little fuel as possible.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonLanding.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonLanding.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.MoonLanding" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonLanding.OnFirstStageActivated">
      <summary>
            Called when the player activates the first stage of their craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonLanding.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonLanding.OnInitialized">
      <summary>
            Called when the level is initialized.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.MoonOrbit">
      <summary>
            A level in which the goal is to get into orbit around Luna.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonOrbit.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonOrbit.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.MoonOrbit" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonOrbit.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonOrbit.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonOrbit.OnInitialized">
      <summary>
            Called when the level is initialized.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.MoonPunch">
      <summary>
            A level in which the goal is to crash into Luna as fast as possible.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonPunch.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonPunch.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.MoonPunch" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonPunch.OnFirstStageActivated">
      <summary>
            Called when the player activates the first stage of their craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.MoonPunch.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.OptimumTrajectory">
      <summary>
            A level in which the goal is to fly as far as possible with a small craft low on fuel.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.OptimumTrajectory._distanceRequirement">
      <summary>
            The surface distance traveled requirement.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.OptimumTrajectory.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.OptimumTrajectory.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.OptimumTrajectory" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.OptimumTrajectory.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.OptimumTrajectory.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.ParachuteLanding">
      <summary>
            A level in which the goal is to land on Droo from orbit, using a retrograde burn and a parachute.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.ParachuteLanding.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.ParachuteLanding.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.ParachuteLanding" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.ParachuteLanding.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.ParachuteLanding.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.ParachuteLanding.OverrideFlightSceneLoadParameters(ModApi.Scenes.Parameters.FlightSceneLoadParameters)">
      <summary>
            Allows the level to override the flight scene load parameters.
            </summary>
      <param name="loadParameters">The flight scene load parameters.</param>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.PolarOrbit">
      <summary>
            A level in which the goal is to get into an orbit around Droo with inclination = 90 +/- 5
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.PolarOrbit.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.PolarOrbit.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.MediumOrbit" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.PolarOrbit.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.PolarOrbit.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.PolarOrbit.OnInitialized">
      <summary>
            Called when the level is initialized.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.SatelliteRendezvous">
      <summary>
            A level where the goal is to launch from Droo and dock with a satellite.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="F:Assets.Scripts.Levels.LevelScripts.SatelliteRendezvous._dockRequirement">
      <summary>
            The dock requirement
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.SatelliteRendezvous.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.SatelliteRendezvous.HasRequiredParts(ModApi.Craft.ICraftScript,System.String@)">
      <summary>
            Determines whether the specified craft has the required parts for this level.
            </summary>
      <param name="craft">The craft.</param>
      <param name="missingPartsMessage">The message displayed if there are required parts missing.</param>
      <returns>
        <c>true</c> if the specified craft has the required parts for this level; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.SatelliteRendezvous.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.SatelliteRendezvous" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.SatelliteRendezvous.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.SatelliteRendezvous.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.SatelliteRendezvous.OnInitialized">
      <summary>
            Called when the level is initialized.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.ShuttleLanding">
      <summary>
            A level in which the goal is to land the shuttle without going kaboom.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.ShuttleLanding.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.ShuttleLanding.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.ShuttleLanding" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.ShuttleLanding.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.ShuttleLanding.OnFlightSceneReady">
      <summary>
            Called when the flight scene is ready.
            This will be several frames after the scene has loaded.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.LevelScripts.TimedOrbit">
      <summary>
            A level in which the goal is to get into orbit around Droo as quickly as possible.
            </summary>
      <seealso cref="T:ModApi.Levels.Level" />
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.TimedOrbit.GetPersistentMessage">
      <summary>
            Gets the persistent message that is always displayed throughout the duration of the level.
            This is typically used to display the current score for the level.
            </summary>
      <returns>
            The persistent message that is always displayed throughout the duration of the level.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.TimedOrbit.InitializeRequirements">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.LevelScripts.TimedOrbit" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.TimedOrbit.OnFirstStageActivated">
      <summary>
            Called when the player activates the first stage of their craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.LevelScripts.TimedOrbit.OnFlightLateUpdate">
      <summary>
            Called every frame during the late update cycle when in the flight scene.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.AltitudeRequirement">
      <summary>
            Requirement for reaching a specific altitude.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.AltitudeRequirement.#ctor(ModApi.Levels.ILevel,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.AltitudeRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="altitude">The altitude in meters.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.AltitudeRequirement.Altitude">
      <summary>
            Gets the altitude in meters.
            </summary>
      <value>
            The altitude.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.AltitudeRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.ApsisRequirement">
      <summary>
            Requirement for an orbit apsis.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.OrbitRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.ApsisRequirement.#ctor(ModApi.Levels.ILevel,Assets.Scripts.Levels.Requirements.ApsisRequirement.ApsisType,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.ApsisRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="apsisType">Type of the apsis.</param>
      <param name="altitude">The altitude.</param>
      <param name="range">The range.</param>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.ApsisRequirement.ApsisType">
      <summary>
            The apsis types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.ApsisRequirement.ApsisType.Periapsis">
      <summary>
            The periapsis
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.ApsisRequirement.ApsisType.Apoapsis">
      <summary>
            The apoapsis
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.BelowAltitudeRequirement">
      <summary>
            Requirement for staying below a specific altitude.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.BelowAltitudeRequirement.#ctor(ModApi.Levels.ILevel,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.BelowAltitudeRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="altitude">The altitude in meters.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.BelowAltitudeRequirement.Altitude">
      <summary>
            Gets the altitude in meters.
            </summary>
      <value>
            The altitude.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.BelowAltitudeRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.DockingRequirement">
      <summary>
            Requirement for docking with another satellite.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.DockingRequirement._dockingWithTargetLastFrame">
      <summary>
            The docking with target last frame
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.DockingRequirement._playerDockingPorts">
      <summary>
            The player docking ports
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.DockingRequirement.#ctor(ModApi.Levels.ILevel,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.DockingRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="targetCraftName">Name of the target craft node as defined in FlightState.xml.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.DockingRequirement.DockAmount">
      <summary>
            Gets the dock amount.
            </summary>
      <value>
            The dock amount.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.DockingRequirement.TargetCraft">
      <summary>
            Gets or sets the target craft to dock with.
            </summary>
      <value>
            The target craft to dock with.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.DockingRequirement.TargetCraftNode">
      <summary>
            Gets the target craft node.
            </summary>
      <value>
            The target craft node.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.DockingRequirement.TargetCraftScriptExists">
      <summary>
            Gets a value indicating whether the target craft script exists.
            </summary>
      <value>
        <c>true</c> if initialized; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.DockingRequirement.SetTargetCraftScript(ModApi.Craft.ICraftScript)">
      <summary>
            Sets the target craft script.
            </summary>
      <param name="targetCraft">The target craft.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.DockingRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.DockingRequirement.GetCraftNode(System.String)">
      <summary>
            Checks for the target craft node.
            </summary>
      <param name="name">The name of the craft node as defined in FlightState.xml.</param>
      <returns>The craft node with the specified name.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.DockingRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.FuelRequirement">
      <summary>
            Requirement for reaching a specific altitude.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.FuelRequirement.#ctor(ModApi.Levels.ILevel,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.FuelRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="maxFuel">The maximum fuel allowed to pass this level.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.FuelRequirement.MaxFuel">
      <summary>
            Gets the maximum fuel.
            </summary>
      <value>
            The maximum fuel.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.FuelRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.FuelRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.InclinationRequirement">
      <summary>
            Requirement for an inclination.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.InclinationRequirement.#ctor(ModApi.Levels.ILevel,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.InclinationRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="inclination">The required inclination in degrees.</param>
      <param name="range">The range (inclination +/- range).</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.InclinationRequirement.Inclination">
      <summary>
            Gets the required inclination in degrees.
            </summary>
      <value>
            The required inclination in degrees.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.InclinationRequirement.Range">
      <summary>
            Gets the range.
            </summary>
      <value>
            The range.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.InclinationRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.LateralMovementRequirement">
      <summary>
            Requirement for limiting lateral movement
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.LateralMovementRequirement._initialPosition">
      <summary>
            The initial position of the player craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.LateralMovementRequirement._lateralMovement">
      <summary>
            The lateral movement of the player craft since start.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.LateralMovementRequirement._maximumLateralMovement">
      <summary>
            The maximum lateral movement allowed before failing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.LateralMovementRequirement.#ctor(ModApi.Levels.ILevel,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.LateralMovementRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="maximumLateralMovement">The maximum lateral movement allowed before failing.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.LateralMovementRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.LateralMovementRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.LevelRequirement">
      <summary>
            Represents a single requirement for a level.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.LevelRequirement.#ctor(ModApi.Levels.ILevel,System.String,ModApi.Levels.Requirements.LevelRequirementVisibilityType)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="name">The name.</param>
      <param name="visibilityType">The visibility type.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.LevelRequirement.Dependencies">
      <summary>
            Gets or sets the requirements that must be passing before this requirement will evaluate.
            </summary>
      <value>
            The dependencies.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.LevelRequirement.DependenciesCurrentlySatisfied">
      <summary>
            Gets a value indicating whether all dependencies are currently satisfied.
            </summary>
      <value>
        <c>true</c> if all dependencies are currently satisfied; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.LevelRequirement.DisplayValue">
      <summary>
            Gets or sets the current display value, or null if the requirement does not need to
            display its current value in the UI.
            </summary>
      <value>
            The display value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.LevelRequirement.Level">
      <summary>
            Gets the level.
            </summary>
      <value>
            The level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.LevelRequirement.Name">
      <summary>
            Gets or sets the name of the requirement.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.LevelRequirement.Status">
      <summary>
            Gets or sets the status.
            </summary>
      <value>
            The status.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.LevelRequirement.VisibilityType">
      <summary>
            Gets or sets the type of the view.
            </summary>
      <value>
            The type of the view.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.LevelRequirement.AddDependency(ModApi.Levels.Requirements.ILevelRequirement)">
      <summary>
            Adds the dependency (a requirement that must pass before this requirement will evaluate).
            </summary>
      <param name="dependency">The dependency.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.LevelRequirement.FlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.LevelRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when all dependency requirements are satisfied.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.OrbitRequirement">
      <summary>
            Requirement for a specific aspect of an orbit.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.OrbitRequirement._planet">
      <summary>
            The planet
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.OrbitRequirement.#ctor(ModApi.Levels.ILevel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.OrbitRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.OrbitRequirement.DisplayGetter">
      <summary>
            Gets or sets the display getter.
            </summary>
      <value>
            The display getter.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.OrbitRequirement.TargetRange">
      <summary>
            Gets or sets the target range.
            </summary>
      <value>
            The target range.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.OrbitRequirement.ValueGetter">
      <summary>
            Gets or sets the value getter.
            </summary>
      <value>
            The value getter.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.OrbitRequirement.FormatAngle(System.Double)">
      <summary>
            Formats the angle.
            </summary>
      <param name="angle">The angle.</param>
      <returns>The string.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.OrbitRequirement.FormatAltitude(System.Double)">
      <summary>
            Formats the apsis.
            </summary>
      <param name="altitude">The altitude.</param>
      <returns>
            The string.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.OrbitRequirement.GetApsisAltitude(System.Double)">
      <summary>
            Gets the apsis distance above the surface of the planet.
            </summary>
      <param name="apsis">The apsis.</param>
      <returns>
            The apsis altitude.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.OrbitRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.OrbitVelocityRequirement">
      <summary>
            Requirement for reaching a specific orbit velocity.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.OrbitVelocityRequirement.#ctor(ModApi.Levels.ILevel,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.OrbitVelocityRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="orbitVelocity">The orbit velocity required to pass this level.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.OrbitVelocityRequirement.MaximumPlayerVelocity">
      <summary>
            Gets the maximum orbit velocity the player has reached.
            </summary>
      <value>
            The maximum orbit velocity the player has reached.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.OrbitVelocityRequirement.OrbitVelocity">
      <summary>
            Gets the surface velocity
            </summary>
      <value>
            The surface velocity.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.OrbitVelocityRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.OrbitVelocityRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.ParentRequirement">
      <summary>
            Requirement for being in a specific SOI.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.ParentRequirement.#ctor(ModApi.Levels.ILevel,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.ParentRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="parentName">Name of the parent.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.ParentRequirement.ParentName">
      <summary>
            Gets or sets the parent.
            </summary>
      <value>
            The parent.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.ParentRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.ParentRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement">
      <summary>
            Requirement for tracking surface distance traveled.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement._minimumSurfaceDistance">
      <summary>
            The surface distance that must be traveled to pass.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement._previousStakesDistance">
      <summary>
            The distance from previous stakes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement._surfaceDistanceTraveled">
      <summary>
            The surface distance traveled by the craft since start.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement._surfaceStake">
      <summary>
            The current stake
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement.#ctor(ModApi.Levels.ILevel,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="minimumSurfaceDistance">The surface distance that must be traveled to pass.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement.DistanceBetweenStakes">
      <summary>
            Gets or sets the distance between "stakes" from which surface distance is tracked.
            Lower value is more accurate to curvature of the planet, but allows going backwards more easily.
            </summary>
      <value>
            The distance between "stakes" from which surface distance is tracked.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement.SurfaceDistanceTraveled">
      <summary>
            Gets the surface distance traveled.
            </summary>
      <value>
            The surface distance traveled.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement.GetSurfacePosition(UnityEngine.Vector3d)">
      <summary>
            Gets the surface position.
            </summary>
      <param name="planetPosition">The planet position.</param>
      <returns>The planet position converted to surface vector/</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.SurfaceDistanceTravelRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.SurfaceVelocityRequirement">
      <summary>
            Requirement for reaching a specific surface velocity.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.SurfaceVelocityRequirement.#ctor(ModApi.Levels.ILevel,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.SurfaceVelocityRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="surfaceVelocity">The surface velocity required to pass this level.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.SurfaceVelocityRequirement.SurfaceVelocity">
      <summary>
            Gets the surface velocity
            </summary>
      <value>
            The surface velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.SurfaceVelocityRequirement.MaximumPlayerVelocity">
      <summary>
            Gets the maximum surface velocity the player has reached.
            </summary>
      <value>
            The maximum surface velocity the player has reached.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.SurfaceVelocityRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.SurfaceVelocityRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.TargetRange">
      <summary>
            Contains information about a target and permissible values above and below that target.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TargetRange.#ctor(System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.TargetRange" /> class.
            </summary>
      <param name="target">The target value.</param>
      <param name="lowMargin">The amount below the target value that is permissible.</param>
      <param name="highMargin">The amount above the target value that is permissible.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.TargetRange.HighMargin">
      <summary>
            Gets the high margin.
            </summary>
      <value>
            The high margin.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.TargetRange.LowMargin">
      <summary>
            Gets the low margin.
            </summary>
      <value>
            The low margin.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.TargetRange.Target">
      <summary>
            Gets the target.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TargetRange.IsValid(System.Double)">
      <summary>
            Returns true if the current value is within the permissible range.
            </summary>
      <param name="currentValue">The current value.</param>
      <returns>
        <c>true</c> if the specified current value is valid; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.TerrainContactRequirement">
      <summary>
            Requirement for contacting terrain.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.TerrainContactRequirement._collisionNotifiers">
      <summary>
            The collision notifiers
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.TerrainContactRequirement._isLanding">
      <summary>
            Gets or sets a value indicating whether the craft is "landing".
            </summary>
      <value>
        <c>true</c> if this instance is landing; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.TerrainContactRequirement._timeHeldStill">
      <summary>
            The time held still since landing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.#ctor(ModApi.Levels.ILevel,Assets.Scripts.Levels.Requirements.TerrainContactRequirement.ContactType,System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.TerrainContactRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="requiredContactType">Type of the required contact.</param>
      <param name="contactTarget">The contact target.</param>
      <param name="includeWaterAsContact">if set to <c>true</c> [include water as contact].</param>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.ContactType">
      <summary>
            Type of contact.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.ContactType.AvoidImpact">
      <summary>
            Fail on CraftImpact.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.ContactType.CraftImpact">
      <summary>
            Any craft impact with the terrain, including those causing the craft to explode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.ContactType.CraftLanded">
      <summary>
            Craft must land safely.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.ContactTarget">
      <summary>
            Gets or sets the contact target.
            </summary>
      <value>
            The contact target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.IncludeWaterAsContact">
      <summary>
            Gets or sets a value indicating whether [include water as contact].
            </summary>
      <value>
        <c>true</c> if [include water as contact]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.RequiredContactType">
      <summary>
            Gets or sets the required type of the contact.
            </summary>
      <value>
            The type of the required contact.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.OnBodyCollisionEnter(ModApi.Craft.IBodyScript,UnityEngine.Collision)">
      <summary>
            Called when a craft body enters a collision.
            </summary>
      <param name="body">The body.</param>
      <param name="collision">The collision.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.OnContacted">
      <summary>
            Called when the craft has contacted, sets status according to contact type.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.PrepareBodiesForCollision">
      <summary>
            Called when the structure of the player craft has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TerrainContactRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.TimeRequirement">
      <summary>
            Requirement for being in a specific SOI.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TimeRequirement.#ctor(ModApi.Levels.ILevel,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.TimeRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="maximumSeconds">The maximum seconds.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.TimeRequirement.MaximumSeconds">
      <summary>
            Gets or sets the maximum time.
            </summary>
      <value>
            The maximum time.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TimeRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TimeRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.TutorialRequirement">
      <summary>
            Requirement for the tutorial.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TutorialRequirement.#ctor(ModApi.Levels.ILevel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.TutorialRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TutorialRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.TutorialRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Requirements.UprightRequirement">
      <summary>
            Requirement for the craft being upright.
            </summary>
      <seealso cref="T:Assets.Scripts.Levels.Requirements.LevelRequirement" />
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.UprightRequirement.#ctor(ModApi.Levels.ILevel,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Requirements.UprightRequirement" /> class.
            </summary>
      <param name="level">The level.</param>
      <param name="leeway">The minimum dot product to consider upright.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Requirements.UprightRequirement.Leeway">
      <summary>
            Gets or sets the maximum time.
            </summary>
      <value>
            The maximum time.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.UprightRequirement.OnFlightUpdate">
      <summary>
            Called every frame during the update cycle when in the flight scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Requirements.UprightRequirement.UpdateName">
      <summary>
            Updates the name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Scores.LevelScoreComparer">
      <summary>
            A comparer used to sort level scores.
            </summary>
      <seealso cref="T:ModApi.Levels.Scores.ILevelScoreComparer" />
    </member>
    <member name="F:Assets.Scripts.Levels.Scores.LevelScoreComparer.AscendingComparer">
      <summary>
            A comparer used to sort level scores in ascending order according to thier value (best to worst).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Scores.LevelScoreComparer.DescendingComparer">
      <summary>
            A comparer used to sort level scores in descending order according to thier value (best to worst).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Scores.LevelScoreComparer._greaterThanResult">
      <summary>
            The result used when x is greater than y.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Scores.LevelScoreComparer._lessThanResult">
      <summary>
            The result used when x is less than y.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreComparer.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Scores.LevelScoreComparer" /> class.
            </summary>
      <param name="ascending">
        <c>true</c> if the comparer uses ascending order; <c>false</c> for descending order.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Scores.LevelScoreComparer.IsAscendingComparer">
      <summary>
            Gets a value indicating whether this comparer uses ascending order.
            </summary>
      <value>
        <c>true</c> if this comparer uses ascending order; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreComparer.Compare(ModApi.Levels.Scores.LevelScore,ModApi.Levels.Scores.LevelScore)">
      <summary>
            Performs a comparison of two objects of the same type and returns a value
            indicating whether one object is less than, equal to, or greater than the other.
            </summary>
      <param name="x">The first object to compare.</param>
      <param name="y">The second object to compare.</param>
      <returns>
            A signed integer that indicates the relative values of <paramref name="x" /> and <paramref name="y" />.
            Less than zero: <paramref name="x" /> is less than <paramref name="y" />.
            Zero: <paramref name="x" /> equals <paramref name="y" />.
            Greater than zero: <paramref name="x" /> is greater than <paramref name="y" />.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Levels.Scores.LevelScoreData">
      <summary>
            A class containing information related to the score data for a level.
            </summary>
      <seealso cref="T:ModApi.Levels.Scores.ILevelScoreData" />
    </member>
    <member name="F:Assets.Scripts.Levels.Scores.LevelScoreData.MaxScoreCount">
      <summary>
            The maximum number of scores per level saved by the game.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Scores.LevelScoreData._dataSeparator">
      <summary>
            The separator used for separating the data items of a score.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Scores.LevelScoreData._lineSeparator">
      <summary>
            The separator used for separating lines which each represent a score.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Scores.LevelScoreData._scores">
      <summary>
            The scores (sorted from best to worst).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Levels.Scores.LevelScoreData._scoresPath">
      <summary>
            The path the the persistent scores data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreData.#ctor(Assets.Scripts.Levels.LevelData,System.Xml.Linq.XElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Scores.LevelScoreData" /> class.
            </summary>
      <param name="levelData">The level data associated with the scores.</param>
      <param name="xml">The XML from which to load the score data.</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Scores.LevelScoreData.Comparer">
      <summary>
            Gets the score comparer used for sorting scores from best to worst.
            </summary>
      <value>
            The score comparer used for sorting scores from best to worst.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Scores.LevelScoreData.Formatter">
      <summary>
            Gets the formatter used for formatting scores into user friendly text strings.
            </summary>
      <value>
            The formatter used for formatting scores into user friendly text strings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Scores.LevelScoreData.LevelData">
      <summary>
            Gets the level data associated with this score data.
            </summary>
      <value>
            The level data associated with this score data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Scores.LevelScoreData.ModApi#Levels#Scores#ILevelScoreData#LevelData">
      <summary>
            Gets the level data associated with this score data.
            </summary>
      <value>
            The level data associated with this score data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Scores.LevelScoreData.Scores">
      <summary>
            Gets the collection of scores (sorted best to worst).
            </summary>
      <value>
            The collection of scores (sorted best to worst).
            </value>
    </member>
    <member name="P:Assets.Scripts.Levels.Scores.LevelScoreData.ShowTopScores">
      <summary>
            Gets a value indicating whether the top scores for the level should be shown in the UI.
            </summary>
      <value>
        <c>true</c> if the top scores for the level should be shown in the UI; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreData.LoadScores">
      <summary>
            Loads the saved scores from the persistent score file for the level.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreData.LogScore(ModApi.Levels.Scores.LevelScore)">
      <summary>
            Logs the specified score and saves the collection of scores to the file system.
            </summary>
      <param name="score">The score to log.</param>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreData.LoadComparer(System.String)">
      <summary>
            Loads the score comparer.
            </summary>
      <param name="comparer">The score comparer to load.</param>
      <returns>The requested score comparer (or a default comparer if the requested one could not be loaded).</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreData.LoadFormatter(System.String,System.String)">
      <summary>
            Loads the requested score formatter.
            </summary>
      <param name="formatter">The formatter to load.</param>
      <param name="formatterArg">The formatter constructor argument (if any).</param>
      <returns>The requested formatter (or a default formatter if the requested one could not be loaded).</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreData.LoadFormatterByTypeName(System.String,System.String)">
      <summary>
            Loads the requested score formatter.
            </summary>
      <param name="fullyQualifiedTypeName">The fully qualified type name of the formatter.</param>
      <param name="formatterArg">The formatter constructor argument if any.</param>
      <returns>The requested formatter or <c>null</c> if it could not be loaded.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreData.Meh(System.String)">
      <summary>
            Super duper mega fancy obfuscation of scores.
            </summary>
      <param name="input">The input data.</param>
      <returns>The output data.</returns>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreData.SaveScores">
      <summary>
            Saves the scores to the file system.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Levels.Scores.LevelScoreFormatterDefault">
      <summary>
            The default score formatter.
            </summary>
      <seealso cref="T:ModApi.Levels.Scores.ILevelScoreFormatter" />
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreFormatterDefault.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Scores.LevelScoreFormatterDefault" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreFormatterDefault.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Scores.LevelScoreFormatterDefault" /> class.
            </summary>
      <param name="format">The format string to use (as would be passed to string.Format()).</param>
    </member>
    <member name="P:Assets.Scripts.Levels.Scores.LevelScoreFormatterDefault.Format">
      <summary>
            Gets the format string (if any) used by this formatter.
            </summary>
      <value>
            The format string (if any) used by this formatter.
            </value>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreFormatterDefault.FormatScore(ModApi.Levels.Scores.LevelScore)">
      <summary>
            Formats the level score in to a display string for the score.
            </summary>
      <param name="score">The score to format.</param>
      <returns>
            The display string of the score.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Levels.Scores.LevelScoreFormatterStopwatch">
      <summary>
            The stopwatch-style score formatter.
            </summary>
      <seealso cref="T:ModApi.Levels.Scores.ILevelScoreFormatter" />
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreFormatterStopwatch.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Levels.Scores.LevelScoreFormatterStopwatch" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Levels.Scores.LevelScoreFormatterStopwatch.FormatScore(ModApi.Levels.Scores.LevelScore)">
      <summary>
            Formats the level score in to a display string for the score.
            </summary>
      <param name="score">The score to format.</param>
      <returns>
            The display string of the score.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Logging.ErrorMonitoringScript">
      <summary>
            Script to monitor for errors and prompt user to send a bug report when errors occur.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Logging.ErrorMonitoringScript.ErrorReportsFolder">
      <summary>
            The error reports folder
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.ErrorMonitoringScript.ImageFilePrefix">
      <summary>
            The image file prefix
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.ErrorMonitoringScript.InputStateFileName">
      <summary>
            The input state file name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.ErrorMonitoringScript.LogFileName">
      <summary>
            The log file name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.ErrorMonitoringScript.SandboxXmlFileName">
      <summary>
            The sandbox XML file name
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.ErrorMonitoringScript._reportCount">
      <summary>
            The report count
            </summary>
    </member>
    <member name="P:Assets.Scripts.Logging.ErrorMonitoringScript.FullyQualifiedErrorReportsFolder">
      <summary>
            Gets the fully qualified error reports folder.
            </summary>
      <value>
            The fully qualified error reports folder.
            </value>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.FormatScreenshot(UnityEngine.Texture2D)">
      <summary>
            Formats the screenshot.
            </summary>
      <param name="screenshot">The screenshot.</param>
      <returns>The bytes of the screenshot, in the configured format.</returns>
      <exception cref="T:System.InvalidOperationException">Occurs when the picture type isn't supported.</exception>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.GetInputState">
      <summary>
            Gets the state of the input.
            </summary>
      <returns>A descriptive string of the current input state.</returns>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.SaveScreenshot(UnityEngine.Texture2D,System.String)">
      <summary>
            Saves the screenshot.
            </summary>
      <param name="screenshot">The screenshot.</param>
      <param name="reportFolder">The report folder.</param>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.CreateErrorReport">
      <summary>
            Creates the error report.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.DeleteUnsentBugReports">
      <summary>
            Deletes the unsent bug reports.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.GetBugReportScreenshots(System.Action{UnityEngine.Texture2D})">
      <summary>
            Gets the bug report screenshots.
            </summary>
      <param name="onComplete">The on complete.</param>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.GetDescription">
      <summary>
            Gets the description.
            </summary>
      <returns>The description.</returns>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.HasUnreportedErrors">
      <summary>
            Determines whether [has unreported errors].
            </summary>
      <returns>
        <c>true</c> if [has unreported errors]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.OnBugReportSendCompleted(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Bugs the report send complete.
            </summary>
      <param name="request">The request.</param>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.OnRootErrorOccurred(Assets.Scripts.Logging.LogHistory,Assets.Scripts.Logging.LogHistory.LogEntry)">
      <summary>
            Called when [root error occurred].
            </summary>
      <param name="source">The source.</param>
      <param name="entry">The entry.</param>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.OnSceneLoaded(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.LoadSceneMode)">
      <summary>
            Called when a new scene has been loaded.
            </summary>
      <param name="newScene">The new scene.</param>
      <param name="mode">The mode.</param>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.ProcessBugReports">
      <summary>
            Processes the bug reports.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Logging.ErrorMonitoringScript.SendBugReport(System.Xml.Linq.XDocument,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Byte[]})">
      <summary>
            Sends the bug report.
            </summary>
      <param name="sandboxData">The bug report.</param>
      <param name="logFileContents">The log file contents.</param>
      <param name="inputState">State of the input.</param>
      <param name="screenshots">The screenshots.</param>
    </member>
    <member name="T:Assets.Scripts.Logging.LogHistory">
      <summary>
            Provides access to the Unity Log History.
            </summary>
      <seealso cref="T:UnityEngine.ILogHandler" />
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory.DefaultLogCapacity">
      <summary>
            The default log capacity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory.GameInitializationFrames">
      <summary>
            The number of frames after the log history is first initialized which should be considered part of game initialization.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory._instance">
      <summary>
            The instance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory._deviceCapsProvider">
      <summary>
            The device caps provider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory._lastFrameWithError">
      <summary>
            The last frame with error
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory._logCapacity">
      <summary>
            The log capacity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory._logCount">
      <summary>
            The log count
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory._logMessages">
      <summary>
            The messages
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory._rootErrorCapacity">
      <summary>
            The root error capacity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory._rootErrors">
      <summary>
            The messages
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory._rootErrorsLogCount">
      <summary>
            The root errors log count
            </summary>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Logging.LogHistory" /> class.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Logging.LogHistory.LogHistoryHandler">
      <summary>
            Handler for LogHistory events.
            </summary>
      <param name="source">The source.</param>
      <param name="entry">The entry.</param>
    </member>
    <member name="E:Assets.Scripts.Logging.LogHistory.RootErrorOccurred">
      <summary>
            Occurs when a new root error has occurred.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Logging.LogHistory.LoggingStatus">
      <summary>
            The logging status.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory.LoggingStatus.On">
      <summary>
            All messages are logged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory.LoggingStatus.Off">
      <summary>
            No messages are logged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory.LoggingStatus.BeginOnError">
      <summary>
            All messages will be logged once the first error occurs (including the error).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogHistory.LoggingStatus.ErrorsOnly">
      <summary>
            All and only errors will be logged.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.Instance">
      <summary>
            Gets the instance.
            </summary>
      <value>
            The instance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.FirstError">
      <summary>
            Gets the first error.
            </summary>
      <value>
            The first error.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.LastRootError">
      <summary>
            Gets the root error.
            </summary>
      <value>
            The root error.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.LogCapacity">
      <summary>
            Gets or sets the log capacity.
            </summary>
      <value>
            The log capacity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.LogCount">
      <summary>
            Gets the current number of log entries.
            </summary>
      <value>
            The current number of log entries.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.LogMessages">
      <summary>
            Gets the log messages.
            </summary>
      <value>
            The log messages.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.RootErrorCapacity">
      <summary>
            Gets or sets the root error log capacity.
            </summary>
      <value>
            The root error log capacity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.RootErrors">
      <summary>
            Gets the root errors.  A "root error" is an error which broke a no-error streak from previous frames.
            </summary>
      <value>
            The root errors.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.Status">
      <summary>
            Gets or sets the status.
            </summary>
      <value>
            The status.
            </value>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.Initialize(System.Int32,System.Int32,System.Func{System.String})">
      <summary>
            Initializes this instance.
            </summary>
      <param name="logCapacity">The log capacity.</param>
      <param name="rootErrorCapacity">The root error capacity.</param>
      <param name="deviceCapsProvider">The device caps provider.</param>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.Clear">
      <summary>
            Clears the log.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.GenerateReport(System.Boolean,System.Boolean)">
      <summary>
            Generates a report from the current log contents.
            </summary>
      <param name="rootErrorsOnly">if set to <c>true</c> only root errors only will be included, otherwise <c>false</c>.</param>
      <param name="clearAfter">If set to <c>true</c> the log is cleared after generating the report, otherwise <c>false</c>.</param>
      <returns>
            A report generated from the current log contents.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.AddEntry(System.Collections.Generic.LinkedList{Assets.Scripts.Logging.LogHistory.LogEntry},System.Int32,System.Int32@,System.Int32,System.String,System.String,UnityEngine.LogType)">
      <summary>
            Adds the entry to the log list.
            </summary>
      <param name="list">The list to add the entry to.</param>
      <param name="logCapacity">The log capacity.</param>
      <param name="logCount">The current log count.</param>
      <param name="frameNumber">The frame number.</param>
      <param name="condition">The "condition" string (message sent to Debug.Log).</param>
      <param name="stackTrace">The stack trace.</param>
      <param name="type">The log type.</param>
      <returns>
            The LogEntry which was added to the list.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.IsError(UnityEngine.LogType)">
      <summary>
            Determines whether the specified type is error.
            </summary>
      <param name="type">The type.</param>
      <returns>
        <c>true</c> if the specified type is error; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.Resize(System.Collections.Generic.LinkedList{Assets.Scripts.Logging.LogHistory.LogEntry},System.Int32,System.Int32)">
      <summary>
            Resizes the linked list to the specified capacity. Entries are trimmed if necessary starting with the oldest.
            </summary>
      <param name="list">The list to resize.</param>
      <param name="oldCapacity">The old capacity.</param>
      <param name="newCapacity">The new capacity.</param>
      <returns>The number of items remaining in the list after resizing.</returns>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.ShouldLogEntry(Assets.Scripts.Logging.LogHistory.LoggingStatus,System.Boolean)">
      <summary>
            Determines whether the entry should be logged.
            </summary>
      <param name="status">The status.</param>
      <param name="isError">if set to <c>true</c> the current message is an error, otherwise <c>false</c>.</param>
      <returns>
        <c>true</c> if the message should be logged, otherwise <c>false</c>.</returns>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.UpdateStatus(Assets.Scripts.Logging.LogHistory.LoggingStatus,System.Boolean)">
      <summary>
            Updates the status if necessary.
            </summary>
      <param name="currentStatus">The current status.</param>
      <param name="isError">if set to <c>true</c> the current message is an error, otherwise <c>false</c>.</param>
      <returns>The new logging status.</returns>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.OnLogMessageRecieved(System.String,System.String,UnityEngine.LogType)">
      <summary>
            Called when a message has been logged via Debug.Log.
            </summary>
      <param name="condition">The condition.</param>
      <param name="stackTrace">The stack trace.</param>
      <param name="type">The type.</param>
    </member>
    <member name="T:Assets.Scripts.Logging.LogHistory.LogEntry">
      <summary>
            Represents a log message entry.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.LogEntry.#ctor(Assets.Scripts.Logging.LogHistory.LogEntry)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Logging.LogHistory.LogEntry" /> class.
            </summary>
      <param name="entry">The entry.</param>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.LogEntry.#ctor(System.Int32,System.String,System.String,UnityEngine.LogType)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Logging.LogHistory.LogEntry" /> class.
            </summary>
      <param name="frameNumber">The frame number.</param>
      <param name="condition">The condition.</param>
      <param name="stackTrace">The stack trace.</param>
      <param name="type">The log type.</param>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.LogEntry.Condition">
      <summary>
            Gets or sets the condition.
            </summary>
      <value>
            The condition.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.LogEntry.FrameNumber">
      <summary>
            Gets or sets the frame number.
            </summary>
      <value>
            The frame number.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.LogEntry.StackTrace">
      <summary>
            Gets or sets the stack trace.
            </summary>
      <value>
            The stack trace.
            </value>
    </member>
    <member name="P:Assets.Scripts.Logging.LogHistory.LogEntry.Type">
      <summary>
            Gets or sets the type.
            </summary>
      <value>
            The type.
            </value>
    </member>
    <member name="M:Assets.Scripts.Logging.LogHistory.LogEntry.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Logging.LogTesterScript">
      <summary>
            Tester script for the LogHistory class.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Logging.LogTesterScript.FirstError">
      <summary>
            The first error
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogTesterScript.LastRootError">
      <summary>
            The last root error
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogTesterScript.LogCapacity">
      <summary>
            The log capacity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogTesterScript.LogClear">
      <summary>
            The log clear
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogTesterScript.LogCount">
      <summary>
            The log count
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogTesterScript.RootErrorCount">
      <summary>
            The root error count
            </summary>
    </member>
    <member name="F:Assets.Scripts.Logging.LogTesterScript._logErrorsNextFrame">
      <summary>
            The error next
            </summary>
    </member>
    <member name="M:Assets.Scripts.Logging.LogTesterScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.AboutPageScript">
      <summary>
            The script for the about page.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.AboutPageScript._mainPanel">
      <summary>
            The main panel
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.AboutPageScript.OnLayoutRebuilt(UI.Xml.XmlLayoutController)">
      <summary>
            Called when [layout rebuilt].
            </summary>
      <param name="x">The x.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.AboutPageScript.Show">
      <summary>
            Shows this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.AboutPageScript.OnCloseAboutPage">
      <summary>
            Called when the about page is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.AboutPageScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.GameMenuScript">
      <summary>
            Script for the file menu inside the game menu.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._whatsNewDownloadText">
      <summary>
            The text downloaded from the website for what's new.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._activeCraftsButton">
      <summary>
            The active crafts button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._activeCraftsText">
      <summary>
            The active crafts text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._companyNameText">
      <summary>
            The company name text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._fileMenu">
      <summary>
            The file menu
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._gameMenuControllerGameObject">
      <summary>
            The game menu controller game object
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._launchLocationText">
      <summary>
            The launch location text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._menu">
      <summary>
            The main menu
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._modsButton">
      <summary>
            The mods button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._planet">
      <summary>
            The planet
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._rocketText">
      <summary>
            The rocket text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._whatsNewPanel">
      <summary>
            The whats new panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.GameMenuScript._whatsNewText">
      <summary>
            The whats new text
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.GameMenuScript.ShowModsMenu">
      <summary>
            Gets or sets a value indicating whether the mods menu should be shown when the menu is loaded.
            </summary>
      <value>
        <c>true</c> if the mods menu should be shown when the menu is loaded; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.Initialize(Assets.Scripts.Menu.MenuScript)">
      <summary>
            Initializes the game menu script.
            </summary>
      <param name="menuScript">The menu script.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnActiveCraftsButtonClicked">
      <summary>
            Called when the active crafts button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnCraftLoaded(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Called when the craft is loaded.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnLoadGameButtonClicked">
      <summary>
            Called when the load game button clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnMenuButtonClicked(UI.Xml.XmlElement)">
      <summary>
            Called when the menu button is clicked.
            </summary>
      <param name="button">The button.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnNewGameButtonClicked">
      <summary>
            Called when the new game button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.UpdateLaunchLocation(ModApi.State.LaunchLocation)">
      <summary>
            Updates the launch location.
            </summary>
      <param name="launchLocation">The launch location.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.DownloadWhatsNewText">
      <summary>
            Downloads the what's new text.
            </summary>
      <returns>The Unity enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnActiveCraftsListViewClosed(Assets.Scripts.Menu.ListView.ListViewModel)">
      <summary>
            Called when the active crafts ListView is closed.
            </summary>
      <param name="model">The model.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnBuildButtonClicked">
      <summary>
            Called when the build button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnCompanyNameClicked">
      <summary>
            Called when the company name is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnCompanyNameEdited(ModApi.Ui.InputDialogScript)">
      <summary>
            Called when the company name is edited by the user.
            </summary>
      <param name="inputDialog">The input dialog.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnDownloadButtonClicked">
      <summary>
            Called when the download button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnExitButtonClicked">
      <summary>
            Called when the exit button clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnLaunchButtonClicked">
      <summary>
            Called when the launch button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnLaunchLocationButtonClicked">
      <summary>
            Called when the launch location button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnLoadCraftButtonClicked">
      <summary>
            Called when the load button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnModsButtonClicked">
      <summary>
            Called when mods button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnRoadmapButtonClicked">
      <summary>
            Called when the roadmap button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnSettingsButtonClicked">
      <summary>
            Called when the settings button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.OnWhatsNewButtonClicked">
      <summary>
            Called when the whats new button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.SetWhatsNewText(System.String)">
      <summary>
            Sets the whats new text.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.ToggleFileMenu">
      <summary>
            Toggles the visibility of the file menu.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.GameMenuScript.UpdateActiveCraftsInfo">
      <summary>
            Updates the active crafts information.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.HorizontalCameraFovScript">
      <summary>
            Script that allows setting a camera's horizontal FOV and maintaining that FOV.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.HorizontalCameraFovScript._camera">
      <summary>
            The camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.HorizontalCameraFovScript._horizontalFov">
      <summary>
            The horizontal fov.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.HorizontalCameraFovScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.HorizontalCameraFovScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ActiveCraftsDetails">
      <summary>
            Manages details for the active crafts list view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._altitude">
      <summary>
            The altitude property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._apoapsis">
      <summary>
            The apoapsis property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._eccentricity">
      <summary>
            The eccentricity property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._inclination">
      <summary>
            The inclination property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._name">
      <summary>
            The name property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._orbitGroup">
      <summary>
            The orbit group property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._periapsis">
      <summary>
            The periapsis property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._period">
      <summary>
            The period property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._planet">
      <summary>
            The planet property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._resumable">
      <summary>
            The resumable
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsDetails._velocity">
      <summary>
            The velocity property.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsDetails.#ctor(Assets.Scripts.Menu.ListView.ListViewDetailsScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.ActiveCraftsDetails" /> class.
            </summary>
      <param name="listViewDetails">The list view details.</param>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ActiveCraftsDetails.IsResumable">
      <summary>
            Gets a value indicating whether this instance is resumable.
            </summary>
      <value>
        <c>true</c> if this instance is resumable; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsDetails.UpdateDetails(ModApi.Scripts.State.ICraftNodeData,ModApi.Planet.SolarSystemDataScript)">
      <summary>
            Updates the details.
            </summary>
      <param name="craftNodeData">The craft node data.</param>
      <param name="solarSystemData">The solar system data.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel">
      <summary>
            View model class for the active crafts list view.
            </summary>
      <seealso cref="T:Assets.Scripts.Menu.ListView.ListViewModel" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel._details">
      <summary>
            The details.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel._flightStateData">
      <summary>
            The flight state data
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel._solarSystemData">
      <summary>
            The solar system data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel.#ctor(Assets.Scripts.State.FlightStateData,ModApi.Planet.SolarSystemDataScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel" /> class.
            </summary>
      <param name="flightStateData">The flight state data.</param>
      <param name="solarSystemData">The solar system data.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel.LoadItems">
      <summary>
            Loads the items.
            </summary>
      <returns>
            Unity enumerator so the view model can optionally split the loading up over multiple frames.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel.OnDeleteButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the delete button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel.OnListViewInitialized(Assets.Scripts.Menu.ListView.ListViewScript)">
      <summary>
            Called when the ListView is initialized.
            </summary>
      <param name="listView">The list view.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel.OnPrimaryButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the primary button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel.OnSearchChanged(System.String)">
      <summary>
            Called when the search text has changed.
            </summary>
      <param name="searchText">The search text. Will always be lower case.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel.UpdateDetails(Assets.Scripts.Menu.ListView.ListViewItemScript,System.Action)">
      <summary>
            Called when the view model should update the details for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel.UpdatePreview(Assets.Scripts.Menu.ListView.ListViewItemScript,Assets.Scripts.Menu.ObjectViewerScript,System.Action)">
      <summary>
            Called when the view model should update the preview for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="objectViewer">The object viewer.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ActiveCraftsViewModel.OnConfirmDelete(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when the user confirms deleting a craft node.
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ContextMenuItemScript">
      <summary>
            Script for a button in the List View's dropdown context menu.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ContextMenuItemScript._text">
      <summary>
            The text component.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ContextMenuItemScript.ClickHandler">
      <summary>
            Gets or sets the click handler.
            </summary>
      <value>
            The click handler.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ContextMenuItemScript.CloseContextMenuWhenClicked">
      <summary>
            Gets or sets a value indicating whether this item should close the list view's context menu when clicked.
            </summary>
      <value>
        <c>true</c> if the context menu should close when this item is clicked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ContextMenuItemScript.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ContextMenuItemScript.Tooltip">
      <summary>
            Gets or sets the tooltip for this item.
            </summary>
      <value>
            The tooltip for this item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ContextMenuItemScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.ContextMenuItemScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ContextMenuItemScript.XmlElement">
      <summary>
            Gets the XML element.
            </summary>
      <value>
            The XML element.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ContextMenuItemScript.Initialize(UI.Xml.XmlElement)">
      <summary>
            Initializes the context menu item.
            </summary>
      <param name="element">The XML element.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.CraftDesignsDetails">
      <summary>
            Manages details for the craft designs list view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._deltaV">
      <summary>
            The delta v
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._depth">
      <summary>
            The depth
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._height">
      <summary>
            The height
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._mass">
      <summary>
            The mass
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._name">
      <summary>
            The name property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._numStages">
      <summary>
            The number stages
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._price">
      <summary>
            The price
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._thrust">
      <summary>
            The thrust
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._wetDryRatio">
      <summary>
            The wet mass / dry mass ratio
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsDetails._width">
      <summary>
            The width
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsDetails.#ctor(Assets.Scripts.Menu.ListView.ListViewDetailsScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.CraftDesignsDetails" /> class.
            </summary>
      <param name="listViewDetails">The list view details.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsDetails.UpdateDetails(System.String,ModApi.Craft.ICraftScript)">
      <summary>
            Updates the details.
            </summary>
      <param name="id">The identifier.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.CraftDesignsViewModel">
      <summary>
            View model class for the craft designs list view.
            </summary>
      <seealso cref="T:Assets.Scripts.Menu.ListView.ListViewModel" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsViewModel._craftData">
      <summary>
            The craft data
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsViewModel._craftId">
      <summary>
            The craft identifier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsViewModel._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsViewModel._details">
      <summary>
            The details.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsViewModel._menuScript">
      <summary>
            The menu script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.CraftDesignsViewModel._refreshSelectedCraftOnCancel">
      <summary>
            The refresh selected craft on cancel
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.#ctor(Assets.Scripts.Menu.MenuScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.CraftDesignsViewModel" /> class.
            </summary>
      <param name="menuScript">The menu script.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.LoadItems">
      <summary>
            Loads the items.
            </summary>
      <returns>
            Unity enumerator so the view model can optionally split the loading up over multiple frames.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.OnCanceled">
      <summary>
            Called when the list view is being closed by canceling.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.OnDeleteButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the delete button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.OnListViewInitialized(Assets.Scripts.Menu.ListView.ListViewScript)">
      <summary>
            Called when the ListView is initialized.
            </summary>
      <param name="listView">The list view.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.OnPrimaryButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the primary button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.OnSearchChanged(System.String)">
      <summary>
            Called when the search text has changed.
            </summary>
      <param name="searchText">The search text. Will always be lower case.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.OnSelectedItemChanging(Assets.Scripts.Menu.ListView.ListViewItemScript,System.Action)">
      <summary>
            Called when the selected item is about to change.
            </summary>
      <param name="item">The item.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.UpdateDetails(Assets.Scripts.Menu.ListView.ListViewItemScript,System.Action)">
      <summary>
            Called when the view model should update the details for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.UpdatePreview(Assets.Scripts.Menu.ListView.ListViewItemScript,Assets.Scripts.Menu.ObjectViewerScript,System.Action)">
      <summary>
            Called when the view model should update the preview for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="objectViewer">The object viewer.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.OnConfirmDelete(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when the user confirms deleting a craft node.
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.CraftItem">
      <summary>
            Wraps some craft data when creating items for the list.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.CraftItem.Id">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.CraftDesignsViewModel.CraftItem.Price">
      <summary>
            Gets or sets the price.
            </summary>
      <value>
            The price.
            </value>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.DetailsHeaderScript">
      <summary>
            Script for a details header.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsHeaderScript._text">
      <summary>
            The label text.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsHeaderScript.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsHeaderScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.IDetailsWidget" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsHeaderScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.DetailsInputScript">
      <summary>
            Script for a details input.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsInputScript._placeholder">
      <summary>
            The placeholder
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsInputScript.Input">
      <summary>
            Gets the input.
            </summary>
      <value>
            The input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsInputScript.PlaceholderText">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsInputScript.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsInputScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.IDetailsWidget" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsInputScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.DetailsPropertyScript">
      <summary>
            Script for a details property.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsPropertyScript._label">
      <summary>
            The label text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsPropertyScript._value">
      <summary>
            The value text.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsPropertyScript.LabelText">
      <summary>
            Gets or sets the label text.
            </summary>
      <value>
            The label text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsPropertyScript.ValueText">
      <summary>
            Gets or sets the value text.
            </summary>
      <value>
            The value text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsPropertyScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.IDetailsWidget" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsPropertyScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.DetailsSpacerScript">
      <summary>
            Script for a details spacer.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsSpacerScript._layout">
      <summary>
            The layout
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsSpacerScript.Height">
      <summary>
            Gets or sets the height.
            </summary>
      <value>
            The height.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsSpacerScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.IDetailsWidget" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsSpacerScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.DetailsTextScript">
      <summary>
            Script for a details text.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsTextScript._text">
      <summary>
            The label text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsTextScript._xmlElement">
      <summary>
            The XML element.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsTextScript.Alignment">
      <summary>
            Gets or sets the alignment for the text.
            </summary>
      <value>
            The alignment for the text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsTextScript.Color">
      <summary>
            Gets or sets the color of the text.
            </summary>
      <value>
            The color of the text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsTextScript.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsTextScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.IDetailsWidget" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsTextScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.DetailsWidgetGroup">
      <summary>
            Contains a group of widgets and methods to create new widgets.
            </summary>
      <seealso cref="T:Assets.Scripts.Menu.ListView.IDetailsWidget" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsWidgetGroup._listViewDetails">
      <summary>
            The list view details
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsWidgetGroup._parent">
      <summary>
            The parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsWidgetGroup._visible">
      <summary>
            The visible
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.DetailsWidgetGroup._widgets">
      <summary>
            The widgets
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.#ctor(Assets.Scripts.Menu.ListView.ListViewDetailsScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.DetailsWidgetGroup" /> class.
            </summary>
      <param name="listViewDetails">The list view details.</param>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.IDetailsWidget" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.AddGroup">
      <summary>
            Adds the widget group.
            </summary>
      <returns>
            The widget.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.AddHeader(System.String)">
      <summary>
            Adds the header widget.
            </summary>
      <param name="text">The text.</param>
      <returns>
            The widget.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.AddInput">
      <summary>
            Adds the text widget.
            </summary>
      <returns>
            The widget.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.AddProperty(System.String)">
      <summary>
            Adds the property widget.
            </summary>
      <param name="labelText">The label text.</param>
      <returns>The widget.</returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.AddSpacer">
      <summary>
            Adds the spacer widget.
            </summary>
      <returns>
            The widget.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.AddText(System.String)">
      <summary>
            Adds the text widget.
            </summary>
      <param name="text">The text.</param>
      <returns>
            The widget.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.AddText(System.String,System.String)">
      <summary>
            Adds the text widget with the specified color.
            </summary>
      <param name="text">The text.</param>
      <param name="color">The color of the text.</param>
      <returns>
            The widget.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.DetailsWidgetGroup.LoadDetailWidgetResource``1(System.String)">
      <summary>
            Loads the detail widget resource.
            </summary>
      <typeparam name="T">The type of resource widget script.</typeparam>
      <param name="name">The name.</param>
      <returns>The widget script.</returns>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.IDetailsWidget">
      <summary>
            Interface for a details widget on a list view details panel.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.IDetailsWidget.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.IDetailsWidget" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.IDetailsWidget.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.LaunchLocationsDetails">
      <summary>
            Manages details for the launch locations list view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LaunchLocationsDetails._altitude">
      <summary>
            The altitude
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LaunchLocationsDetails._description">
      <summary>
            The description
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LaunchLocationsDetails._latitude">
      <summary>
            The latitude
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LaunchLocationsDetails._longitude">
      <summary>
            The longitude
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LaunchLocationsDetails._name">
      <summary>
            The name header.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LaunchLocationsDetails._planet">
      <summary>
            The planet
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LaunchLocationsDetails._velocity">
      <summary>
            The velocity
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsDetails.#ctor(Assets.Scripts.Menu.ListView.ListViewDetailsScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.LaunchLocationsDetails" /> class.
            </summary>
      <param name="listViewDetails">The list view details.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsDetails.UpdateDetails(ModApi.State.LaunchLocation)">
      <summary>
            Updates the details.
            </summary>
      <param name="launchLocation">The launch location.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsDetails.FormatCoordinate(System.Double)">
      <summary>
            Formats the coordinate.
            </summary>
      <param name="coordinate">The coordinate.</param>
      <returns>The formatted string.</returns>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel">
      <summary>
            View model class for the load game list view.
            </summary>
      <seealso cref="T:Assets.Scripts.Menu.ListView.ListViewModel" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel._details">
      <summary>
            The details
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel._gameMenuScript">
      <summary>
            The game menu script
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.LaunchLocationSelected">
      <summary>
            Gets or sets the action to execute when the launch location has been selected.
            </summary>
      <value>
            The launch location selected action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.PrimaryButtonText">
      <summary>
            Gets or sets the primary button text.
            </summary>
      <value>
            The primary button text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.Title">
      <summary>
            Gets or sets the title.
            </summary>
      <value>
            The title.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.LoadItems">
      <summary>
            Loads the items for the list view.
            </summary>
      <returns>
            Unity enumerator so the view model can optionally split the loading up over multiple frames.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.OnDeleteButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the delete button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.OnListViewInitialized(Assets.Scripts.Menu.ListView.ListViewScript)">
      <summary>
            Called when the ListView is initialized.
            </summary>
      <param name="listView">The list view.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.OnPrimaryButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the primary button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.OnSelectedItemChanged(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the selected item has changed.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.UpdateDetails(Assets.Scripts.Menu.ListView.ListViewItemScript,System.Action)">
      <summary>
            Called when the view model should update the details for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LaunchLocationsViewModel.OnConfirmDelete(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when the user confirms deleting a launch location.
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ListViewDetailsScript">
      <summary>
            Base class for a details user interface on a list view.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewDetailsScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.ListViewDetailsScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewDetailsScript.Widgets">
      <summary>
            Gets the main widgets group.
            </summary>
      <value>
            The widgets.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewDetailsScript.XmlElement">
      <summary>
            Gets the XML element.
            </summary>
      <value>
            The XML element.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewDetailsScript.Initialize(UI.Xml.XmlElement)">
      <summary>
            Initializes the details script.
            </summary>
      <param name="detailsElement">The details element.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ListViewItemScript">
      <summary>
            Script for a list view item.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:UnityEngine.EventSystems.IPointerClickHandler" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewItemScript._icon">
      <summary>
            The icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewItemScript._selected">
      <summary>
            The selected
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewItemScript._statusIcon">
      <summary>
            The status icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewItemScript._statusIconElement">
      <summary>
            The completed indicator
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewItemScript._subtitleText">
      <summary>
            The subtitle text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewItemScript._titleText">
      <summary>
            The title text
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ListViewItemScript.StatusIconType">
      <summary>
            The available status icon types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewItemScript.StatusIconType.None">
      <summary>
            The none status icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewItemScript.StatusIconType.Exclamation">
      <summary>
            The exclamation status icon
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewItemScript.StatusIconType.Checkmark">
      <summary>
            The checkmark status icon
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewItemScript.ItemModel">
      <summary>
            Gets or sets the model associated with this item.
            </summary>
      <value>
            The item model.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewItemScript.Selected">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Menu.ListView.ListViewItemScript" /> is selected.
            </summary>
      <value>
        <c>true</c> if selected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewItemScript.Sprite">
      <summary>
            Gets or sets the sprite.
            </summary>
      <value>
            The sprite.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewItemScript.StatusIcon">
      <summary>
            Gets or sets the status icon type.
            </summary>
      <value>
            The status icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewItemScript.StatusIconColor">
      <summary>
            Gets or sets the color of the status icon.
            </summary>
      <value>
            The color of the status icon.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewItemScript.StatusIconTooltip">
      <summary>
            Gets or sets the status icon tooltip.
            </summary>
      <value>
            The status icon tooltip.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewItemScript.Subtitle">
      <summary>
            Gets or sets the subtitle.
            </summary>
      <value>
            The subtitle.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewItemScript.Title">
      <summary>
            Gets or sets the title.
            </summary>
      <value>
            The title.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewItemScript.XmlElement">
      <summary>
            Gets the XML element.
            </summary>
      <value>
            The XML element.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewItemScript.Initialize(UI.Xml.XmlElement)">
      <summary>
            Initializes the list view item.
            </summary>
      <param name="element">The XML element.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ListViewModel">
      <summary>
            Base class for a list view model. Provides the logic for a list view.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.ListViewModel" /> class.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ListViewModel.ListViewDelegate">
      <summary>
            Delegate for list view events.
            </summary>
      <param name="model">The model.</param>
    </member>
    <member name="E:Assets.Scripts.Menu.ListView.ListViewModel.Closed">
      <summary>
            Occurs when the list view is closed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewModel.Details">
      <summary>
            Gets the details user interface.
            </summary>
      <value>
            The details.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewModel.Items">
      <summary>
            Gets the items.
            </summary>
      <value>
            The items.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewModel.ListView">
      <summary>
            Gets the ListView.
            </summary>
      <value>
            The ListView.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.LoadItems">
      <summary>
            Loads the items for the list view.
            </summary>
      <returns>
            Unity enumerator so the view model can optionally split the loading up over multiple frames.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.OnCanceled">
      <summary>
            Called when the list view is being closed by canceling.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.OnClosed">
      <summary>
            Called when the list view is closed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.OnDeleteButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the delete button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.OnListViewInitialized(Assets.Scripts.Menu.ListView.ListViewScript)">
      <summary>
            Called when the ListView is initialized.
            </summary>
      <param name="listView">The list view.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.OnPrimaryButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the primary button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.OnSearchChanged(System.String)">
      <summary>
            Called when the search text has changed.
            </summary>
      <param name="searchText">The search text. Will always be lower case.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.OnSelectedItemChanged(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the selected item has changed.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.OnSelectedItemChanging(Assets.Scripts.Menu.ListView.ListViewItemScript,System.Action)">
      <summary>
            Called when the selected item is about to change.
            </summary>
      <param name="item">The item.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.UpdateDetails(Assets.Scripts.Menu.ListView.ListViewItemScript,System.Action)">
      <summary>
            Called when the view model should update the details for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewModel.UpdatePreview(Assets.Scripts.Menu.ListView.ListViewItemScript,Assets.Scripts.Menu.ObjectViewerScript,System.Action)">
      <summary>
            Called when the view model should update the preview for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="objectViewer">The object viewer.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ListViewScript">
      <summary>
            Script for a list view.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._canDelete">
      <summary>
            The can delete flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._closed">
      <summary>
            The closed flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._contextMenu">
      <summary>
            The context menu
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._contextMenuItemTemplate">
      <summary>
            The template for a context menu item.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._contextMenuToggle">
      <summary>
            The context menu toggle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._deleteButton">
      <summary>
            The delete button
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._footer">
      <summary>
            The footer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._iconItemTemplate">
      <summary>
            The icon item template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._itemsParent">
      <summary>
            The items parent
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._itemTemplate">
      <summary>
            The item template
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._listViewDetails">
      <summary>
            The list view details
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._loadingText">
      <summary>
            The loading text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._noSelectionMessage">
      <summary>
            The no selection message
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._panel">
      <summary>
            The main panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._primaryButton">
      <summary>
            The primary button component.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._primaryButtonText">
      <summary>
            The primary button text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._searchInput">
      <summary>
            The search input
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._selectedItem">
      <summary>
            The selected item
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ListViewScript._titleText">
      <summary>
            The title text
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.ListViewScript" /> class.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Menu.ListView.ListViewScript.Closed">
      <summary>
            The closed event.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.AllowCameraZoom">
      <summary>
            Gets a value indicating whether the dialog allows the game camera to zoom while this dialog is open.
            </summary>
      <value>
        <c>true</c> if camera zoom is allowed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.CanDelete">
      <summary>
            Gets or sets a value indicating whether this instance can delete.
            </summary>
      <value>
        <c>true</c> if this instance can delete; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.ContextMenuVisible">
      <summary>
            Gets or sets a value indicating whether the context menu is visible.
            </summary>
      <value>
        <c>true</c> if the context menu is visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.ListViewDetails">
      <summary>
            Gets the ListView details.
            </summary>
      <value>
            The ListView details.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.NoSelectionMessageText">
      <summary>
            Gets or sets the no selection message text.
            </summary>
      <value>
            The no selection message text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.ObjectViewer">
      <summary>
            Gets the object viewer.
            </summary>
      <value>
            The object viewer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.PreviewEnabled">
      <summary>
            Gets or sets a value indicating whether the preview panel is used in this list view.
            </summary>
      <value>
        <c>true</c> if then the preview is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.PrimaryButtonEnabled">
      <summary>
            Gets or sets a value indicating whether the primary button is enabled.
            </summary>
      <value>
        <c>true</c> if the primary button is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.PrimaryButtonText">
      <summary>
            Gets or sets the primary button text.
            </summary>
      <value>
            The primary button text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.SelectedItem">
      <summary>
            Gets or sets the selected item.
            </summary>
      <value>
            The selected item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.Title">
      <summary>
            Gets or sets the title.
            </summary>
      <value>
            The title.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ListViewScript.ViewModel">
      <summary>
            Gets the view model.
            </summary>
      <value>
            The view model.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.CreateContextMenuItem(System.String,System.Action{Assets.Scripts.Menu.ListView.ContextMenuItemScript},System.String)">
      <summary>
            Creates the context menu item.
            </summary>
      <param name="text">The text.</param>
      <param name="clickHandler">The click handler.</param>
      <param name="tooltip">The tooltip for the item.</param>
      <returns>The context menu item.</returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.CreateItem(System.String,System.String,System.Object,System.String)">
      <summary>
            Creates the item.
            </summary>
      <param name="name">The name.</param>
      <param name="subtitle">The sub title.</param>
      <param name="itemModel">The item model.</param>
      <param name="sprite">The sprite.</param>
      <returns>
            The item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.DeleteItem(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Deletes the item.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.Initialize(Assets.Scripts.Menu.ListView.ListViewModel,Assets.Scripts.Menu.ObjectViewerScript)">
      <summary>
            Initializes the list view.
            </summary>
      <param name="viewModel">The view model.</param>
      <param name="objectViewer">The object viewer.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.OnContextMenuButtonClicked">
      <summary>
            Called when the context menu button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.OnDeleteButtonClicked">
      <summary>
            Called when the delete button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.OnPrimaryButtonClicked">
      <summary>
            Called when the primary button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.LoadItems">
      <summary>
            Loads the items.
            </summary>
      <returns>Unity enumerator.</returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.OnCloseButtonClicked">
      <summary>
            Called when the close button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.OnContextMenuItemClicked(UI.Xml.XmlElement)">
      <summary>
            Called when a context menu item is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.OnListItemClicked(UI.Xml.XmlElement)">
      <summary>
            Called when a list item is clicked.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.OnSearchChanged(System.String)">
      <summary>
            Called when the search text is changed.
            </summary>
      <param name="text">The text.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.UpdateLayout">
      <summary>
            Updates the layout based on the current settings.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ListViewScript.UpdateSelectedItem(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called to update the selected item.
            </summary>
      <param name="item">The new selected item.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.LoadGameDetails">
      <summary>
            Manages details for the load games list view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LoadGameDetails._craftsInFlight">
      <summary>
            The crafts in flight
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LoadGameDetails._createdDate">
      <summary>
            The created date
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LoadGameDetails._gameTime">
      <summary>
            The game time
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LoadGameDetails._gameType">
      <summary>
            The game type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LoadGameDetails._lastPlayedDate">
      <summary>
            The last played date
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LoadGameDetails._money">
      <summary>
            The money property.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LoadGameDetails._name">
      <summary>
            The name header.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LoadGameDetails.#ctor(Assets.Scripts.Menu.ListView.ListViewDetailsScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.LoadGameDetails" /> class.
            </summary>
      <param name="listViewDetails">The list view details.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LoadGameDetails.UpdateDetails(Assets.Scripts.State.GameState)">
      <summary>
            Updates the details.
            </summary>
      <param name="gameState">State of the game.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LoadGameDetails.RelativeDate(System.DateTime)">
      <summary>
            Returns a string representing the relative date between the two dates.
            </summary>
      <param name="d">The date.</param>
      <returns>The relative date.</returns>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.LoadGameViewModel">
      <summary>
            View model class for the load game list view.
            </summary>
      <seealso cref="T:Assets.Scripts.Menu.ListView.ListViewModel" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.LoadGameViewModel._details">
      <summary>
            The details
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LoadGameViewModel.LoadItems">
      <summary>
            Loads the items for the list view.
            </summary>
      <returns>
            Unity enumerator so the view model can optionally split the loading up over multiple frames.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LoadGameViewModel.OnDeleteButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the delete button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LoadGameViewModel.OnListViewInitialized(Assets.Scripts.Menu.ListView.ListViewScript)">
      <summary>
            Called when the ListView is initialized.
            </summary>
      <param name="listView">The list view.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LoadGameViewModel.OnPrimaryButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the primary button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LoadGameViewModel.UpdateDetails(Assets.Scripts.Menu.ListView.ListViewItemScript,System.Action)">
      <summary>
            Called when the view model should update the details for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.LoadGameViewModel.OnConfirmDelete(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when the user confirms deleting a craft node.
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ModsDetails">
      <summary>
            Manages details for the mods list view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._author">
      <summary>
            The widget for the author text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._desription">
      <summary>
            The widget for the description text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._errors">
      <summary>
            The widget for the errors text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._issuesGroup">
      <summary>
            The widget group for show errors and warnings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._lastModified">
      <summary>
            The widget for the last modified text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._name">
      <summary>
            The widget for the mod name text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._pendingDisableGroup">
      <summary>
            The widget group for the pending disable widgets.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._pendingDisableText">
      <summary>
            The widget for the pending disable text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._version">
      <summary>
            The widget for the version text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsDetails._warnings">
      <summary>
            The widget for the warnings text.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsDetails.#ctor(Assets.Scripts.Menu.ListView.ListViewDetailsScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.ModsDetails" /> class.
            </summary>
      <param name="listViewDetails">The list view details.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsDetails.UpdateDetails(Jundroo.ModTools.ModInfo)">
      <summary>
            Updates the details.
            </summary>
      <param name="mod">The mod for which to display details.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.ModsViewModel">
      <summary>
            The view model for the mods list view.
            </summary>
      <seealso cref="T:Assets.Scripts.Menu.ListView.ListViewModel" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsViewModel._acceptedModWarningThisSession">
      <summary>
            A value indicating whether the user has accepted the mod warning this gaming session.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsViewModel._contextMenuDisableAll">
      <summary>
            The context menu item to disable all mods.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsViewModel._contextMenuEnableAll">
      <summary>
            The context menu item to enable all mods.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsViewModel._contextMenuToggleModSupport">
      <summary>
            The context menu item to toggle mod support off and on.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsViewModel._details">
      <summary>
            The object managing the details panel for the selected mod.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.ModsViewModel._modManager">
      <summary>
            The mod manager.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.ModsViewModel.RestartRequired">
      <summary>
            Gets a value indicating whether a pending restart is required.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.LoadItems">
      <summary>
            Loads the items for the list view.
            </summary>
      <returns>
            Unity enumerator so the view model can optionally split the loading up over multiple frames.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.OnDeleteButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the delete button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.OnListViewInitialized(Assets.Scripts.Menu.ListView.ListViewScript)">
      <summary>
            Called when the ListView is initialized.
            </summary>
      <param name="listView">The list view.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.OnPrimaryButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the primary button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.OnSelectedItemChanged(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the selected item has changed.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.RefreshButtons(Jundroo.ModTools.ModInfo)">
      <summary>
            Refreshes the buttons.
            </summary>
      <param name="mod">The mod for which to update the buttons.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.UpdateDetails(Assets.Scripts.Menu.ListView.ListViewItemScript,System.Action)">
      <summary>
            Called when the view model should update the details for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.OnDisableAllMods(Assets.Scripts.Menu.ListView.ContextMenuItemScript)">
      <summary>
            Called when the disable all mods context menu item is selected.
            </summary>
      <param name="item">The item that was selected.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.OnEnableAllMods(Assets.Scripts.Menu.ListView.ContextMenuItemScript)">
      <summary>
            Called when the enable all mods context menu item is selected.
            </summary>
      <param name="item">The item that was selected.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.OnToggleModSupport(Assets.Scripts.Menu.ListView.ContextMenuItemScript)">
      <summary>
            Called when the toggle mod support context menu item is selected.
            </summary>
      <param name="item">The item that was selected.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.RefreshContextMenu">
      <summary>
            Refreshes the context menu.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.RefreshItem(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Refreshes the specified item.
            </summary>
      <param name="item">The item to refresh.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.SaveChanges">
      <summary>
            Saves the changes and refreshes the UI.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.ModsViewModel.ShowWarningDialog(System.Action)">
      <summary>
            Shows the warning dialog about enabling mods if the user has not yet accepted it.
            </summary>
      <param name="acceptedAction">The action to execute after the user accepts the warning dialog (or immediately if the user previously accepted).</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.PlayDetails">
      <summary>
            Manages details for the play list view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.PlayDetails._description">
      <summary>
            The description
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.PlayDetails._launchName">
      <summary>
            The input for the craft name, which is only used when launching a new craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.PlayDetails._name">
      <summary>
            The name header.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.PlayDetails._noScoresText">
      <summary>
            The no scores text
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.PlayDetails._scoreProperties">
      <summary>
            The score properties
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.PlayDetails._scoresHeader">
      <summary>
            The scores header
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayDetails.#ctor(Assets.Scripts.Menu.ListView.ListViewDetailsScript,ModApi.Craft.ICraftScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.PlayDetails" /> class.
            </summary>
      <param name="listViewDetails">The list view details.</param>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayDetails.FlightName">
      <summary>
            Gets or sets the flight name of the craft that will be launched if the player elects
            to launch a new craft.
            </summary>
      <value>
            The name of the craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayDetails.LaunchWidgets">
      <summary>
            Gets the launch widgets.
            </summary>
      <value>
            The launch widgets.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayDetails.UpdateDetails(Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel)">
      <summary>
            Updates the details.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayDetails.HideScores">
      <summary>
            Hides the scores.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayDetails.ShowScores(ModApi.Levels.ILevelData)">
      <summary>
            Updates the scores.
            </summary>
      <param name="level">The level.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.PlayViewModel">
      <summary>
            View model class for the play list view.
            </summary>
      <seealso cref="T:Assets.Scripts.Menu.ListView.ListViewModel" />
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.PlayViewModel._craftScript">
      <summary>
            The selected craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ListView.PlayViewModel._details">
      <summary>
            The details
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayViewModel.#ctor(ModApi.Craft.ICraftScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Menu.ListView.PlayViewModel" /> class.
            </summary>
      <param name="launchCraft">The currently selected craft.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayViewModel.LoadItems">
      <summary>
            Loads the items for the list view.
            </summary>
      <returns>
            Unity enumerator so the view model can optionally split the loading up over multiple frames.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayViewModel.OnListViewInitialized(Assets.Scripts.Menu.ListView.ListViewScript)">
      <summary>
            Called when the ListView is initialized.
            </summary>
      <param name="listView">The list view.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayViewModel.OnPrimaryButtonClicked(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the primary button is clicked.
            </summary>
      <param name="selectedItem">The selected item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayViewModel.OnSelectedItemChanged(Assets.Scripts.Menu.ListView.ListViewItemScript)">
      <summary>
            Called when the selected item has changed.
            </summary>
      <param name="item">The item.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayViewModel.UpdateDetails(Assets.Scripts.Menu.ListView.ListViewItemScript,System.Action)">
      <summary>
            Called when the view model should update the details for the selected item.
            </summary>
      <param name="item">The item.</param>
      <param name="completeCallback">The callback to invoke when the action is complete.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayViewModel.LaunchNewCraft">
      <summary>
            Starts the flight scene with the currently selected craft and launch location.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ListView.PlayViewModel.OnBuildClicked">
      <summary>
            Called when the build button is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel">
      <summary>
            View model for a single item in the play list.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.ClickAction">
      <summary>
            Gets or sets the click action.
            </summary>
      <value>
            The click action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.Description">
      <summary>
            Gets or sets the description.
            </summary>
      <value>
            The description.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.Id">
      <summary>
            Gets the identifier.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.IsCompleted">
      <summary>
            Gets a value indicating whether this instance is completed.
            </summary>
      <value>
        <c>true</c> if this instance is completed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.LaunchCraft">
      <summary>
            Gets a value indicating whether this is the launch craft item.
            </summary>
      <value>
        <c>true</c> if it is the launch craft item; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.Level">
      <summary>
            Gets or sets the level.
            </summary>
      <value>
            The level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.PrimaryButtonText">
      <summary>
            Gets or sets the primary button text. If this is null, then the list view will
            fall back to its default text.
            </summary>
      <value>
            The primary button text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.Sprite">
      <summary>
            Gets the sprite.
            </summary>
      <value>
            The sprite.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ListView.PlayViewModel.PlayItemViewModel.Subtitle">
      <summary>
            Gets or sets the subtitle.
            </summary>
      <value>
            The subtitle.
            </value>
    </member>
    <member name="T:Assets.Scripts.Menu.MenuAnimationScript">
      <summary>
            Script for handling animations in the main menu.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._animations">
      <summary>
            The animations
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._craft">
      <summary>
            The craft currently loaded.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._gameMenuCanvasGroup">
      <summary>
            The game menu canvas group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._mainMenuCanvasGroup">
      <summary>
            The main menu canvas group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._objectViewer">
      <summary>
            The object viewer
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._planet">
      <summary>
            The planet
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._planetTargetPosition">
      <summary>
            The planet target position
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._startPositionPlanet">
      <summary>
            The start position planet
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._startPositionSun">
      <summary>
            The start position sun
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._sun">
      <summary>
            The sun
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuAnimationScript._sunTargetPosition">
      <summary>
            The sun target position
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.MenuAnimationScript.MainMenuVisible">
      <summary>
            Gets a value indicating whether [main menu visible].
            </summary>
      <value>
        <c>true</c> if [main menu visible]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuAnimationScript.OnCraftLoaded(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Loads the craft.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuAnimationScript.ShowMainMenu(System.Boolean,System.Single)">
      <summary>
            Shows the main menu if show is true. Otherwise shows the game view.
            </summary>
      <param name="show">if set to <c>true</c> then shows the main menu.</param>
      <param name="timeScale">The time scale.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuAnimationScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuAnimationScript.AddAnimation(DG.Tweening.Tweener)">
      <summary>
            Adds the animation.
            </summary>
      <param name="tweener">The tweener.</param>
      <returns>The tweener. For fluency.</returns>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuAnimationScript.KillAnimations">
      <summary>
            Stops all currently running animations.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.MenuPlanetScript">
      <summary>
            The menu planet.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.MenuPlanetScript._cubemapQuality">
      <summary>
            The cubemap quality setting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuPlanetScript._eclipse">
      <summary>
            The eclipse
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuPlanetScript._light">
      <summary>
            The light
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuPlanetScript._material">
      <summary>
            The material
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuPlanetScript._planet">
      <summary>
            The planet node.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.MenuPlanetScript.Eclipse">
      <summary>
            Gets or sets the eclipse status.
            </summary>
      <value>
            The eclipse.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuPlanetScript.SetPlanet(ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Sets the planet node.
            </summary>
      <param name="planet">The planet node.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuPlanetScript.Awake">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuPlanetScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuPlanetScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuPlanetScript.CubemapQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.TerrainQualitySettings.PlanetCubemapQuality})">
      <summary>
            Called when the cubemap quality is changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;TerrainQualitySettings.PlanetCubemapQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuPlanetScript.DestroyCubemaps">
      <summary>
            Destroys the current cubemaps.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuPlanetScript.UpdateCubemaps">
      <summary>
            Updates the planet cubemaps.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.MenuScript">
      <summary>
            Script for the menu.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.MenuScript._firstMenuStart">
      <summary>
            The flag to indicate if this is the first time the menu has been seen this session.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuScript._aboutPage">
      <summary>
            The about page
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuScript._craft">
      <summary>
            The currently loaded craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuScript._gameMenu">
      <summary>
            The game menu
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuScript._menuAnimation">
      <summary>
            The menu animation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuScript._objectViewer">
      <summary>
            The object viewer
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.MenuScript.SkipMainMenu">
      <summary>
            Gets or sets a value indicating whether to skip the main menu.
            </summary>
      <value>
        <c>true</c> if the main menu should be skipped; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.MenuScript.Craft">
      <summary>
            Gets the craft.
            </summary>
      <value>
            The craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.MenuScript.FlightStateData">
      <summary>
            Gets the flight state data.
            </summary>
      <value>
            The flight state data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.MenuScript.ObjectViewer">
      <summary>
            Gets the object viewer.
            </summary>
      <value>
            The object viewer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.MenuScript.SolarSystemData">
      <summary>
            Gets the solar system data.
            </summary>
      <value>
            The solar system data.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuScript.LoadSelectedCraft(System.Boolean)">
      <summary>
            Loads the currently selected craft.
            </summary>
      <param name="previewObject">if set to <c>true</c> then preview the object after it is loaded.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuScript.OnCreditsClicked">
      <summary>
            Called when the credits button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuScript.OnPlayButtonClicked">
      <summary>
            Called when the play button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuScript.SetCraft(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Sets the craft.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuScript.ShowListView(Assets.Scripts.Menu.ListView.ListViewModel)">
      <summary>
            Shows the ListView using the specified view model.
            </summary>
      <param name="viewModel">The list view model.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.MenuSunScript">
      <summary>
            The script for the sun in the main menu.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.MenuSunScript._eclipse">
      <summary>
            The eclipse status.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuSunScript._material">
      <summary>
            The material.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuSunScript._materialHigh">
      <summary>
            The material high
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.MenuSunScript._materialLow">
      <summary>
            The material low
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.MenuSunScript.Eclipse">
      <summary>
            Gets or sets the eclipse status.
            </summary>
      <value>
            The eclipse.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuSunScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.MenuSunScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Menu.NewGameDialogScript">
      <summary>
            Script for the new game dialog.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.NewGameDialogScript._careerMode">
      <summary>
            The career mode flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.NewGameDialogScript._descriptionCareer">
      <summary>
            The description career
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.NewGameDialogScript._descriptionSandbox">
      <summary>
            The description sandbox
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.NewGameDialogScript._form">
      <summary>
            The form
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.NewGameDialogScript._loading">
      <summary>
            The loading
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.NewGameDialogScript._nameInput">
      <summary>
            The name input.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.NewGameDialogScript._panel">
      <summary>
            The panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.NewGameDialogScript._validationText">
      <summary>
            The validation text
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.NewGameDialogScript.Create(UnityEngine.Transform)">
      <summary>
            Creates a new instance of the new game dialog script.
            </summary>
      <param name="parent">The parent.</param>
      <returns>
            The new game script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Menu.NewGameDialogScript.Close">
      <summary>
            Closes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.NewGameDialogScript.OnCancelButtonClicked">
      <summary>
            Called when the cancel button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.NewGameDialogScript.OnGameTypeChanged(System.Boolean)">
      <summary>
            Called when the game type has changed.
            </summary>
      <param name="careerMode">if set to <c>true</c> then changed to career mode, otherwise sandbox mode.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.NewGameDialogScript.OnOkayButtonClicked">
      <summary>
            Called when the okay button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.NewGameDialogScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.NewGameDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.NewGameDialogScript.UpdateGameType(System.Boolean)">
      <summary>
            Updates the game type text.
            </summary>
      <param name="careerMode">if set to <c>true</c> [career mode].</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ObjectViewerContainerScript">
      <summary>
            Script that controls an object being viewed by the object viewer subscene in the game menu.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="P:Assets.Scripts.Menu.ObjectViewerContainerScript.DestroyWhenFinished">
      <summary>
            Gets or sets a value indicating whether to destroy the game object when finished.
            </summary>
      <value>
        <c>true</c> if destroy when finished; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ObjectViewerContainerScript.PreviewObject">
      <summary>
            Gets the game object being previewed.
            </summary>
      <value>
            The game object.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerContainerScript.ExitPreviewScene">
      <summary>
            Exits the preview scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerContainerScript.Initialize(UnityEngine.GameObject,Assets.Scripts.Menu.ObjectViewerScript,System.Single,System.Boolean)">
      <summary>
            Initializes with the specified parameters.
            </summary>
      <param name="gameObject">The game object.</param>
      <param name="objectViewer">The object viewer.</param>
      <param name="delay">The delay.</param>
      <param name="destroyWhenFinished">if set to <c>true</c> [destroy when finished].</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerContainerScript.Start">
      <summary>
            Use this for initialization
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerContainerScript.Update">
      <summary>
            Update is called once per frame
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerContainerScript.EnterPreviewScene(System.Single)">
      <summary>
            Enters the preview scene.
            </summary>
      <param name="delay">The delay.</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerContainerScript.OnExitFinished">
      <summary>
            Called when the object has exited the view.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerContainerScript.ScaleObject(UnityEngine.GameObject)">
      <summary>
            Scales the object.
            </summary>
      <param name="target">The target.</param>
    </member>
    <member name="T:Assets.Scripts.Menu.ObjectViewerScript">
      <summary>
            Script for the camera preview.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Menu.ObjectViewerScript._camera">
      <summary>
            The camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ObjectViewerScript._fakeQuadsphereRenderer">
      <summary>
            The fake quad sphere renderer used to provide shader data for objects in the viewer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ObjectViewerScript._light">
      <summary>
            The light
            </summary>
    </member>
    <member name="F:Assets.Scripts.Menu.ObjectViewerScript._objectsRoot">
      <summary>
            The objects root
            </summary>
    </member>
    <member name="P:Assets.Scripts.Menu.ObjectViewerScript.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ObjectViewerScript.CurrentObject">
      <summary>
            Gets the current object.
            </summary>
      <value>
            The current object.
            </value>
    </member>
    <member name="P:Assets.Scripts.Menu.ObjectViewerScript.Light">
      <summary>
            Gets the light.
            </summary>
      <value>
            The light.
            </value>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerScript.PreviewObject(UnityEngine.GameObject,System.Single,System.Boolean)">
      <summary>
            Previews the object.
            </summary>
      <param name="previewObject">The object to preview.</param>
      <param name="delay">The delay.</param>
      <param name="destroyWhenFinished">if set to <c>true</c> [destroy when finished].</param>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Menu.ObjectViewerScript.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Mods.ModManagerScript">
      <summary>
            The game object responsible for the management of mods.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Mods.ModManagerScript._apiVersionMismatchMods">
      <summary>
            The collection of mods with API versions that don't match the current version.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Mods.ModManagerScript._modManager">
      <summary>
            A reference to the mod manager instance using its concrete type.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Mods.ModManagerScript.HasModSupport">
      <summary>
            Gets a value indicating whether this version of the game has mod support.
            </summary>
      <value>
        <c>true</c> if this version of the game has mod support; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Mods.ModManagerScript.ModManager">
      <summary>
            Gets the mod manager instance.
            </summary>
      <value>
            The mod manager instance.
            </value>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.Create(UnityEngine.GameObject)">
      <summary>
            Creates the mod manager script.
            </summary>
      <param name="parent">The parent object.</param>
      <returns>The mod manager script reference.</returns>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.LoadExternalModFile(System.String)">
      <summary>
            Loads the external mod file.
            </summary>
      <param name="modFilePath">The mod file path.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.CopyModFileToModDirectory(System.String)">
      <summary>
            Copies the mod file to mod directory.
            </summary>
      <param name="modFilePath">The mod file path.</param>
      <returns>The copied file info if successful.</returns>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.InitializeModManager">
      <summary>
            Initializes the mod manager.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.LoadModPartCategories(System.Collections.Generic.List{ModApi.Craft.Parts.DesignerPartCategory})">
      <summary>
            Loads the mod part categories.
            </summary>
      <param name="categories">The categories to load.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.LoadModPartModifiers(Jundroo.ModTools.Core.LoadedMod,ModApi.Core.ModManifestData)">
      <summary>
            Loads the mod part modifiers from the specified mod.
            </summary>
      <param name="mod">The mod from which to load the part modifiers.</param>
      <param name="manifestData">The mod manifest data.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.LoadModParts(Jundroo.ModTools.Core.LoadedMod,System.Collections.Generic.List{ModApi.Core.ModPartInfo})">
      <summary>
            Loads the specified mod parts from the specified mod.
            </summary>
      <param name="mod">The mod from which to load parts.</param>
      <param name="parts">The parts to be loaded.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.LoadModPartStyleExtensions(Jundroo.ModTools.Core.LoadedMod,UnityEngine.TextAsset)">
      <summary>
            Loads the mod part style extensionsd.
            </summary>
      <param name="mod">The mod from which to load the style extensions.</param>
      <param name="partStyleExtensions">The part style extensions XML.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.LoadModPartTextureStyles(Jundroo.ModTools.Core.LoadedMod,UnityEngine.TextAsset)">
      <summary>
            Loads the mod part texture styles from the specfied mod.
            </summary>
      <param name="mod">The mod from which to load the styles.</param>
      <param name="partTextureStyles">The part texture styles XML.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.LoadModUIResourceDatabases(Jundroo.ModTools.Core.LoadedMod,ModApi.Core.ModManifestData)">
      <summary>
            Loads the UI resource databases from the mod.
            </summary>
      <param name="mod">The mod from which to load the UI resource databases.</param>
      <param name="manifestData">The manifest data containing info on the UI resource databases to be loaded.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.ModApiVersionMismatch(System.Object,Jundroo.ModTools.Core.Events.ApiVersionMismatchEventArgs)">
      <summary>
            Handles API version mismatch events when loading mods.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:Jundroo.ModTools.Core.Events.ApiVersionMismatchEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.ModManagerScript.ModLoaded(System.Object,ModApi.Core.Events.ModLoadedEventArgs)">
      <summary>
            A callback that fires when a mod is loaded.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Core.Events.ModLoadedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Mods.RequiredModsDialogScript">
      <summary>
            A dialog for displaying the mod requirements for loading something.
            </summary>
      <seealso cref="T:ModApi.Ui.DialogScript" />
    </member>
    <member name="F:Assets.Scripts.Mods.RequiredModsDialogScript._xmlLayout">
      <summary>
            The XML layout reference.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Mods.RequiredModsDialogScript.CancelClicked">
      <summary>
            Occurs when the cancel button is clicked.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Mods.RequiredModsDialogScript.OkayClicked">
      <summary>
            Occurs when the okay button is clicked.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Mods.RequiredModsDialogScript.Canceled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Mods.RequiredModsDialogScript" /> is canceled.
            </summary>
      <value>
        <c>true</c> if canceled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Mods.RequiredModsDialogScript.Data">
      <summary>
            Gets the required mods check data object.
            </summary>
      <value>
            The required mods check data object.
            </value>
    </member>
    <member name="M:Assets.Scripts.Mods.RequiredModsDialogScript.Create(ModApi.Mods.RequiredModsCheck,UnityEngine.Transform)">
      <summary>
            Creates a new instance of the required mods dialog script.
            </summary>
      <param name="requiredMods">The required mods data to display.</param>
      <param name="parent">The parent game object.</param>
      <returns>The dialog script.</returns>
    </member>
    <member name="M:Assets.Scripts.Mods.RequiredModsDialogScript.Close">
      <summary>
            Closes this dialog.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Mods.RequiredModsDialogScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Mods.RequiredModsDialogScript.CreateModListItem(ModApi.Mods.RequiredModData,System.String,System.Boolean,UI.Xml.XmlElement,UI.Xml.XmlElement)">
      <summary>
            Creates a mod list item with the specified data.
            </summary>
      <param name="mod">The mod for which to create the list item.</param>
      <param name="status">The status of the mod.</param>
      <param name="installed">A value indicating whether or not the mod is currently installed.</param>
      <param name="template">The template to use to generate the list item.</param>
      <param name="parent">The parent container for the list item.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.RequiredModsDialogScript.OnCancelButtonClicked">
      <summary>
            Called when the cancel button was clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Mods.RequiredModsDialogScript.OnLayoutRebuilt(UI.Xml.XmlLayout)">
      <summary>
            Called when the UI layout is rebuilt.
            </summary>
      <param name="xmlLayout">The XML layout reference.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.RequiredModsDialogScript.OnModClicked(ModApi.Mods.RequiredModData)">
      <summary>
            Called when a mod button is clicked.
            </summary>
      <param name="mod">The mod that was clicked.</param>
    </member>
    <member name="M:Assets.Scripts.Mods.RequiredModsDialogScript.OnOkayButtonClicked">
      <summary>
            Called when the okay button was clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Noise.FastNoiseNative">
      <summary>
            A wrapper for the native implementation of the FastNoise library.
            </summary>
      <seealso cref="T:ModApi.Packages.FastNoise.IFastNoise" />
    </member>
    <member name="F:Assets.Scripts.Noise.FastNoiseNative.Supported">
      <summary>
            A value indicating whether the current system supports native noise.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Noise.FastNoiseNative._disposed">
      <summary>
            A value indicating whether this object has been disposed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Noise.FastNoiseNative._nativePointer">
      <summary>
            The pointer to the FastNoise object in native code.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Noise.FastNoiseNative" /> class.
            </summary>
      <param name="seed">The seed.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:Assets.Scripts.Noise.FastNoiseNative" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.GetCraterNoise(System.Double,System.Double,System.Double)">
      <summary>
            Gets the crater noise value (from zero to 1+).
            </summary>
      <param name="x">The x position.</param>
      <param name="y">The y position.</param>
      <param name="z">The z position.</param>
      <returns>
            The requested noise value.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.GetNoise(System.Double,System.Double,System.Double)">
      <summary>
            Gets a noise value for 2 dimensions.
            </summary>
      <param name="x">The x value.</param>
      <param name="y">The y value.</param>
      <param name="z">The z value.</param>
      <returns>
            The noise value.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.GetNoise(System.Double,System.Double)">
      <summary>
            Gets a noise value for 2 dimensions.
            </summary>
      <param name="x">The x value.</param>
      <param name="y">The y value.</param>
      <returns>
            The noise value.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.GetSeed">
      <summary>
            Gets the seed value.
            </summary>
      <returns>
            The seed value.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.GradientPerturb(System.Double@,System.Double@,System.Double@)">
      <summary>
            Warps the input position based on the current noise settings.
            </summary>
      <param name="x">The x input to warp.</param>
      <param name="y">The y input to warp.</param>
      <param name="z">The z input to warp.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.GradientPerturb(System.Double@,System.Double@)">
      <summary>
            Warps the input position based on the current noise settings.
            </summary>
      <param name="x">The x input to warp.</param>
      <param name="y">The y input to warp.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.GradientPerturbFractal(System.Double@,System.Double@,System.Double@)">
      <summary>
            Warps the input position based on the current noise settings using a configurable number of octaves.
            </summary>
      <param name="x">The x input to warp.</param>
      <param name="y">The y input to warp.</param>
      <param name="z">The z input to warp.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.GradientPerturbFractal(System.Double@,System.Double@)">
      <summary>
            Warps the input position based on the current noise settings using a configurable number of octaves.
            </summary>
      <param name="x">The x input to warp.</param>
      <param name="y">The y input to warp.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.InitializeCraterNoise(System.Double)">
      <summary>
            Initializes the crater noise.
            </summary>
      <param name="randomness">The randomness value.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetCellularDistanceFunction(ModApi.Packages.FastNoise.CellularDistanceFunction)">
      <summary>
            Sets the cellular distance function.
            </summary>
      <param name="distanceFunction">The distance function.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetCellularReturnType(ModApi.Packages.FastNoise.CellularReturnType)">
      <summary>
            Sets the return type of cellular noise.
            </summary>
      <param name="returnType">The return type.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetFractalAmplitudes(System.Double[])">
      <summary>
            Sets the fractal amplitudes.
            </summary>
      <param name="fractalAmplitudes">The fractal amplitudes.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetFractalGain(System.Double)">
      <summary>
            Sets the octave gain for all fractal noise types.
            </summary>
      <param name="gain">The gain.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetFractalLacunarities(System.Double[])">
      <summary>
            Sets the octave lacunarity values for all fractal noise types.
            The size should be octave count minus one (as this value does not apply to the first octave).
            </summary>
      <param name="lacunarity">The lacunarity values.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetFractalLacunarity(System.Double)">
      <summary>
            Sets the octave lacunarity for all fractal noise types.
            </summary>
      <param name="lacunarity">The lacunarity.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetFractalOctaves(System.Int32)">
      <summary>
            Sets the octave count for all fractal noise types.
            </summary>
      <param name="octaves">The octaves.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetFractalPowerExponent(System.Double)">
      <summary>
            Sets the fractal power exponent.
            </summary>
      <param name="powerExponent">The fractal power exponent.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetFractalType(ModApi.Packages.FastNoise.FractalType)">
      <summary>
            Sets method for combining octaves in all fractal noise types
            </summary>
      <param name="fractalType">The fractal type.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetFractalWithDerivativeType(ModApi.Packages.FastNoise.FractalWithDerivativeType)">
      <summary>
            Sets method for combining octaves in all fractal noise types that make use of derivatives.
            </summary>
      <param name="fractalWithDerivativeType">The fractal with derivative type.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetFrequency(System.Double)">
      <summary>
            Sets the frequency for all noise types.
            </summary>
      <param name="frequency">The frequency.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetGradientPerturbAmp(System.Double)">
      <summary>
            Sets the maximum perturb distance from original location when using GradientPerturb.
            </summary>
      <param name="gradientPerturbAmp">The gradient perturb amplitude.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetInterpolation(ModApi.Packages.FastNoise.Interpolation)">
      <summary>
            Changes the interpolation method used to smooth between noise values.
            </summary>
      <param name="interpolation">The interpolation method.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetNoiseType(ModApi.Packages.FastNoise.NoiseType)">
      <summary>
            Sets the noise return type of GetNoise.
            </summary>
      <param name="noiseType">Type of the noise.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetSeed(System.Int32)">
      <summary>
            Sets the seed value.
            </summary>
      <param name="seed">The seed value.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.SetSlopeErosionStrength(System.Double)">
      <summary>
            Sets the slope erosion strength.
            </summary>
      <param name="slopeErosionStrength">The slope erosion strength.</param>
    </member>
    <member name="M:Assets.Scripts.Noise.FastNoiseNative.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="T:Assets.Scripts.Noise.FastNoiseNative.NativeMethods">
      <summary>
            A class containing all the native methods related to the FastNoise library.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Noise.FastNoiseNative.NativeMethods.DllImport">
      <summary>
            The DLL import name.
            </summary>
    </member>
    <member name="T:Assets.Scripts.OperatingSystem.SystemUtils">
      <summary>
            A helper class containing operating system related functionality.
            </summary>
    </member>
    <member name="F:Assets.Scripts.OperatingSystem.SystemUtils._windowHandle">
      <summary>
            The window handle.
            </summary>
    </member>
    <member name="M:Assets.Scripts.OperatingSystem.SystemUtils.GetLongPathName(System.String)">
      <summary>
            Gets the long file path given the specified short path.
            </summary>
      <param name="shortPath">The short path.</param>
      <returns>The requested long file path.</returns>
    </member>
    <member name="M:Assets.Scripts.OperatingSystem.SystemUtils.SwitchToThisWindow">
      <summary>
            Switches to this window. (Windows only)
            </summary>
    </member>
    <member name="M:Assets.Scripts.OperatingSystem.SystemUtils.SaveWindowHandle">
      <summary>
            Saves the window handle. (Windows only - should be called on app start).
            </summary>
    </member>
    <member name="T:Assets.Scripts.OperatingSystem.SystemUtils.NativeMethods">
      <summary>
            A native methods class.
            </summary>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.BrushPanelScript">
      <summary>
            Script for the brush panel.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._addBiomeButton">
      <summary>
            The add biome button
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._biomeBrush">
      <summary>
            The biome brush
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._brushCurve">
      <summary>
            The brush curve
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._brushTool">
      <summary>
            The brush tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._flyout">
      <summary>
            The flyout
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._heightBrush">
      <summary>
            The height brush
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._mapIndex">
      <summary>
            The map index
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._mapName">
      <summary>
            The map name
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._mapSpinnerLeftButton">
      <summary>
            The map spinner left button
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._mapSpinnerRightButton">
      <summary>
            The map spinner right button
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.BrushPanelScript._studioScript">
      <summary>
            The studio script
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.Initialize(Assets.Scripts.PlanetStudio.PlanetStudioScript)">
      <summary>
            Initializes the specified studio script.
            </summary>
      <param name="studioScript">The studio script.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.AddBiomeButton">
      <summary>
            Adds the biome button.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.OnFlyoutClosing(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is closing.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.OnFlyoutOpening(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opening.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.OnMapSpinnerButtonClicked(System.Int32)">
      <summary>
            Called when the map spinner button is clicked.
            </summary>
      <param name="direction">The direction.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.OnSliderChanged(System.Single)">
      <summary>
            Called when a slider changes value.
            </summary>
      <param name="x">The new slider value.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.SetMapIndex(System.Int32)">
      <summary>
            Sets the index of the map.
            </summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.BrushPanelScript.UpdateBrushSettings">
      <summary>
            Updates the brush settings.
            </summary>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.ButtonPanelScript">
      <summary>
            Script for the button panel.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.ButtonPanelScript._menuButton">
      <summary>
            The menu button
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.ButtonPanelScript._paintButton">
      <summary>
            The paint button
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.ButtonPanelScript._studioUi">
      <summary>
            The designer UI.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.ButtonPanelScript._viewButton">
      <summary>
            The view button
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.ButtonPanelScript.Initialize(Assets.Scripts.PlanetStudio.PlanetStudioUiScript)">
      <summary>
            Initializes the panel.
            </summary>
      <param name="studioUi">The studio UI.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.ButtonPanelScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.ButtonPanelScript.OnMenuButtonClicked">
      <summary>
            Called when the menu button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.ButtonPanelScript.OnPaintButtonClicked">
      <summary>
            Called when the paint button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.ButtonPanelScript.OnViewButtonClicked">
      <summary>
            Called when the view button is clicked.
            </summary>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.MenuPanelScript">
      <summary>
            Script for the menu panel.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.MenuPanelScript._exitButton">
      <summary>
            The exit button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.MenuPanelScript._loadButton">
      <summary>
            The load button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.MenuPanelScript._newButton">
      <summary>
            The new button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.MenuPanelScript._saveButton">
      <summary>
            The save button.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.MenuPanelScript._studioUi">
      <summary>
            The studio UI.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.MenuPanelScript.Visible">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.PlanetStudio.MenuPanelScript" /> is visible.
            </summary>
      <value>
        <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MenuPanelScript.ScrubPlanetName(System.String)">
      <summary>
            Scrubs the name of the planet.
            </summary>
      <param name="name">The name.</param>
      <returns>The scrubbed name.</returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MenuPanelScript.Initialize(Assets.Scripts.PlanetStudio.PlanetStudioUiScript)">
      <summary>
            Initializes the panel.
            </summary>
      <param name="studioUi">The studio UI.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MenuPanelScript.OnExitButtonClicked">
      <summary>
            Called when exit button clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MenuPanelScript.OnLoadButtonClicked">
      <summary>
            Called when load button clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MenuPanelScript.OnNewButtonClicked">
      <summary>
            Called when the new button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MenuPanelScript.OnNewDialogOkayButtonClicked(ModApi.Ui.MessageDialogScript)">
      <summary>
            Called when new dialog okay button is clicked.
            </summary>
      <param name="messageDialog">The message dialog.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MenuPanelScript.OnSaveButtonClicked">
      <summary>
            Called when save button is clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MenuPanelScript.OnSaveDialogOkayButtonClicked(ModApi.Ui.InputDialogScript)">
      <summary>
            Called when okay button in the save dialog button has been clicked.
            </summary>
      <param name="inputDialog">The input dialog.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MenuPanelScript.Save(System.String)">
      <summary>
            Saves the planet.
            </summary>
      <param name="planetId">The planet name.</param>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.MovementScript">
      <summary>
            Script for moving around in the planet studio.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.MovementScript._speedMultiplier">
      <summary>
            The speed multiplier.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.MovementScript.Forward">
      <summary>
            Gets or sets the forward.
            </summary>
      <value>
            The forward.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.MovementScript.QuadSphere">
      <summary>
            Gets or sets the quad sphere script.
            </summary>
      <value>
            The quad sphere script.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.MovementScript.Sideways">
      <summary>
            Gets or sets the sideways.
            </summary>
      <value>
            The sideways.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MovementScript.Drag(UnityEngine.Vector2)">
      <summary>
            Drag method called to pan view around.
            </summary>
      <param name="delta">The delta.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.MovementScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.Planet">
      <summary>
            The planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.Planet._directionalLight">
      <summary>
            The directional light.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.Planet._mainCamera">
      <summary>
            The main camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.Planet._planet">
      <summary>
            The planet game object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.Planet._quadSphere">
      <summary>
            The quad sphere
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.Planet._renderer">
      <summary>
            The renderer for the quadsphere.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Planet.#ctor(UnityEngine.Camera,UnityEngine.Light)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.PlanetStudio.Planet" /> class.
            </summary>
      <param name="mainCamera">The main camera.</param>
      <param name="directionalLight">The directional light.</param>
    </member>
    <member name="E:Assets.Scripts.PlanetStudio.Planet.PlanetNodeChanged">
      <summary>
            Occurs when a planet node has been changed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.PlanetStudio.Planet.PlanetNodeChanging">
      <summary>
            Occurs when a planet node is changing.
            </summary>
    </member>
    <member name="E:Assets.Scripts.PlanetStudio.Planet.QuadSphereEnabledStateChanged">
      <summary>
            Occurs when the quad sphere enabled state changes.
            </summary>
    </member>
    <member name="E:Assets.Scripts.PlanetStudio.Planet.QuadSphereLoaded">
      <summary>
            Occurs when a quad sphere has been loaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.PlanetStudio.Planet.QuadSphereLoading">
      <summary>
            Occurs when a quad sphere is loading.
            </summary>
    </member>
    <member name="E:Assets.Scripts.PlanetStudio.Planet.QuadSphereUnloaded">
      <summary>
            Occurs when a quad sphere has been unloaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.PlanetStudio.Planet.QuadSphereUnloading">
      <summary>
            Occurs when a quad sphere is unloading.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Planet.PlanetData">
      <summary>
            Gets the planet data.
            </summary>
      <value>
            The planet data.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Planet.PlanetNode">
      <summary>
            Gets the planet node.
            </summary>
      <value>
            The planet node.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Planet.QuadSphere">
      <summary>
            Gets the quad sphere.
            </summary>
      <value>
            The quad sphere.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Planet.QuadSphereEnabled">
      <summary>
            Gets a value indicating whether the quad sphere is enabled.
            </summary>
      <value>
        <c>true</c> if the quad sphere is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Planet.QuadSphereTransitionStrength">
      <summary>
            Gets the quad sphere transition amount.
            </summary>
      <value>
            The quad sphere transition amount.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Planet.SolarSystemData">
      <summary>
            Gets the solar system data.
            </summary>
      <value>
            The solar system data.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Planet.TerrainGenerator">
      <summary>
            Gets the terrain generator.
            </summary>
      <value>
            The terrain generator.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Planet.LateUpdate">
      <summary>
            The late update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Planet.LoadPlanet(ModApi.Planet.SolarSystemDataScript,ModApi.Planet.IPlanetData,ModApi.Planet.ITerrainGenerator)">
      <summary>
            Loads a new quadsphere based on the specified planet data.
            </summary>
      <param name="solarSystem">The solar system.</param>
      <param name="planetData">The planet data.</param>
      <param name="terrainGenerator">The terrain generator.</param>
      <returns>The loaded quadsphere.</returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Planet.Recenter(UnityEngine.Vector3d)">
      <summary>
            Re-centers this instance.
            </summary>
      <param name="center">The center.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Planet.UnloadPlanet">
      <summary>
            Unloads the planet.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Planet.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Planet.RaiseEvent(System.EventHandler{ModApi.Planet.Events.PlanetQuadSphereEventArgs},ModApi.Planet.IQuadSphere)">
      <summary>
            Raises the specified event.
            </summary>
      <param name="eventHandler">The event handler.</param>
      <param name="quadsphere">The quadsphere associated with the event.</param>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.PlanetGeneratorScript">
      <summary>
            A script used for generating planets in the planet studio.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
      <seealso cref="T:ModApi.PlanetStudio.IPlanetGenerator" />
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._createBackups">
      <summary>
            A value indicating whether or not an XML backup should be created when a planet is generated.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._currentSolarSystem">
      <summary>
            A reference to the current solar system that was generated.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._fileSystemWatcher">
      <summary>
            The file system watcher used to rebuild planets when the XML changes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._pendingRebuild">
      <summary>
            A value indicating if a planet rebuild is currently pending.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._planetIndex">
      <summary>
             The index of the planet to be generated in the solar system.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._planets">
      <summary>
            The planets in the current solar system XML.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._planetStudioScript">
      <summary>
            A reference to the planet studio script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._previousXml">
      <summary>
            The previous solar system XML.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._quality">
      <summary>
            The terrain quality.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._recenterPlanet">
      <summary>
            A value indicating whether the newly generated planet will be recentered in the camera's view.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._regenOnRandomize">
      <summary>
            A value indicating whether the planet should be regenerated when one or more modifiers are randomized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetGeneratorScript._scale">
      <summary>
            The solar system scale data.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.CurrentSolarSystem">
      <summary>
            Gets a reference to the current solar system that was generated.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetIndex">
      <summary>
            Gets or sets the index of the planet to be generated in the solar system.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.Planets">
      <summary>
            Gets the planets in the current solar system XML.
            </summary>
      <value>
            The planets in the current solar system XML.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.RecenterPlanet">
      <summary>
            Gets or sets a value indicating whether the newly generated planet will be recentered in the camera's view.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.RegenOnRandomize">
      <summary>
            Gets or sets a value indicating whether the planet should be regenerated when one or more modifiers are randomized.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.OverrideParameters">
      <summary>
            Gets the override parameters used for overriding the default parameters of the planet generator when the scene is loaded.
            </summary>
      <value>
            The override parameters used for overriding the default parameters of the planet generator when the scene is loaded.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.RegisterDevConsoleCommands">
      <summary>
            Registers the dev console commands associated with the planet studio planet generator.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.GeneratePlanet">
      <summary>
            Generates a new planet.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.CloneSolarSystem(System.String)">
      <summary>
            Clones the solar system of the current flight state.
            This also updates the flight state to point to the new solar system.
            </summary>
      <param name="newSolarSystemId">The new solar system identifier.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.LoadPlanetStudio(System.String,ModApi.Settings.TerrainQualitySettings.GeometryDetailQuality)">
      <summary>
            Loads planet studio.
            </summary>
      <param name="planetName">The name of the planet to load.</param>
      <param name="quality">The quality level of the planet to load.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.BackupXml(System.Xml.Linq.XDocument)">
      <summary>
            Backs up the solar system XML if needed.
            </summary>
      <param name="xmlDocument">The XML document.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.FileSystemWatcherFileChanged(System.Object,System.IO.FileSystemEventArgs)">
      <summary>
            The file system watcher callback that is invoked when the solar system XML file changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.IO.FileSystemEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.FindPlanet(System.String,Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorPlanetInfo)">
      <summary>
            Finds the planet info for the planet with the specified name.
            </summary>
      <param name="name">The name of the planet to find.</param>
      <param name="root">The root planet from which to recursivly search.</param>
      <returns>The requested planet info or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.OpenFlightScene">
      <summary>
            Opens the flight scene a the latitude/longitude of the current camera.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.UpdatePlanetList(System.Xml.Linq.XDocument)">
      <summary>
            Updates the planet list.
            </summary>
      <param name="xml">The solar system XML.</param>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorPlanetInfo">
      <summary>
            A class used to contain info about planets for the planet generator.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorPlanetInfo.#ctor(System.String,System.Int32,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorPlanetInfo" /> class.
            </summary>
      <param name="name">The name of the planet.</param>
      <param name="index">The index of the planet.</param>
      <param name="parent">The parent of the planet.</param>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorPlanetInfo.ChildPlanets">
      <summary>
            Gets the child planets of the planet.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorPlanetInfo.Index">
      <summary>
            Gets the index of the planet.
            </summary>
      <value>
            The index of the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorPlanetInfo.Name">
      <summary>
            Gets the name of the planet.
            </summary>
      <value>
            The name of the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorPlanetInfo.Parent">
      <summary>
            Gets the parent of the planet.
            </summary>
      <value>
            The parent of the planet.
            </value>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorOverrideParameters">
      <summary>
            A class with parameters overriding the default parameters for the planet studio planet generator when the scene is loaded.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorOverrideParameters.PlanetName">
      <summary>
            Gets or sets the name of the planet.
            </summary>
      <value>
            The name of the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorOverrideParameters.Quality">
      <summary>
            Gets or sets the quality level for the planet.
            </summary>
      <value>
            The quality level for the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetGeneratorScript.PlanetGeneratorOverrideParameters.SolarSystemId">
      <summary>
            Gets or sets the solar system identifier.
            </summary>
      <value>
            The solar system identifier.
            </value>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.PlanetStudioScript">
      <summary>
            Script for the planet studio scene.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript.ScaledSpaceScale">
      <summary>
            The scaled space scale.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._activeTool">
      <summary>
            The active tool.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._altitudeGroundLevel">
      <summary>
            The ground level altitude.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._altitudeSeaLevel">
      <summary>
            The sea level altitude.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._cubemapPlanet">
      <summary>
            The cube map planet renderer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._directionalLight">
      <summary>
            The directional light for the scene.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._farCamera">
      <summary>
            The far camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._frameCount">
      <summary>
            The frame count.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._frameDeltaTime">
      <summary>
            The frame delta time.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._informationText">
      <summary>
            The information text label.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._mainCamera">
      <summary>
            The main camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._movementScript">
      <summary>
            The movement script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._planet">
      <summary>
            The planet
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._planetGenerator">
      <summary>
            A reference to the planet generator script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._scaledSpaceCamera">
      <summary>
            The scaled space camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioScript._studioUi">
      <summary>
            The studio UI.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioScript.ActiveTool">
      <summary>
            Gets or sets the active tool.
            </summary>
      <value>
            The active tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioScript.CameraPosition">
      <summary>
            Gets or sets the camera position.
            </summary>
      <value>
            The camera position.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioScript.Planet">
      <summary>
            Gets the planet reference.
            </summary>
      <value>
            The planet reference.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioScript.ReferenceFrameCenter">
      <summary>
            Gets the reference frame center.
            </summary>
      <value>
            The reference frame center.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioScript.SnapToGround">
      <summary>
            Gets a value indicating whether the camera should snap to the ground.
            </summary>
      <value>
        <c>true</c> if the camera should snap to the ground; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioScript.TerrainGenerator">
      <summary>
            Gets the terrain generator.
            </summary>
      <value>
            The terrain generator.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioScript.UserInterface">
      <summary>
            Gets the user interface.
            </summary>
      <value>
            The user interface.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.CreateNewPlanet">
      <summary>
            Creates the new planet.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.Exit">
      <summary>
            Exits the planet studio.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.GeneratePlanet(System.Xml.Linq.XElement,System.Int32,System.Boolean)">
      <summary>
            Generates the planet.
            </summary>
      <param name="solarSystemXml">The solar system XML containing the planet to generate.</param>
      <param name="planetIndex">The planet index in the solar system for which we should generate a planet.</param>
      <param name="recenterPlanet">The newly generated planet will be centered and far away from the camera.</param>
      <returns>Returns the solar system script in which the planet resides.</returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.HandleInput(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the click event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.HandlePinch(ModApi.Input.Events.PinchEventArgs)">
      <summary>
            Handles the pinch event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.HandleScroll(ModApi.Input.Events.ScrollEventArgs)">
      <summary>
            Handles the scroll event.
            </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.ShowMessage(System.String)">
      <summary>
            Shows the message.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.Update">
      <summary>
            Update is called every frame, if the MonoBehaviour is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.OnCameraPreRender(UnityEngine.Camera)">
      <summary>
            Called before any camera starts to render.
            </summary>
      <param name="camera">The camera that is about to render.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.Recenter">
      <summary>
            Re-centers the coordinate system on the camera.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioScript.UpdateFps">
      <summary>
            Updates the FPS label.
            </summary>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator">
      <summary>
            Wraps a normal terrain generator and provides methods to visualize the planet differently.
            </summary>
      <seealso cref="T:ModApi.Planet.ITerrainGenerator" />
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator._biomeColors">
      <summary>
            The biome colors
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator._terrainGenerator">
      <summary>
            The real terrain generator.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.#ctor(ModApi.Planet.TerrainGenerator)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator" /> class.
            </summary>
      <param name="terrainGenerator">The terrain generator.</param>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.BiomeCount">
      <summary>
            Gets the number of biomes on the planet.
            </summary>
      <value>
            The number of biomes on the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.HeightMax">
      <summary>
            Gets the maximum height of the planet.
            </summary>
      <value>
            The maximum height of the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.HeightMin">
      <summary>
            Gets the minimum height of the planet.
            </summary>
      <value>
            The minimum height of the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.MapSet">
      <summary>
            Gets or sets the map set.
            </summary>
      <value>
            The map set.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.SeaLevel">
      <summary>
            Gets the sea level.
            </summary>
      <value>
            The sea level.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.ShowBiomes">
      <summary>
            Gets or sets a value indicating whether to show biomes.
            </summary>
      <value>
        <c>true</c> if this generator should show biomes; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.TerrainData">
      <summary>
            Gets the terrain data.
            </summary>
      <value>
            The terrain data.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.TerrainGenerator">
      <summary>
            Gets the terrain generator.
            </summary>
      <value>
            The terrain generator.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.TerrainMaterialModifier">
      <summary>
            Gets the terrain material modifier.
            </summary>
      <value>
            The terrain material modifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.TerrainQuadVertexCount">
      <summary>
            Gets the terrain quad vertex count.
            </summary>
      <value>
            The terrain quad vertex count.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.WaterMaterialModifier">
      <summary>
            Gets the water material modifier.
            </summary>
      <value>
            The water material modifier.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GenerateWaterColor(UnityEngine.Vector3d,System.Single)">
      <summary>
            Generates the color of the water at the position and height.
            </summary>
      <param name="position">The position.</param>
      <param name="height">The height.</param>
      <returns>
            The color.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetCacheData">
      <summary>
            Gets the terrain generator cache data for the current thread.
            </summary>
      <returns>
            The terrain generator cache data for the current thread.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetHeight(UnityEngine.Vector3d)">
      <summary>
            Gets the height at the specified normalized position.
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <returns>
            The height of the terrain at the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetHeight(UnityEngine.Vector3d,ModApi.Planet.TerrainGeneratorCacheData)">
      <summary>
            Gets the height at the specified normalized position.
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <param name="cacheData">The terrain generator cache data to use with this request. This should not be shared between threads.</param>
      <returns>
            The height of the terrain at the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetRequiredTerrainMeshData">
      <summary>
            Gets the required terrain mesh data flags.
            </summary>
      <returns>
            The required terrain mesh data flags.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetRequiredWaterMeshData">
      <summary>
            Gets the required water mesh data flags.
            </summary>
      <returns>
            The required terrain mesh data flags.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetTerrainMaterial(ModApi.Planet.IQuadSphereQuad)">
      <summary>
            Gets the terrain material.
            </summary>
      <param name="quad">The quad for which to initialize the terrain material.</param>
      <returns>The requested material.</returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetVertexData(UnityEngine.Vector3d,System.Boolean)">
      <summary>
            Gets the vertex data for the specified position.
            The position must be normalized (magnitude = 1).
            The vertex data will assume a surface normal based on the planet position only.
            This should only be called from the main thread.
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <param name="allPasses">
        <c>true</c> if all vertex data passes should be ran. <c>false</c> if only height data is required.</param>
      <returns>
            The vertex data for the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetVertexData(UnityEngine.Vector3d,UnityEngine.Vector3d,System.Boolean)">
      <summary>
            Gets the vertex data for the specified position.
            The position must be normalized (magnitude = 1).
            This should only be called from the main thread.
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <param name="normal">The normal for the terrain at the specified position.</param>
      <param name="allPasses">
        <c>true</c> if all vertex data passes should be ran. <c>false</c> if only height data is required.</param>
      <returns>
            The vertex data for the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetVertexData(UnityEngine.Vector3d,System.Boolean,ModApi.Planet.TerrainGeneratorCacheData)">
      <summary>
            Gets the vertex data for the specified position.
            The position must be normalized (magnitude = 1).
            The vertex data will assume a surface normal based on the planet position only.
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <param name="allPasses">
        <c>true</c> if all vertex data passes should be ran. <c>false</c> if only height data is required.</param>
      <param name="cacheData">The terrain generator cache data to use with this request. This should not be shared between threads.</param>
      <returns>
            The vertex data for the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetVertexData(UnityEngine.Vector3d,UnityEngine.Vector3d,System.Boolean,ModApi.Planet.TerrainGeneratorCacheData)">
      <summary>
            Gets the vertex data for the specified position.
            The position must be normalized (magnitude = 1).
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <param name="normal">The normal for the terrain at the specified position.</param>
      <param name="allPasses">
        <c>true</c> if all vertex data passes should be ran. <c>false</c> if only height data is required.</param>
      <param name="cacheData">The terrain generator cache data to use with this request. This should not be shared between threads.</param>
      <returns>
            The vertex data for the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetVertexDataBiomeAndHeightPass(UnityEngine.Vector3d,System.Int32,ModApi.Planet.TerrainGeneratorCacheData)">
      <summary>
            Gets the vertex data for the 'Biome' pass and the 'Height' pass at the specified position.
            The position must be normalized (magnitude = 1).
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <param name="quadVertexIndex">Index of the vertex in the quad (or zero if not generating quad data).</param>
      <param name="cacheData">The cache data used by the terrain generator for the current thread.</param>
      <returns>
            The vertex data for the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetVertexDataBiomePass(UnityEngine.Vector3d,System.Int32,ModApi.Planet.TerrainGeneratorCacheData)">
      <summary>
            Gets the vertex data for the 'Biome' pass at the specified position.
            The position must be normalized (magnitude = 1).
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <param name="quadVertexIndex">Index of the vertex in the quad (or zero if not generating quad data).</param>
      <param name="cacheData">The cache data used by the terrain generator for the current thread.
            If <c>null</c> is used, it will assume it is running on the main thread and use its cached data (no safety checks!).</param>
      <returns>
            The vertex data for the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetVertexDataFinalPass(UnityEngine.Vector3d,UnityEngine.Vector3d,System.Int32,ModApi.Planet.TerrainGeneratorCacheData)">
      <summary>
            Gets the vertex data for the 'Final' pass at the specified position.
            The position must be normalized (magnitude = 1).
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <param name="normal">The normal for the terrain at the specified position.</param>
      <param name="quadVertexIndex">Index of the vertex in the quad (or zero if not generating quad data).</param>
      <param name="cacheData">The cache data used by the terrain generator for the current thread.
            If <c>null</c> is used, it will assume it is running on the main thread and use its cached data (no safety checks!).</param>
      <returns>
            The vertex data for the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetVertexDataHeightPass(UnityEngine.Vector3d,System.Int32,ModApi.Planet.TerrainGeneratorCacheData)">
      <summary>
            Gets the vertex data for the 'Height' pass at the specified position.
            The position must be normalized (magnitude = 1).
            </summary>
      <param name="normalizedPosition">The normalized position.</param>
      <param name="quadVertexIndex">Index of the vertex in the quad (or zero if not generating quad data).</param>
      <param name="cacheData">The cache data used by the terrain generator for the current thread.
            If <c>null</c> is used, it will assume it is running on the main thread and use its cached data (no safety checks!).</param>
      <returns>
            The vertex data for the specified position.
            </returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.GetWaterMaterial(ModApi.Planet.IQuadSphereQuad)">
      <summary>
            Gets the water material.
            </summary>
      <param name="quad">The quad for which to initialize the water material.</param>
      <returns>The requested material.</returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioTerrainGenerator.InitializeQuadSphere(ModApi.Planet.IQuadSphere)">
      <summary>
            Initializes the terrain generator for the quad sphere.
            </summary>
      <param name="quadSphere">The planet quad sphere.</param>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.PlanetStudioUiScript">
      <summary>
            UI script for the planet studio.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioUiScript._brushPanel">
      <summary>
            The brush panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioUiScript._buttonPanel">
      <summary>
            The button panel
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioUiScript._menuPanel">
      <summary>
            The menu panel.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PlanetStudio.PlanetStudioUiScript._selectedFlyout">
      <summary>
            The selected flyout.
            </summary>
    </member>
    <member name="E:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.SelectedFlyoutChanged">
      <summary>
            Occurs when the selected flyout has changed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.Flyouts">
      <summary>
            Gets the flyouts.
            </summary>
      <value>
            The flyouts.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.MenuPanel">
      <summary>
            Gets the menu panel.
            </summary>
      <value>
            The menu panel.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.PlanetStudio">
      <summary>
            Gets the planet studio.
            </summary>
      <value>
            The planet studio.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.SelectedFlyout">
      <summary>
            Gets or sets the selected flyout.
            </summary>
      <value>
            The selected flyout.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.Initialize(Assets.Scripts.PlanetStudio.PlanetStudioScript)">
      <summary>
            Initializes the specified planet studio.
            </summary>
      <param name="planetStudio">The planet studio.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.ToggleFlyout(ModApi.Ui.IFlyout)">
      <summary>
            Toggles the flyout's visibility. If it is currently being shown, then it will be hidden. If it
            is currently hidden, then it will be shown.
            </summary>
      <param name="flyout">The flyout to toggle.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.OnFlyoutClosing(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is closing.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.OnFlyoutOpening(ModApi.Ui.IFlyout)">
      <summary>
            Called when the flyout is opening.
            </summary>
      <param name="flyout">The flyout.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.PlanetStudioFlyouts">
      <summary>
            The planet studio flyouts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.PlanetStudioFlyouts.#ctor(Assets.Scripts.PlanetStudio.PlanetStudioUiScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.PlanetStudioFlyouts" /> class.
            </summary>
      <param name="planetStudioUi">The planet studio UI.</param>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.PlanetStudioFlyouts.All">
      <summary>
            Gets all the flyouts used in the planet studio.
            </summary>
      <value>
            All the flyouts used in the planet studio.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.PlanetStudioUiScript.PlanetStudioFlyouts.Brush">
      <summary>
            Gets the brush flyout.
            </summary>
      <value>
            The brush flyout.
            </value>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.Tools.BiomeBrush">
      <summary>
            Brush for painting a biome.
            </summary>
      <seealso cref="T:Assets.Scripts.PlanetStudio.Tools.PlanetBrush" />
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.BiomeBrush.#ctor(Assets.Scripts.PlanetStudio.PlanetStudioScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.PlanetStudio.Tools.BiomeBrush" /> class.
            </summary>
      <param name="planetStudio">The planet studio.</param>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Tools.BiomeBrush.BiomeIndex">
      <summary>
            Gets or sets the index of the biome.
            </summary>
      <value>
            The index of the biome.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.BiomeBrush.UpdatePoint(UnityEngine.Vector3,System.Single,System.Single,UnityEngine.AnimationCurve)">
      <summary>
            Updates the point.
            </summary>
      <param name="p">The point.</param>
      <param name="strength">The strength.</param>
      <param name="radius">The radius.</param>
      <param name="curve">The brush curve.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.BiomeBrush.ChangePixel(UnityEngine.CubemapFace,System.Int32,System.Int32,System.Single,System.Int32)">
      <summary>
            Changes the pixel.
            </summary>
      <param name="face">The face.</param>
      <param name="x">The x.</param>
      <param name="y">The y.</param>
      <param name="change">The change.</param>
      <param name="biomeIndex">Index of the biome.</param>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.Tools.BrushTool">
      <summary>
            Tool for brushing planet maps.
            </summary>
      <seealso cref="T:ModApi.PlanetStudio.PlanetStudioTool" />
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.BrushTool.#ctor(ModApi.PlanetStudio.IPlanetStudio)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.PlanetStudio.Tools.BrushTool" /> class.
            </summary>
      <param name="planetStudio">The planet studio.</param>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Tools.BrushTool.Brush">
      <summary>
            Gets or sets the brush.
            </summary>
      <value>
            The brush.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Tools.BrushTool.Curve">
      <summary>
            Gets or sets the curve.
            </summary>
      <value>
            The curve.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Tools.BrushTool.Radius">
      <summary>
            Gets or sets the radius.
            </summary>
      <value>
            The radius.
            </value>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Tools.BrushTool.Strength">
      <summary>
            Gets or sets the strength.
            </summary>
      <value>
            The strength.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.BrushTool.EndBrush(UnityEngine.Vector2)">
      <summary>
            Ends the brush at the specified coordinates.
            </summary>
      <param name="screenPosition">The screen position.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.BrushTool.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if this tool has handled the event <c>false</c></returns>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.BrushTool.UpdateBrush(UnityEngine.Ray)">
      <summary>
            Applies the brush at the screen coordinates.
            </summary>
      <param name="ray">The ray.</param>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.Tools.HeightBrush">
      <summary>
            Brush for painting heights.
            </summary>
      <seealso cref="T:Assets.Scripts.PlanetStudio.Tools.PlanetBrush" />
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.HeightBrush.#ctor(Assets.Scripts.PlanetStudio.PlanetStudioScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.PlanetStudio.Tools.HeightBrush" /> class.
            </summary>
      <param name="planetStudio">The planet studio.</param>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.HeightBrush.UpdatePoint(UnityEngine.Vector3,System.Single,System.Single,UnityEngine.AnimationCurve)">
      <summary>
            Updates the point.
            </summary>
      <param name="p">The point.</param>
      <param name="strength">The strength.</param>
      <param name="radius">The radius.</param>
      <param name="curve">The brush curve.</param>
    </member>
    <member name="T:Assets.Scripts.PlanetStudio.Tools.PlanetBrush">
      <summary>
            Contains methods to apply changes to a planet's cube data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.PlanetBrush.#ctor(Assets.Scripts.PlanetStudio.PlanetStudioScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.PlanetStudio.Tools.PlanetBrush" /> class.
            </summary>
      <param name="planetStudio">The planet studio.</param>
    </member>
    <member name="P:Assets.Scripts.PlanetStudio.Tools.PlanetBrush.PlanetStudio">
      <summary>
            Gets the planet studio.
            </summary>
      <value>
            The planet studio.
            </value>
    </member>
    <member name="M:Assets.Scripts.PlanetStudio.Tools.PlanetBrush.UpdatePoint(UnityEngine.Vector3,System.Single,System.Single,UnityEngine.AnimationCurve)">
      <summary>
            Updates the point.
            </summary>
      <param name="p">The point.</param>
      <param name="strength">The strength.</param>
      <param name="radius">The radius.</param>
      <param name="curve">The brush curve.</param>
    </member>
    <member name="T:Assets.Scripts.PreprocessorSymbols">
      <summary>
            A class containing the list of preprocessor symbols that may (or may not) be defined for this assembly.
            </summary>
    </member>
    <member name="F:Assets.Scripts.PreprocessorSymbols.PERFORMANCE_METRICS_QUAD_GENERATION">
      <summary>
            The symbol that is defined to help track performance data related to the generation of quads for the quad spheres.
            </summary>
    </member>
    <member name="T:Assets.Scripts.ResourceLoader">
      <summary>
            A wrapper used for the loading of all resources.
            </summary>
    </member>
    <member name="F:Assets.Scripts.ResourceLoader._airfoils">
      <summary>
            The wing airfoils that have been loaded (caching references so we don't re-load them a bunch of times.
            </summary>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.ResourceLoader" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.InstantiatePrefab(System.String,System.Boolean)">
      <summary>
            Loads the prefab at the specified path and then instantiates and returns it.
            </summary>
      <param name="path">The path of the prefab to load.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged to the console.</param>
      <returns>The instantiated prefab at the specified path or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.InstantiatePrefab``1(System.String,System.Boolean)">
      <summary>
            Loads the prefab at the specified path and then instantiates it, returning the specified component.
            </summary>
      <typeparam name="T">The type of the component to return.</typeparam>
      <param name="path">The path of the prefab to load.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged to the console.</param>
      <returns>The requested component on the instantiated prefab at the specified path or <c>null</c> if the component could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.Load``1(System.String,System.Boolean)">
      <summary>
            Loads the asset at the specified path.
            </summary>
      <typeparam name="T">The type of the asset to load.</typeparam>
      <param name="path">The path of the asset to load.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged to the console.</param>
      <returns>
            The requested asset or <c>null</c> if it could not be found.
            </returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.LoadAirfoil(System.String)">
      <summary>
            Loads the airfoil.
            </summary>
      <param name="airfoilName">Name of the airfoil.</param>
      <returns>The airfoil if found, or the default airfoil if not found.</returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.LoadAll``1(System.String,System.Boolean)">
      <summary>
            Loads all assets in a folder or file at path in a Resources folder.
            </summary>
      <typeparam name="T">The resource type to load.</typeparam>
      <param name="path">Pathname of the target folder. When using the empty string (i.e., ""), the function will load the entire contents of the Resources folder.</param>
      <param name="logErrors">if set to <c>true</c> [log errors].</param>
      <returns>
            The resources in the folder.
            </returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.LoadAsync``1(System.String,System.Boolean)">
      <summary>
            Loads the requested resource asynchronously.
            </summary>
      <typeparam name="T">The type of the requested resource.</typeparam>
      <param name="path">The path of the requested resource.</param>
      <param name="logErrors">If set to <c>true</c>, an error will be logged if the resource could not be found..</param>
      <returns>
            A wrapper for Unity's asynchronous resource request.
            </returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.LoadAudio(System.String,System.Boolean)">
      <summary>
            Loads the audio clip asset at the specified path.
            </summary>
      <param name="path">The path of the asset to load.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged to the console.</param>
      <returns>
            The requested audio clip asset or <c>null</c> if it could not be found.
            </returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.LoadMaterial(System.String,System.Boolean)">
      <summary>
            Loads the material at the specified path.
            </summary>
      <param name="path">The path of the material to load.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged to the console.</param>
      <returns>
            The requested material asset or <c>null</c> if it could not be found.
            </returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.LoadPrefab(System.String,System.Boolean)">
      <summary>
            Loads the prefab (not instantiated) at the specified path.
            </summary>
      <param name="path">The path of the prefab to load.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged to the console.</param>
      <returns>The uninstantiated prefab at the specified path or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.LoadScriptableObject``1(System.String,System.Boolean)">
      <summary>
            Loads the scriptable object at the specified path and returns it as the requested type.
            </summary>
      <typeparam name="T">The type to return.</typeparam>
      <param name="path">The path of the object to load.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged to the console.</param>
      <returns>The requested object or <c>null</c> if it could not be found or was not of the expected type.</returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.LoadText(System.String,System.Boolean)">
      <summary>
            Loads the text asset at the specified path.
            </summary>
      <param name="path">The path of the text asset to load.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged to the console.</param>
      <returns>The text requested or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.LoadTexture(System.String,System.Boolean)">
      <summary>
            Loads the texture at the specified path.
            </summary>
      <param name="path">The path of the texture to load.</param>
      <param name="logErrors">If set to <c>true</c>, errors will be logged to the console.</param>
      <returns>
            The requested texture asset or <c>null</c> if it could not be found.
            </returns>
    </member>
    <member name="M:Assets.Scripts.ResourceLoader.OnActiveSceneChanged(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
            Called when the active scene has changed.
            </summary>
      <param name="prevScene">The previous scene.</param>
      <param name="newScene">The new scene.</param>
    </member>
    <member name="T:Assets.Scripts.Scenes.DefaultLoadingScreenTextureProvider">
      <summary>
            The default loading screen texture provider.
            </summary>
      <seealso cref="T:ModApi.Scenes.ILoadingScreenTextureProvider" />
    </member>
    <member name="F:Assets.Scripts.Scenes.DefaultLoadingScreenTextureProvider.DefaultLoadingScreen">
      <summary>
            The default loading screen texture data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.DefaultLoadingScreenTextureProvider.StartupLoadingScreen">
      <summary>
            The startup loading screen texture data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Scenes.DefaultLoadingScreenTextureProvider.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Scripts.Scenes.DefaultLoadingScreenTextureProvider" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Scenes.DefaultLoadingScreenTextureProvider.GetLoadingScreenTexture(System.String,System.String,System.String)">
      <summary>
            Gets the loading screen texture for the specified scene.
            </summary>
      <param name="scene">The name of the scene being loaded.</param>
      <param name="previousScene">The name of the scene being unloaded.</param>
      <param name="flightSceneActivePlanet">The last known name of the active planet when entering the flight scene.</param>
      <returns>
            The loading screen texture used for loading the specified screen. <c>null</c> if no texture was provided.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Scenes.SceneManager">
      <summary>
            A class that handles scene related functionality.
            </summary>
      <seealso cref="T:ModApi.Scenes.ISceneManager" />
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager.LoadScreenFadeTime">
      <summary>
            The load screen fade time in seconds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager.MinimumLoadScreenTime">
      <summary>
            The minimum load screen time in seconds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager._canvas">
      <summary>
            The loading screen canvas.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager._defaultLoadingScreenTextureProvider">
      <summary>
            The default loading screen texture provider.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager._loadingScreenTexture">
      <summary>
            The current loading screen texture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager._loadingScreenTextureProviders">
      <summary>
            The loading screen texture providers sorted by priority.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager._queuedSceneTransition">
      <summary>
            A value indicating if a scene transition is currently queued (waiting on another transition to complete).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager._transitionCanvasGroup">
      <summary>
            The loading screen transition canvas group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager._transitionImage">
      <summary>
            The loading screen transition image.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager._transitionLoadingText">
      <summary>
            The loading screen transition loading text.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager._transitionState">
      <summary>
            The current scene transition state.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Scenes.SceneManager.SceneLoaded">
      <summary>
            Occurs when a scene is loaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Scenes.SceneManager.SceneLoading">
      <summary>
            Occurs when a scene is about to be loaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Scenes.SceneManager.SceneTransitionCompleted">
      <summary>
            Occurs when a scene transition from the current scene to a new scene has completed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Scenes.SceneManager.SceneTransitionStarted">
      <summary>
            Occurs when a scene transition from the current scene to a new scene has started.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Scenes.SceneManager.SceneUnloaded">
      <summary>
            Occurs when a scene is unloaded.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Scenes.SceneManager.SceneUnloading">
      <summary>
            Occurs when a scene is about to be unloaded.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Scenes.SceneManager.SceneTransitionState">
      <summary>
            An enumeration defining the different states of a scene transition.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager.SceneTransitionState.Default">
      <summary>
            The default state, no scene transitions are in progress.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager.SceneTransitionState.SceneUnloading">
      <summary>
            The current scene is being unloaded.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager.SceneTransitionState.SceneLoading">
      <summary>
            A new scene is being loaded.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager.SceneTransitionState.PostLoadDelay">
      <summary>
            The new scene has been loaded and the post-load delay is occuring.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Scenes.SceneManager.SceneTransitionState.LoadingScreenFadeOut">
      <summary>
            The transition is almost complete and the loading screen is being faded out.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Scenes.SceneManager.CurrentScene">
      <summary>
            Gets the current scene name.
            </summary>
      <value>
            The current scene name.
            </value>
    </member>
    <member name="P:Assets.Scripts.Scenes.SceneManager.FlightSceneLoadParameters">
      <summary>
            Gets the current flight scene parameters.
            </summary>
      <value>
            The current flight scene parameters.
            </value>
    </member>
    <member name="P:Assets.Scripts.Scenes.SceneManager.InDesignerScene">
      <summary>
            Gets a value indicating whether the game is currently in the designer scene.
            </summary>
      <value>
        <c>true</c> if the game is currently in the designer scene; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Scenes.SceneManager.InFlightScene">
      <summary>
            Gets a value indicating whether the game is currently in the flight scene.
            </summary>
      <value>
        <c>true</c> if the game is currently in the flight scene; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Scenes.SceneManager.InMenuScene">
      <summary>
            Gets a value indicating whether the game is currently in the menu scene.
            </summary>
      <value>
        <c>true</c> if the game is currently in the menu scene; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.Create(UnityEngine.GameObject)">
      <summary>
            Creates the scene manager script.
            </summary>
      <param name="parent">The parent object.</param>
      <returns>The scene manager script reference.</returns>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.DeactivateCurrentScene">
      <summary>
            Deactivates all game objects in the the current scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.LoadDesigner">
      <summary>
            Loads the designer scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.LoadFlight(ModApi.Scenes.Parameters.FlightSceneLoadParameters)">
      <summary>
            Loads the flight scene.
            </summary>
      <param name="loadParameters">The flight scene load parameters. If <c>null</c>, the current parameters will remain unchanged.</param>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.LoadMenu">
      <summary>
            Loads the menu scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.LoadPlanetStudio">
      <summary>
            Loads the planet studio scene.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.LoadScene(System.String)">
      <summary>
            Loads the specified scene.
            </summary>
      <param name="sceneName">The name of the scene to load.</param>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.RegisterLoadingScreenTextureProvider(ModApi.Scenes.ILoadingScreenTextureProvider,System.Int32)">
      <summary>
            Registers the specified loading screen texture provider.
            </summary>
      <param name="provider">The loading screen texture provider.</param>
      <param name="priority">The priority of the provider. Providers are queried in ascending priority order.</param>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.CompleteSceneTransition(System.String,System.String,System.Single)">
      <summary>
            Completes a scene transition.
            </summary>
      <param name="previousSceneName">Name of the previous scene.</param>
      <param name="sceneName">Name of the scene.</param>
      <param name="startTime">The start time.</param>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.GetLoadingScreenTexture(System.String,System.String)">
      <summary>
            Gets the loading screen texture.
            </summary>
      <param name="previousSceneName">The name of the previous scene.</param>
      <param name="sceneName">The name of the scene being loaded.</param>
      <returns>The texture to use for the loading screen (or <c>null</c> if no texture should be used).</returns>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.LoadSceneCoroutine(System.String)">
      <summary>
            Loads the scene specified scene.
            </summary>
      <param name="sceneName">The name of the scene to be loaded.</param>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.OnSceneLoaded(System.String)">
      <summary>
            Called when a scene is loaded.
            </summary>
      <param name="sceneName">The name of the scene that was loaded.</param>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.OnSceneLoading(System.String)">
      <summary>
            Called when a scene is loading.
            </summary>
      <param name="sceneName">The name of the scene that is loading.</param>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.OnSceneUnloaded(System.String)">
      <summary>
            Called when a scene is unloaded.
            </summary>
      <param name="sceneName">The name of the scene that was unloaded.</param>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.OnSceneUnloading(System.String)">
      <summary>
            Called when a scene is unloading.
            </summary>
      <param name="sceneName">The name of the scene that is unloading.</param>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.PerformTransitionSceneActions">
      <summary>
            Performs any actions that we want/need to happen in the transition scene when the
            previous scene has fully unloaded but the new scene has not yet started loading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.StartSceneTransition(System.String,System.String)">
      <summary>
            Starts a scene transition.
            </summary>
      <param name="previousSceneName">The name of the previous scene.</param>
      <param name="sceneName">The name of the scene.</param>
    </member>
    <member name="M:Assets.Scripts.Scenes.SceneManager.TransitionSceneCleanup">
      <summary>
            Perform some cleanup actions while the previous scene is unloaded and the next scene has not yet loaded.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Settings.ApplicationSettings">
      <summary>
            Handles saving and loading application settings from disk.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Settings.ApplicationSettings._CurrentXmlVersion">
      <summary>
            The current XML version.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Settings.ApplicationSettings._hasUnsavedChanges">
      <summary>
            A value indicating whether this application settings instance has any unsaved changes.
            This does not count any unsaved game/quality settings.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Settings.ApplicationSettings._seenNotifications">
      <summary>
            The seen notifications
            </summary>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.#ctor">
      <summary>
            Prevents a default instance of the <see cref="T:Assets.Scripts.Settings.ApplicationSettings" /> class from being created.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.AppVersionLastRun">
      <summary>
            Gets or sets the application version last run.
            </summary>
      <value>
            The application version last run.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.ClientToken">
      <summary>
            Gets or sets the client token, which is used when connecting to the website so we can keep track of users.
            </summary>
      <value>
            The client token.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.CurrentXmlVersion">
      <summary>
            Gets the current XML version.
            </summary>
      <value>
            The current XML version.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.DeviceId">
      <summary>
            Gets or sets the device identifier.
            </summary>
      <value>
            The device identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.EnabledMods">
      <summary>
            Gets or sets the enabled mods.
            </summary>
      <value>
            The enabled mods.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.ModApi#Settings#IApplicationSettings#EnabledMods">
      <summary>
            Gets the enabled mods.
            </summary>
      <value>
            The enabled mods.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.Game">
      <summary>
            Gets the game settings.
            </summary>
      <value>
            The game settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.ModApi#Settings#IApplicationSettings#Game">
      <summary>
            Gets the game settings.
            </summary>
      <value>
            The game settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.GameStateId">
      <summary>
            Gets or sets the ID of the most recent Game State that the player was using.
            </summary>
      <value>
            The game state ID.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.ModSupportEnabled">
      <summary>
            Gets or sets a value indicating whether mod support is enabled.
            </summary>
      <value>
        <c>true</c> if mod support is enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.NewWorkshopContentInstalled">
      <summary>
            Gets or sets a value indicating whether new Steam Workshop content is installed.
            </summary>
      <value>
        <c>true</c> if new Steam Workshop content is installed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.NumberOfApplicationRuns">
      <summary>
            Gets or sets the number of application runs.
            </summary>
      <value>
            The number of application runs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.Quality">
      <summary>
            Gets the game quality settings.
            </summary>
      <value>
            The game quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.ModApi#Settings#IApplicationSettings#Quality">
      <summary>
            Gets the game quality settings.
            </summary>
      <value>
            The game quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.SeenNotifications">
      <summary>
            Gets the notifications that have been shown to the user so they will not be shown again.
            </summary>
      <value>
            The notifications.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.ShowWhatsNew">
      <summary>
            Gets or sets a value indicating whether to show the whats new panel in the main menu.
            </summary>
      <value>
        <c>true</c> if it should show the whats new; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.SteamWorkshopTimestamps">
      <summary>
            Gets a dictionary of timestamps keyed by Steam Workshop items IDs.
            This is used to determine if new workshop items have been installed since the last run.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Settings.ApplicationSettings.UserName">
      <summary>
            Gets or sets the name of the user.
            </summary>
      <value>
            The name of the user.
            </value>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.Load">
      <summary>
            Loads the application settings.
            </summary>
      <returns>The application settings.</returns>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.AddNotification(System.String)">
      <summary>
            Adds the notification.
            </summary>
      <param name="notification">The notification.</param>
      <returns>True if the notification was added, or false if the notification was already in this list and did not need to be added.</returns>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.HasAnyUnsavedChanges">
      <summary>
            Determines whether there are any unsaved changes for any setting.
            </summary>
      <returns>
        <c>true</c> if there are any unsaved changes for any setting; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.Save">
      <summary>
            Saves the settings to file.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.SaveIfNecessary">
      <summary>
            Saves the settings to file if there are any pending unsaved changes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.SaveXml">
      <summary>
            Saves the XML.
            </summary>
      <returns>The settings XML.</returns>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.UpdateEnabledMods(System.Collections.Generic.List{Jundroo.ModTools.ModInfo})">
      <summary>
            Updates the list of enabled mods.
            </summary>
      <param name="list">The new list of enabled mods.</param>
      <returns>
        <c>true</c> if the list was updated, <c>false</c> if no changes were needed.</returns>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.UpdateWorkshopTimestamps(System.Collections.Generic.IEnumerable{Assets.Packages.SocialPlatforms.Steam.SubscribedWorkshopItemInfo})">
      <summary>
            Updates the Steam Workshop item timestamps for the specified list of installed workshop items.
            </summary>
      <param name="workshopItems">The workshop items.</param>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.UserLogOut">
      <summary>
            Logs the user out.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.LoadModSettings(System.Xml.Linq.XElement)">
      <summary>
            Loads the mod settings.
            </summary>
      <param name="modsElement">The mods settings element.</param>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.LoadNotifications(System.Xml.Linq.XElement)">
      <summary>
            Loads the notification settings.
            </summary>
      <param name="notificationsElement">The notifications element.</param>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.LoadSettingsFromFile">
      <summary>
            Loads the settings XML file from the file system.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.SaveModSettings">
      <summary>
            Saves the mod settings in XML format.
            </summary>
      <returns>The XML formatted mod settings.</returns>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.SaveNotifications">
      <summary>
            Saves the notifications in XML format.
            </summary>
      <returns>The XML formatted notifications.</returns>
    </member>
    <member name="M:Assets.Scripts.Settings.ApplicationSettings.UpgradeXml(System.Xml.Linq.XDocument,System.Int32)">
      <summary>
            Upgrades the settings XML if needed.
            </summary>
      <param name="xml">The current XML to potentially upgrade.</param>
      <param name="xmlVersion">The current version of the specified XML.</param>
      <returns>The new, updated, or unchanged XML document.</returns>
    </member>
    <member name="T:Assets.Scripts.Settings.GameQualitySettings">
      <summary>
            The game quality settings.
            </summary>
      <seealso cref="T:ModApi.Settings.IGameQualitySettings" />
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.Atmospheres">
      <summary>
            Gets the atmosphere quality settings.
            </summary>
      <value>
            The atmosphere quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.Categories">
      <summary>
            Gets the quality setting categories.
            </summary>
      <value>
            The quality setting categories.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.Crafts">
      <summary>
            Gets the craft quality settings.
            </summary>
      <value>
            The craft quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.Display">
      <summary>
            Gets the display quality settings.
            </summary>
      <value>
            The display quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.ImageEffects">
      <summary>
            Gets the image effects quality settings.
            </summary>
      <value>
            The image effects quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.Physics">
      <summary>
            Gets the physics quality settings.
            </summary>
      <value>
            The physics quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.Shadows">
      <summary>
            Gets the shadow quality settings.
            </summary>
      <value>
            The shadow quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.Terrain">
      <summary>
            Gets the terrain quality settings.
            </summary>
      <value>
            The terrain quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.VisualEffects">
      <summary>
            Gets the visual effects quality settings.
            </summary>
      <value>
            The visual effects quality settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameQualitySettings.Water">
      <summary>
            Gets the water quality settings.
            </summary>
      <value>
            The water quality settings.
            </value>
    </member>
    <member name="M:Assets.Scripts.Settings.GameQualitySettings.CreateFromXml(System.Xml.Linq.XElement)">
      <summary>
            Creates the quality settings from the specified XML.
            </summary>
      <param name="xml">The XML from which to create the quality settings.</param>
      <returns>The quality settings.</returns>
    </member>
    <member name="M:Assets.Scripts.Settings.GameQualitySettings.ApplySettings">
      <summary>
            Applies the current settings.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Settings.GameQualitySettings.SaveToXml(System.Xml.Linq.XElement)">
      <summary>
            Saves the quality settings to the specified XML.
            </summary>
      <param name="xml">The XML to which to save the quality settings.</param>
    </member>
    <member name="M:Assets.Scripts.Settings.GameQualitySettings.ApplyDisplaySettings">
      <summary>
            Applies the resolution and display settings.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Settings.GameSettings">
      <summary>
            The game settings.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Settings.GameSettings.Audio">
      <summary>
            Gets the audio settings.
            </summary>
      <value>
            The audio settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameSettings.Categories">
      <summary>
            Gets the quality setting categories.
            </summary>
      <value>
            The quality setting categories.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameSettings.Designer">
      <summary>
            Gets the designer game settings.
            </summary>
      <value>
            The designer game settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameSettings.Flight">
      <summary>
            Gets the flight game settings.
            </summary>
      <value>
            The flight game settings.
            </value>
    </member>
    <member name="P:Assets.Scripts.Settings.GameSettings.General">
      <summary>
            Gets the general game settings.
            </summary>
      <value>
            The general game settings.
            </value>
    </member>
    <member name="M:Assets.Scripts.Settings.GameSettings.CreateFromXml(System.Xml.Linq.XElement)">
      <summary>
            Creates the game settings from the specified XML.
            </summary>
      <param name="xml">The XML from which to create the game settings.</param>
      <returns>The game settings.</returns>
    </member>
    <member name="M:Assets.Scripts.Settings.GameSettings.SaveToXml(System.Xml.Linq.XElement)">
      <summary>
            Saves the game settings to the specified XML.
            </summary>
      <param name="xml">The XML to which to save the game settings.</param>
    </member>
    <member name="T:Assets.Scripts.Settings.UserDataStore_Xml">
      <summary>
            Class for saving data to an XML file in Application.persistentDataPath. Goes on Rewired Input Manager.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Settings.UserDataStore_Xml.IsEnabled">
      <summary>
            Should this script be used? If disabled, nothing will be saved or loaded.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Settings.UserDataStore_Xml.LoadDataOnStart">
      <summary>
            Should saved data be loaded on start?
            </summary>
    </member>
    <member name="P:Assets.Scripts.Settings.UserDataStore_Xml.LoadJoystickAssignments">
      <summary>
            Should Player Joystick assignments be saved and loaded? This is not totally reliable for all Joysticks on all platforms.
            Some platforms/input sources do not provide enough information to reliably save assignments from session to session
            and reboot to reboot.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Settings.UserDataStore_Xml.LoadKeyboardAssignments">
      <summary>
            Should Player Keyboard assignments be saved and loaded?
            </summary>
    </member>
    <member name="P:Assets.Scripts.Settings.UserDataStore_Xml.LoadMouseAssignments">
      <summary>
            Should Player Mouse assignments be saved and loaded?
            </summary>
    </member>
    <member name="F:Assets.Scripts.Settings.UserDataStore_Xml._cachedXmlDocument">
      <summary>
            The cached XML document, used for when saving/loading everything all at once, so we don't read for every single setting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Settings.UserDataStore_Xml._saveIndividualChanges">
      <summary>
            Whether we should save individual changes, used for when saving everything all at once, so we don't write for every single setting.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Settings.UserDataStore_Xml.DataPath">
      <summary>
            Gets the data path.
            </summary>
      <value>
            The data path.
            </value>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.Save">
      <summary>
            Save all data now.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.SaveControllerData(System.Int32,Rewired.ControllerType,System.Int32)">
      <summary>
            Save all data for a specific controller for a Player.
            </summary>
      <param name="playerId">Player id</param>
      <param name="controllerType">Controller type</param>
      <param name="controllerId">Controller id</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.SaveControllerData(Rewired.ControllerType,System.Int32)">
      <summary>
            Save all data for a specific controller. Does not save Player data.
            </summary>
      <param name="controllerType">Controller type</param>
      <param name="controllerId">Controller id</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.SavePlayerData(System.Int32)">
      <summary>
            Save all data for a specific Player.
            </summary>
      <param name="playerId">Player id</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.SaveInputBehavior(System.Int32,System.Int32)">
      <summary>
            Save all data for a specific InputBehavior for a Player.
            </summary>
      <param name="playerId">Player id</param>
      <param name="behaviorId">Input Behavior id</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.Load">
      <summary>
            Load all data now.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.LoadControllerData(System.Int32,Rewired.ControllerType,System.Int32)">
      <summary>
            Load all data for a specific controller for a Player.
            </summary>
      <param name="playerId">Player id</param>
      <param name="controllerType">Controller type</param>
      <param name="controllerId">Controller id</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.LoadControllerData(Rewired.ControllerType,System.Int32)">
      <summary>
            Load all data for a specific controller. Does not load Player data.
            </summary>
      <param name="controllerType">Controller type</param>
      <param name="controllerId">Controller id</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.LoadPlayerData(System.Int32)">
      <summary>
            Load all data for a specific Player.
            </summary>
      <param name="playerId">Player id</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.LoadInputBehavior(System.Int32,System.Int32)">
      <summary>
            Load all data for a specific InputBehavior for a Player.
            </summary>
      <param name="playerId">Player id</param>
      <param name="behaviorId">Input Behavior id</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.OnInitialize">
      <summary>
            Called when SaveDataStore is initialized.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.OnControllerConnected(Rewired.ControllerStatusChangedEventArgs)">
      <summary>
            Called when a controller is connected.
            </summary>
      <param name="args">ControllerStatusChangedEventArgs</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.OnControllerPreDiscconnect(Rewired.ControllerStatusChangedEventArgs)">
      <summary>
            Calls after a controller has been disconnected.
            </summary>
      <param name="args">ControllerStatusChangedEventArgs</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.OnControllerDisconnected(Rewired.ControllerStatusChangedEventArgs)">
      <summary>
            Called when a controller is disconnected.
            </summary>
      <param name="args">ControllerStatusChangedEventArgs</param>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.GetXmlDocument">
      <summary>
            Gets the XML document.
            </summary>
      <returns>The XML document</returns>
    </member>
    <member name="M:Assets.Scripts.Settings.UserDataStore_Xml.RequestSaveIndividualChangeToXmlDocument">
      <summary>
            Saves XML document, unless we are not saving individual changes (used for SaveAll, so we don't write again for every setting).
            </summary>
    </member>
    <member name="T:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload">
      <summary>
            Sandbox download website request handler.
            </summary>
      <seealso cref="T:Assets.Scripts.Sharing.Handlers.IRequestHandler" />
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload" /> class.
            </summary>
      <param name="bugUrlId">The sandbox url Id.</param>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload.BugUrlId">
      <summary>
            Gets the sandbox identifier.
            </summary>
      <value>
            The sandbox identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload.DownloadSandbox">
      <summary>
            Gets the download sandbox.
            </summary>
      <value>
            The download sandbox.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload.Endpoint">
      <summary>
            Gets the website endpoint.
            </summary>
      <value>
            The website endpoint.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload.Form">
      <summary>
            Gets the form data to be submitted.
            </summary>
      <value>
            The form data to be submitted.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload.GameStateId">
      <summary>
            Gets the game state identifier.
            </summary>
      <value>
            The game state identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload.IncludeClientData">
      <summary>
            Gets a value indicating whether to include client data such as user, client token, version, etc.
            </summary>
      <value>
        <c>true</c> if client data such as user, client token, version, etc. should be included; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload.OnCanceled(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the request has been canceled.
            </summary>
      <param name="websiteRequest">The website request.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportDownload.OnComplete(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the operation has completed.
            </summary>
      <param name="request">The website request which performed the operation.</param>
    </member>
    <member name="T:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData">
      <summary>
            Form data for Sandbox uploading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.#ctor">
      <summary>
            Prevents a default instance of the <see cref="T:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData" /> class from being created.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.AutoReport">
      <summary>
            Gets a value indicating whether this was created from an automatic bug report.
            </summary>
      <value>
        <c>true</c> if this is an automatic report; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.DesignerCraft">
      <summary>
            Gets the designer craft XML.
            </summary>
      <value>
            The editor craft.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.InputState">
      <summary>
            Gets the state of the input.
            </summary>
      <value>
            The state of the input.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.LogContents">
      <summary>
            Gets or sets the log contents.
            </summary>
      <value>
            The log contents.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.Screenshots">
      <summary>
            Gets or sets the screenshots.
            </summary>
      <value>
            The screenshots.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.Settings">
      <summary>
            Gets the settings XML.
            </summary>
      <value>
            The settings XML.
            </value>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.CreateFromBugReport(System.Xml.Linq.XDocument,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Byte[]})">
      <summary>
            Creates from bug report.
            </summary>
      <param name="sandboxData">The bug report.</param>
      <param name="logFileContents">The log file contents.</param>
      <param name="inputState">State of the input.</param>
      <param name="screenshots">The screenshots.</param>
      <returns>
            The BugReportFormData
            </returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.CreateFromCurrentScene">
      <summary>
            Creates BugReportFormData while in the designer or flight scene.
            </summary>
      <returns>
            The BugReportFormData for the currently loaded/running sandbox.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData.CreateCommon">
      <summary>
            Creates the common.
            </summary>
      <returns>The BugReportFormData</returns>
    </member>
    <member name="T:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload">
      <summary>
            Bug report upload website request handler.
            </summary>
      <seealso cref="T:Assets.Scripts.Sharing.Handlers.IRequestHandler" />
    </member>
    <member name="F:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload._sandboxUpload">
      <summary>
            The sandbox upload
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload.#ctor(System.Xml.Linq.XDocument,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Byte[]})">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload" /> class using the currently active game state.
            </summary>
      <param name="sandboxData">The bug report.</param>
      <param name="logFileContents">The log file contents.</param>
      <param name="inputState">State of the input.</param>
      <param name="bugScreenshots">The bug screenshots.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload.#ctor(Assets.Scripts.Ui.Sharing.Upload.UploadContentModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload" /> class using the specified game state.
            </summary>
      <param name="model">The model.</param>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload.Endpoint">
      <summary>
            Gets the website endpoint.
            </summary>
      <value>
            The website endpoint.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload.Form">
      <summary>
            Gets the form data to be submitted.
            </summary>
      <value>
            The form data to be submitted.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload.IncludeClientData">
      <summary>
            Gets a value indicating whether to include client data such as user, client token, version, etc.
            </summary>
      <value>
        <c>true</c> if client data such as user, client token, version, etc. should be included; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload.OnCanceled(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the request has been canceled.
            </summary>
      <param name="websiteRequest">The website request.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload.OnComplete(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the operation has completed.
            </summary>
      <param name="request">The website request which performed the operation.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.BugReport.BugReportUpload.AddBugFormData(UnityEngine.WWWForm,Assets.Scripts.Sharing.Handlers.BugReport.BugReportFormData)">
      <summary>
            Adds the form data.
            </summary>
      <param name="form">The form to add the bug report data to.</param>
      <param name="bugReportFormData">The bug report form data.</param>
      <returns>
            The form.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Sharing.Handlers.IRequestHandler">
      <summary>
            Interface to content to be up-loaded to the website.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.IRequestHandler.Endpoint">
      <summary>
            Gets the website endpoint.
            </summary>
      <value>
            The website endpoint.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.IRequestHandler.Form">
      <summary>
            Gets the form data to be submitted.
            </summary>
      <value>
            The form data to be submitted.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.IRequestHandler.IncludeClientData">
      <summary>
            Gets a value indicating whether to include client data such as user, client token, version, etc.
            </summary>
      <value>
        <c>true</c> if client data such as user, client token, version, etc. should be included; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.IRequestHandler.OnCanceled(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the request has been canceled.
            </summary>
      <param name="websiteRequest">The website request.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.IRequestHandler.OnComplete(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the operation has completed.
            </summary>
      <param name="request">The website request which performed the operation.</param>
    </member>
    <member name="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload">
      <summary>
            Sandbox download website request handler.
            </summary>
      <seealso cref="T:Assets.Scripts.Sharing.Handlers.IRequestHandler" />
    </member>
    <member name="F:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload._sandboxBytes">
      <summary>
            The sandbox bytes
            </summary>
    </member>
    <member name="F:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload._sandboxUrlId">
      <summary>
            The sandbox unique identifier
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload" /> class.
            </summary>
      <param name="sandboxUrlId">The sandbox url Id.</param>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.Endpoint">
      <summary>
            Gets the website endpoint.
            </summary>
      <value>
            The website endpoint.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.Form">
      <summary>
            Gets the form data to be submitted.
            </summary>
      <value>
            The form data to be submitted.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.GameStateId">
      <summary>
            Gets the game state identifier.
            </summary>
      <value>
            The game state identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.IncludeClientData">
      <summary>
            Gets a value indicating whether to include client data such as user, client token, version, etc.
            </summary>
      <value>
        <c>true</c> if client data such as user, client token, version, etc. should be included; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.SandboxUrlId">
      <summary>
            Gets the sandbox identifier.
            </summary>
      <value>
            The sandbox identifier.
            </value>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.OnCanceled(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the request has been canceled.
            </summary>
      <param name="websiteRequest">The website request.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.OnComplete(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the operation has completed.
            </summary>
      <param name="request">The website request which performed the operation.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.SaveSandbox(System.Boolean,System.String@,System.String@)">
      <summary>
            Saves the sandbox.
            </summary>
      <param name="overwriteExisting">if set to <c>true</c> [overwrite existing].</param>
      <param name="gameStateId">The game state identifier.</param>
      <param name="error">The error.</param>
      <returns>
            The GameState id of the saved sandbox.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.SaveSandbox(System.Byte[],System.Boolean,System.String@,System.String@)">
      <summary>
            Saves the sandbox to the specified directory.
            </summary>
      <param name="zipBytes">The zip bytes.</param>
      <param name="overwriteExisting">if set to <c>true</c> any existing sandbox will be overwritten, otherwise an <c cref="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.SandboxAlreadyExistsException" /> will be thrown if one exists.</param>
      <param name="gameStateId">The game state identifier.</param>
      <param name="errorMessage">The error message.</param>
      <returns>
            The GameState id of the saved sandbox, or null if an error occurred.
            </returns>
      <exception cref="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.SandboxAlreadyExistsException">Occurs when a sandbox with the given name already exists.</exception>
    </member>
    <member name="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxDownload.SandboxAlreadyExistsException">
      <summary>
            Occurs when a sandbox has attempted to be saved when there is already an existing sandbox with the same name.
            </summary>
      <seealso cref="T:System.Exception" />
    </member>
    <member name="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData">
      <summary>
            Form data for Sandbox uploading.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.#ctor">
      <summary>
            Prevents a default instance of the <see cref="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData" /> class from being created.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.PictureFormatType">
      <summary>
            The picture format type (png, jpg, etc.)
            </summary>
    </member>
    <member name="F:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.PictureFormatType.PNG">
      <summary>
            PNG picture format.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.PictureFormatType.JPG">
      <summary>
            JPG picture format.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.PictureExtension">
      <summary>
            Gets the picture file extension (png, jpg).
            </summary>
      <value>
            The picture file extension (png, jpg).
            </value>
      <exception cref="T:System.InvalidOperationException">Occurs when an unknown type is currently set.</exception>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.PictureExtensionMimeType">
      <summary>
            Gets the image mime type.
            </summary>
      <value>
            The image mime type.
            </value>
      <exception cref="T:System.InvalidOperationException">Occurs when an unknown type is currently set.</exception>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.PictureFormat">
      <summary>
            Gets the picture format.
            </summary>
      <value>
            The picture format.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.AncestryId">
      <summary>
            Gets the ancestry identifier.
            </summary>
      <value>
            The ancestry identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.Description">
      <summary>
            Gets the description.
            </summary>
      <value>
            The description.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.IsPublic">
      <summary>
            Gets a value indicating whether this instance is public.
            </summary>
      <value>
        <c>true</c> if this instance is public; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.ParentAncestryId">
      <summary>
            Gets the parent ancestry identifier.
            </summary>
      <value>
            The parent ancestry identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.PlanetCount">
      <summary>
            Gets the planet count.
            </summary>
      <value>
            The planet count.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.RequiredMods">
      <summary>
            Gets the required mods.
            </summary>
      <value>
            The required mods.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.SandboxDetails">
      <summary>
            Gets the sandbox details.
            </summary>
      <value>
            The sandbox details.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.SandboxName">
      <summary>
            Gets the name of the sandbox.
            </summary>
      <value>
            The name of the sandbox.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.Screenshots">
      <summary>
            Gets the screenshots.
            </summary>
      <value>
            The screenshots.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.ValidPhotoChecksums">
      <summary>
            Gets a value indicating whether photos have valid checksums.
            </summary>
      <value>
        <c>true</c> if photos have valid checksums; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.ZipBytes">
      <summary>
            Gets the zip bytes.
            </summary>
      <value>
            The zip bytes.
            </value>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.CreateFromCurrentSandbox(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{UnityEngine.Texture2D})">
      <summary>
            Creates from current sandbox.
            </summary>
      <param name="name">The name.</param>
      <param name="description">The description.</param>
      <param name="isPublic">if set to <c>true</c> [is public].</param>
      <param name="validPhotoChecksums">if set to <c>true</c> then the photo checksums are valid.</param>
      <param name="screenshots">The screen-shots.</param>
      <returns>
            The SandboxFormData for the currently loaded/running sandbox.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.CreateFromCurrentSandbox(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{UnityEngine.Texture2D},System.String,System.String)">
      <summary>
            Creates from current sandbox.
            </summary>
      <param name="name">The name.</param>
      <param name="description">The description.</param>
      <param name="isPublic">if set to <c>true</c> [is public].</param>
      <param name="validPhotoChecksums">if set to <c>true</c> [valid photo checksums].</param>
      <param name="screenshots">The screen-shots.</param>
      <param name="newAncestryId">The new ancestry identifier.</param>
      <param name="parentAncestryId">The parent ancestry identifier.</param>
      <returns>
            The SandboxFormData for the currently loaded/running sandbox.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.LoadFromXml(System.Xml.Linq.XDocument)">
      <summary>
            Loads from XML.
            </summary>
      <param name="sandboxDocument">The sandbox document.</param>
      <returns>The SandboxFormData loaded from the specified XML.</returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.SaveXml(System.String,System.String)">
      <summary>
            Saves the XML.
            </summary>
      <param name="folder">The folder.</param>
      <param name="fileName">Name of the file.</param>
      <returns>The xml.</returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.Create(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{UnityEngine.Texture2D},System.String,System.String)">
      <summary>
            Creates from current sandbox.
            </summary>
      <param name="name">The name.</param>
      <param name="description">The description.</param>
      <param name="isPublic">if set to <c>true</c> [is public].</param>
      <param name="validPhotoChecksums">if set to <c>true</c> [valid photo checksums].</param>
      <param name="screenshots">The screen-shots.</param>
      <param name="newAncestryId">The new ancestry identifier.</param>
      <param name="parentAncestryId">The parent ancestry identifier.</param>
      <returns>
            The SandboxFormData for the currently loaded/running sandbox.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData.SaveScreenshots(System.String)">
      <summary>
            Saves the screenshots.
            </summary>
      <param name="folder">The folder.</param>
    </member>
    <member name="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload">
      <summary>
            Sandbox upload website request handler.
            </summary>
      <seealso cref="T:Assets.Scripts.Sharing.Handlers.IRequestHandler" />
    </member>
    <member name="F:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload._previousAncestryId">
      <summary>
            The old sandbox parent id
            </summary>
    </member>
    <member name="F:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload._updateLocalAncestry">
      <summary>
            Indicates whether the ancestry id of the sandbox being uploaded will be updated and reflected locally.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.#ctor(System.Xml.Linq.XDocument)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload" /> class.
            </summary>
      <param name="sandboxXml">The sandbox XML.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.#ctor(Assets.Scripts.Ui.Sharing.Upload.UploadContentModel)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload" /> class using the specified game state.
            </summary>
      <param name="model">The model.</param>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.Endpoint">
      <summary>
            Gets the website endpoint.
            </summary>
      <value>
            The website endpoint.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.Form">
      <summary>
            Gets the form data to be submitted.
            </summary>
      <value>
            The form data to be submitted.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.IncludeClientData">
      <summary>
            Gets a value indicating whether to include client data such as user, client token, version, etc.
            </summary>
      <value>
        <c>true</c> if client data such as user, client token, version, etc. should be included; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.GetAncestryId(System.String,System.String)">
      <summary>
            Gets the ancestry identifier.
            </summary>
      <param name="gameStateId">The game state identifier.</param>
      <param name="gameStateTag">The game state tag.</param>
      <returns>The ancestry id of the specified game state.</returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.OnCanceled(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the request has been canceled.
            </summary>
      <param name="websiteRequest">The website request.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.OnComplete(Assets.Scripts.Sharing.WebsiteRequest)">
      <summary>
            Called when the operation has completed.
            </summary>
      <param name="request">The website request which performed the operation.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.UpdateAncestryId(System.String)">
      <summary>
            Updates the game state parent.
            </summary>
      <param name="newAncestryId">The parent identifier.</param>
      <returns>
            The previous ancestryId, before being updated
            </returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.UpdateDocumentAncestryId(System.String,System.String)">
      <summary>
            Updates the game state parent in its XML document.
            </summary>
      <param name="gameStateFileLocation">The game state file location.</param>
      <param name="parentId">The parent identifier.</param>
      <returns>The old parentId, before being updated</returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.AddFormData(UnityEngine.WWWForm,Assets.Scripts.Sharing.Handlers.Sandbox.SandboxFormData)">
      <summary>
            Creates the form data.
            </summary>
      <param name="form">The form to add the sandbox data to.</param>
      <param name="formData">The form data.</param>
      <returns>
            The form data for the sandbox upload handler.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.Create(System.Xml.Linq.XDocument)">
      <summary>
            Creates the specified is currently active game state.
            </summary>
      <param name="sandboxDocument">The sandbox document.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.Handlers.Sandbox.SandboxUpload.Create(Assets.Scripts.Ui.Sharing.Upload.UploadContentModel)">
      <summary>
            Creates the specified is currently active game state.
            </summary>
      <param name="model">The model.</param>
    </member>
    <member name="T:Assets.Scripts.Sharing.WebsiteRequest">
      <summary>
            Uploads content to Simple Rockets website.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Sharing.WebsiteRequest._response">
      <summary>
            The response
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.WebsiteRequest.#ctor(System.String,Assets.Scripts.Sharing.Handlers.IRequestHandler)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Sharing.WebsiteRequest" /> class.
            </summary>
      <param name="baseUrl">The base URL of the website.</param>
      <param name="handler">The website request handler.</param>
    </member>
    <member name="T:Assets.Scripts.Sharing.WebsiteRequest.WebsiteRequestEventHandler">
      <summary>
            Delegate for ContentUploader events.
            </summary>
      <param name="request">The website request.</param>
    </member>
    <member name="E:Assets.Scripts.Sharing.WebsiteRequest.Canceled">
      <summary>
            Occurs when the operation has been canceled.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Sharing.WebsiteRequest.Completed">
      <summary>
            Occurs when the operation has completed.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Sharing.WebsiteRequest.Progressed">
      <summary>
            Occurs when the operation has progressed.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.Active">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Sharing.WebsiteRequest" /> is actively processing a request.
            </summary>
      <value>
        <c>true</c> if this <see cref="T:Assets.Scripts.Sharing.WebsiteRequest" /> is actively processing a request; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.BaseUrl">
      <summary>
            Gets the base URL of the web request.
            </summary>
      <value>
            The base URL of the web request.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.EndTime">
      <summary>
            Gets the time the operation completed.
            </summary>
      <value>
            The time the operation completed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.Error">
      <summary>
            Gets the error if one has occurred, otherwise <c>null</c>.
            </summary>
      <value>
            The error if one has occurred, otherwise <c>null</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.IsCanceled">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Sharing.WebsiteRequest" /> is canceled.
            </summary>
      <value>
        <c>true</c> if canceled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.Progress">
      <summary>
            Gets the progress of the current operation.
            </summary>
      <value>
            The progress of the current operation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.RequestHandler">
      <summary>
            Gets the request handler.
            </summary>
      <value>
            The request handler.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.Response">
      <summary>
            Gets the response.
            </summary>
      <value>
            The response.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.ResponseBytes">
      <summary>
            Gets the bytes returned from the request.
            </summary>
      <value>
            The bytes returned from the request.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.ResponseText">
      <summary>
            Gets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.StartTime">
      <summary>
            Gets time the operation started.
            </summary>
      <value>
            The time the operation started.
            </value>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.Success">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Sharing.WebsiteRequest" /> has succeeded.
            </summary>
      <value>
        <c>true</c> if success; otherwise, <c>false</c>.
            </value>
      <exception cref="T:System.InvalidOperationException">An operation has not been completed.</exception>
    </member>
    <member name="P:Assets.Scripts.Sharing.WebsiteRequest.CurrentRequest">
      <summary>
            Gets or sets the currently in-progress upload request, or <c>null</c> if there is none active.
            </summary>
      <value>
            The currently in-progress upload request, or <c>null</c> if there is none active.
            </value>
    </member>
    <member name="M:Assets.Scripts.Sharing.WebsiteRequest.Cancel">
      <summary>
            Cancels this request.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.WebsiteRequest.SendRequest">
      <summary>
            Sends the website request.
            </summary>
      <exception cref="T:System.InvalidOperationException">An operation is already in progress</exception>
    </member>
    <member name="M:Assets.Scripts.Sharing.WebsiteRequest.AddUserData(UnityEngine.WWWForm)">
      <summary>
            Adds the user data.
            </summary>
      <param name="form">The form.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.WebsiteRequest.SubmitAndProcessResponse">
      <summary>
            Submits the form and processes the response.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.WebsiteRequest.Update">
      <summary>
            Updates the current request.
            </summary>
      <returns>
        <c>true</c> if the web action is still in progress, otherwise <c>false</c>.</returns>
    </member>
    <member name="T:Assets.Scripts.Sharing.ZipHelper">
      <summary>
            Provides a standard ZIP interface to wrap whatever zip implementation we are currently using.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Sharing.ZipHelper.CompressionLevel">
      <summary>
            The compression level
            </summary>
    </member>
    <member name="F:Assets.Scripts.Sharing.ZipHelper._disposedValue">
      <summary>
            Used to detect redundant dispose calls.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Sharing.ZipHelper._tempFileName">
      <summary>
            The file name for the temp zip file.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Sharing.ZipHelper._tempFullyQualified">
      <summary>
            The fully qualified file location for the temp zip file.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Sharing.ZipHelper" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:Assets.Scripts.Sharing.ZipHelper" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Sharing.ZipHelper.TempFolder">
      <summary>
            Gets the temporary folder.
            </summary>
      <value>
            The temporary folder.
            </value>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.CleanTempFolder">
      <summary>
            Cleans the temporary folder.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.AddTextFile(System.String,System.String)">
      <summary>
            Adds the text file.
            </summary>
      <param name="fileName">Name of the file.</param>
      <param name="text">The text.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.AddXml(System.String,System.Xml.Linq.XDocument)">
      <summary>
            Adds the XML document to the
            </summary>
      <param name="fileName">Name of the file.</param>
      <param name="doc">The document.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.AddXml(System.String,System.Xml.Linq.XElement)">
      <summary>
            Adds the XML document to the
            </summary>
      <param name="fileName">Name of the file.</param>
      <param name="doc">The document.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.AddXmlFile(System.String,System.String)">
      <summary>
            Adds the XML file.
            </summary>
      <param name="fileName">Name of the file.</param>
      <param name="xml">The XML.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.AddXmlRange(System.Collections.Generic.Dictionary{System.String,System.Xml.Linq.XDocument})">
      <summary>
            Adds the XML documents to the zip file.
            </summary>
      <param name="values">The xml file name/value pairs.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.AddXmlRange(System.Collections.Generic.Dictionary{System.String,System.Xml.Linq.XElement})">
      <summary>
            Adds the XML documents to the zip file.
            </summary>
      <param name="values">The xml file name/value pairs.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.GetBytes">
      <summary>
            Gets the bytes from the zip file.
            </summary>
      <returns>
            The zip file's bytes.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.Save(System.String)">
      <summary>
            Saves the zip file to the file system.
            </summary>
      <param name="fullyQualifiedPath">The fully qualified path to write the zip file to.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.AddFileBytes(System.Byte[],System.String)">
      <summary>
            Adds the file bytes.
            </summary>
      <param name="bytes">The bytes.</param>
      <param name="fileName">Name of the file.</param>
    </member>
    <member name="M:Assets.Scripts.Sharing.ZipHelper.CleanTemporary">
      <summary>
            Cleans up any temporary files created during the course of zip creation.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Social.Achievements.AchievementManagerScript">
      <summary>
            The achievement manager.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Social.Achievements.AchievementManagerScript.EmptyAchievementList">
      <summary>
            An empty list of IAchievements.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Social.Achievements.AchievementManagerScript._disabled">
      <summary>
            A value indicating whether or not achievements are disabled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Social.Achievements.AchievementManagerScript._achievementDatabase">
      <summary>
            The achievement database for the game.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Social.Achievements.AchievementManagerScript._achievements">
      <summary>
            The achievements loaded from the social platform.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.#ctor">
      <summary>
            Prevents a default instance of the <see cref="T:Assets.Scripts.Social.Achievements.AchievementManagerScript" /> class from being created.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Social.Achievements.AchievementManagerScript.Disabled">
      <summary>
            Gets a value indicating whether achievements are disabled for this game session.
            </summary>
      <value>
        <c>true</c> if disabled achievements are disabled for this game session; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Social.Achievements.AchievementManagerScript.Achievements">
      <summary>
            Gets the achievement database for the game.
            </summary>
      <value>
            The achievement database for the game.
            </value>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.Create(UnityEngine.GameObject)">
      <summary>
            Creates the achievement manager script.
            </summary>
      <param name="parent">The parent object.</param>
      <returns>The achievement manager script reference.</returns>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.DisableAchievements">
      <summary>
            Disables achievements for this game session.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.GetAchievement(Assets.Packages.SocialPlatforms.Achievements.AchievementKey)">
      <summary>
            Gets the specified achievement.
            </summary>
      <param name="achievement">The achievement to get.</param>
      <returns>The specified achievement or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.GetAchievementInfo(Assets.Packages.SocialPlatforms.Achievements.AchievementKey)">
      <summary>
            Gets the specified achievement information.
            </summary>
      <param name="achievement">The achievement for which to get info.</param>
      <returns>The specified achievement information or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.HasUnlocked(Assets.Packages.SocialPlatforms.Achievements.AchievementKey)">
      <summary>
            Determines whether the specified achievement has been unlocked.
            </summary>
      <param name="achievement">The achievement for which to check.</param>
      <returns>
            A boolean value indicating whether or not the achievement has been unlocked.
            A value of <c>null</c> indicates an unknown result because the data is not currently available.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.IncrementAchievement(Assets.Packages.SocialPlatforms.Achievements.AchievementKey,System.Int32,System.Boolean)">
      <summary>
            Increments the achievement by the specified amount.
            </summary>
      <param name="achievement">The achievement to increment.</param>
      <param name="incrementAmount">The increment amount.</param>
      <param name="showProgress">If set to <c>true</c> achievement progress will be shown to the user.</param>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.IncrementAchievement(Assets.Packages.SocialPlatforms.Achievements.AchievementKey,System.Single,System.Boolean)">
      <summary>
            Increments the achievement by the specified amount.
            </summary>
      <param name="achievement">The achievement to increment.</param>
      <param name="incrementAmount">The increment amount.</param>
      <param name="showProgress">If set to <c>true</c> achievement progress will be shown to the user.</param>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.LoadAchievements">
      <summary>
            Loads the achievements from the social platform.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.UnlockAchievement(Assets.Packages.SocialPlatforms.Achievements.AchievementKey)">
      <summary>
            Unlocks the specified achievement.
            </summary>
      <param name="achievement">The achievement to unlock.</param>
    </member>
    <member name="T:Assets.Scripts.Social.Achievements.AchievementManagerScript.DisableHelper">
      <summary>
            Make it trickier for the user to re-enable achievements via the dev console.
            At this point in time, I don't think the dev console can find static classes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Social.Achievements.AchievementManagerScript.DisableHelper._disabled">
      <summary>
            A value indicating whether or not achievements are disabled.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Social.Achievements.AchievementManagerScript.DisableHelper.Disabled">
      <summary>
            Gets a value indicating whether achievements are disabled for this game session.
            </summary>
      <value>
        <c>true</c> if disabled achievements are disabled for this game session; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Social.Achievements.AchievementManagerScript.DisableHelper.DisableAchievements">
      <summary>
            Disables achievements for this game session.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Social.SocialPlatformManagerScript">
      <summary>
            The game object responsible for the management of the current social platform (if any).
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="P:Assets.Scripts.Social.SocialPlatformManagerScript.SteamManager">
      <summary>
            Gets the Steam manager if available.
            </summary>
      <value>
            The Steam manager if available.
            </value>
    </member>
    <member name="P:Assets.Scripts.Social.SocialPlatformManagerScript.AchievementManager">
      <summary>
            Gets the achievement manager.
            </summary>
      <value>
            The achievement manager.
            </value>
    </member>
    <member name="M:Assets.Scripts.Social.SocialPlatformManagerScript.Create(UnityEngine.GameObject)">
      <summary>
            Creates the social platform manager script.
            </summary>
      <param name="parent">The parent object.</param>
      <returns>The social platform manager script reference.</returns>
    </member>
    <member name="M:Assets.Scripts.Social.SocialPlatformManagerScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Social.SocialPlatformManagerScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Social.SocialPlatformManagerScript.OnGameWebCallback(System.Object,Assets.Packages.SocialPlatforms.Steam.Events.GameWebCallbackEventArgs)">
      <summary>
            Called when a game web callback is received.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:Assets.Packages.SocialPlatforms.Steam.Events.GameWebCallbackEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Social.SocialPlatformManagerScript.OnNewLaunchParameters(System.Object,Assets.Packages.SocialPlatforms.Steam.Events.NewLaunchParametersEventArgs)">
      <summary>
            Called when new launch parameters are received.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:Assets.Packages.SocialPlatforms.Steam.Events.NewLaunchParametersEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.SolarSystem.SolarSystemFileData">
      <summary>
            A class containing functionality related to solar system IO.
            </summary>
      <seealso cref="T:ModApi.SolarSystem.ISolarSystemFileData" />
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemFileData.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.SolarSystem.SolarSystemFileData" /> class.
            </summary>
      <param name="path">The file path of the solar system data.</param>
    </member>
    <member name="P:Assets.Scripts.SolarSystem.SolarSystemFileData.DataPath">
      <summary>
            Gets the file path for the solar system data.
            </summary>
      <value>
            The file path for the solar system data.
            </value>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemFileData.FileExists(System.String,System.String)">
      <summary>
            Determines if the specified file exists in the solar system data folder.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <param name="path">The path of the file relative to the solar system XML.</param>
      <returns>
        <c>true</c> if the file exists, <c>false</c> otherwise.
            </returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemFileData.GetPath(System.String)">
      <summary>
            Gets the solar system data path.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <returns>The solar system data path.</returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemFileData.GetPath(System.String,System.String)">
      <summary>
            Gets the solar system data path for the specified file.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <param name="path">The file path relative to the solar system data path.</param>
      <returns>The solar system data path.</returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemFileData.LoadTexture(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Determines if the specified file exists in the solar system data folder.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <param name="path">The path of the file relative to the solar system XML.</param>
      <param name="mipmaps">A value indicating whether the loaded texture should have mipmaps.</param>
      <param name="linear">A value indicating whether the loaded texture should be considered to be in linear color space.</param>
      <param name="markNonReadable">If <c>true</c>, the texture will be marked non-readable.</param>
      <param name="ignoreFileNotFound">If <c>true</c>, this will return <c>null</c>
            if the file does not exist rather than throwing an exception.</param>
      <returns>
            The texture that was loaded or <c>null</c> if it could not be loaded.
            </returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemFileData.SaveTexture(System.String,System.String,UnityEngine.Texture2D)">
      <summary>
            Saves the texture in the solar system data folder.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <param name="path">The path of the file relative to the solar system XML.</param>
      <param name="texture">The texture to be saved.</param>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemFileData.EnsureDirectoryExists(System.String)">
      <summary>
            Ensures the solar system data directory exists.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
    </member>
    <member name="T:Assets.Scripts.SolarSystem.SolarSystemGameFileData">
      <summary>
            A class containing functionality related to solar system game data IO.
            </summary>
      <seealso cref="T:Assets.Scripts.SolarSystem.SolarSystemFileData" />
      <seealso cref="T:ModApi.SolarSystem.ISolarSystemGameFileData" />
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemGameFileData.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.SolarSystem.SolarSystemGameFileData" /> class.
            </summary>
      <param name="path">The file path of the solar system data.</param>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemGameFileData.GenerateCubemaps(ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Generates the cubemaps for the specified planet.
            </summary>
      <param name="planetNode">The planet for which to generate the cubemaps.</param>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemGameFileData.GetPlanetColorCubemap(System.String,System.String,System.Int32)">
      <summary>
            Gets the planet color cubemap.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <param name="planetName">Name of the planet.</param>
      <param name="size">The size of the cubemap. (The texture width of a single face).</param>
      <returns>
            The planet color cubemap or <c>null</c> if it could not be found or loaded.
            </returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemGameFileData.GetPlanetColorCubemap(ModApi.Flight.Sim.IPlanetNode,System.Int32)">
      <summary>
            Gets the planet color cubemap, generating if it can not be found.
            </summary>
      <param name="planet">The planet for which to get the cubemap.</param>
      <param name="size">The size of the cubemap. (The texture width of a single face).</param>
      <returns>
            The planet color cubemap
            </returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemGameFileData.GetPlanetNormalCubemap(System.String,System.String,System.Int32)">
      <summary>
            Gets the planet normal cubemap.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <param name="planetName">Name of the planet.</param>
      <param name="size">The size of the cubemap. (The texture width of a single face).</param>
      <returns>
            The planet normal cubemap or <c>null</c> if it could not be found or loaded.
            </returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemGameFileData.GetPlanetNormalCubemap(ModApi.Flight.Sim.IPlanetNode,System.Int32)">
      <summary>
            Gets the planet normal cubemap, generating if it can not be found.
            </summary>
      <param name="planet">The planet for which to get the cubemap.</param>
      <param name="size">The size of the cubemap. (The texture width of a single face).</param>
      <returns>
            The planet normal cubemap
            </returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemGameFileData.Upgrade(System.Version,System.Version)">
      <summary>
            Performs any necessary version upgrades to the game data.
            </summary>
      <param name="previousVersion">The previous version.</param>
      <param name="currentVersion">The current version.</param>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemGameFileData.GetPlanetCubemapPath(System.String,System.String,System.Boolean,System.Int32)">
      <summary>
            Gets the planet cubemap path.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <param name="planetName">Name of the planet.</param>
      <param name="color">If set to <c>true</c> then get the color cubemap path, otherwise get the normal cubemap path.</param>
      <param name="size">The size of the cubemap. (The texture width of a single face).</param>
      <returns>
            The path for the specified planet cubemap.
            </returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemGameFileData.GetPlanetCubemapPath(System.String,System.String,System.Boolean)">
      <summary>
            Gets the planet cubemap path.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <param name="planetName">Name of the planet.</param>
      <param name="color">If set to <c>true</c> then get the color cubemap path, otherwise get the normal cubemap path.</param>
      <returns>
            The path for the specified planet cubemap.
            </returns>
    </member>
    <member name="T:Assets.Scripts.SolarSystem.SolarSystemManager">
      <summary>
            Provides methods for managing solar system IO.
            </summary>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemManager.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.SolarSystem.SolarSystemManager" /> class.
            </summary>
      <param name="userDataFolder">The solar system folder under user data.</param>
      <param name="gameDataFolder">The solar system folder under game data.</param>
    </member>
    <member name="P:Assets.Scripts.SolarSystem.SolarSystemManager.GameData">
      <summary>
            Gets the solar system game data.
            </summary>
      <value>
            The solar system game data.
            </value>
    </member>
    <member name="P:Assets.Scripts.SolarSystem.SolarSystemManager.UserData">
      <summary>
            Gets the solar system user data.
            </summary>
      <value>
            The solar system user data.
            </value>
    </member>
    <member name="T:Assets.Scripts.SolarSystem.SolarSystemUserFileData">
      <summary>
            A class containing functionality related to solar system user data IO.
            </summary>
      <seealso cref="T:Assets.Scripts.SolarSystem.SolarSystemFileData" />
      <seealso cref="T:ModApi.SolarSystem.ISolarSystemUserFileData" />
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemUserFileData.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.SolarSystem.SolarSystemUserFileData" /> class.
            </summary>
      <param name="path">The file path of the solar system data.</param>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemUserFileData.GetSolarSystemPath(System.String)">
      <summary>
            Gets the solar system path.
            </summary>
      <param name="solarSystemId">The solar system identifier.</param>
      <returns>
            The solar system path.
            </returns>
    </member>
    <member name="M:Assets.Scripts.SolarSystem.SolarSystemUserFileData.GetSolarSystemXml(System.String)">
      <summary>
            Gets the solar system XML.
            </summary>
      <param name="solarSystemId">The ID of the solar system.</param>
      <returns>
            The solar system XML.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Startup.SingleInstanceServerScript">
      <summary>
            Script that ensures only a single instance of the game are running on Windows.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Startup.SingleInstanceServerScript.Port">
      <summary>
            The port for IPC.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Startup.SingleInstanceServerScript._client">
      <summary>
            The client
            </summary>
    </member>
    <member name="F:Assets.Scripts.Startup.SingleInstanceServerScript._commandLineArguments">
      <summary>
            The command line arguments
            </summary>
    </member>
    <member name="F:Assets.Scripts.Startup.SingleInstanceServerScript._server">
      <summary>
            The server
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.SingleInstanceServerScript.Initialize(System.String)">
      <summary>
            Initializes the specified starting URL parameters.
            </summary>
      <param name="commandLineArguments">The command line arguments.</param>
    </member>
    <member name="M:Assets.Scripts.Startup.SingleInstanceServerScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.SingleInstanceServerScript.OnApplicationQuit">
      <summary>
            Called when the application is quitting.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.SingleInstanceServerScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.SingleInstanceServerScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.SingleInstanceServerScript.OnConnected(UnityEngine.Networking.NetworkMessage)">
      <summary>
            Called when the client is connected to the server
            </summary>
      <param name="netMsg">The net MSG.</param>
    </member>
    <member name="M:Assets.Scripts.Startup.SingleInstanceServerScript.OnReceivedOpenUrlMessage(UnityEngine.Networking.NetworkMessage)">
      <summary>
            Called when the server has received an open URL message.
            </summary>
      <param name="netMsg">The net MSG.</param>
    </member>
    <member name="T:Assets.Scripts.Startup.SingleInstanceServerScript.OpenUrlMessage">
      <summary>
            The message sent to the single instance server from the client.
            </summary>
      <seealso cref="T:UnityEngine.Networking.MessageBase" />
    </member>
    <member name="F:Assets.Scripts.Startup.SingleInstanceServerScript.OpenUrlMessage.MessageId">
      <summary>
            The message identifier
            </summary>
    </member>
    <member name="F:Assets.Scripts.Startup.SingleInstanceServerScript.OpenUrlMessage.Url">
      <summary>
            The URL
            </summary>
    </member>
    <member name="T:Assets.Scripts.Startup.StartupScript">
      <summary>
            Initializes the game on startup.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="M:Assets.Scripts.Startup.StartupScript.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.StartupScript.Start">
      <summary>
            Use this for initialization.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.StartupScript.GetCommandLineArgs">
      <summary>
            Gets the command line arguments.
            </summary>
      <returns>The command line arguments.</returns>
    </member>
    <member name="M:Assets.Scripts.Startup.StartupScript.InitializeSingleInstanceServer(System.String)">
      <summary>
            Initializes the single instance server.
            </summary>
      <param name="commandLineArgument">The command line argument.</param>
    </member>
    <member name="T:Assets.Scripts.Startup.StartupScript.CommandLineArgs">
      <summary>
            A class containing command line argument values.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Startup.StartupScript.CommandLineArgs.Arg">
      <summary>
            Gets or sets the main command line argument (such as a file path to a craft).
            </summary>
      <value>
            The main command line argument (such as a file path to a craft)
            </value>
    </member>
    <member name="P:Assets.Scripts.Startup.StartupScript.CommandLineArgs.OriginalArguments">
      <summary>
            Gets or sets the original command line arguments.
            </summary>
      <value>
            The original command line arguments.
            </value>
    </member>
    <member name="P:Assets.Scripts.Startup.StartupScript.CommandLineArgs.Uninstall">
      <summary>
            Gets or sets a value indicating whether the command line arguments requested an app uninstall.
            </summary>
      <value>
        <c>true</c> if the command line arguments requested an app uninstall; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Startup.StartupScript.CommandLineArgs.CheckSocialPlatformLaunchParameters">
      <summary>
            Checks the social platform launch parameters, updating this instance as needed.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Startup.StartupUtilities">
      <summary>
            Utilities for startup process.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.StartupUtilities.CleanFileAssociation(System.String)">
      <summary>
            Cleans the file association for the game.
            </summary>
      <param name="extension">The extension of the file type for which to update associations.</param>
    </member>
    <member name="M:Assets.Scripts.Startup.StartupUtilities.GetDeviceInformation">
      <summary>
            Gets the device information.
            </summary>
      <returns>The device information.</returns>
    </member>
    <member name="M:Assets.Scripts.Startup.StartupUtilities.LogDeviceInformation">
      <summary>
            Logs the device information.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.StartupUtilities.UpdateFileAssociation(System.String)">
      <summary>
            Updates the file association for the game.
            </summary>
      <param name="extension">The extension of the file type for which to update associations.</param>
    </member>
    <member name="M:Assets.Scripts.Startup.StartupUtilities.Uninstall">
      <summary>
            Uninstalls the application's game data (leaving user data in place).
            </summary>
    </member>
    <member name="T:Assets.Scripts.Startup.UrlHandlerScript">
      <summary>
            The URL handler script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Startup.UrlHandlerScript.CraftUrlScheme">
      <summary>
            The craft URL scheme.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Startup.UrlHandlerScript.SandboxUrlScheme">
      <summary>
            The sandbox URL scheme.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Startup.UrlHandlerScript.PendingUrl">
      <summary>
            Gets the pending URL.
            </summary>
      <value>
            The pending URL.
            </value>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.HandleUrl(System.String)">
      <summary>
            Handles the URL, which can be a URL scheme, or a file location.
            </summary>
      <param name="url">The URL.</param>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.Start">
      <summary>
            Unity Start method.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.GetDownloadTypeFriendlyName(System.String)">
      <summary>
            Gets the friendly download type name.
            </summary>
      <param name="url">The URL.</param>
      <returns>The friendly name.</returns>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.GetUrlIdFromWebUrl(System.String,System.String)">
      <summary>
            Gets the URL identifier from web URL.
            </summary>
      <param name="route">The route to check for. This would be "/c/" for crafts, etc.</param>
      <param name="webUrl">The web URL.</param>
      <returns>The Url Id or null if there is none.</returns>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.IsCraft(System.String)">
      <summary>
            Determines whether the specified URL is craft.
            </summary>
      <param name="url">The URL.</param>
      <returns>
        <c>true</c> if the specified URL is craft; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.IsSandbox(System.String)">
      <summary>
            Determines whether the specified URL is sandbox.
            </summary>
      <param name="url">The URL.</param>
      <returns>
        <c>true</c> if the specified URL is sandbox; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.GetUrlFromClipboard">
      <summary>
            Attempts to get a valid URL from the web url in the clipboard.
            </summary>
      <returns>The craft URL ID, or null if it is invalid.</returns>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.OnSceneLoaded(System.Object,ModApi.Scenes.Events.SceneEventArgs)">
      <summary>
            Called when a scene is loaded.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Scenes.Events.SceneEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.ProcessFile(System.String)">
      <summary>
            Processes the file.
            </summary>
      <param name="path">The file URL.</param>
    </member>
    <member name="M:Assets.Scripts.Startup.UrlHandlerScript.ProcessUrl(System.String)">
      <summary>
            Processes the URL.
            </summary>
      <param name="url">The URL.</param>
    </member>
    <member name="T:Assets.Scripts.State.FlightState">
      <summary>
            Contains data about the state of the flight scene.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightState._craftNodes">
      <summary>
            The craft nodes
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightState._data">
      <summary>
            The flight state data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightState._deletedCraftsPending">
      <summary>
            The list of deleted crafts pending until the next update.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightState._solarSystemData">
      <summary>
            The solar system data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.#ctor(ModApi.State.IFlightStateData)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.State.FlightState" /> class.
            </summary>
      <param name="flightStateData">The flight state data.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.#ctor(Assets.Scripts.State.FlightStateData)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.State.FlightState" /> class.
            </summary>
      <param name="flightStateData">The flight state data.</param>
    </member>
    <member name="T:Assets.Scripts.State.FlightState.CraftNodeDelegate">
      <summary>
            Delegate for an event that takes a CraftNode argument.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="E:Assets.Scripts.State.FlightState.CraftNodeAdded">
      <summary>
            Occurs when [craft node added].
            </summary>
    </member>
    <member name="E:Assets.Scripts.State.FlightState.CraftNodeRemoved">
      <summary>
            Occurs when [craft node removed].
            </summary>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.CraftNodes">
      <summary>
            Gets the crafts.
            </summary>
      <value>
            The crafts.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.FlightStateRequiredMods">
      <summary>
            Gets the required mods that apply to the whole flight state.
            </summary>
      <value>
            The required mods that apply to the whole flight state.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.MapView">
      <summary>
            Gets the map view data.
            </summary>
      <value>
            The map view data.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.Path">
      <summary>
            Gets the path of the flight state.
            </summary>
      <value>
            The path of the flight state.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.PlayerNodeId">
      <summary>
            Gets or sets the player node identifier.
            </summary>
      <value>
            The player node identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.RootNode">
      <summary>
            Gets the root node.
            </summary>
      <value>
            The root node.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.SolarSystemData">
      <summary>
            Gets the solar system data.
            </summary>
      <value>
            The solar system data.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.SolarSystemId">
      <summary>
            Gets the solar system identifier used by this flight state.
            </summary>
      <value>
            The solar system identifier used by this flight state.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.SolarSystemXmlPath">
      <summary>
            Gets the solar system XML path.
            </summary>
      <value>
            The solar system XML path.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightState.Time">
      <summary>
            Gets or sets the time.
            </summary>
      <value>
            The time.
            </value>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.GetChildPlanet(ModApi.Flight.Sim.IPlanetNode,System.String)">
      <summary>
            Gets the planet child planet by the specified name.
            </summary>
      <param name="parent">The parent planet node.</param>
      <param name="name">The name to search for.</param>
      <returns>The planet child planet by the specified name, or <c>null</c> if one cannot be found.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.LoadPlanetNodes(Assets.Scripts.State.FlightStateData,ModApi.Planet.SolarSystemDataScript)">
      <summary>
            Loads the planet nodes.
            </summary>
      <param name="flightStateData">The flight state data.</param>
      <param name="solarSystemData">The solar system data.</param>
      <returns>The list of planet nodes.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.AddCraft(Assets.Scripts.Flight.Sim.CraftNode)">
      <summary>
            Adds the craft node.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.CheckCraftXmlExists(System.Int32)">
      <summary>
            Checks if the craft XML exists.
            </summary>
      <param name="nodeId">The node ID.</param>
      <returns>True if it exists, otherwise false.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.Destroy">
      <summary>
            Destroys the flight state.
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.GenerateXml">
      <summary>
            Generates an XML document from the current flight state.
            </summary>
      <returns>The XML document generated from the current flight state</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.GetCraftNode(System.Int32)">
      <summary>
            Gets the craft node.
            </summary>
      <param name="nodeId">The craft node identifier.</param>
      <returns>The craft node or null if could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.LoadCraftXml(System.Int32)">
      <summary>
            Loads the craft XML.
            </summary>
      <param name="nodeId">The craft node identifier.</param>
      <returns>The craft XML.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.OnInitialLaunch(Assets.Scripts.Craft.CraftScript)">
      <summary>
            Called when the craft script has finished loading for its initial launch.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.ProcessDestroyedCraftNodes">
      <summary>
            Processes the craft nodes that have been marked as destroyed. Craft nodes
            will not be removed from the flight scene if they are still loaded in the
            game view.
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.ProcessNodeTree(System.Action{ModApi.Flight.Sim.INode})">
      <summary>
            Processess all nodes in the flight state with the specified action.
            </summary>
      <param name="nodeAction">The node action.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.Save(System.Boolean)">
      <summary>
            Saves this instance.
            </summary>
      <param name="overridePreventSave">if set to <c>true</c> then override the prevent save flag and save anyway.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.SaveCraftXml(System.Int32,System.Xml.Linq.XElement)">
      <summary>
            Saves the craft XML.
            </summary>
      <param name="nodeId">The craft node identifier.</param>
      <param name="craftXml">The craft XML.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.GetCraftNode(System.Int32,ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Resursive method to find the craft node with the specified ID.
            </summary>
      <param name="nodeId">The craft node identifier.</param>
      <param name="planetNode">The planet node.</param>
      <returns>The craft node or null if could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.InitializeNodeHierarchy(ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Initializes the node hierarchy.
            </summary>
      <param name="node">The node.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.OnPlayerCraftActiveCommandPodChanged(ModApi.Craft.ICraftNode)">
      <summary>
            Called when the player-craft's active command pod has changed.
            </summary>
      <param name="craftNode">The craft node.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.ProcessNodeTree(ModApi.Flight.Sim.IPlanetNode,System.Action{ModApi.Flight.Sim.INode})">
      <summary>
            Recursively processes the node tree with the specified action.
            </summary>
      <param name="node">The node.</param>
      <param name="nodeAction">The node action.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightState.SynchronizeData">
      <summary>
            Synchronizes the state of the flight state and all nodes with their respective data objects.
            </summary>
    </member>
    <member name="T:Assets.Scripts.State.ModelType">
      <summary>
            Defines the data model types which can be used for flight state data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.ModelType.Static">
      <summary>
            Flight data will not change to reflect the game's current state.  Can be used to create "read-only" states.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.ModelType.Dynamic">
      <summary>
            Flight data will be continuously updated to reflect the current state of the game.
            </summary>
    </member>
    <member name="T:Assets.Scripts.State.FlightStateData">
      <summary>
            The flight state data, which contains the serializable properties of the flight state.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightStateData.CurrentXmlVersion">
      <summary>
            The current XML version
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightStateData._craftNodes">
      <summary>
            The craft nodes
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightStateData._deletedCraftsPending">
      <summary>
            The crafts that have been deleted since the last save.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightStateData._mapViewData">
      <summary>
            The map view data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightStateData._planetNodes">
      <summary>
            The planet nodes
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.State.FlightStateData" /> class.
            </summary>
      <param name="path">The path.</param>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.CraftNodes">
      <summary>
            Gets the craft nodes.
            </summary>
      <value>
            The craft nodes.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.DirectoryPath">
      <summary>
            Gets the full path of the directory containing the flight state XML file.
            </summary>
      <value>
            The directory path.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.FlightStateRequiredMods">
      <summary>
            Gets the required mods that apply to the whole flight state.
            </summary>
      <value>
            The required mods that apply to the whole flight state.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.MapView">
      <summary>
            Gets the map view data.
            </summary>
      <value>
            The map view data.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.ModelType">
      <summary>
            Gets the current flight data model type currently being used.
            </summary>
      <value>
            The current flight data model type currently being used.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.NextNodeId">
      <summary>
            Gets or sets the next node identifier.
            </summary>
      <value>
            The next node identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.Path">
      <summary>
            Gets the path.
            </summary>
      <value>
            The path.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.PlanetNodes">
      <summary>
            Gets the planet nodes.
            </summary>
      <value>
            The planet nodes.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.PlayerNodeId">
      <summary>
            Gets or sets the player node identifier.
            </summary>
      <value>
            The player node identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.PreventSave">
      <summary>
            Gets a value indicating whether saving of the flight state is prevented (i.e. readonly).
            </summary>
      <value>
        <c>true</c> if saving of the flight state is prevented (i.e. readonly); otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.SolarSystemId">
      <summary>
            Gets the solar system identifier.
            </summary>
      <value>
            The solar system identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.FlightStateData.Time">
      <summary>
            Gets or sets the time.
            </summary>
      <value>
            The time.
            </value>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.AddCraftNode(ModApi.Scripts.State.ICraftNodeData)">
      <summary>
            Adds the craft node.
            </summary>
      <param name="craftNodeData">The craft node data.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.AddPlanetNodeData(ModApi.Flight.Sim.PlanetNodeData)">
      <summary>
            Adds the planet node data.
            </summary>
      <param name="planetNodeData">The planet node data.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.CheckCraftXmlExists(System.Int32)">
      <summary>
            Checks if the craft XML exists.
            </summary>
      <param name="nodeId">The node ID.</param>
      <returns>True if it exists, otherwise false.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.GenerateXml">
      <summary>
            Generates an XML document from the current flight data.
            </summary>
      <returns>The XML document generated from the current flight data.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.GetAllRequiredMods">
      <summary>
            Gets the collection of all required mods required by any portion of this flight state.
            </summary>
      <returns>The collection of all required mods required by any portion of this flight state.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.GetCraftNodeData(System.Int32)">
      <summary>
            Gets the craft node data.
            </summary>
      <param name="id">The craft node identifier.</param>
      <returns>The requested craft node data or <c>null</c> if it could not be found.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.GetPlanetNodeData(System.String)">
      <summary>
            Gets the planet node data.
            </summary>
      <param name="name">The name.</param>
      <returns>The data or null if it is not in the list.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.LoadCraftXml(System.Int32)">
      <summary>
            Loads the craft XML.
            </summary>
      <param name="nodeId">The node ID.</param>
      <returns>The craft XML.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.ReassignCraftNodeData(System.Int32,ModApi.Scripts.State.ICraftNodeData)">
      <summary>
            Reassigns the craft node data.
            </summary>
      <param name="nodeId">The node identifier.</param>
      <param name="newCraftNodeData">The new craft node data.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.RemoveCraftNode(ModApi.Scripts.State.ICraftNodeData)">
      <summary>
            Removes the craft node data from the flight state.
            </summary>
      <param name="craftNodeData">The craft node data.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.Save">
      <summary>
            Saves the flight state data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.SaveCraftXml(System.Int32,System.Xml.Linq.XElement)">
      <summary>
            Saves the craft XML.
            </summary>
      <param name="nodeId">The craft node identifier.</param>
      <param name="craftXml">The craft XML.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.SwitchModelType(Assets.Scripts.State.ModelType,System.Collections.Generic.IEnumerable{System.ValueTuple{Assets.Scripts.Flight.Sim.CraftNode,ModApi.Scripts.State.ICraftNodeData}})">
      <summary>
            Switches the data model types currently being used.
            </summary>
      <param name="newType">The new data model type to use.</param>
      <param name="craftNodes">The craft nodes.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.DeleteCraftXmlFile(System.Int32)">
      <summary>
            Deletes the craft XML from the file system.
            </summary>
      <param name="nodeId">The node ID.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateData.GetCraftXmlFilePath(System.Int32)">
      <summary>
            Gets the path for the craft's XML.
            </summary>
      <param name="nodeId">The node ID.</param>
      <returns>The path.</returns>
    </member>
    <member name="T:Assets.Scripts.State.FlightStateXmlVersionUpdater">
      <summary>
            A class used for upgrading flight state XML from previous XML versions.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.FlightStateXmlVersionUpdater._upgradeActions">
      <summary>
            The upgrade actions, one for each XML version (plus the dummy action at index zero).
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateXmlVersionUpdater.Upgrade(System.Xml.Linq.XElement,System.Int32)">
      <summary>
            Upgrades the flight state XML to the latest version.
            </summary>
      <param name="xml">The flight state XML to upgrade.</param>
      <param name="version">The version of the XML being upgraded.</param>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateXmlVersionUpdater.UpgradeOriginalPlanetName(System.String)">
      <summary>
            Upgrades the name of the planet from its original name to its new name.
            </summary>
      <param name="planetName">Name of the planet.</param>
      <returns>The upgraded planet name.</returns>
    </member>
    <member name="M:Assets.Scripts.State.FlightStateXmlVersionUpdater.UpgradeToVersion2(System.Xml.Linq.XElement)">
      <summary>
            Upgrades the XML to version 2.
            </summary>
      <param name="xml">The XML to upgrade.</param>
    </member>
    <member name="T:Assets.Scripts.State.GameState">
      <summary>
            Contains all persistent information about the player's game, including their company
            information, flight state, etc.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameState.CurrentXmlVersion">
      <summary>
            The current XML version
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameState.LaunchLocationsFileName">
      <summary>
            The launch locations file name.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameState._rootPath">
      <summary>
            The root path of the game state.
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.GameState.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.State.GameState" /> class.
            </summary>
      <param name="id">The identifier.</param>
      <param name="rootPath">The root path.</param>
    </member>
    <member name="T:Assets.Scripts.State.GameState.GameStateMode">
      <summary>
            The game state modes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameState.GameStateMode.Career">
      <summary>
            The career mode.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameState.GameStateMode.Sandbox">
      <summary>
            The sandbox mode.
            </summary>
    </member>
    <member name="P:Assets.Scripts.State.GameState.AvailableFunds">
      <summary>
            Gets or sets the currently available funds for the company.
            </summary>
      <value>
            The available funds.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.CompanyName">
      <summary>
            Gets or sets the name of the company.
            </summary>
      <value>
            The name of the company.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.CreatedDateTime">
      <summary>
            Gets or sets the created date time.
            </summary>
      <value>
            The created date time.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.Id">
      <summary>
            Gets the identifier.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.LastModifiedDateTime">
      <summary>
            Gets or sets the last modified date time.
            </summary>
      <value>
            The last modified date time.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.LaunchLocations">
      <summary>
            Gets the launch locations.
            </summary>
      <value>
            The launch locations.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.LaunchLocationsPath">
      <summary>
            Gets the launch locations path.
            </summary>
      <value>
            The launch locations path.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.Mode">
      <summary>
            Gets or sets the current game state mode.
            </summary>
      <value>
            The mode.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.Parent">
      <summary>
            Gets or sets the parent game state, or null if it is OC.
            </summary>
      <value>
            The parent game state if this was originally downloaded from the website, or null if it is original.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.SelectedCraftDesignId">
      <summary>
            Gets or sets the currently selected craft ID.
            </summary>
      <value>
            The selected craft ID.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.SelectedCraftNodeId">
      <summary>
            Gets or sets the selected craft node identifier. Used when the player is
            resuming an active craft in flight.
            </summary>
      <value>
            The selected craft node identifier.
            </value>
    </member>
    <member name="P:Assets.Scripts.State.GameState.SelectedLaunchLocation">
      <summary>
            Gets or sets the currently selected launch location.
            </summary>
      <value>
            The selected launch location.
            </value>
    </member>
    <member name="M:Assets.Scripts.State.GameState.LoadFlightState">
      <summary>
            Loads the flight state and returns it.
            </summary>
      <returns>The flight state.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameState.LoadFlightStateData">
      <summary>
            Loads the flight state XML and returns it.
            </summary>
      <returns>The flight state XML.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameState.Save">
      <summary>
            Saves the GameState XML to file.
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.GameState.SaveLaunchLocations">
      <summary>
            Saves the launch locations to the launch locations file.
            </summary>
    </member>
    <member name="T:Assets.Scripts.State.GameStateManager">
      <summary>
            Provides methods to manage game states. Game states are organized in the following manner:
            /UserData/GameStates/{GameStateId}/{Tag}
            The {GameStateId} folder contains a set of game states, with different tags. The current game
            state for the set is tagged Active. More tags may be used when the player makes a quicksave or
            when a checkpoint is saved prior to the player launching. For example, with a game state ID of ABC123,
            the path structure would look like this:
            /UserData/GameStates/ABC123/Active
            /UserData/GameStates/ABC123/QuickSave
            /UserData/GameStates/ABC123/PreFlight
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameStateManager.DefaultGameState">
      <summary>
            The default game state
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameStateManager._gameStatesFolder">
      <summary>
            The game states folder.
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.State.GameStateManager" /> class.
            </summary>
      <param name="gameStatesFolder">The game states folder.</param>
    </member>
    <member name="P:Assets.Scripts.State.GameStateManager.GameStatesBaseFolder">
      <summary>
            Gets the game states base folder.
            </summary>
      <value>
            The game states base folder.
            </value>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.CheckGameStateSetExists(System.String)">
      <summary>
            Checks if the game state exists.
            </summary>
      <param name="id">The game state ID.</param>
      <returns>True if it exists, otherwise false.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.CheckGameStateTagExists(System.String,System.String)">
      <summary>
            Checks if the game state tag exists.
            </summary>
      <param name="id">The game state ID.</param>
      <param name="tag">The tag.</param>
      <returns>True if it exists, otherwise false.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.CopyGameStateSet(System.String,System.String)">
      <summary>
            Copies the game state set from the source to the target. If the target game state set already exists
            it will be overwritten.
            </summary>
      <param name="sourceId">The source game state.</param>
      <param name="targetId">The target game state.</param>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.CopyGameStateTag(System.String,System.String,System.String)">
      <summary>
            Copies the game state tag from the source to the target. If the target game state tag already exists
            it will be overwritten.
            </summary>
      <param name="id">The game state ID.</param>
      <param name="sourceTag">The source tag.</param>
      <param name="targetTag">The target tag.</param>
      <exception cref="T:System.Exception">Source game state tag does not exist.</exception>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.CreateGameStateTag(System.String,System.String)">
      <summary>
            Copies the active game state tag to the specified target tag.
            If the tag already exists, it will be moved to the Temp tag.
            </summary>
      <param name="id">The game state ID.</param>
      <param name="tag">The tag. For example, "QuickSave".</param>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.CreateNewGameStateSet">
      <summary>
            Creates a new set of Game States with a unique ID.
            </summary>
      <returns>The new game state.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.DeleteGameStateSet(System.String)">
      <summary>
            Deletes the game state.
            </summary>
      <param name="id">The game state ID.</param>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.DeleteGameStateTag(System.String,System.String)">
      <summary>
            Deletes the game state tag.
            </summary>
      <param name="id">The game state ID.</param>
      <param name="tag">The tag.</param>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.GetFlightStatePath(System.String,System.String)">
      <summary>
            Gets the flight state file path for the specified game state.
            </summary>
      <param name="gameStateId">The game state identifier.</param>
      <param name="tag">The game state tag.</param>
      <returns>The file path to the requested flight state file.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.GetFlightStateXml(System.String,System.String)">
      <summary>
            Gets the flight state XML for the specified game state.
            </summary>
      <param name="gameStateId">The game state identifier.</param>
      <param name="tag">The game state tag.</param>
      <returns>The XML for the specified game state.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.GetGameStateFileName(System.String,System.String)">
      <summary>
            Gets the game state XML file name associated with the specified id and tag.
            </summary>
      <param name="gameStateId">The game state id.</param>
      <param name="tag">The game state tag.</param>
      <returns>
            The game state XML file name associated with the specified id and tag.
            </returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.GetGameStateIds(System.Boolean)">
      <summary>
            Gets the game state IDs.
            </summary>
      <param name="excludeReservedIds">if set to <c>true</c> [exclude reserved ids].</param>
      <returns>The game state IDs.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.GetGameStateTagPath(System.String,System.String)">
      <summary>
            Gets the path of the tagged game state with the specified ID.
            </summary>
      <param name="id">The game state ID.</param>
      <param name="tag">The tag.</param>
      <returns>
            The tagged path.
            </returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.GetGameStateXml(System.String,System.String)">
      <summary>
            Loads the game state XML associated with the specified id and tag.
            </summary>
      <param name="gameStateId">The game state id.</param>
      <param name="tag">The game state tag.</param>
      <returns>
            The game state XML associated with the specified id and tag.
            </returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.GetPhotoLibraryPath(System.String)">
      <summary>
            Gets the photo library path for the game state with the specified ID.
            </summary>
      <param name="gameStateId">The game state identifier.</param>
      <returns>The game state photo library path.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.LoadGameState(System.String)">
      <summary>
            Loads the active game state for the game state with the specified ID.
            </summary>
      <param name="id">The game state ID.</param>
      <returns>The game state, or null if it failed to load.</returns>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.RestoreGameStateTag(System.String,System.String)">
      <summary>
            Restores the specified game state tag to the active game state tag.
            </summary>
      <param name="id">The game state ID.</param>
      <param name="tag">The tag. For example, "QuickSave".</param>
    </member>
    <member name="M:Assets.Scripts.State.GameStateManager.GetGameStateSetPath(System.String)">
      <summary>
            Gets the path for the game state with the specified ID. This path will be
            the parent of all tags for the game state.
            </summary>
      <param name="id">The game state ID.</param>
      <returns>The game state path.</returns>
    </member>
    <member name="T:Assets.Scripts.State.GameStateManager.Tags">
      <summary>
            The available game state tags.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameStateManager.Tags.Active">
      <summary>
            The currently active game state tag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameStateManager.Tags.PreFlight">
      <summary>
            The game state as it was prior to entering flight.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameStateManager.Tags.QuickSave">
      <summary>
            The quick save game state tag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameStateManager.Tags.Temp">
      <summary>
            The temp backup game state tag. Used when copying game state tags. If a copy fails,
            this will likely contain the previous target.
            </summary>
    </member>
    <member name="T:Assets.Scripts.State.GameStateXmlVersionUpdater">
      <summary>
            A class used for upgrading game state XML from previous XML versions.
            </summary>
    </member>
    <member name="F:Assets.Scripts.State.GameStateXmlVersionUpdater._upgradeActions">
      <summary>
            The upgrade actions, one for each XML version (plus the dummy action at index zero).
            </summary>
    </member>
    <member name="M:Assets.Scripts.State.GameStateXmlVersionUpdater.Upgrade(Assets.Scripts.State.GameState,System.Xml.Linq.XElement,System.Int32)">
      <summary>
            Upgrades the game state XML to the latest version.
            </summary>
      <param name="gameState">State of the game.</param>
      <param name="xml">The game state XML to upgrade.</param>
      <param name="version">The version of the XML being upgraded.</param>
    </member>
    <member name="M:Assets.Scripts.State.GameStateXmlVersionUpdater.UpgradeToVersion2(System.Xml.Linq.XElement,Assets.Scripts.State.GameState)">
      <summary>
            Upgrades the XML to version 2.
            </summary>
      <param name="xml">The XML to upgrade.</param>
      <param name="gameState">The game state.</param>
    </member>
    <member name="M:Assets.Scripts.State.GameStateXmlVersionUpdater.UpgradeToVersion3(System.Xml.Linq.XElement,Assets.Scripts.State.GameState)">
      <summary>
            Upgrades the XML to version 3.
            </summary>
      <param name="xml">The XML to upgrade.</param>
      <param name="gameState">The game state..</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.AsynchronousJobProcessor">
      <summary>
            The class that manages the asynchronous processing of quad sphere related jobs.
            </summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._lock">
      <summary>
            The synchronization lock.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._completedJobs">
      <summary>
            The collection of jobs that have been asynchronously processed and are ready to be completed on the main thread.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._completedJobsTemp">
      <summary>
            A second collection used for swapping with the completed jobs collection during processing.
            This helps save time spent in the lock and avoids the need for newing up lists and creating garbage.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._createQuadDataFactory">
      <summary>
            The factory method responsible for creating instances of <see cref="T:Assets.Scripts.Terrain.CreateQuadData" />.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._disposed">
      <summary>
            A value indicating whether or not this instance has been disposed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._jobsBeingProcessed">
      <summary>
            The number of jobs currently being processed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._pendingJobs">
      <summary>
            The collection of jobs that have been queued but not yet processed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._quadSplitJobPool">
      <summary>
            The job pool. Jobs are reused to relieve pressure on the garbage collector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._resetEvent">
      <summary>
            The reset event that allows us to put the background workers to sleep and wake them up when new jobs become available.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._uninitializedQuadSplitJobs">
      <summary>
            The uninitialized quad split jobs that are waiting for a job from the pool to become available.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.AsynchronousJobProcessor._workers">
      <summary>
            The collection of background worker threads that will asynchronously process jobs.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.#ctor(System.Func{Assets.Scripts.Terrain.CreateQuadData})">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.AsynchronousJobProcessor" /> class.
            </summary>
      <param name="createQuadDataFactory">The factory method for creating new instances of <see cref="T:Assets.Scripts.Terrain.CreateQuadData" />.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.GetCompletedJobCount">
      <summary>
            Gets the completed job count.
            </summary>
      <returns>The completed job count.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.GetJobCount">
      <summary>
            Gets the pending, processing, and completed job count.
            </summary>
      <returns>The pending, processing, and completed job count.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.GetPendingJobCount">
      <summary>
            Gets the pending job count.
            </summary>
      <returns>The pending job count.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.ProcessCompletedJobs(System.Int32)">
      <summary>
            Processes the jobs that have been completed.
            This should be run from the main thread and performs the necessary main thread steps
            needed to finish the splitting of the quad (like creating the game objects).
            </summary>
      <param name="maxJobs">The maximum number of jobs that can be completed this frame.</param>
      <returns>The number of jobs completed.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.ProcessUninitializedJobs">
      <summary>
            Processes the uninitialized jobs.
            This will take uninitialized jobs and add them to the pending
            job list as long as jobs from the job pool are available.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.QueueQuadRefreshJob(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Queues a quad refresh job for the specified quad.
            </summary>
      <param name="quad">The quad to be refreshed.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.QueueQuadSplitJob(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Queues a quad split job for the specified quad.
            </summary>
      <param name="quad">The quad to be split.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.CancelUninitializedJob(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Cancels the uninitialized job.
            </summary>
      <param name="quad">The quad job to cancel.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.ProcessJobs(System.Object,System.ComponentModel.DoWorkEventArgs)">
      <summary>
            The core loop for the background workers.
            This is where they pull jobs from the queue and process them.
            This should continue to run for the lifetime of the quad sphere.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.ComponentModel.DoWorkEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.AsynchronousJobProcessor.ProcessJobsCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
      <summary>
            The callback that runs when a background worker has completed.
            Background workers should only complete when the quad sphere is being destroyed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.CreateQuadData">
      <summary>
            A class containing data used when creating new quads.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.AboveSeaLevel">
      <summary>
            A value indicating if the quad has points above sea level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.AxisAlignedBoundingBox">
      <summary>
            The axis-aligned bounding box for the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.AxisAlignedBoundingBoxRotation">
      <summary>
            The rotation used to create the axis-aligned bounding box for the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.BelowSeaLevel">
      <summary>
            A value indicating if the quad has points below sea level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.BoundingBoxSamplePoints">
      <summary>
            The bounding box sample points array.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.Center">
      <summary>
            The center of the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.HasTerrain">
      <summary>
            A value indicating if the quad has terrain.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.HasWater">
      <summary>
            A value indicating if the quad has water.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.Matrix">
      <summary>
            A matrix.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.PerformanceTracker">
      <summary>
            The performance tracker used to track performance related to the generation of quad data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.Position">
      <summary>
            The position of the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.Rotation">
      <summary>
            The rotation of the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.Scale">
      <summary>
            The scale of the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.SubdivisionLevel">
      <summary>
            The subdivision level of the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.Tangents1">
      <summary>
            The first temporary vector used in the calculation of mesh tangents.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.Tangents2">
      <summary>
            The second temporary vector used in the calculation of mesh tangents.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.TerrainMeshData">
      <summary>
            The terrain mesh data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.TerrainPoints">
      <summary>
            A collection of terrain point samples.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.UVCenter">
      <summary>
            The UV center of the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.UVSize">
      <summary>
            The UV size of the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.CreateQuadData.WaterMeshData">
      <summary>
            The water mesh data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.CreateQuadData.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.CreateQuadData" /> class.
            </summary>
      <param name="terrainQuadVertexCount">The terrain quad vertex count.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.CreateQuadData.SphereNormal">
      <summary>
            Gets the sphere normal.
            </summary>
      <value>
            The sphere normal.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.CreateQuadData.InitializePerformanceTracker">
      <summary>
            Initializes the performance tracker.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric">
      <summary>
            An object representing the performance of a segment of code related to the generation of quads.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric._average">
      <summary>
            The average time in milliseconds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric._max">
      <summary>
            The max time in milliseconds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric._min">
      <summary>
            The min time in milliseconds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric._percentageOfTotal">
      <summary>
            The percentage of the total time in milliseconds.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric._samples">
      <summary>
            The number of samples taken.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric._totalTime">
      <summary>
            The total time in milliseconds.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric.Average">
      <summary>
            Gets the average time in milliseconds.
            </summary>
      <value>
            The average time in milliseconds.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric.Max">
      <summary>
            Gets the maximum time in milliseconds.
            </summary>
      <value>
            The maximum time in milliseconds.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric.Min">
      <summary>
            Gets the minimum time in milliseconds.
            </summary>
      <value>
            The minimum time in milliseconds.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric.PercentageOfTotal">
      <summary>
            Gets the percentage of the total time in milliseconds.
            </summary>
      <value>
            The percentage of the total time in milliseconds.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric.Samples">
      <summary>
            Gets the number of samples taken.
            </summary>
      <value>
            The number of samples taken.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric.TotalTime">
      <summary>
            Gets the total time in milliseconds.
            </summary>
      <value>
            The total time in milliseconds.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetric.Update(System.Double,System.Double)">
      <summary>
            Updates the performance metric with a new sample time.
            </summary>
      <param name="time">The new sample time.</param>
      <param name="totalTime">The total time used to calculate the percentage.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics">
      <summary>
            An object representing a collection of performance metrics related to the generation of quad data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._lock">
      <summary>
            The synchronization lock.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._allQuadData">
      <summary>
            The performance metric for generating all quad data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._boundingBox">
      <summary>
            The performance metric for generating the bounding box.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._normalsAndColor">
      <summary>
            The performance metric for generating normal and color data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._skirtData">
      <summary>
            The performance metric for generating skirt data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._terrainMeshData">
      <summary>
            The performance metric for generating terrain mesh data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._terrainPoints">
      <summary>
            The performance metric for generating terrain points data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._terrainTangents">
      <summary>
            The performance metric for generating terrain tangents.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._vertexColor">
      <summary>
            The performance metric for generating vertex color data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._vertexData">
      <summary>
            The performance metric for generating vertex data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._warmup">
      <summary>
            A value indicating if the warm-up period is occurring in which performance metrics are not updated.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._waterMeshData">
      <summary>
            The performance metric for generating water mesh data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics._waterTangents">
      <summary>
            The performance metric for generating water tangents.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.AllQuadData">
      <summary>
            Gets the performance metric for generating all quad data.
            </summary>
      <value>
            The performance metric for generating all quad data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.BoundingBox">
      <summary>
            Gets the performance metric for generating the bounding box.
            </summary>
      <value>
            The performance metric for generating the bounding box.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.NormalsAndColor">
      <summary>
            Gets the performance metric for generating normal and color data.
            </summary>
      <value>
            The performance metric for generating normal and color data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.SkirtData">
      <summary>
            Gets the performance metric for generating skirt data.
            </summary>
      <value>
            The performance metric for generating skirt data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.TerrainMeshData">
      <summary>
            Gets the performance metric for generating terrain mesh data.
            </summary>
      <value>
            The performance metric for generating terrain mesh data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.TerrainPoints">
      <summary>
            Gets the performance metric for generating terrain points data.
            </summary>
      <value>
            The performance metric for generating terrain points data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.TerrainTangents">
      <summary>
            Gets the performance metric for generating terrain tangents.
            </summary>
      <value>
            The performance metric for generating terrain tangents.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.VertexColor">
      <summary>
            Gets the performance metric for generating vertex color data.
            </summary>
      <value>
            The performance metric for generating vertex color data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.VertexData">
      <summary>
            Gets the performance metric for generating vertex data.
            </summary>
      <value>
            The performance metric for generating vertex data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.WaterMeshData">
      <summary>
            Gets the performance metric for generating water mesh data.
            </summary>
      <value>
            The performance metric for generating water mesh data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.WaterTangents">
      <summary>
            Gets the performance metric for generating water tangents.
            </summary>
      <value>
            The performance metric for generating water tangents.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.Update(Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker)">
      <summary>
            Updates the performance metrics for the specified performance tracker.
            </summary>
      <param name="performanceTracker">The performance tracker.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceMetrics.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker">
      <summary>
            An object used for tracking performance of quad generation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._allQuadData">
      <summary>
            The stopwatch used for timing how long it takes to generate all the quad data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._boundingBox">
      <summary>
            The stopwatch used for timing how long it takes to generate the bounding box.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._normalsAndColor">
      <summary>
            The stopwatch used for timing how long it takes to generate normal and color data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._skirtData">
      <summary>
            The stopwatch used for timing how long it takes to generate skirt data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._terrainMeshData">
      <summary>
            The stopwatch used for timing how long it takes to generate terrain mesh data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._terrainPoints">
      <summary>
            The stopwatch used for timing how long it takes to generate terrain points data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._terrainTangents">
      <summary>
            The stopwatch used for timing how long it takes to generate terrain tangents.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._vertexColor">
      <summary>
            The stopwatch used for timing how long it takes to generate vertex color data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._vertexData">
      <summary>
            The stopwatch used for timing how long it takes to generate vertex data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._waterMeshData">
      <summary>
            The stopwatch used for timing how long it takes to generate water mesh data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker._waterTangents">
      <summary>
            The stopwatch used for timing how long it takes to generate water tangents.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker" /> class.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.AllQuadDataStart">
      <summary>
            Starts the stopwatch for all quad data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.AllQuadDataStop">
      <summary>
            Stops the stopwatch for all quad data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.AllQuadDataTime">
      <summary>
            Gets the time in milliseconds that it too to generate all quad data.
            </summary>
      <returns>The time in milliseconds that it too to generate all quad data.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.BoundingBoxStart">
      <summary>
            Starts the stopwatch for bounding box generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.BoundingBoxStop">
      <summary>
            Stops the stopwatch for bounding box generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.BoundingBoxTime">
      <summary>
            Gets the time in milliseconds that it too to generate the bounding box.
            </summary>
      <returns>The time in milliseconds that it too to generate the bounding box.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.NormalsAndColorStart">
      <summary>
            Starts the stopwatch for normal and color data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.NormalsAndColorStop">
      <summary>
            Stops the stopwatch for normal and color data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.NormalsAndColorTime">
      <summary>
            Gets the time in milliseconds that it too to generate normal and color data.
            </summary>
      <returns>The time in milliseconds that it too to generate normal and color data.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.ResetAll">
      <summary>
            Resets the performance tracker.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.SkirtDataStart">
      <summary>
            Starts the stopwatch for skirt data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.SkirtDataStop">
      <summary>
            Stops the stopwatch for skirt data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.SkirtDataTime">
      <summary>
            Gets the time in milliseconds that it too to generate skirt data.
            </summary>
      <returns>The time in milliseconds that it too to generate skirt data.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.TerrainMeshDataStart">
      <summary>
            Starts the stopwatch for terrain mesh data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.TerrainMeshDataStop">
      <summary>
            Stops the stopwatch for terrain mesh data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.TerrainMeshDataTime">
      <summary>
            Gets the time in milliseconds that it too to generate terrain mesh data.
            </summary>
      <returns>The time in milliseconds that it too to generate terrain mesh data.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.TerrainPointsStart">
      <summary>
            Starts the stopwatch for terrain points data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.TerrainPointsStop">
      <summary>
            Stops the stopwatch for terrain points data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.TerrainPointsTime">
      <summary>
            Gets the time in milliseconds that it too to generate terrain points data.
            </summary>
      <returns>The time in milliseconds that it too to generate terrain points data.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.TerrainTangentsStart">
      <summary>
            Starts the stopwatch for terrain mesh tangents generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.TerrainTangentsStop">
      <summary>
            Stops the stopwatch for terrain mesh tangents generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.TerrainTangentsTime">
      <summary>
            Gets the time in milliseconds that it too to generate terrain tangents.
            </summary>
      <returns>The time in milliseconds that it too to generate terrain tangents.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.VertexColorStart">
      <summary>
            Starts the stopwatch for vertex color data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.VertexColorStop">
      <summary>
            Stops the stopwatch for vertex color data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.VertexColorTime">
      <summary>
            Gets the time in milliseconds that it too to generate vertex color data.
            </summary>
      <returns>The time in milliseconds that it too to generate vertex color data.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.VertexDataStart">
      <summary>
            Starts the stopwatch for vertex data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.VertexDataStop">
      <summary>
            Stops the stopwatch for vertex data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.VertexDataTime">
      <summary>
            Gets the time in milliseconds that it too to generate vertex data.
            </summary>
      <returns>The time in milliseconds that it too to generate vertex data.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.WaterMeshDataStart">
      <summary>
            Starts the stopwatch for water mesh data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.WaterMeshDataStop">
      <summary>
            Stops the stopwatch for water mesh data generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.WaterMeshDataTime">
      <summary>
            Gets the time in milliseconds that it too to generate water mesh data.
            </summary>
      <returns>The time in milliseconds that it too to generate water mesh data.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.WaterTangentsStart">
      <summary>
            Starts the stopwatch for water mesh tangents generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.WaterTangentsStop">
      <summary>
            Stops the stopwatch for water mesh tangents generation.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.WaterTangentsTime">
      <summary>
            Gets the time in milliseconds that it too to generate water tangents.
            </summary>
      <returns>The time in milliseconds that it too to generate water tangents.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Diagnostics.QuadGenerationPerformanceTracker.Initialize">
      <summary>
            Initializes the performance tracker.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.GameObjectPool`1">
      <summary>
            A pool for game objects.
            </summary>
      <typeparam name="T">The type of the primary component of the pooled game object.</typeparam>
      <seealso cref="T:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1" />
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.GameObjectPool`1._poolRoot">
      <summary>
            The root game object under which all pooled items are stored when available in the pool.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.GameObjectPool`1.#ctor(System.String,System.String,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Pooling.GameObjectPool`1" /> class.
            </summary>
      <param name="poolName">The name of the pool.</param>
      <param name="prefabPath">The prefab path for the pool objects.</param>
      <param name="initialSize">The initial size of the pool.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.GameObjectPool`1.Prefab">
      <summary>
            Gets or sets the prefab for the game objects in the pool.
            </summary>
      <value>
            The prefab for the game objects in the pool.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.GameObjectPool`1.ReturnItem(Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem{`0})">
      <summary>
            Returns the item to the pool.
            If the item is pending destruction, it will be destroyed instead of being returned to the pool.
            </summary>
      <param name="item">The item to return.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.GameObjectPool`1.CreateItem">
      <summary>
            Creates a new pool item.
            </summary>
      <returns>
            The new pool item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.GameObjectPool`1.Destroy(`0)">
      <summary>
            Destroys the specified pool item.
            </summary>
      <param name="item">The item to destroy.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.PhysicsQuadPool">
      <summary>
            A pool for physics quads.
            </summary>
      <seealso cref="!:Assets.Scripts.Terrain.QuadSpherePoolManager.GameObjectPool&lt;UnityEngine.MeshCollider&gt;" />
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.PhysicsQuadPool.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Pooling.PhysicsQuadPool" /> class.
            </summary>
      <param name="initialSize">The initial size of the pool.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool">
      <summary>
            A pool for quad mesh data objects.
            </summary>
      <seealso cref="!:Assets.Scripts.Terrain.QuadSpherePoolManager.QuadSpherePool&lt;Assets.Scripts.Terrain.QuadMeshData&gt;" />
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool._asyncReturnLock">
      <summary>
            The lock object used to protect asynchronous returns to the pool.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool._asyncReturns">
      <summary>
            The list used as a temporary holding area for pool items that are returned asynchronously.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.#ctor(System.Int32,ModApi.Planet.QuadMeshDataFlags,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool" /> class.
            </summary>
      <param name="vertexCount">The vertex count of the meshes using the pooled data objects.</param>
      <param name="requiredData">The required data for quad mesh data objects in the pool.</param>
      <param name="initialSize">The initial size of the pool.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.RequiredData">
      <summary>
            Gets the required data for quad mesh data objects in the pool.
            </summary>
      <value>
            The required data for quad mesh data objects in the pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.VertexCount">
      <summary>
            Gets the vertex count of the quads using the data objects from the pool.
            </summary>
      <value>
            The vertex count of the quads using the data objects from the pool.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.GetItem">
      <summary>
            Gets an item from the pool.
            </summary>
      <returns>
            The requested item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.Grow(System.Int32)">
      <summary>
            Grows the pool by the specified amount.
            </summary>
      <param name="count">The number of items by which to grow the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.Initialize(System.Int32,ModApi.Planet.QuadMeshDataFlags)">
      <summary>
            Initializes the pool based on the specified data.
            If the new vertex count does not match the old count, the pool will be resized
            to zero elements to clear out old pool items with the incorrect vertex counts.
            The pool may also be resized to zero elements if the new required data indicates
            that more data that was previously required is needed.
            </summary>
      <param name="vertexCount">The vertex count.</param>
      <param name="requiredData">The required data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.ReturnItemAsync(Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem{Assets.Scripts.Terrain.QuadMeshData})">
      <summary>
            Asynchronously queues the specified item to be returned to the pool.
            </summary>
      <param name="item">The item to return.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.CreateItem">
      <summary>
            Creates a new pool item.
            </summary>
      <returns>
            The new pool item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.Destroy(Assets.Scripts.Terrain.QuadMeshData)">
      <summary>
            Destroys the specified pool item.
            </summary>
      <param name="item">The item to destroy.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshDataPool.ProcessAsyncReturns">
      <summary>
            Processes the asynchronous returns (if any).
            This should be called from the main thread only.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.QuadMeshPool">
      <summary>
            A base class for mesh pools.
            </summary>
      <seealso cref="!:Assets.Scripts.Terrain.QuadSpherePoolManager.QuadSpherePool&lt;UnityEngine.Mesh&gt;" />
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadMeshPool._emptyColorLists">
      <summary>
            A collection (keyed by vertex count) of empty lists used to initialize color data on meshes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadMeshPool._emptyVector2Lists">
      <summary>
            A collection (keyed by vertex count) of empty lists used to initialize vector2 data on meshes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadMeshPool._emptyVector3Lists">
      <summary>
            A collection (keyed by vertex count) of empty lists used to initialize vector3 data on meshes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadMeshPool._emptyVector4Lists">
      <summary>
            A collection (keyed by vertex count) of empty lists used to initialize vector4 data on meshes.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshPool.#ctor(Assets.Scripts.Terrain.Pooling.QuadMeshPoolType,System.Int32,ModApi.Planet.QuadMeshDataFlags,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Pooling.QuadMeshPool" /> class.
            </summary>
      <param name="type">The type of the mesh pool.</param>
      <param name="vertexCount">The vertex count of the meshes.</param>
      <param name="requiredData">The required data for quad meshes in the pool.</param>
      <param name="initialSize">The initial size of the uninitialized pool.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadMeshPool.MeshName">
      <summary>
            Gets the name of the meshes in the pool.
            </summary>
      <value>
            The name of the meshes in the pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadMeshPool.PoolType">
      <summary>
            Gets the type of the pool.
            </summary>
      <value>
            The type of the pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadMeshPool.RequiredData">
      <summary>
            Gets the required data for quad mesh data objects in the pool.
            </summary>
      <value>
            The required data for quad mesh data objects in the pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadMeshPool.VertexCount">
      <summary>
            Gets the vertex count of the meshes in the pool.
            </summary>
      <value>
            The vertex count of the meshes in the pool.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshPool.Initialize(System.Int32,ModApi.Planet.QuadMeshDataFlags)">
      <summary>
            Initializes the pool based on the specified data.
            If the new vertex count does not match the old count, the pool will be resized
            to zero elements to clear out old pool items with the incorrect vertex counts.
            The pool may also be resized to zero elements if the new required data indicates
            that more data that was previously required is needed.
            </summary>
      <param name="vertexCount">The new vertex count.</param>
      <param name="requiredData">The required data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshPool.CreateItem">
      <summary>
            Creates a new pool item.
            </summary>
      <returns>
            The new pool item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshPool.Destroy(UnityEngine.Mesh)">
      <summary>
            Destroys the specified pool item.
            </summary>
      <param name="item">The item to destroy.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshPool.InitializeMesh(UnityEngine.Mesh)">
      <summary>
            Initializes the mesh.
            </summary>
      <param name="mesh">The mesh to initialize.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshPool.GetEmptyColorList(System.Int32)">
      <summary>
            Gets an empty list used to initialize color data on a mesh.
            </summary>
      <param name="vertexCount">The vertex count.</param>
      <returns>An empty list used to initialize color data on a mesh.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshPool.GetEmptyVector2List(System.Int32)">
      <summary>
            Gets an empty list used to initialize vector2 data on a mesh.
            </summary>
      <param name="vertexCount">The vertex count.</param>
      <returns>An empty list used to initialize vector2 data on a mesh.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshPool.GetEmptyVector3List(System.Int32)">
      <summary>
            Gets an empty list used to initialize vector3 data on a mesh.
            </summary>
      <param name="vertexCount">The vertex count.</param>
      <returns>An empty list used to initialize vector3 data on a mesh.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadMeshPool.GetEmptyVector4List(System.Int32)">
      <summary>
            Gets an empty list used to initialize vector4 data on a mesh.
            </summary>
      <param name="vertexCount">The vertex count.</param>
      <returns>An empty list used to initialize vector4 data on a mesh.</returns>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.QuadMeshPoolType">
      <summary>
            An enumeration defining the different quad mesh pool types.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadMeshPoolType.Terrain">
      <summary>
            The terrain mesh pool.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadMeshPoolType.Water">
      <summary>
            The water mesh pool.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadMeshPoolType.Physics">
      <summary>
            The physics mesh pool.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.QuadScriptPool">
      <summary>
            A pool for quad script objects.
            </summary>
      <seealso cref="!:Assets.Scripts.Terrain.Pooling.QuadSpherePool&lt;Assets.Scripts.Terrain.QuadScript&gt;" />
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadScriptPool.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Pooling.QuadScriptPool" /> class.
            </summary>
      <param name="initialSize">The initial size of the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadScriptPool.CreateItem">
      <summary>
            Creates a new pool item.
            </summary>
      <returns>
            The new pool item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadScriptPool.Destroy(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Destroys the specified pool item.
            </summary>
      <param name="item">The item to destroy.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.IQuadSpherePool">
      <summary>
            An interface for common quad sphere pool functionality.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.IQuadSpherePool.Size">
      <summary>
            Gets the current size of the pool.
            </summary>
      <value>The current size of the pool.</value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.IQuadSpherePool.TargetSize">
      <summary>
            Gets the target size of the pool.
            </summary>
      <value>The current size of the pool.</value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.IQuadSpherePool.Grow(System.Int32)">
      <summary>
            Grows the pool by the specified amount.
            </summary>
      <param name="count">The number of items by which to grow the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.IQuadSpherePool.Resize(System.Int32)">
      <summary>
            Resizes the pool.
            If the pool is larger than the target size, it will immediately be shrunk to match the target size.
            If the pool is smaller than the target size, it will immediately grow to match the target size.
            </summary>
      <param name="targetSize">The target size of the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.IQuadSpherePool.Resize(System.Int32,System.Int32)">
      <summary>
            Resizes the pool.
            If the pool is larger than the target size, it will immediately be shrunk to match the target size.
            If the pool is smaller than the minimum size, it will immediately grow to match the target size.
            If the pool size is between the minimum and target, nothing will immediately happen with the expectation,
            that the pool will asynchronously grow to reach the target size via another process.
            </summary>
      <param name="targetSize">The target size of the pool.</param>
      <param name="minimumSize">The minimum size of the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.IQuadSpherePool.Shrink(System.Int32)">
      <summary>
            Shrinks the pool by the specified amount.
            </summary>
      <param name="count">The number of items by which to shrink the pool.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1">
      <summary>
            A base class for pools associate with a quad sphere.
            </summary>
      <typeparam name="T">The type of items in the pool.</typeparam>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1._currentPoolItemId">
      <summary>
            The current pool item identifier to be assigned to the next pool item created.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1" /> class.
            </summary>
      <param name="initialSize">The initial size of the pool.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.AvailableSize">
      <summary>
            Gets the current size of the pool of items available to be used.
            </summary>
      <value>
            The current size of the pool of items available to be used.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.Size">
      <summary>
            Gets the current size of the pool.
            </summary>
      <value>
            The current size of the pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.TargetSize">
      <summary>
            Gets or sets the target size of the pool.
            </summary>
      <value>
            The target size of the pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.AvailablePool">
      <summary>
            Gets the available pool.
            </summary>
      <value>
            The available pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.TrackedPool">
      <summary>
            Gets the tracked pool.
            </summary>
      <value>
            The tracked pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.UninitializedPool">
      <summary>
            Gets the uninitialized pool.
            </summary>
      <value>
            The uninitialized pool.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.GetItem">
      <summary>
            Gets an item from the pool.
            </summary>
      <returns>The requested item.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.Grow(System.Int32)">
      <summary>
            Grows the pool by the specified amount.
            </summary>
      <param name="count">The number of items by which to grow the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.Resize(System.Int32)">
      <summary>
            Resizes the pool.
            If the pool is larger than the target size, it will immediately be shrunk to match the target size.
            If the pool is smaller than the target size, it will immediately grow to match the target size.
            </summary>
      <param name="targetSize">The target size of the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.Resize(System.Int32,System.Int32)">
      <summary>
            Resizes the pool.
            If the pool is larger than the target size, it will immediately be shrunk to match the target size.
            If the pool is smaller than the minimum size, it will immediately grow to match the target size.
            If the pool size is between the minimum and target, nothing will immediately happen with the expectation,
            that the pool will asynchronously grow to reach the target size via another process.
            </summary>
      <param name="targetSize">The target size of the pool.</param>
      <param name="minimumSize">The minimum size of the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.ReturnItem(Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem{`0})">
      <summary>
            Returns the item to the pool.
            If the item is pending destruction, it will be destroyed instead of being returned to the pool.
            </summary>
      <param name="item">The item to return.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.ReturnItemAsync(Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem{`0})">
      <summary>
            Returns the item asynchronously to the pool.
            </summary>
      <param name="item">The item to return.</param>
      <exception cref="T:System.NotSupportedException">The pool does not support asynchronous returns.</exception>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.Shrink(System.Int32)">
      <summary>
            Shrinks the pool by the specified amount.
            </summary>
      <param name="count">The number of items by which to shrink the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.CreateItem">
      <summary>
            Creates a new pool item.
            </summary>
      <returns>
            The new pool item.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.CreateNewPoolItem">
      <summary>
            Creates a new pool item wrapper.
            </summary>
      <returns>The new pool item wrapper.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.Destroy(Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem{`0})">
      <summary>
            Destroys the specified item.
            </summary>
      <param name="item">The item to destroy.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.Destroy(`0)">
      <summary>
            Destroys the specified pool item.
            </summary>
      <param name="item">The item to destroy.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePool`1.InitializeNewItem">
      <summary>
            Initializes the new item, adding it to the tracked item pool.
            </summary>
      <returns>The newly initialized item.</returns>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1">
      <summary>
            A wrapper for an item belonging to a pool associated with a quad sphere.
            </summary>
      <typeparam name="T">The type of the pooled item.</typeparam>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1.#ctor(System.Int32,Assets.Scripts.Terrain.Pooling.QuadSpherePool{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1" /> class.
            </summary>
      <param name="id">The pool-unique identifier for the item.</param>
      <param name="pool">The pool associate with this item.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1.Id">
      <summary>
            Gets the pool-unique identifier for the item.
            </summary>
      <value>
            The pool-unique identifier for the item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1.Item">
      <summary>
            Gets or sets the item.
            </summary>
      <value>
            The item.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1.Pool">
      <summary>
            Gets the pool to which this item belongs.
            </summary>
      <value>
            The pool to which this item belongs.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1.State">
      <summary>
            Gets or sets the state of the item.
            </summary>
      <value>
            The state of the item.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1.ReturnToPool">
      <summary>
            Returns the item to the pool.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItem`1.ReturnToPoolAsync">
      <summary>
            Asynchronously returns the item to the pool.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItemState">
      <summary>
            An enumeration defining the different states of a pooled quad sphere item.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItemState.Uninitialized">
      <summary>
            The uninitialized state.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItemState.Ready">
      <summary>
            The ready state.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadSpherePoolItemState.PendingDestruction">
      <summary>
            The pending destruction state.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager">
      <summary>
            A class for managing object pools related to quad spheres.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager._instance">
      <summary>
            The singleton instance of the manager.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager._asyncFillPools">
      <summary>
            The list of pools to be asynchronously filled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager._asyncPoolFillCoroutine">
      <summary>
            The coroutine used for asynchronously filling pools that have not yet reached their target size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager._initialized">
      <summary>
            A value indicating whether or not the pool manager has been initialized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager._quadTriangleCache">
      <summary>
            The quad triangle cache, keyed by vertex count of the quads.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.Instance">
      <summary>
            Gets the singleton instance of the manager.
            </summary>
      <value>
            The singleton instance of the manager.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.PhysicsMeshPool">
      <summary>
            Gets the physics mesh pool.
            </summary>
      <value>
            The physics mesh pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.PhysicsQuadPool">
      <summary>
            Gets the physics quad pool.
            </summary>
      <value>
            The physics quad pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.QuadScriptPool">
      <summary>
            Gets the quad script pool.
            </summary>
      <value>
            The quad script pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.TerrainMeshDataPool">
      <summary>
            Gets the terrain mesh data pool.
            </summary>
      <value>
            The terrain mesh data pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.TerrainMeshPool">
      <summary>
            Gets the terrain mesh pool.
            </summary>
      <value>
            The terrain mesh pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.WaterMeshDataPool">
      <summary>
            Gets the water mesh data pool.
            </summary>
      <value>
            The water mesh data pool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.WaterMeshPool">
      <summary>
            Gets the water mesh pool.
            </summary>
      <value>
            The water mesh pool.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.GetQuadMeshTriangles(System.Int32,System.Boolean)">
      <summary>
            Gets the mesh triangles array for a quad.
            This is cached/shared data and does not come from a pool.
            It should not be modified and does not need returned.
            </summary>
      <param name="vertexCount">The vertex count of the quad.</param>
      <param name="skipEdgeVertices">If set to <c>true</c> then avoid the edge vertices
            when generating the triangle array. Used for physics quads to avoid using the
            skirt vertices from the visual mesh.</param>
      <returns>
            The mesh triangles array for a quad.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.Initialize(Assets.Scripts.Terrain.QuadSphereScript,System.Boolean)">
      <summary>
            Initializes the pool manager for the specified quad sphere.
            </summary>
      <param name="quadSphere">The quad sphere for which to initialize the manager.</param>
      <param name="soiTransition">If set to <c>true</c>, the quad sphere is being initialized due to an SOI transition.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.GenerateQuadTriangles(System.Int32,System.Boolean)">
      <summary>
            Generates the quad triangles.
            </summary>
      <param name="vertsOnEdge">The number of vertices on the edge of the quad.</param>
      <param name="skipEdgeVertices">if set to <c>true</c> then skip edge vertices.</param>
      <returns>
            The quad triangles.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Pooling.QuadSpherePoolManager.FillPoolsAsynchronously">
      <summary>
            Asynchronously fills pools until each one reaches their target size.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadAxisAlignedBoundingBox">
      <summary>
            A structure representing an axis-aligned bounding box for quad sphere quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadAxisAlignedBoundingBox.Max">
      <summary>
            The maximum point of the bounding box.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadAxisAlignedBoundingBox.Min">
      <summary>
            The minimum point of the bounding box.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadAxisAlignedBoundingBox.#ctor(UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.QuadAxisAlignedBoundingBox" /> struct.
            </summary>
      <param name="min">The minimum point of the bounding box.</param>
      <param name="max">The maximum point of the bounding box.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadAxisAlignedBoundingBox.GetSquaredDistanceToClosestPoint(UnityEngine.Vector3d)">
      <summary>
            Gets the squared distance to the closest point on the bounding box from the specified point.
            </summary>
      <param name="p">The point from which to get the bounding box's closest point squared distance.</param>
      <returns>The squared distance to the closest point on the bounding box from the specified point.</returns>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadMeshData">
      <summary>
            A collection of data used to define a quad mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadMeshData.Bounds">
      <summary>
            The bounds for the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadMeshData.Colors">
      <summary>
            The collection of colors for the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadMeshData.Normals">
      <summary>
            The collection of normals for the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadMeshData.Tangents">
      <summary>
            The collection of tangents for the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadMeshData.Uv2s">
      <summary>
            The collection of UV2s for the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadMeshData.Uv3s">
      <summary>
            The collection of UV3s for the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadMeshData.Uv4s">
      <summary>
            The collection of UV4s for the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadMeshData.Uvs">
      <summary>
            The collection of UVs for the mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadMeshData.Vertices">
      <summary>
            The collection of vertices for the mesh.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadMeshData.#ctor(System.Int32,ModApi.Planet.QuadMeshDataFlags)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.QuadMeshData" /> class.
            </summary>
      <param name="vertexCount">The vertex count for the quad mesh.</param>
      <param name="requiredData">The required data.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadRefreshJob">
      <summary>
            A class containing information related to the splitting of a single quad.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRefreshJob.#ctor(System.Func{Assets.Scripts.Terrain.CreateQuadData})">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.QuadRefreshJob" /> class.
            </summary>
      <param name="createQuadDataFactory">The factory method for creating new instances of <see cref="T:Assets.Scripts.Terrain.CreateQuadData" />.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadRefreshJob.Quad">
      <summary>
            Gets the quad being refreshed.
            </summary>
      <value>
            The quad being refreshed.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadRefreshJob.QuadData">
      <summary>
            Gets the quad data.
            </summary>
      <value>
            The quad data.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRefreshJob.CancelJob(System.Boolean)">
      <summary>
            Cancels the job. Called when the last background worker is shutting down. Derived classes
            should release any pooled resources they are holding onto.
            </summary>
      <param name="isMainThread">if set to <c>true</c> then this is being called from the main thread.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRefreshJob.Complete">
      <summary>
            Completes the job. This method will always be called from the main thread.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRefreshJob.Initialize(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Initializes the job.
            </summary>
      <param name="quad">The quad being refreshed.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRefreshJob.Process">
      <summary>
            Performs thread safe processing for the job. This may also be called from the main thread,
            but must be thread safe and capable of being called from a background thread.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadRendererScript">
      <summary>
            A script that manages the renderer for a quad.
            This is primarily used for testing in the editor.
            In final builds, the quadsphere directly invokes DrawMesh, eliminating the need for mesh renderers.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadRendererScript._isCulled">
      <summary>
            A value indicating whether this quad is culled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadRendererScript._quad">
      <summary>
            The quad associated with this renderer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadRendererScript._terrainMesh">
      <summary>
            The terrain mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadRendererScript._terrainRenderer">
      <summary>
            The terrain renderer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadRendererScript._waterMesh">
      <summary>
            The water mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadRendererScript._waterRenderer">
      <summary>
            The water renderer.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadRendererScript.Quad">
      <summary>
            Gets the quad associated with this renderer.
            </summary>
      <value>
            The quad associated with this renderer.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRendererScript.Create(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Creates a renderer for the specified quad.
            </summary>
      <param name="quad">The quad for which to create a renderer.</param>
      <returns>The requested quad renderer.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRendererScript.Destroy(Assets.Scripts.Terrain.QuadRendererScript)">
      <summary>
            Destroys the specified quad renderer.
            </summary>
      <param name="quad">The quad renderer to destroy.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRendererScript.Initialize(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Initializes the renderer for the specified quad.
            </summary>
      <param name="quad">The quad.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRendererScript.RefreshQuad">
      <summary>
            Immediately and synchronously refreshes the quad.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRendererScript.SetVisibility(System.Boolean)">
      <summary>
            Sets the visibility of this quad.
            This will not touch child quads.
            This will also disable the culled flag, regardless of the visibility of the quad.
            </summary>
      <param name="visible">If set to <c>true</c>, this quad will be set to visible.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRendererScript.SetVisibilityAndHideChildren(System.Boolean)">
      <summary>
            Sets the visibility of this quad and hides all child quads.
            This will set the state of all hidden quads to culled.
            If the quad is currently culled, this will do nothing to it or the children.
            </summary>
      <param name="visible">If set to <c>true</c>, this quad will be set to visible.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRendererScript.OnDrawGizmosSelected">
      <summary>
            Used to draw non-pickable gizmos that are only drawn when an object is selected.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadRendererScript.HideAllChildren">
      <summary>
            Hides all child quads, setting their state to culled.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadScript">
      <summary>
            Script for a single quad in a quad sphere.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._children">
      <summary>
            The child quads of this quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._parent">
      <summary>
            The parent quad script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._physicsMesh">
      <summary>
            The physics mesh used by the quad (if any).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._physicsQuad">
      <summary>
            The physics quad associated with this quad (if any).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._poolItem">
      <summary>
            The pool item associated with this quad script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._quadMesh">
      <summary>
            The mesh for the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._subdivisionLevel">
      <summary>
            The subdivision level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._terrainMeshData">
      <summary>
            The terrain mesh data associated with this quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._waterMeshData">
      <summary>
            The water mesh data associated with this quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadScript._waterQuadMesh">
      <summary>
            The water mesh for the quad.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.QuadScript" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.Children">
      <summary>
            Gets the child quads of this quad.
            </summary>
      <value>
            The child quads of this quad.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.ModApi#Planet#IQuadSphereQuad#Children">
      <summary>
            Gets the children.
            </summary>
      <value>
            The children.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.HasWater">
      <summary>
            Gets a value indicating whether this instance has water.
            </summary>
      <value>
        <c>true</c> if this instance has water; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.IsPendingReturnToPool">
      <summary>
            Gets or sets a value indicating whether this quad needs to be returned to the quad pool when the opportunity presents itself.
            </summary>
      <value>
        <c>true</c> if this quad needs to be returned to the quad pool when the opportunity presents itself; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.IsRefreshPending">
      <summary>
            Gets or sets a value indicating whether this quad has a refresh that is currently pending.
            </summary>
      <value>
        <c>true</c> if this quad has a refresh that is currently pending; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.IsRefreshRequired">
      <summary>
            Gets or sets a value indicating whether this quad needs to be refreshed.
            </summary>
      <value>
        <c>true</c> if this quad should be refreshed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.IsShore">
      <summary>
            Gets a value indicating whether this instance is shore.
            </summary>
      <value>
        <c>true</c> if this instance is shore; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.IsSplitJobQueued">
      <summary>
            Gets or sets a value indicating whether this quad has a queued quad split job.
            </summary>
      <value>
        <c>true</c> if this quad has a queued quad split job; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.IsSubdivided">
      <summary>
            Gets a value indicating whether this instance is subdivided.
            </summary>
      <value>
        <c>true</c> if this instance is subdivided; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.IsSubdivisionPending">
      <summary>
            Gets or sets a value indicating whether this quad has a subdivision that is currently pending.
            </summary>
      <value>
        <c>true</c> if this quad has a subdivision that is currently pending; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.Parent">
      <summary>
            Gets the parent quad script.
            </summary>
      <value>
            The parent quad script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.ModApi#Planet#IQuadSphereQuad#Parent">
      <summary>
            Gets the parent quad script.
            </summary>
      <value>
            The parent quad script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.PhysicsEnabled">
      <summary>
            Gets a value indicating whether [physics enabled].
            </summary>
      <value>
        <c>true</c> if [physics enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.PlanetPosition">
      <summary>
            Gets or sets the planet position.
            </summary>
      <value>
            The planet position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.QuadPosition">
      <summary>
            Gets or sets the position of this quad in cube space.
            </summary>
      <value>
            The quad position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.QuadRenderer">
      <summary>
            Gets or sets the quad renderer script.
            This is the script that manages the mesh renderers and quad game objects, intended for editor use only.
            </summary>
      <value>
            The quad renderer script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.QuadRotation">
      <summary>
            Gets or sets the rotation of this quad in cube space.
            </summary>
      <value>
            The quad rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.QuadScale">
      <summary>
            Gets or sets the scale of this quad in cube space.
            </summary>
      <value>
            The quad scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.QuadSphere">
      <summary>
            Gets or sets the quad sphere.
            </summary>
      <value>
            The quad sphere.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.ModApi#Planet#IQuadSphereQuad#QuadSphere">
      <summary>
            Gets the quad sphere.
            </summary>
      <value>
            The quad sphere.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.RenderingData">
      <summary>
            Gets the rendering data for the quad.
            </summary>
      <value>
            The rendering data for the quad.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.SphereNormal">
      <summary>
            Gets or sets sphere normal of this quad, which is the normalized vector defining its position relative to the center of the planet.
            </summary>
      <value>
            The sphere normal.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.SubdivisionLevel">
      <summary>
            Gets or sets the subdivision level. One is the root level subdivision level.
            </summary>
      <value>
            The subdivision level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.UvCenter">
      <summary>
            Gets or sets the center of the UV coordinates.
            </summary>
      <value>
            The minimum UV.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.UvSize">
      <summary>
            Gets or sets the size of the UV.
            </summary>
      <value>
            The size of the UV.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.TerrainMeshData">
      <summary>
            Gets the terrain mesh data.
            </summary>
      <value>
            The terrain mesh data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadScript.WaterMeshData">
      <summary>
            Gets the water mesh data.
            </summary>
      <value>
            The water mesh data.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.CreateQuad(Assets.Scripts.Terrain.QuadSphereScript,Assets.Scripts.Terrain.CreateQuadData,Assets.Scripts.Terrain.QuadScript,System.Int32)">
      <summary>
            Creates a quad based on the specified data.
            This will handle the creation of the game objects and must be run on the main thread.
            </summary>
      <param name="quadSphere">The quad sphere to which the quad will belong.</param>
      <param name="data">The data used for the creation of the quad.</param>
      <param name="parent">The parent quad.</param>
      <param name="childIndex">The child index of this quad.</param>
      <returns>The quad script for the created quad.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.AddChild(Assets.Scripts.Terrain.QuadScript,System.Int32)">
      <summary>
            Adds the child.
            </summary>
      <param name="quad">The quad script.</param>
      <param name="index">The index of the child.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.ClearChildren">
      <summary>
            Clears the references to the children quads.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.CreatePhysics">
      <summary>
            Creates the physics.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.Initialize(Assets.Scripts.Terrain.QuadSphereScript,Assets.Scripts.Terrain.CreateQuadData)">
      <summary>
            Initializes the quad.
            </summary>
      <param name="quadSphere">The quad sphere to which the quad belongs.</param>
      <param name="data">The quad creation data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.RefreshQuad">
      <summary>
            Immediately and synchronously refreshes the quad.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.ReturnToPool(System.Boolean)">
      <summary>
            Returns the quad and all its associated data to the appropriate object pools.
            </summary>
      <param name="releaseQuad">if set to <c>true</c> then release this quad back to the pool as well.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.InitializeTerrainMesh(Assets.Scripts.Terrain.CreateQuadData)">
      <summary>
            Initializes the terrain mesh for the quad.
            </summary>
      <param name="data">The quad creation data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.InitializeWaterMesh(Assets.Scripts.Terrain.CreateQuadData)">
      <summary>
            Initializes the water for the quad.
            </summary>
      <param name="data">The quad creation data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.PositionPhysicsQuad(UnityEngine.Transform)">
      <summary>
            Positions the physics quad.
            </summary>
      <param name="physicsTransform">The physics quad transform.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadScript.RecalculateFrameState(System.Object,System.EventArgs)">
      <summary>
            Called when the quad's position within the reference frame should be recalculated.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadSphereJob">
      <summary>
            Base class for asynchronous quad sphere jobs.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereJob.Complete">
      <summary>
            Completes the job. This method will always be called from the main thread.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereJob.Process">
      <summary>
            Performs thread safe processing for the job. This may also be called from the main thread,
            but must be thread safe and capable of being called from a background thread.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereJob.CancelJob(System.Boolean)">
      <summary>
            Cancels the job. Called when the last background worker is shutting down. Derived classes
            should release any pooled resources they are holding onto.
            </summary>
      <param name="isMainThread">if set to <c>true</c> then this is being called from the main thread.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadSphereScript">
      <summary>
            Script for building a quad sphere.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._asyncJobProcessor">
      <summary>
            The object used for managing the asynchronous jobs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._boundingBoxSampleIndexes">
      <summary>
            The bounding box sample indexes.
            These are the indexes into the terrain points array that are sampled to create a bounding box.
            This should be all 4 corners, the middle of all 4 sides, and one in the very center.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._cubify">
      <summary>
            A value indicating whether the quad sphere should be rendered as a cube.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._disableCulling">
      <summary>
            Set to disable quad culling.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._dummyMeshData">
      <summary>
            The dummy mesh data.
            See class documentation for explanation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._fullLodUpdate">
      <summary>
            A value indicating whether the quadsphere is performing a full LOD update.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._generateUnderwaterTerrainQuads">
      <summary>
            A value indicating whether terrain quads should be generated whenever the terrain quad is entirely underwater.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._lodAndCullingData">
      <summary>
            An object containing data need by the quad LOD and culling algorithms.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._lodCullingDistance">
      <summary>
            The lookup table of quad culling distance spheres.
            Each index represents an LOD level and each value represents the squared distance from a quad at which the LOD level should be merged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._lodDistance">
      <summary>
            The lookup table of LOD distance spheres.
            Each index represents an LOD level and each value represents the distance from a quad at which the LOD level becomes active.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._lodMergeDistance">
      <summary>
            The lookup table of LOD merging distance spheres.
            Each index represents an LOD level and each value represents the distance from a quad at which the LOD level should be merged.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._lodUpdateLastPosition">
      <summary>
            The position that was used for the last LOD update.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._lodUpdateRequired">
      <summary>
            A value indicating whether an LOD update is required at the next available opportunity.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._lodUpdateRequiredDistanceSquared">
      <summary>
            The squared distance within which the LOD focal point can move without triggering an LOD update.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._maxSubdivisionLevel">
      <summary>
            The maximum subdivision level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._minSubdivisionLevel">
      <summary>
            The minimum subdivision level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._peakSmoothing">
      <summary>
            A value indicating whether peaks in a quad mesh should attempt to be smoothed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._performanceMetrics">
      <summary>
            The performance metrics related to the generation of quad data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._physicsDistance">
      <summary>
            The physics loading distance for quads.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._previousFrameCullingDisabled">
      <summary>
            A value indicating if culling was disabled in the previous frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._quadCounts">
      <summary>
            The number of quads currently in use by the quad sphere, organized by subdivision level.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._quadDrawList">
      <summary>
            The list of quads to be drawn this frame.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._quadStack">
      <summary>
            A stack of quad scripts that may be used in multiple places
            as an alternative to recursion when traversing quads.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._quadTemplateVertices">
      <summary>
            The quad template vertices.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._radius">
      <summary>
            The radius.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._renderingTechnique">
      <summary>
            The rendering technique to use for quads.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._roots">
      <summary>
            The roots.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._showNormals">
      <summary>
            The show normals flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._splitDistanceFactor">
      <summary>
            The split distance factor.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._synchronousQuadSplitJob">
      <summary>
            The synchronous quad split job.
            This job is reused to relieve pressure on the garbage collector.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._terrainGenerator">
      <summary>
            The terrain generator
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._terrainReceivesShadows">
      <summary>
            A value indicating whether the terrain receives shadows.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._unloaded">
      <summary>
            A value indicating whether the quad sphere has been unloaded.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._waterSupportsTransparency">
      <summary>
            A value indicating whether the water supports transparency.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript._waterTransparency">
      <summary>
            The water transparency camera script.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Terrain.QuadSphereScript.FrameStateRecalculated">
      <summary>
            Occurs when the frame state (position within the reference frame) of the quad sphere has been recalculated.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadSphereScript.QuadSphereRenderingTechnique">
      <summary>
            An enumeration defining the rendering technique types used for quads.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript.QuadSphereRenderingTechnique.DrawMesh">
      <summary>
            Quads should be drawn using Unity's DrawMesh API.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript.QuadSphereRenderingTechnique.MeshRenderers">
      <summary>
            Quads should be drawn using Unity's MeshRenderer components.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DirectionalLight">
      <summary>
            Gets the sun.
            </summary>
      <value>
            The sun.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.FramePosition">
      <summary>
            Gets or sets the frame position of the quad sphere.
            </summary>
      <value>
            The frame position of the quad sphere.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.MaxSubdivisionLevel">
      <summary>
            Gets the maximum subdivision level.
            </summary>
      <value>
            The maximum subdivision level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.MinSubdivisionLevel">
      <summary>
            Gets the minimum subdivision level.
            </summary>
      <value>
            The minimum subdivision level.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.NumVerticesInPaddedQuad">
      <summary>
            Gets the number vertices in a padded quad.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.NumVerticesInQuad">
      <summary>
            Gets the number vertices in a quad.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.NumVerticesInWaterQuad">
      <summary>
            Gets the number vertices in a water quad.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.NumVerticesOnPaddedQuadEdge">
      <summary>
            Gets the number vertices on a padded quad edge.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.NumVerticesOnQuadEdge">
      <summary>
            Gets the number vertices on a quad edge.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.NumVerticesOnWaterQuadEdge">
      <summary>
            Gets the number vertices on a water quad edge.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.PlanetData">
      <summary>
            Gets the planet data.
            </summary>
      <value>
            The planet data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.PlanetPosition">
      <summary>
            Gets the planet position.
            </summary>
      <value>
            The planet position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.QuadTerrainPrefab">
      <summary>
            Gets the main prefab for the quad.
            </summary>
      <value>
            The main prefab for the quad.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.QuadWaterPrefab">
      <summary>
            Gets the water prefab for the quad.
            </summary>
      <value>
            The water prefab for the quad.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.RenderingTechnique">
      <summary>
            Gets the rendering technique to use for quads.
            </summary>
      <value>
            The rendering technique to use for quads.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.RequiredQuadMeshDataTerrain">
      <summary>
            Gets the required quad mesh data for the terrain.
            </summary>
      <value>
            The required quad mesh data for the terrain.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.RequiredQuadMeshDataWater">
      <summary>
            Gets the required quad mesh data for the water.
            </summary>
      <value>
            The required quad mesh data for the water.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.ShowNormals">
      <summary>
            Gets a value indicating whether show normals for quads. Debugging only.
            </summary>
      <value>
        <c>true</c> if [show normals]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.TerrainGenerator">
      <summary>
            Gets the terrain generator.
            </summary>
      <value>
            The terrain generator.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.Transform">
      <summary>
            Gets the transform associated with the quad sphere's game object.
            </summary>
      <value>
            The transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.Unloaded">
      <summary>
            Gets a value indicating whether this <see cref="T:Assets.Scripts.Terrain.QuadSphereScript" /> is unloaded.
            </summary>
      <value>
        <c>true</c> if unloaded; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.WaterQuadVertexCountFactor">
      <summary>
            Gets the water quad vertex count factor.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.CoordinatesOnPaddedEdge(System.Int32,System.Int32)">
      <summary>
            Returns true if the coordinates are on the padded edge of the template quad.
            </summary>
      <param name="x">The x coordinate.</param>
      <param name="z">The z coordinate.</param>
      <returns>True if on the padded edge.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.ExecuteOnAllQuads(System.Action{Assets.Scripts.Terrain.QuadScript})">
      <summary>
            Executes the specified action on all quads.
            </summary>
      <param name="action">The action to execute.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.FullLodUpdate">
      <summary>
            Performs a full LOD update on the quadsphere based on the current position of the player's craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.FullLodUpdateAsync">
      <summary>
            Starts a coroutine that runs a full LOD update on the quadsphere based on the current position of the player's craft.
            </summary>
      <returns>The coroutine running the update.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.GenerateCreateQuadData">
      <summary>
            Generates a new instance of a <see cref="T:Assets.Scripts.Terrain.CreateQuadData" /> object.
            </summary>
      <returns>A new instance of a <see cref="T:Assets.Scripts.Terrain.CreateQuadData" /> object.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.GetAllQuads(System.Collections.Generic.List{Assets.Scripts.Terrain.QuadScript})">
      <summary>
            Gets the current list of all quads in the quadsphere (in no particular order).
            </summary>
      <param name="quads">The list of quad scripts to populate.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.Initialize(ModApi.Planet.IPlanetData,ModApi.Planet.ITerrainGenerator,UnityEngine.Transform,UnityEngine.Camera,System.Boolean)">
      <summary>
            Initializes the specified terrain generator.
            </summary>
      <param name="planetData">The planet data.</param>
      <param name="terrainGenerator">The terrain generator.</param>
      <param name="directionalLight">The sun transform.</param>
      <param name="camera">The main camera.</param>
      <param name="soiTransition">If set to <c>true</c>, the quad sphere is being initialized due to an SOI transition.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.InitializeQuadData(Assets.Scripts.Terrain.CreateQuadData)">
      <summary>
            Initializes the quad data.
            This prepares the quad data structure to be handed off to the quad data generation function.
            </summary>
      <param name="data">The quad data.</param>
      <returns>The initialized quad data.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.OnQuadAdded(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Called when a quad is added.
            </summary>
      <param name="quad">The quad that was added.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.OnQuadRemoved(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Called when a quad is removed.
            </summary>
      <param name="quad">The quad that was removed.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.ProcessAsynchronousJobs(System.Int32)">
      <summary>
            Processes any completed asynchronous jobs.
            </summary>
      <param name="maxJobs">The maximum number of jobs that can be completed this frame.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.ProcessQuadRefreshJob(Assets.Scripts.Terrain.QuadRefreshJob)">
      <summary>
            Processes the quad refresh job.
            </summary>
      <param name="job">The job.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.ProcessQuadSplitJob(Assets.Scripts.Terrain.QuadSplitJob)">
      <summary>
            Processes the specified quad split job.
            This handles the generation of data used to create the 4 child quads.
            This can be ran from a background thread.
            </summary>
      <param name="job">The job to process.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.RecalculateFrameState(ModApi.Flight.GameView.IReferenceFrame)">
      <summary>
            Called when the quad sphere should recalculate its position within the reference frame.
            </summary>
      <param name="referenceFrame">The reference frame.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.Recenter(UnityEngine.Vector3d)">
      <summary>
            Re-centers this instance.
            </summary>
      <param name="center">The center.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.RefreshAllQuads">
      <summary>
            Refreshes all quads.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.RefreshQuads(UnityEngine.Vector3d,System.Double)">
      <summary>
            Refreshes the quads within a specified distance from a position.
            </summary>
      <param name="spherePosition">The sphere position.</param>
      <param name="size">The size.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.Unload">
      <summary>
            Unloads the quad sphere.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.UpdateLod(System.Boolean)">
      <summary>
            Updates the level of detail of the quad sphere based on camera position.
            </summary>
      <param name="updateCulling">If set to <c>true</c>, quad culling will also be updated.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.BuildLodTables">
      <summary>
            Builds the LOD lookup tables.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.CompleteFullLodUpdate">
      <summary>
            Completes a full LOD update.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.CreateQuadAxisAlignedBoundingBox(Assets.Scripts.Terrain.CreateQuadData,System.Single)">
      <summary>
            Creates the axis-aligned bounding box for the quad based of the quad creation data
            and updates the quad creation data with the bounding box information.
            </summary>
      <param name="data">The quad creation data.</param>
      <param name="maxHeight">The maximum height for the quad.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.CreateQuadTemplate">
      <summary>
            Creates the quad mesh template that is used by all quads.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.DrawQuads(UnityEngine.Camera)">
      <summary>
            Draws all the quads in the list of quads to be drawn this frame.
            </summary>
      <param name="camera">The camera for which to perform the drawing (or <c>null</c> for all cameras).</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.EditorCameraPreCull(UnityEngine.Camera)">
      <summary>
            Called prior to a camera running its culling process while running in the Unity editor.
            </summary>
      <param name="camera">The camera that is about to perform culling.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.FullLodUpdateCoroutine">
      <summary>
            A coroutine that runs a full LOD update on the quadsphere based on the current position of the player's craft.
            </summary>
      <returns>The enumerator for the coroutine.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.GenerateBoundingBoxSampleIndexes">
      <summary>
            Generates the bounding box sample indexes.
            These are the indexes into the terrain points array that are sampled to create a bounding box.
            This should be all 4 corners, the middle of all 4 sides, and one in the very center.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.GenerateQuadData(Assets.Scripts.Terrain.CreateQuadData,System.Int32,UnityEngine.Vector3d,UnityEngine.Quaterniond,System.Double,UnityEngine.Vector2d,System.Double)">
      <summary>
            Generates the specified quad data.
            </summary>
      <param name="data">The object to hold the data being generated.</param>
      <param name="subdivisionLevel">The subdivision level of the quad.</param>
      <param name="position">The position of the quad.</param>
      <param name="rotation">The rotation of the quad.</param>
      <param name="scale">The scale of the quad.</param>
      <param name="uvCenter">The UV center of the quad.</param>
      <param name="uvSize">The UV size of the quad.</param>
      <returns>The same data object passed in to this method.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.GetQuadRootSize">
      <summary>
            Gets the "root" size of a quad...root size meaning the size at lod zero, or one quarter the size of the whole globe.
            All other LOD's are derived from the root size.
            </summary>
      <returns>The "root" size of a quad</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.GetQuadSize(System.Int32)">
      <summary>
            Gets the approximate size of the quad (length/height) at the specified LOD level.
            </summary>
      <param name="lodLevel">The lod level.</param>
      <returns>The approximate length/height of a quad at the specified LOD level.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.LogLodDistances">
      <summary>
            Logs the LOD distances to the console.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.LogLodResolutions">
      <summary>
            Logs the LOD resolutions to the console.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.LogQuadCounts">
      <summary>
            Logs the current quad counts.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.MergeQuad(Assets.Scripts.Terrain.QuadScript,System.Boolean)">
      <summary>
            Merges the quad.
            </summary>
      <param name="quad">The quad.</param>
      <param name="returnToPool">If set to <c>true</c>, the quad will be returned to the pool.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.OnLodDistanceSettingChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{System.Single})">
      <summary>
            Called when the LOD distance setting changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;float&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.OnRenderTechniqueChanged(Assets.Scripts.Terrain.QuadSphereScript.QuadSphereRenderingTechnique,Assets.Scripts.Terrain.QuadSphereScript.QuadSphereRenderingTechnique)">
      <summary>
            Called when quad rendering technique changes.
            </summary>
      <param name="previous">The previous technique.</param>
      <param name="current">The current technique.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.OnSceneUnloading(System.Object,ModApi.Scenes.Events.SceneEventArgs)">
      <summary>
            Called when a scene is unloading.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Scenes.Events.SceneEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.OnTerrainShadowsChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{System.Boolean})">
      <summary>
            Called when the terrain shadow settings change.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;bool&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.OnUnload">
      <summary>
            Called when the quad sphere is unloaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.OnWaterQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.WaterQualitySettings})">
      <summary>
            Called when the water quality changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingsChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.RebuildLodTable">
      <summary>
            Rebuilds the LOD lookup table.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.RebuildQuads(System.Boolean)">
      <summary>
            Rebuilds all of the non-root quads in the quadsphere.
            </summary>
      <param name="asynchronous">If set to <c>true</c>, the quads will be updated asynchronously.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.RefreshQuadsInRange(UnityEngine.Vector3d,System.Double,Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Recursive method that refreshes quads within a certain range.
            </summary>
      <param name="cubePosition">The cube position.</param>
      <param name="size">The size.</param>
      <param name="quad">The quad to check for refreshment.</param>
      <returns>The number of quads recursively refreshed.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.ResetCulling">
      <summary>
            Resets the culling (used when toggling between enabled and disabled culling).
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.SplitQuad(Assets.Scripts.Terrain.QuadScript,System.Boolean)">
      <summary>
            Splits the quad.
            </summary>
      <param name="quad">The quad.</param>
      <param name="synchronous">A value indicating whether or not the LOD updates will be synchronous (i.e. all updates completing in this frame).</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.StartFullLodUpdate">
      <summary>
            Starts a full LOD update.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.UnloadQuad(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Unloads the quad.
            </summary>
      <param name="quad">The quad to unload.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.UpdateCulling">
      <summary>
            Updates the culling for the quad sphere.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.UpdateQuadCulling(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Updates the culling for the quad and its children.
            </summary>
      <param name="quad">The quad for which to update culling.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.UpdateQuadCullingForRenderers(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Updates the culling for the quad and its children.
            </summary>
      <param name="quad">The quad for which to update culling.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.UpdateQuadLod(Assets.Scripts.Terrain.QuadScript,System.Boolean)">
      <summary>
            Updates the quad LOD.
            </summary>
      <param name="quad">The quad.</param>
      <param name="allowSynchronous">A value indicating whether synchronous updating of quad LOD levels is allowed.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.WaitForFullLodUpdate">
      <summary>
            Synchronously waits for a full LOD update to complete.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadSphereScript.LodAndCullingData">
      <summary>
            A class containing data need by the quad LOD and culling algorithms.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript.LodAndCullingData.CameraSurfacePosition">
      <summary>
            The camera surface position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript.LodAndCullingData.LodAltitude">
      <summary>
            The altitude used for LOD purposes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript.LodAndCullingData.TargetSurfacePosition">
      <summary>
            The target surface position.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript.LodAndCullingData.TargetSurfacePositionNormalized">
      <summary>
            The target surface position normalized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.QuadSphereScript.LodAndCullingData.VisibilityRadiusSquared">
      <summary>
            Gets the visibility radius squared.
            </summary>
      <value>
            The visibility radius squared.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.LodAndCullingData.Update(Assets.Scripts.Terrain.QuadSphereScript)">
      <summary>
            Updates the data for the current frame.
            </summary>
      <param name="quadSphere">The quad sphere.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData">
      <summary>
            This class contains some dummy vertex data arrays and lists for the quad sphere.
            Depending on the planet and configuration, some data, such as the extra UV channels may not be used.
            If we aren't using these channels, the mesh data objects don't initialize these objects to save
            a considerable amount of unnecessary memory consumption. Thus, we can't use these uninitialized objects
            because we would receive null reference exceptions. So... one option would be to wrap the relevant
            section of code in if statements. This would be needed multiple times inside multiple loops that
            iterate over each vertex. That seems like a ton of conditional checks for what is zero benefit a lot
            of the time. So instead, we use these dummy objects here in place of the real objects when that
            particular set of data is not needed. The data gets set, but nothing is ever done with it.
            No extra work when all data is needed and only a minor bit of extra work when some data is not needed.
            Worth noting that each quad sphere only has one set of these dummy objects, so they are set from
            multiple threads simultaneously. The data contain within is likely pure chaos, but since it is never used,
            it doesn't really matter.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.#ctor(Assets.Scripts.Terrain.QuadSphereScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData" /> class.
            </summary>
      <param name="quadSphere">The quad sphere.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.TerrainColor">
      <summary>
            Gets the terrain color.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.TerrainUV">
      <summary>
            Gets the terrain UVs.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.TerrainUV2">
      <summary>
            Gets the terrain UV2s.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.TerrainUV3">
      <summary>
            Gets the terrain UV3s.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.TerrainUV4">
      <summary>
            Gets the terrain UV4s.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.WaterColor">
      <summary>
            Gets the water color.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.WaterUV">
      <summary>
            Gets the water UVs.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.WaterUV2">
      <summary>
            Gets the water UV2s.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSphereScript.DummyMeshData.WaterUV3">
      <summary>
            Gets the water UV3s.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.QuadSplitJob">
      <summary>
            A class containing information related to the splitting of a single quad.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSplitJob.#ctor(System.Func{Assets.Scripts.Terrain.CreateQuadData})">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.QuadSplitJob" /> class.
            </summary>
      <param name="createQuadDataFactory">The factory method for creating new instances of <see cref="T:Assets.Scripts.Terrain.CreateQuadData" />.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSplitJob.Quad">
      <summary>
            Gets the quad being split.
            </summary>
      <value>
            The quad being split.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.QuadSplitJob.QuadData">
      <summary>
            Gets the quad data for each child quad.
            </summary>
      <value>
            The quad data for each child quad.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSplitJob.CancelJob(System.Boolean)">
      <summary>
            Cancels the job. Called when the last background worker is shutting down. Derived classes
            should release any pooled resources they are holding onto.
            </summary>
      <param name="isMainThread">if set to <c>true</c> then this is being called from the main thread.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSplitJob.Complete">
      <summary>
            Completes the job. This method will always be called from the main thread.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSplitJob.Initialize(Assets.Scripts.Terrain.QuadScript)">
      <summary>
            Initializes the job.
            </summary>
      <param name="quad">The quad being split.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.QuadSplitJob.Process">
      <summary>
            Performs thread safe processing for the job. This may also be called from the main thread,
            but must be thread safe and capable of being called from a background thread.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.Events.PlanetCubemapsChangedEventArgs">
      <summary>
            Event arguments for an event that is raised when planet cubemaps change.
            </summary>
      <seealso cref="T:System.EventArgs" />
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.Events.PlanetCubemapsChangedEventArgs.#ctor(UnityEngine.Cubemap,UnityEngine.Cubemap)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.Events.PlanetCubemapsChangedEventArgs" /> class.
            </summary>
      <param name="colors">The colors cubemap.</param>
      <param name="normalMap">The normal map cubemap.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.Events.PlanetCubemapsChangedEventArgs.Colors">
      <summary>
            Gets the colors cubemap.
            </summary>
      <value>
            The colors cubemap.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.Events.PlanetCubemapsChangedEventArgs.NormalMap">
      <summary>
            Gets the normal map cubemap.
            </summary>
      <value>
            The normal map cubemap.
            </value>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.IScaledSpaceRenderer">
      <summary>
            Interface for scaled space renderers.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Terrain.Rendering.IScaledSpaceRenderer.CubemapsChanged">
      <summary>
            Occurs when the planet cubemaps change.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.IScaledSpaceRenderer.Planet">
      <summary>
            Gets the planet script.
            </summary>
      <value>
            The planet script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.IScaledSpaceRenderer.CreateMaterialDuplicate">
      <summary>
            Creates and returns a duplicate of this scaled-space planet's material.
            </summary>
      <returns>A duplicate of this scaled-space planet's material.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.IScaledSpaceRenderer.GetTextures(UnityEngine.Texture@,UnityEngine.Texture@)">
      <summary>
            Gets the textures associated with the scaled space planet.
            </summary>
      <param name="cubeTex">The base cube-map texture.</param>
      <param name="bumpTex">The bump-map texture.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.IScaledSpaceRenderer.UpdateRenderer(UnityEngine.Vector3d,System.Boolean)">
      <summary>
            Updates the renderer.
            </summary>
      <param name="scaledSpaceCameraPosition">The scaled space camera position.</param>
      <param name="currentPlanet">A value indicating if this renderer is for the planet to which the player's craft node is currently parented.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.Misc.CameraShadowFadeScript">
      <summary>
            CameraShadowFadeScript class
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.Misc.CameraShadowFadeScript._enabled">
      <summary>
            The enabled
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.Misc.CameraShadowFadeScript._modifiedShader">
      <summary>
            The modified shader
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.Misc.CameraShadowFadeScript._originalScreenSpaceShadowShader">
      <summary>
            The original screen space shadow shader
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.Misc.CameraShadowFadeScript.Enabled">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Assets.Scripts.Terrain.Rendering.Misc.CameraShadowFadeScript" /> is enabled.
            </summary>
      <value>
        <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.Misc.CameraShadowFadeScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.Misc.CameraShadowFadeScript.OnPostRender">
      <summary>
            Called when [post render].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.Misc.CameraShadowFadeScript.OnPreRender">
      <summary>
            Called when [pre render].
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.PlanetRenderingData">
      <summary>
            An object containing information about a planet that is used by the planet renderers.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._atmosphereHeight">
      <summary>
            The atmosphere height of the planet's atmosphere.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._camera">
      <summary>
            The camera viewing the planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._center">
      <summary>
            The center position of the planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._defaultShaderDataAtmosphere">
      <summary>
            The default shader data for the planet's atmosphere.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._defaultShaderDataTerrain">
      <summary>
            The default shader data for the planet's terrain.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._hasAtmosphere">
      <summary>
            A value indicating whether or not the planet has an atmosphere.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._light">
      <summary>
            The light illuminating the planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._radius">
      <summary>
            The radius of the planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._radiusScaledSpace">
      <summary>
            The radius of the planet in scaled space.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._seaLevel">
      <summary>
            The sea level of the planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._shaderDataSky">
      <summary>
            The shader data for the planet's sky.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._shaderDataTerrain">
      <summary>
            The shader data for the planet's terrain.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._syncShaderData">
      <summary>
            A value indicating whether the terrain shader data and atmosphere shader data should be synchronized.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetRenderingData._transform">
      <summary>
            The transform of the planet.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.#ctor(Assets.Scripts.Terrain.QuadSphereScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.PlanetRenderingData" /> class.
            </summary>
      <param name="quadSphere">The quad sphere.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.#ctor(Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript,UnityEngine.Transform,UnityEngine.Transform)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.PlanetRenderingData" /> class.
            </summary>
      <param name="planet">The scaled space planet.</param>
      <param name="camera">The camera.</param>
      <param name="sun">The sun.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.#ctor(ModApi.Planet.IPlanetData,UnityEngine.Transform,UnityEngine.Transform,UnityEngine.Transform)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.PlanetRenderingData" /> class.
            </summary>
      <param name="planetData">The planet data.</param>
      <param name="planet">The planet transform.</param>
      <param name="camera">The camera.</param>
      <param name="light">The light.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.#ctor(UnityEngine.Vector3,UnityEngine.Transform,UnityEngine.Transform)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.PlanetRenderingData" /> class.
            </summary>
      <param name="surfacePosition">The surface position.</param>
      <param name="camera">The camera.</param>
      <param name="light">The light.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.AtmosphereHeight">
      <summary>
            Gets the atmosphere height of the planet's atmosphere.
            </summary>
      <value>
            The atmosphere height of the planet's atmosphere.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.Camera">
      <summary>
            Gets the camera viewing the planet.
            </summary>
      <value>
            The camera viewing the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.Center">
      <summary>
            Gets or sets the center position of the planet.
            </summary>
      <value>
            The center position of the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.HasAtmosphere">
      <summary>
            Gets a value indicating whether or not the planet has an atmosphere.
            </summary>
      <value>
        <c>true</c> if this planet has an atmosphere; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.Light">
      <summary>
            Gets the light illuminating the planet.
            </summary>
      <value>
            The light illuminating the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.Radius">
      <summary>
            Gets the radius of the planet.
            </summary>
      <value>
            The radius of the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.RadiusScaledSpace">
      <summary>
            Gets the radius of the planet in scaled space.
            </summary>
      <value>
            The radius of the planet in scaled space.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.SeaLevel">
      <summary>
            Gets the sea level of the planet.
            </summary>
      <value>
            The sea level of the planet.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.ShaderDataSky">
      <summary>
            Gets the shader data for the planet's sky.
            </summary>
      <value>
            The shader data for the planet's sky.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.ShaderDataTerrain">
      <summary>
            Gets the shader data for the planet's terrain.
            </summary>
      <value>
            The shader data for the planet's terrain.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.SyncShaderData">
      <summary>
            Gets or sets a value indicating whether the terrain shader data and atmosphere shader data should be synchronized.
            </summary>
      <value>
        <c>true</c> if the terrain shader data and atmosphere shader data should be synchronized; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.Transform">
      <summary>
            Gets the transform of the planet.
            </summary>
      <value>
            The transform of the planet.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetRenderingData.ResetToDefaults">
      <summary>
            Resets the current settings to their defaults.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData">
      <summary>
            The class used to update dynamic data (changes every frame) for planet/atmosphere shaders.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData._ambientLightAtNightStrength">
      <summary>
            The setting for the strength of the ambient light at night.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData._ambientLightInSpace">
      <summary>
            The ambient light in space.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData._ambientLightInSpaceStrength">
      <summary>
            The setting for the strength of the ambient light in space.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.#ctor(Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData" /> class.
            </summary>
      <param name="staticData">The static data.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.AdjustedCameraPosition">
      <summary>
            Gets the adjusted camera position.
            </summary>
      <value>
            The adjusted camera position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.AmbientLight">
      <summary>
            Gets the ambient light.
            </summary>
      <value>
            The ambient light.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.AtmospherePercent">
      <summary>
            Gets the atmosphere percent.
            </summary>
      <value>
            The atmosphere percent.
            Zero means the camera is on the planet surface and one means the camera is above the atmosphere.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.AtmosphereStrengthAtCamera">
      <summary>
            Gets the atmosphere strength at the camera.
            </summary>
      <value>
            The atmosphere strength at the camera.
            Zero means the camera is outside the atmosphere and one means the camera is at the planet's surface.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.AtmosScale">
      <summary>
            Gets the current atmosphere scale.  This may either be static, or lerped from a surface to space value.
            </summary>
      <value>
            The current atmosphere scale.  This may either be static, or lerped from a surface to space value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.CameraHeight">
      <summary>
            Gets the height of the camera.
            </summary>
      <value>
            The height of the camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.CameraHeight2">
      <summary>
            Gets the height of the camera squared.
            </summary>
      <value>
            The height of the camera squared.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.CameraViewDirection">
      <summary>
            Gets the camera view direction.
            </summary>
      <value>
            The camera view direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.GroundToSkyLightFade">
      <summary>
            Gets the ground to sky light fade value.
            This is used with craft coloring to lerp from ground sunlight (at 0.0) to sky sunlight (at 1.0).
            </summary>
      <value>
            The ground to sky light fade value.
            This is used with craft coloring to lerp from ground sunlight (at 0.0) to sky sunlight (at 1.0).
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.PlanetCenterPosition">
      <summary>
            Gets the planet center position.
            </summary>
      <value>
            The planet center position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.PlayerCraftVelocityNormalized">
      <summary>
            Gets the player craft's normalized velocity.
            </summary>
      <value>
            The player craft's normalized velocity.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.QuadToScaledTransition">
      <summary>
            Gets the quadsphere to scaled space transition strength.
            A value of 1 is full quad-sphere, value of 0 is full scaled-space.
            </summary>
      <value>
            The quadsphere to scaled space transition strength.
            A value of 1 is full quad-sphere, value of 0 is full scaled-space.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.RelativeCameraPosition">
      <summary>
            Gets the relative camera position.
            </summary>
      <value>
            The relative camera position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ScaleDepth">
      <summary>
            Gets the scale depth.
            </summary>
      <value>
            The scale depth.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ScaleOverScaleDepth">
      <summary>
            Gets the scale over scale depth.
            </summary>
      <value>
            The scale over scale depth.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.StaticData">
      <summary>
            Gets the static data.
            </summary>
      <value>
            The static data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.SunLightDirection">
      <summary>
            Gets the sun light direction.
            </summary>
      <value>
            The sun light direction.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.UnscaledCameraHeight">
      <summary>
            Gets the height of the unscaled camera.
            </summary>
      <value>
            The height of the unscaled camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.WorldCameraPosition">
      <summary>
            Gets the world camera position.
            </summary>
      <value>
            The world camera position.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.SetShaderProperties">
      <summary>
            Sets the global shader properties based on the current data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.SetShaderProperties(UnityEngine.Material)">
      <summary>
            Sets the shader properties for the specified material based on the current data.
            </summary>
      <param name="material">The material on which to set the properties.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.Update(System.Boolean)">
      <summary>
            Updates the dynamic data.
            </summary>
      <param name="currentPlanet">A value indicating if this shader data is for the planet to which the player's craft node is currently parented.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds">
      <summary>
            The shader property IDs.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.AdjustedCameraPosition">
      <summary>
            The adjusted camera position shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.AtmosphereStrenghtAtCamera">
      <summary>
            The atmosphere strength at the camera shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.AtmosScale">
      <summary>
            The atmosphere scale shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.CameraHeight">
      <summary>
            The camera height shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.CameraHeight2">
      <summary>
            The camera height squared shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.CameraHeightAtmosPercent">
      <summary>
            The camera height atmosphere percent shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.CameraViewDir">
      <summary>
            The camera view direction shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.GroundToSkyLightFade">
      <summary>
            The ground to sky light fade shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.LightDir">
      <summary>
            The light direction shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.PlanetCenter">
      <summary>
            The planet center shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.PlayerCraftVelocityNormalized">
      <summary>
            The player craft's normalized velocity shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.QuadToScaledTransition">
      <summary>
            The quadsphere to scaled space transition shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.ScaleDepth">
      <summary>
            The scale depth shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.ScaleOverScaleDepth">
      <summary>
            The scale over scale depth shader property ID.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData.ShaderPropertyIds.WorldCameraPosition">
      <summary>
            The world camera position shader property ID.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData">
      <summary>
            The class used to update static data for planet/atmosphere shaders.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.#ctor(Assets.Scripts.Terrain.Rendering.PlanetRenderingData,UnityEngine.Transform,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData" /> class.
            </summary>
      <param name="planetData">The planet data.</param>
      <param name="transform">The transform associated with this instance.</param>
      <param name="skyShader">A value indicating whether this instance is for a sky shaders.</param>
      <param name="scaledSpaceShader">A value indicating whether this instance is for scaled space shaders.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.AmbientLightMinFalloff">
      <summary>
            Gets the ambient light minimum falloff value (between zero and one).
            </summary>
      <value>
            The ambient light minimum falloff (between zero and one).
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.AtmosphereRenderHeight">
      <summary>
            Gets the atmosphere render height.
            </summary>
      <value>
            The atmosphere render height.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.AtmosphereRenderRadius">
      <summary>
            Gets the atmosphere render radius.
            </summary>
      <value>
            The atmosphere render radius.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.DebugScalar">
      <summary>
            Gets the debug scalar value.
            </summary>
      <value>
            The debug scalar value.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.G2">
      <summary>
            Gets the G2 setting.
            </summary>
      <value>
            The G2 setting.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.InnerRadius">
      <summary>
            Gets the inner radius.
            </summary>
      <value>
            The inner radius.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.InnerRadius2">
      <summary>
            Gets the inner radius squared.
            </summary>
      <value>
            The inner radius squared.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.InvWaveLength">
      <summary>
            Gets the inverse wave length.
            </summary>
      <value>
            The inverse wave length.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.IsQuadsphereTerrain">
      <summary>
            Gets a value indicating whether this instance is for quadsphere terrain shaders (and other shaders sharing the same data).
            </summary>
      <value>
        <c>true</c> if this instance is for quadsphere terrain shaders; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.IsScaledSpaceShader">
      <summary>
            Gets a value indicating whether this instance is for scaled space shaders.
            </summary>
      <value>
        <c>true</c> if this instance is for scaled space shaders; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.IsSkyShader">
      <summary>
            Gets a value indicating whether this instance is for sky shaders.
            </summary>
      <value>
        <c>true</c> if this instance is for sky shaders; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.Km4PI">
      <summary>
            Gets the Km4PI setting.
            </summary>
      <value>
            The Km4PI setting.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.KmESun">
      <summary>
            Gets the KmESun setting.
            </summary>
      <value>
            The KmESun setting.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.Kr4PI">
      <summary>
            Gets the Kr4PI setting.
            </summary>
      <value>
            The Kr4PI setting.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.KrESun">
      <summary>
            Gets the KrESun setting.
            </summary>
      <value>
            The KrESun setting.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.MinimumReflectivity">
      <summary>
            Gets the minimum reflectivity scalar.
            Reflectivity of parts will be scaled by the indirect diffuse lighting down to this minimum amount.
            </summary>
      <value>
            The minimum reflectivity scalar.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.OuterRadius">
      <summary>
            Gets the outer radius.
            </summary>
      <value>
            The outer radius.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.OuterRadius2">
      <summary>
            Gets the outer radius squared.
            </summary>
      <value>
            The outer radius squared.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.PlanetData">
      <summary>
            Gets the planet data.
            </summary>
      <value>
            The planet data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.PlanetRenderRadius">
      <summary>
            Gets the planet render radius.
            </summary>
      <value>
            The planet render radius.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.Scale">
      <summary>
            Gets the scale.
            </summary>
      <value>
            The scale.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.ScaleOverScaleDepth">
      <summary>
            Gets the scale over scale depth.
            </summary>
      <value>
            The scale over scale depth.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.Transform">
      <summary>
            Gets the transform associated with this instance.
            </summary>
      <value>
            The transform associated with this instance.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.SetShaderProperties">
      <summary>
            Sets the global shader properties based on the current data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.SetShaderProperties(UnityEngine.Material)">
      <summary>
            Sets the shader properties for the specified material based on the current data.
            </summary>
      <param name="material">The material on which to set the properties.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData.Update">
      <summary>
            Updates the static data
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.QuadRenderingData">
      <summary>
            Quad data needed for the rendering process.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadRenderingData.BoundingBox">
      <summary>
            The axis-aligned bounding box for the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadRenderingData.BoundingBoxRotation">
      <summary>
            The rotation used to create the axis-aligned bounding box for the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadRenderingData.LocalPosition">
      <summary>
            The local position of the quad.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadRenderingData.TerrainMaterial">
      <summary>
            The terrain material.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadRenderingData.TerrainMesh">
      <summary>
            The terrain mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadRenderingData.WaterMaterial">
      <summary>
            The water material.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadRenderingData.WaterMesh">
      <summary>
            The water mesh.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer">
      <summary>
            A renderer for a quadsphere.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._atmosphereFromInside">
      <summary>
            The atmosphere from inside.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._atmosphereFromOutside">
      <summary>
            The atmosphere from outside.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._atmosphereQuality">
      <summary>
            The atmosphere quality for atmospheres and scaled space terrain.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._atmosphereQualityForObjects">
      <summary>
            The atmosphere quality for crafts and other objects.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._atmosphereQualityForTerrain">
      <summary>
            The atmosphere quality for quadsphere terrain.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._atmosphereRadius">
      <summary>
            The atmosphere radius.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._dynamicDataGlobal">
      <summary>
            The global dynamic shader data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._planetData">
      <summary>
            The planet data associated with this renderer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._refreshAtmosphereQuality">
      <summary>
            A value indicating whether the atmosphere quality needs refreshed the next time that static data is refreshed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._refreshStaticData">
      <summary>
            A value indicating whether the static data needs refreshed on the next update cycle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer._staticDataGlobal">
      <summary>
            The global static shader data.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.PlanetData">
      <summary>
            Gets the planet data associated with this renderer.
            </summary>
      <value>
            The planet data associated with this renderer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadSphereScript">
      <summary>
            Gets the quad sphere script.
            </summary>
      <value>
            The quad sphere script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.Create(Assets.Scripts.Terrain.QuadSphereScript)">
      <summary>
            Creates a renderer for the specified quadsphere.
            </summary>
      <param name="quadSphere">The quadsphere.</param>
      <returns>The requested quadsphere renderer.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.CreateWithoutQuadsphere(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Transform,UnityEngine.Transform)">
      <summary>
            Creates a quadsphere the without quadsphere. I know... sounds stupid, right?
            This creates the renderer with dummy planet data so that the shader data required
            by parts and other objects will be available and update every frame.
            </summary>
      <param name="obj">The object to which to add the renderer.</param>
      <param name="focusPosition">The focus position for the renderer.</param>
      <param name="camera">The camera.</param>
      <param name="light">The light.</param>
      <returns>The quadsphere renderer.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.RefreshDataAndUpdateRenderer">
      <summary>
            Refreshes the data and updates the renderer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.ResetToDefaults">
      <summary>
            Resets settings to their default values.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.UpdateRenderer">
      <summary>
            Updates the renderer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.Initialize(Assets.Scripts.Terrain.Rendering.PlanetRenderingData)">
      <summary>
            Initializes the specified data.
            </summary>
      <param name="data">The planet rendering data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.CreateAtmosphere(System.String)">
      <summary>
            Creates an atmosphere object.
            </summary>
      <param name="prefabPath">The prefab path.</param>
      <returns>An object with information about the created atmosphere.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.CreateAtmospheres">
      <summary>
            Creates the atmospheres.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.InitializeAtmosphereQuality">
      <summary>
            Initializes the atmosphere quality.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.OnAtmosphereQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.AtmosphereQualitySettings})">
      <summary>
            Called when the atmosphere quality changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingsChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.OnStaticDataSettingsChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{System.Boolean})">
      <summary>
            Called when game or quality settings affecting static shader data have changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.OnValidate">
      <summary>
            This function is called when the script is loaded or a value is changed in the inspector (Called in the editor only) .
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.UpdateGlobalShaderKeywords">
      <summary>
            Updates the global shader keywords.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.UpdateShaderKeywords(UnityEngine.Material)">
      <summary>
            Updates the shader keywords for the specified material.
            </summary>
      <param name="material">The material.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.UpdateStaticData(System.Boolean)">
      <summary>
            Updates the static data for the planet renderer.
            </summary>
      <param name="updateAtmosphereQuality">If set to <c>true</c>, the atmosphere quality will be updated.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere">
      <summary>
            An object representing an atmosphere for a quadsphere.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere.#ctor(UnityEngine.MeshRenderer,Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData,Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere" /> class.
            </summary>
      <param name="renderer">The renderer.</param>
      <param name="staticData">The static data.</param>
      <param name="dynamicData">The dynamic data.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere.DynamicData">
      <summary>
            Gets the dynamic data.
            </summary>
      <value>
            The dynamic data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere.Material">
      <summary>
            Gets the material used by the renderer.
            </summary>
      <value>
            The material used by the renderer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere.Renderer">
      <summary>
            Gets the mesh renderer.
            </summary>
      <value>
            The mesh renderer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere.StaticData">
      <summary>
            Gets the static data.
            </summary>
      <value>
            The static data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere.Transform">
      <summary>
            Gets the transform of the rendered object.
            </summary>
      <value>
            The transform of the rendered object.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere.RefreshDynamicShaderData">
      <summary>
            Refreshes the dynamic shader data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere.RefreshStaticShaderData">
      <summary>
            Refreshes the static shader data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.QuadSphereRenderer.QuadsphereAtmosphere.SetEnabled(System.Boolean)">
      <summary>
            Sets the renderer to enabled or disabled.
            </summary>
      <param name="enabled">If set to <c>true</c>, the renderer will be enabled; otherwise it will be disabled.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer">
      <summary>
            A renderer that manages a scaled space planet.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._atmosphere">
      <summary>
            The object representing the rendered atmosphere for the planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._atmosphereQuality">
      <summary>
            The atmosphere quality level for this planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._cubemapQuality">
      <summary>
            The cubemap quality setting.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._defaultCubemapColors">
      <summary>
            The default color cubemap.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._defaultCubemapNormals">
      <summary>
            The default normal mapped cubemap.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._isCurrentPlanet">
      <summary>
            A value indicating if this is the current planet to which the player is parented.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._isNormalMapped">
      <summary>
            A value indicating if the planet uses a normal mapped cubemap.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._planetData">
      <summary>
            The planet rendering data.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._refreshAtmosphereQuality">
      <summary>
            A value indicating whether the atmosphere quality needs refreshed the next time that static data is refreshed.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._refreshStaticData">
      <summary>
            A value indicating whether the static data needs refreshed on the next update cycle.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._terrain">
      <summary>
            The object representing the rendered terrain for the planet.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer._transform">
      <summary>
            The transform for the scaled space planet.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.CubemapsChanged">
      <summary>
            Occurs when the planet cubemaps change.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.AtmosphereQuality">
      <summary>
            An enumeration defining the atmosphere quality levels.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.AtmosphereQuality.None">
      <summary>
            No atmosphere.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.AtmosphereQuality.Low">
      <summary>
            Low quality atmosphere.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.AtmosphereQuality.High">
      <summary>
            High quality atmosphere.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.Planet">
      <summary>
            Gets the planet script.
            </summary>
      <value>
            The planet script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.PlanetData">
      <summary>
            Gets the planet rendering data.
            </summary>
      <value>
            The planet rendering data.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.Create(Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript)">
      <summary>
            Creates a new scaled space renderer for the specified planet.
            </summary>
      <param name="planet">The planet for which to create the renderer.</param>
      <returns>The scaled space renderer.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.CreateMaterialDuplicate">
      <summary>
            Creates and returns a duplicate of this scaled-space planet's material.
            </summary>
      <returns>
            A duplicate of this scaled-space planet's material.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.GetTextures(UnityEngine.Texture@,UnityEngine.Texture@)">
      <summary>
            Gets the textures associated with the scaled space planet.
            </summary>
      <param name="cubeTex">The base cube-map texture.</param>
      <param name="bumpTex">The bump-map texture.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ResetToDefaults">
      <summary>
            Resets settings to their default values.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.UpdateRenderer(UnityEngine.Vector3d,System.Boolean)">
      <summary>
            Updates the renderer.
            </summary>
      <param name="scaledSpaceCameraPosition">The scaled space camera position.</param>
      <param name="currentPlanet">A value indicating if this renderer is for the planet to which the player's craft node is currently parented.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.Initialize(Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript)">
      <summary>
            Initializes the renderer.
            </summary>
      <param name="planet">The planet associated with this renderer.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.CreateSphere(System.String,System.Boolean)">
      <summary>
            Creates an object representing the rendered terrain or atmosphere for the planet.
            </summary>
      <param name="prefabPath">The prefab path.</param>
      <param name="isAtmosphere">If set to <c>true</c>, this is for an atmosphere; otherwise it represents terrain.</param>
      <returns>The object representing the rendered terrain or atmosphere for the planet.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.CubemapQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.TerrainQualitySettings.PlanetCubemapQuality})">
      <summary>
            Called when the cubemap quality is changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;TerrainQualitySettings.PlanetCubemapQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.DestroyCubemaps">
      <summary>
            Destroys the current cubemaps.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.InitializeAtmosphereQuality">
      <summary>
            Initializes the atmosphere quality level for the planet.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.InitializePlanetCubemaps(ModApi.Flight.Sim.IPlanetNode)">
      <summary>
            Initializes the planet cubemaps.
            </summary>
      <param name="node">The planet node.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.OnAtmosphereQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingChangedEventArgs{ModApi.Settings.AtmosphereQualitySettings.AtmosphereQuality})">
      <summary>
            Called when the atmosphere quality changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:SettingChangedEventArgs&lt;AtmosphereQualitySettings.AtmosphereQuality&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.OnValidate">
      <summary>
            This function is called when the script is loaded or a value is changed in the inspector (Called in the editor only) .
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.UpdateCubemaps(System.Boolean)">
      <summary>
            Updates the cubemaps material settings.
            </summary>
      <param name="highQuality">If set to <c>true</c> high quality cubemaps will be used if quality settings permit it.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.UpdateShaderKeywords(UnityEngine.Material)">
      <summary>
            Updates the shader keywords for the specified material.
            </summary>
      <param name="material">The material.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.UpdateStaticData(System.Boolean)">
      <summary>
            Updates the static data for the planet renderer.
            </summary>
      <param name="updateAtmosphereQuality">If set to <c>true</c>, the atmosphere quality will be updated.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere">
      <summary>
            An object representing the rendered terrain or atmosphere for a scaled space planet.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.#ctor(UnityEngine.MeshRenderer,Assets.Scripts.Terrain.Rendering.PlanetShaderStaticData,Assets.Scripts.Terrain.Rendering.PlanetShaderDynamicData)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere" /> class.
            </summary>
      <param name="renderer">The mesh renderer.</param>
      <param name="staticData">The static data.</param>
      <param name="dynamicData">The dynamic data.</param>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.DynamicData">
      <summary>
            Gets the dynamic data.
            </summary>
      <value>
            The dynamic data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.Material">
      <summary>
            Gets the material used by the renderer.
            </summary>
      <value>
            The material used by the renderer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.Renderer">
      <summary>
            Gets the mesh renderer.
            </summary>
      <value>
            The mesh renderer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.StaticData">
      <summary>
            Gets the static data.
            </summary>
      <value>
            The static data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.Transform">
      <summary>
            Gets the transform of the rendered object.
            </summary>
      <value>
            The transform of the rendered object.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.Destroy">
      <summary>
            Destroys this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.RefreshDynamicShaderData(System.Boolean)">
      <summary>
            Refreshes the dynamic shader data.
            </summary>
      <param name="currentPlanet">A value indicating if this shader data is for the planet to which the player's craft node is currently parented.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.RefreshStaticShaderData">
      <summary>
            Refreshes the static shader data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceRenderer.ScaledSpacePlanetSphere.SetEnabled(System.Boolean)">
      <summary>
            Sets the renderer to enabled or disabled.
            </summary>
      <param name="enabled">If set to <c>true</c>, the renderer will be enabled; otherwise it will be disabled.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer">
      <summary>
            Renderer for the sun.
            </summary>
      <seealso cref="T:Assets.Scripts.Terrain.Rendering.IScaledSpaceRenderer" />
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer._mesh">
      <summary>
            The mesh
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer._planetData">
      <summary>
            The planet data
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer._transform">
      <summary>
            The transform
            </summary>
    </member>
    <member name="E:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer.CubemapsChanged">
      <summary>
            Occurs when the planet cubemaps change.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer.Planet">
      <summary>
            Gets the planet script.
            </summary>
      <value>
            The planet script.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer.Create(Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer" /> class.
            </summary>
      <param name="planetScript">The planet script.</param>
      <returns>The ScaledSpaceSunRenderer created.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer.CreateMaterialDuplicate">
      <summary>
            Creates the material used to render the planet in map view.
            </summary>
      <returns>
            The material used to render the planet in map view.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer.GetTextures(UnityEngine.Texture@,UnityEngine.Texture@)">
      <summary>
            Gets the textures associated with the scaled space planet.
            </summary>
      <param name="cubeTex">The base cube-map texture.</param>
      <param name="bumpTex">The bump-map texture.</param>
      <exception cref="T:System.InvalidOperationException">The Sun does not have a cube/bump map textures</exception>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.ScaledSpaceSunRenderer.UpdateRenderer(UnityEngine.Vector3d,System.Boolean)">
      <summary>
            Updates the renderer.
            </summary>
      <param name="scaledSpaceCameraPosition">The scaled space camera position.</param>
      <param name="currentPlanet">A value indicating if this renderer is for the planet to which the player's craft node is currently parented.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript">
      <summary>
            AtmosphereManagerScript class
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript._currentScaledSpacePlanetScript">
      <summary>
            The current scaled space planet script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript._firstFrame">
      <summary>
            A value indicating if the first frame has not yet occurred.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript._planet">
      <summary>
            The planet script.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript._quadSphereRenderers">
      <summary>
            The quad sphere renderers.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript._scaledSpaceRenderers">
      <summary>
            The scaled space renderers.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.ScaledSpacePlanetEnabledChangedHandler">
      <summary>
            Handler for when scaled space planets change enabled states.
            </summary>
      <param name="source">The source.</param>
      <param name="planetScript">The planet script.</param>
      <param name="enabled">if set to <c>true</c> [enabled].</param>
    </member>
    <member name="E:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.ScaledSpacePlanetEnabledChanged">
      <summary>
            Occurs when [scaled space planet enabled changed].
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.Instance">
      <summary>
            Gets the instance.
            </summary>
      <value>
            The instance.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.CurrentScaledSpacePlanet">
      <summary>
            Gets the current scaled space planet.
            </summary>
      <value>
            The current scaled space planet.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.AddRenderer(Assets.Scripts.Flight.ScaledSpace.ScaledSpacePlanetScript,System.Boolean)">
      <summary>
            Adds a renderer for a scaled space planet.
            </summary>
      <param name="planetScript">The planet script.</param>
      <param name="isSun">if set to <c>true</c> then this is the sun.</param>
      <returns>
            The IScaledSpaceRenderer
            </returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.AddRenderer(Assets.Scripts.Terrain.QuadSphereScript)">
      <summary>
            Adds a renderer for a QuadSphere terrain.
            </summary>
      <param name="quadSphereScript">The quad sphere script.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.RemoveRenderer(Assets.Scripts.Terrain.QuadSphereScript)">
      <summary>
            Removes the QuadSphere renderer.
            </summary>
      <param name="quadSphereScript">The quad sphere script.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.UpdateQuadSphereRenderers">
      <summary>
            Updates the quadsphere renderers.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.UpdateScaledSpaceRenderers(UnityEngine.Vector3d)">
      <summary>
            Updates the scaled space renderers.
            </summary>
      <param name="scaledSpaceCameraPosition">The scaled space camera position.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.CheckScaledSpaceRendererActivation">
      <summary>
            Enables/disables scaled space
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.FirstFrameLateUpdate">
      <summary>
            Firsts the frame late update.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.OnPlanetNodeChanged(System.Object,ModApi.Planet.Events.PlanetNodeChangeEventArgs)">
      <summary>
            Called when [planet node changed].
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Planet.Events.PlanetNodeChangeEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.TerrainRendererManagerScript.OnPlanetScriptQuadSphereEnabledChanged(System.Object,ModApi.Planet.Events.PlanetQuadSphereEventArgs)">
      <summary>
            Called when the planet script quad sphere enabled state changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Planet.Events.PlanetQuadSphereEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions">
      <summary>
            The water reflection options.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions._clipPlaneOffset">
      <summary>
            The reflection clip plane offset.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions._farClipPlane">
      <summary>
            The far clip plane distance for the reflection camera.
            (or something vaguely related to it as I have no idea how this stuff works...)
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions._layers">
      <summary>
            The layers to be reflected.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions._pixelLights">
      <summary>
            A value indicating whether pixel lights should be included in the reflections or not.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions._resolution">
      <summary>
            The resolution of the reflections in pixels.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions.ClipPlaneOffset">
      <summary>
            Gets or sets the clip plane offset.
            </summary>
      <value>
            The clip plane offset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions.FarClipPlane">
      <summary>
            Gets or sets the far clip plane distance for the reflection camera.
            (or something vaguely related to it as I have no idea how this stuff works...)
            </summary>
      <value>
            The far clip plane distance for the reflection camera.
            (or something vaguely related to it as I have no idea how this stuff works...)
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions.Layers">
      <summary>
            Gets or sets the layers to be reflected..
            </summary>
      <value>
            The layers to be reflected..
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions.PixelLights">
      <summary>
            Gets or sets a value indicating whether pixel lights should be included in the reflections or not.
            </summary>
      <value>
        <c>true</c> if pixel lights should be included in the reflections; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.WaterReflectionOptions.Resolution">
      <summary>
            Gets or sets the resolution of the reflections in pixels.
            </summary>
      <value>
            The resolution of the reflections in pixels.
            </value>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript">
      <summary>
            A script for managing the water reflections.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript._mainCamera">
      <summary>
            The main camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript._mainCameraTransform">
      <summary>
            The transform for the main camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript._mapViewManager">
      <summary>
            The map view manager
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript._planet">
      <summary>
            The planet reference.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript._reflectionCamera">
      <summary>
            The reflection camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript._reflectionOptions">
      <summary>
            The reflection options.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript._reflectionTexture">
      <summary>
            The reflection texture.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript._reflectionTextureCurrentSize">
      <summary>
            The reflection texture's current size.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript._transform">
      <summary>
            The transform for this game object.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.ReflectionOptions">
      <summary>
            Gets or sets the reflection options.
            </summary>
      <value>
            The reflection options.
            </value>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.Create(UnityEngine.Transform,UnityEngine.Camera)">
      <summary>
            Creates an instance of a water reflection plane.
            </summary>
      <param name="parent">The parent object to which this object belongs.</param>
      <param name="mainCamera">The main camera.</param>
      <returns>The created script instance.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.LateUpdate">
      <summary>
            LateUpdate is called every frame after all Update functions have been called if the behavior is enabled.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.Start">
      <summary>
            Start is called on the frame when a script is enabled just before any of the Update methods is called the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.CalculateObliqueMatrix(UnityEngine.Matrix4x4@,UnityEngine.Vector4)">
      <summary>
            Adjusts the given projection matrix so that near plane
            is the given clipPlane clipPlane is given in camera space.
            See article in Game Programming Gems 5 and http://aras-p.info/texts/obliqueortho.html
            </summary>
      <param name="projection">The projection matrix.</param>
      <param name="clipPlane">The clip plane.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.CalculateReflectionMatrix(UnityEngine.Matrix4x4@,UnityEngine.Vector4)">
      <summary>
            Calculates reflection matrix around the given plane
            </summary>
      <param name="matrix">The reflection matrix.</param>
      <param name="plane">The reflection plane.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.SignExt(System.Single)">
      <summary>
            Extended sign that returns -1, 0, or 1 based on sign of the input.
            </summary>
      <param name="a">The input value for which to get the sign.</param>
      <returns>Returns -1, 0, or 1 based on sign of the input.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.ApplyQualitySettings(ModApi.Settings.WaterQualitySettings)">
      <summary>
            Applies the current quality settings.
            </summary>
      <param name="quality">The quality settings.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.CameraSpacePlane(UnityEngine.Camera,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
            Given position/normal of the plane, calculates plane in camera space.
            </summary>
      <param name="cam">The camera.</param>
      <param name="pos">The position of the reflection plane.</param>
      <param name="normal">The normal of the reflection plane.</param>
      <param name="sideSign">The side sign.</param>
      <returns>The plane in camera space.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.GetReflectionTexture(System.Int32)">
      <summary>
            Gets the reflection texture.
            </summary>
      <param name="size">The resolution of the texture.</param>
      <returns>The reflection texture.</returns>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.InitializeReflectionCamera(UnityEngine.Camera)">
      <summary>
            Initializes the reflection camera.
            </summary>
      <param name="main">The main camera.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.OnMapViewForegroundStateChanged(System.Boolean)">
      <summary>
            Called when MapView's foreground state has changed.
            </summary>
      <param name="foreground">If set to <c>true</c> MapView is in the foreground and is visible, otherwise; <c>false</c>.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.OnWaterQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.WaterQualitySettings})">
      <summary>
            Called when the water quality changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingsChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.UpdateReflections(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Updates the reflections.
            </summary>
      <param name="position">The position of the water plane.</param>
      <param name="normal">The normal of the water plane.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterReflectionPlaneScript.UpdateReflections(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Camera)">
      <summary>
            Updates the reflections.
            </summary>
      <param name="position">The position of the water plane.</param>
      <param name="normal">The normal of the water plane.</param>
      <param name="cam">The reflection camera.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript">
      <summary>
            A help script to set up data needed by the water refraction shader.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript._camera">
      <summary>
            The camera.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript._commandBuffer">
      <summary>
            The command buffer.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript._commandBufferEnabled">
      <summary>
            A value indicating whether the command buffer is enabled.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript._planet">
      <summary>
            The planet reference.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript._supportsTransparency">
      <summary>
            A value indicating whether the current quality settings enable water transparency.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript.OnDestroy">
      <summary>
            This function is called when the MonoBehaviour will be destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript.ApplyQualitySettings(ModApi.Settings.WaterQualitySettings)">
      <summary>
            Applies the quality settings.
            </summary>
      <param name="quality">The quality settings.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript.DisableCommandBuffer">
      <summary>
            Disables the command buffer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript.EnableCommandBuffer">
      <summary>
            Enables the command buffer.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript.OnWaterQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.WaterQualitySettings})">
      <summary>
            Called when the water quality changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Settings.Core.Events.SettingsChangedEventArgs`1" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Terrain.Rendering.WaterTransparencyCameraScript.QuadSphereStateChanged(System.Object,ModApi.Planet.Events.PlanetQuadSphereEventArgs)">
      <summary>
            Called when the quad sphere state changes.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:ModApi.Planet.Events.PlanetQuadSphereEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Terrain.TerrainPointSample">
      <summary>
            Sampled point from terrain data source.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Terrain.TerrainPointSample.Height">
      <summary>
            Gets or sets the height of the terrain at this point.
            </summary>
      <value>
            The height.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.TerrainPointSample.Position">
      <summary>
            Gets or sets the height of the terrain at this point.
            </summary>
      <value>
            The position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Terrain.TerrainPointSample.SpherePosition">
      <summary>
            Gets the sphere position.
            </summary>
      <value>
            The sphere position.
            </value>
    </member>
    <member name="T:Assets.Scripts.Tools.Fracturing.DuplicatePartMeshScript">
      <summary>
            Script to test duplicating a part's mesh by copying over the vertices/triangles/uvs to a new mesh.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.DuplicatePartMeshScript._partScript">
      <summary>
            The part script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.DuplicatePartMeshScript._rendererToDuplicate">
      <summary>
            The renderer to duplicate
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.DuplicatePartMeshScript.DuplicatePartsMesh(Assets.Scripts.Craft.Parts.PartScript,UnityEngine.MeshRenderer)">
      <summary>
            Duplicates the parts mesh.
            </summary>
      <param name="partScript">The part script.</param>
      <param name="rendererToDuplicate">The renderer to duplicate.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.DuplicatePartMeshScript.DuplicatePartMesh">
      <summary>
            Duplicates the part mesh.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript">
      <summary>
            Mesh fracturing functionality for SimpleRockets craft/parts.
            </summary>
      <seealso cref="T:Assets.Scripts.Tools.Fracturing.FractureMeshScript" />
      <content>
            Functionality related to design-time configuration...like when you're using the inspector test different fracturing options.
            </content>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._craftToFracture">
      <summary>
            Reference to the craft to be fractured.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._fractureContainer">
      <summary>
            The container for all the pieces of the fractured craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._fractureObjectLifeTime">
      <summary>
            The number of seconds that fracture objects stick around before being auto-deleted.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._fracturePartGroups">
      <summary>
            Dictionary connecting a part group script with it's cached fracture group.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._fracturePieceProcessors">
      <summary>
            The fracture piece processors
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.ExplosionEffectsEnabled">
      <summary>
            Gets a value indicating whether explosion effects are enabled.
            </summary>
      <value>
        <c>true</c> if explosion effects are enabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.AddFracturePieceProcessor(Assets.Scripts.Tools.Fracturing.IFracturePieceProcessor)">
      <summary>
            Adds the fracture piece processor.
            </summary>
      <param name="pieceProcessor">The piece processor.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.EnableCraftFracturing(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Creates a
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="removeCurrent">if set to <c>true</c> current fracture pieces are removed.</param>
      <returns>
            The container which has all the fracture pieces.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.OnPlayerCraftScriptInitialized(ModApi.Craft.ICraftScript)">
      <summary>
            Called when the player-craft script initialized.
            </summary>
      <param name="craftScript">The craft script.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.SetExplosionQuality(ModApi.Settings.ExplosionsQualitySettings,System.Boolean)">
      <summary>
            Sets the explosion quality setting.
            </summary>
      <param name="explosionQuality">The explosion quality setting to use.</param>
      <param name="rebuildCache">if set to <c>true</c> fracturing/explosion cache data will be rebuilt with the new quality setting.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.ActivatePartGroupDebris(ModApi.Craft.Parts.IPartGroupScript)">
      <summary>
            Activates the debris for the supplied part group.
            </summary>
      <param name="partGroup">The part group to activate debris for.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.OnDestroy">
      <summary>
            Called when this instance has been destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.OnExplosionsQualityChanged(System.Object,ModApi.Settings.Core.Events.SettingsChangedEventArgs{ModApi.Settings.ExplosionsQualitySettings})">
      <summary>
            Called when the ExplosionsQuality setting has changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="!:ModApi.Settings.Core.Events.SettingsChangedEventArgs&lt;ModApi.Settings.ExplosionsQualitySettings&gt;" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.OnPartGroupDisconnected(ModApi.Craft.Parts.IPartGroupScript,System.Boolean)">
      <summary>
            Called when a part group has disconnected.
            </summary>
      <param name="source">The source.</param>
      <param name="isExploding">if set to <c>true</c> [is exploding].</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.OnPlayerCraftNodeLoadedIntoGameView(ModApi.Flight.GameView.IGameViewObject)">
      <summary>
            Called when the player-craft node is loaded into game view.
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.OnReferenceFrameRecentered(ModApi.Flight.GameView.IReferenceFrame,UnityEngine.Vector3d,UnityEngine.Vector3d)">
      <summary>
            Called when the reference frame has re-centered.
            </summary>
      <param name="referenceFrame">The reference frame.</param>
      <param name="positionDelta">The position delta.</param>
      <param name="velocityDelta">The velocity delta.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.OnTimeMultiplierModeChanged(ModApi.Flight.TimeMultiplierModeChangedEvent)">
      <summary>
            Called when the time multiplier mode has changed.
            </summary>
      <param name="e">The TimeMultiplierModeChangedEvent.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.ProcessPiece(UnityEngine.GameObject,System.Nullable{UnityEngine.Vector3})">
      <summary>
            Processes the piece.
            </summary>
      <param name="fracturePiece">The fracture piece.</param>
      <param name="colliderWorldCenter">The collider's world position of the center of the explosion piece, or <c>null</c> if no collider was created.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.RemoveFracturePieces">
      <summary>
            Removes the fracture pieces.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.UpdateEventSubscriptions(System.Boolean)">
      <summary>
            Updates the event subscriptions.
            </summary>
      <param name="subscribe">if set to <c>true</c> events for <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMeshScript" /> will be subscribed to, otherwise; <c>false</c> to unsubscribe.</param>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.EntireCraftPropertyGroup">
      <summary>
            The inspector property group for individual mesh processing.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._autoSelectPlayerCraft">
      <summary>
            A value indicating whether the current player-craft should be auto-selected as the craft to be fractured.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._enableFracturedCraftWhenDone">
      <summary>
            A value indicating whether the fractured pieces of the craft should be disabled when they're completed, or allowed to explode immediately.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._pauseEditorWhenDone">
      <summary>
            A value indicating whether the Unity Editor should be paused after fracturing the craft.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._simulatingExplosion">
      <summary>
            The simulating explosion
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._simulatingExplosiosEndRoutine">
      <summary>
            The coroutine used to rebuild cache data at the end of a simulation.  If the simulation is aborted, the coroutine will need to be stopped.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript._temporarilyDisableOriginalCraftMeshesWhenDone">
      <summary>
            A debug-only option which allows you to test what the explosions look like from the inspector w/o crashing a craft. It indicates
            whether to temporarily disable the original craft's renderers after the fracture pieces have been created.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.TemporarilyDisableMeshes(UnityEngine.MeshRenderer[],System.Int32)">
      <summary>
            Temporarily disables the provided meshes for a given number of seconds.
            </summary>
      <param name="meshRenderers">The mesh renderers to temporarily disable.</param>
      <param name="seconds">The seconds.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.CreateCacheEntireCraft">
      <summary>
            Creates the cache for entire craft.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.EnableCraftFracturingDesign(ModApi.Craft.ICraftScript,System.Boolean)">
      <summary>
            Enables craft fracturing on the provided craft, and respects design-time options (like pausing editor after completion).
            </summary>
      <param name="craftScript">The craft script.</param>
      <param name="removeCurrent">if set to <c>true</c> current debris will be removed.</param>
      <returns>The fractured mesh from the craft.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.IsSimulatingExplosion">
      <summary>
            Determines whether we're currently simulating an explosion.
            </summary>
      <returns>
        <c>true</c> if we're currently simulating an explosion; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.SimulateExplosionFromDevConsole">
      <summary>
            Simulates an explosion in response to the dev console command.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.StopSimulating">
      <summary>
            Stops the simulating.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureCraftMeshScript.TemporarilyDisableCraftMesh(ModApi.Craft.ICraftScript)">
      <summary>
            Temporarily the disables craft's meshes.
            </summary>
      <param name="craft">The craft.</param>
    </member>
    <member name="T:Assets.Scripts.Tools.Fracturing.FractureMesh">
      <summary>
            Class to provide functionality to "fracture" a mesh into smaller pieces, optionally having rigid-bodies, colliders and initial explosion velocities.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMesh.VertsPerTri">
      <summary>
            The vertices in a triangle...don't change w/o asking AMD/NVidia.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMesh.IgnoreSelfLayer">
      <summary>
            A physics layer that provides no collisions with itself.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.ConstructFromPiece(UnityEngine.Transform,Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece,UnityEngine.Material,System.Boolean,System.Single,System.Single,System.Single)">
      <summary>
            Creates a mesh and associated game-object representing a piece of a fractured mesh with renderer.
            </summary>
      <param name="parent">The parent.</param>
      <param name="piece">The piece.</param>
      <param name="material">The material.</param>
      <param name="createCollider">if set to <c>true</c> collider will be attached to the rigid-bodies.</param>
      <param name="minPieceBoundsRadius">The minimum piece bounds radius.</param>
      <param name="initialMaxAngularVelocity">The max angular velocity the piece will have at start.</param>
      <param name="initialMaxVelocity">The max velocity the piece will have at start.</param>
      <returns>
            The GameObject containing the fractured mesh and renderer.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.ConstructFromPiece(UnityEngine.Transform,Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece,UnityEngine.Material,System.Boolean,System.Single,System.Single,System.Single,System.Nullable{UnityEngine.Vector3}@)">
      <summary>
            Creates a mesh and associated game-object representing a piece of a fractured mesh with renderer.
            </summary>
      <param name="parent">The parent.</param>
      <param name="piece">The piece.</param>
      <param name="material">The material.</param>
      <param name="createCollider">if set to <c>true</c> collider will be attached to the rigid-bodies.</param>
      <param name="minPieceBoundsRadius">The minimum piece bounds radius.</param>
      <param name="initialMaxAngularVelocity">The max angular velocity the piece will have at start.</param>
      <param name="initialMaxVelocity">The max velocity the piece will have at start.</param>
      <param name="colliderWorldCenter">The collider world center, or <c>null</c> if no collider was created.</param>
      <returns>
            The GameObject containing the fractured mesh and renderer.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.CreateMeshFracturePieces(UnityEngine.Mesh,System.Int32,System.Boolean,System.Boolean,System.Boolean,Assets.Scripts.Tools.Fracturing.FractureMesh.TransformInfo)">
      <summary>
            Fractures the provided mesh into separate mesh pieces.
            </summary>
      <param name="mesh">The mesh.</param>
      <param name="trisPerPiece">The number of triangles per <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece" />.</param>
      <param name="copyUvData">If set to <c>true</c> the uv data will be copied.</param>
      <param name="copyUv2Data">If set to <c>true</c> the uv2 data will be copied..</param>
      <param name="copyNormalData">if set to <c>true</c> normal data will be copied.</param>
      <param name="transformInfo">The transform information.</param>
      <returns>
            The list of <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece" /> representing the fractured pieces of the provided mesh.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.CreateMeshTransformInfo(UnityEngine.MeshFilter)">
      <summary>
            Creates the world scale that the fractured mesh's transform should use to keep the same scale as the original.
            </summary>
      <param name="inspectorSourceMesh">The inspector source mesh.</param>
      <returns>The world scale that the fractured mesh's transform should use to keep the same scale as the original.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.ProcessMeshAndCreateObject(System.Action{UnityEngine.GameObject,System.Nullable{UnityEngine.Vector3}},UnityEngine.Mesh,UnityEngine.Material,System.Boolean,System.Int32,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,Assets.Scripts.Tools.Fracturing.FractureMesh.TransformInfo)">
      <summary>
            Both processes the specified mesh to get fractured mesh information and then creates the GameObjects.
            </summary>
      <param name="onPieceCreated">Optional call-back to perform any actions on a piece when it is created (like add a particle system).</param>
      <param name="mesh">The mesh.</param>
      <param name="material">The material.</param>
      <param name="createColliders">if set to <c>true</c> [create colliders].</param>
      <param name="trisPerPiece">The tris per piece.</param>
      <param name="minPieceBoundsRadius">The minimum piece bounds radius.</param>
      <param name="maxAngularSpinSpeed">The maximum angular spin speed.</param>
      <param name="maxVelocity">The maximum velocity.</param>
      <param name="copyUvData">If set to <c>true</c> uv data will be copied.</param>
      <param name="copyUv2Data">If set to <c>true</c> uv2 data will be copied.</param>
      <param name="copyNormalData">if set to <c>true</c> normal data will be copied.</param>
      <param name="transformInfo">The transform information.</param>
      <returns>
            The game-object containing the completed fractured pieces from the original mesh.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.ClosePolyhedron(System.Collections.Generic.List{System.Int32},System.Collections.Specialized.OrderedDictionary)">
      <summary>
            Closes the polyhedron.
            </summary>
      <param name="triangleIndices">The triangle indices.</param>
      <param name="vertices">The vertices.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.AddBody(Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece,UnityEngine.Transform,UnityEngine.Mesh,System.Single,System.Single)">
      <summary>
            Adds a rigid-body to the fractured piece.
            </summary>
      <param name="piece">The <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece" /> information.</param>
      <param name="parent">The parent transform to place the completed piece under..</param>
      <param name="mesh">The mesh to center the body around.</param>
      <param name="initialMaxVelocity">The initial maximum velocity.</param>
      <param name="initialMaxAngularVelocity">The initial maximum angular velocity.</param>
      <returns>The rigid-body GameObject created from the provided params.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.AddCollider(UnityEngine.MeshFilter,UnityEngine.Rigidbody,System.Nullable{UnityEngine.Vector3}@)">
      <summary>
            Adds a collider to the fracture piece.
            </summary>
      <param name="filter">The mesh filter to size/center the collider on.</param>
      <param name="body">The body to add the collider to.</param>
      <param name="colliderWorldCenter">The collider's world center position.</param>
      <returns>The collider added.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.CreateFracturePiece(System.Collections.Generic.List{System.Int32},System.Collections.Specialized.OrderedDictionary,System.Collections.Generic.List{UnityEngine.Vector4},System.Collections.Generic.List{UnityEngine.Vector4},System.Collections.Generic.List{UnityEngine.Vector3},Assets.Scripts.Tools.Fracturing.FractureMesh.TransformInfo)">
      <summary>
            Creates a <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece" /> from the supplied vertices and triangles.
            </summary>
      <param name="triangles">The triangles.</param>
      <param name="vertices">The vertices.</param>
      <param name="uv">The uv.</param>
      <param name="uv2">The uv2.</param>
      <param name="normals">The normals.</param>
      <param name="transformInfo">The transform information.</param>
      <returns>
            The <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece" /> created.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.CreateMeshFromPiece(Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece)">
      <summary>
            Creates a mesh from <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece" /> data.
            </summary>
      <param name="piece">The <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece" /> to construct the mesh from.</param>
      <returns>The mesh crerated from the <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece" /></returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.AddMeshRenderer(UnityEngine.Transform,UnityEngine.Mesh,UnityEngine.Material)">
      <summary>
            Adds a mesh renderer to the fractured piece.
            </summary>
      <param name="parent">The parent to put the mesh renderer under.</param>
      <param name="mesh">The mesh to create the renderer from..</param>
      <param name="material">The material to use, or <c>null</c> to use a default.</param>
      <returns>The MeshFilter processing the provided Mesh.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.GetDefaultMaterial">
      <summary>
            Gets the material to be used for fracture pieces.
            </summary>
      <returns>The material to be used for fracture pieces.</returns>
    </member>
    <member name="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece">
      <summary>
            Contains information used to build a mesh representing a fractured piece of another mesh.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece.#ctor(System.Collections.Generic.List{System.Int32},System.Collections.Generic.List{UnityEngine.Vector3},System.Collections.Generic.List{UnityEngine.Vector4},System.Collections.Generic.List{UnityEngine.Vector4},System.Collections.Generic.List{UnityEngine.Vector3},Assets.Scripts.Tools.Fracturing.FractureMesh.TransformInfo)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece" /> class.
            </summary>
      <param name="triangles">The triangles.</param>
      <param name="vertices">The vertices.</param>
      <param name="uv">The uv.</param>
      <param name="uv2">The uv2.</param>
      <param name="normals">The normals.</param>
      <param name="transformInfo">The transform information.</param>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece.Normals">
      <summary>
            Gets the uv1 data.
            </summary>
      <value>
            The uv1 data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece.TransformInfo">
      <summary>
            Gets the transform information.
            </summary>
      <value>
            The transform information.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece.Triangles">
      <summary>
            Gets the triangles in the fractured piece.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece.Uv">
      <summary>
            Gets the uv1 data.
            </summary>
      <value>
            The uv1 data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece.Uv2">
      <summary>
            Gets the uv2 data.
            </summary>
      <value>
            The uv2 data.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMesh.FracturePiece.Vertices">
      <summary>
            Gets the vertexes in the fractured piece.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.Fracturing.FractureMesh.TransformInfo">
      <summary>
            Information needed to correctly position/rotate/scale the final fracture piece.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMesh.TransformInfo.WorldPosition">
      <summary>
            Gets or sets the world position.
            </summary>
      <value>
            The world position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMesh.TransformInfo.WorldRotation">
      <summary>
            Gets or sets the world rotation.
            </summary>
      <value>
            The world rotation.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMesh.TransformInfo.WorldScale">
      <summary>
            Gets or sets the world scale.
            </summary>
      <value>
            The world scale.
            </value>
    </member>
    <member name="T:Assets.Scripts.Tools.Fracturing.FractureMeshScript">
      <summary>
            Script to create fractured mesh debris from a mesh.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript.CacheDepthFinishedGameObjects">
      <summary>
            The cache type finished game objects
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript.CacheDepthMeshDataOnly">
      <summary>
            The cache type mesh data only
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript.ConfigPropertyGroup">
      <summary>
            The configuration property group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript.IndividualMeshPropertyGroup">
      <summary>
            The property group for individual mesh processing.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript.PerfTestingPropertyGroup">
      <summary>
            The perf testing property group
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._cacheDepth">
      <summary>
            The cache type
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._cacheDepths">
      <summary>
            The cache types
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._copyNormalData">
      <summary>
            The copy normal data
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._copyUv2Data">
      <summary>
            The copy uv2 data
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._copyUvData">
      <summary>
            The copy uv data
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._createColliders">
      <summary>
            The create colliders
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._gameObjectCacheForIndividualMesh">
      <summary>
            The fully-created game-object cache when fracturing an individual mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._individualSourceMesh">
      <summary>
            The mesh to use when fracturing an individual mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._maxAngularVelocitySpeed">
      <summary>
            The max angular velocity speed, in radians.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._maxVelocity">
      <summary>
            The max velocity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._minBoundsRadiusInitial">
      <summary>
            The minimum mesh bounds radius for an original mesh to be processed into fractured pieces, otherwise the mesh will not be discarded. Zero disables discard.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._minBoundsRadiusPiece">
      <summary>
            The minimum mesh bounds radius for a fracture piece (piece broken off, not original mesh) to be kept, and not discarded.  Zero disables discard.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._piecesCacheForIndividualMesh">
      <summary>
            The cache of fracture piece infos when fracturing an individual mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._trisBasedOnPercentOfMesh">
      <summary>
            If &gt; 0, number of triangles will not be static across meshes and will instead be calculated based on per-mesh basis as a percentage of the mesh's total number of triangles.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FractureMeshScript._trisPerPiece">
      <summary>
            The number of triangles per <see cref="!:FracturePiece" />.  This is configurable to adjust shape/size of pieces. Ignored if _trisBasedOnPercentOfMesh is &gt; 0.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.CopyNormalData">
      <summary>
            Gets or sets a value indicating whether to copy normal data to the fractured pieces.
            </summary>
      <value>
        <c>true</c> if normal data should be copied to the fractured pieces; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.CopyUv2Data">
      <summary>
            Gets or sets a value indicating whether to copy uv2 data to the fractured pieces.
            </summary>
      <value>
        <c>true</c> if uv2 data should be copied to the fractured pieces; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.CopyUvData">
      <summary>
            Gets or sets a value indicating whether to copy uv data to the fractured pieces.
            </summary>
      <value>
        <c>true</c> if uv data should be copied to the fractured pieces; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.CreateColliders">
      <summary>
            Gets or sets a value indicating whether to create colliders for fracture pieces.
            </summary>
      <value>
        <c>true</c> if colliders should be created for fracture pieces; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.IndividualSourceMesh">
      <summary>
            Gets or sets the mesh to use when fracturing an individual mesh.
            </summary>
      <value>
            The mesh to use when fracturing an individual mesh.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.MaxAngularSpinSpeed">
      <summary>
            Gets or sets the maximum angular spin speed, in radians the fractured pieces will begin with.
            </summary>
      <value>
            The maximum angular spin speed, in radians the fractured pieces will begin with.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.MaxVelocity">
      <summary>
            Gets or sets the maximum velocity that a piece will begin with.
            </summary>
      <value>
            The maximum velocity that a piece will begin with.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.MinBoundsRadiusInitial">
      <summary>
            Gets or sets the minimum size (bounds extent) for determining if a mesh should have debris created.  Meshes smaller than this will
            be discarded will not show debris at all. Zero means no mesh will be discarded (debris pieces created from it might, though).
            </summary>
      <value>
            The minimum size (bounds extent) for determining if a mesh should have debris created.  Meshes smaller than this will be discarded
            will not show debris at all. Zero means no mesh will be discarded (debris pieces created from it might, though).
            </value>
      <remarks>If <see cref="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.MinBoundsRadiusInitial" /> is less than <see cref="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.MinBoundsRadiusPiece" />, no debris will be created.</remarks>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.MinBoundsRadiusPiece">
      <summary>
            Gets or sets the minimum size (bounds extent) for determining if a piece of debris (created from fracturing a mesh) should be kept, or discarded.
            Debris pieces smaller than this will be discarded. Zero means no piece will be discarded.
            </summary>
      <value>
            The minimum size for determining if a piece of debris (created from fracturing a mesh) should be kept, or discarded.
            </value>
      <remarks>If <see cref="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.MinBoundsRadiusInitial" /> is less than <see cref="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.MinBoundsRadiusPiece" />, no debris will be created.</remarks>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.TrisBasedOnPercentOfMesh">
      <summary>
            Gets or sets a value, if &gt; 0, determines the number of triangles on a per-mesh basis as a percentage of the mesh's total number of triangles.
            </summary>
      <value>
            If &gt; 0, determines the number of triangles on a per-mesh basis as a percentage of the mesh's total number of triangles.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FractureMeshScript.TrisPerPiece">
      <summary>
            Gets or sets the static number of triangles per fracture piece.  This property is ignored if <see cref="!:FractureCraftMeshScript.TrisBasedOnPercentOfMesh" /> is &gt; 0.
            </summary>
      <value>
            The static number of triangles per fracture piece.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMeshScript.CalculateTrisPerPiece(UnityEngine.Mesh,System.Int32,System.Single)">
      <summary>
            Calculates the number of triangles per piece to use for a given mesh, using the provided settings.
            </summary>
      <param name="mesh">The mesh to calculate the number of triangles per piece for.</param>
      <param name="trisPerPieceSetting">The triangles per piece setting.</param>
      <param name="trisBasedOnPercentOfMeshSetting">The setting for determining triangles based on percentage of total triangles in a mesh.</param>
      <returns>The number of triangles per piece to use for a given mesh, using the provided settings.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMeshScript.FractureIndividualMesh(UnityEngine.MeshRenderer,UnityEngine.Transform)">
      <summary>
            Fractures an individual mesh.
            </summary>
      <param name="meshRenderer">The mesh renderer.</param>
      <param name="parentContainer">The parent container.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMeshScript.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMeshScript.Initialize">
      <summary>
            Initializes this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMeshScript.CreateCacheIndividualMesh">
      <summary>
            Creates the fracture piece information cache for future use.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMeshScript.CreateFromCacheIndividualMesh">
      <summary>
            Creates the fracture game objects from previously cached data.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMeshScript.DeleteFracturePieces">
      <summary>
            Deletes the fracture pieces.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FractureMeshScript.InspectorInitiatedFracture">
      <summary>
            Performs entire fracture process.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.Fracturing.FracturePieceParticleEffects">
      <summary>
            Fracture piece processor to add particle effects to pieces depending on quality settings.
            </summary>
      <seealso cref="T:Assets.Scripts.Tools.Fracturing.IFracturePieceProcessor" />
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.FracturePieceParticleEffects._particleSystemName">
      <summary>
            The particle system name to use for the current quality setting.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FracturePieceParticleEffects.ParticleEffectFrequency">
      <summary>
            Gets the particle effect frequency.
            </summary>
      <value>
            The particle effect frequency.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.Fracturing.FracturePieceParticleEffects.ParticleEffectLightFrequency">
      <summary>
            Gets the light frequency percent.
            </summary>
      <value>
            The light frequency percent.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FracturePieceParticleEffects.ProcessPiece(UnityEngine.GameObject,System.Nullable{UnityEngine.Vector3})">
      <summary>
            Processes the piece.
            </summary>
      <param name="fracturePiece">The fracture piece.</param>
      <param name="colliderWorldCenter">The collider's world position of the center of the explosion piece, or <c>null</c> if no collider was created.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.FracturePieceParticleEffects.SetQuality(ModApi.Settings.ExplosionsQualitySettings)">
      <summary>
            Sets the explosion quality setting.
            </summary>
      <param name="explosionQuality">The explosion quality setting to use.</param>
    </member>
    <member name="T:Assets.Scripts.Tools.Fracturing.IFracturePieceProcessor">
      <summary>
            Interface defining access to functionality to process fracture pieces and add effects to them.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.IFracturePieceProcessor.ProcessPiece(UnityEngine.GameObject,System.Nullable{UnityEngine.Vector3})">
      <summary>
            Processes the piece and adds any necessary effects.
            </summary>
      <param name="fracturePiece">The fracture piece.</param>
      <param name="colliderWorldCenter">The collider's world center position, or <c>null</c> if there is no collider.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.IFracturePieceProcessor.SetQuality(ModApi.Settings.ExplosionsQualitySettings)">
      <summary>
            Sets the quality of the piece processor.
            </summary>
      <param name="explosionQuality">The explosion quality settings.</param>
    </member>
    <member name="T:Assets.Scripts.Tools.Fracturing.LightFlickerScript">
      <summary>
            Component which will flicker a linked light while active by changing its
            intensity between the min and max values given. The flickering can be
            sharp or smoothed depending on the value of the smoothing parameter.
            Just activate / deactivate this component as usual to pause / resume flicker
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.LightFlickerScript._maxIntensity">
      <summary>
            The maximum intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.LightFlickerScript._minIntensity">
      <summary>
            The minimum intensity
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.LightFlickerScript._smoothing">
      <summary>
            The smoothing
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.LightFlickerScript._lastSum">
      <summary>
            The last sum
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.LightFlickerScript._smoothQueue">
      <summary>
            Continuous average calculation via FIFO queue. Saves us iterating every time we update, we just change by the delta
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.Fracturing.LightFlickerScript._light">
      <summary>
            The light
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.LightFlickerScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.Fracturing.LightFlickerScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.JointStabilityMonitorScript">
      <summary>
            Script to monitor and provide information about joint stability.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._autoStabilizing">
      <summary>
            The automatic stabilizing
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._connectedBody">
      <summary>
            The connected body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._connectedBodyTrans">
      <summary>
            The connected body trans
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._errorAngle">
      <summary>
            The error angle
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._errorPosition">
      <summary>
            The error distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._initialAngleOffset">
      <summary>
            The initial angle offset
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._initialDistance">
      <summary>
            The initial distance
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._initialTensorBody">
      <summary>
            The initial tensor body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._initialTensorConnectedBody">
      <summary>
            The initial tensor connected body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._jointBody">
      <summary>
            The joint body
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.JointStabilityMonitorScript._jointBodyTrans">
      <summary>
            The joint body trans
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.JointStabilityMonitorScript.AutoStabilizeEnabled">
      <summary>
            Gets or sets a value indicating whether the script should try to automatically stabilize an unstable joint.
            </summary>
      <value>
        <c>true</c> if the script should try to automatically stabilize an unstable joint; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.JointStabilityMonitorScript.Stability">
      <summary>
            Gets the stability.
            </summary>
      <value>
            The stability.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.JointStabilityMonitorScript.Create(UnityEngine.Joint)">
      <summary>
            Creates the specified joint.
            </summary>
      <param name="joint">The joint.</param>
      <returns>The JointStabilityMonitorScript</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.JointStabilityMonitorScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.JointStabilityMonitorScript.FixedUpdate">
      <summary>
            Performs fixed-update tasks.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.JointStabilityMonitorScript.Initialize(UnityEngine.Joint)">
      <summary>
            Initializes the specified joint.
            </summary>
      <param name="joint">The joint.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.JointStabilityMonitorScript.SetAutoStabilizeActive(System.Boolean)">
      <summary>
            Sets the automatic stabilize.
            </summary>
      <param name="enable">if set to <c>true</c> [enable].</param>
    </member>
    <member name="T:Assets.Scripts.Tools.MoveObjectScript">
      <summary>
            Utility class to move an object.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Tools.MoveObjectScript._currDestinationObjectRotation">
      <summary>
            The curr destination object rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.MoveObjectScript._lastFramePanning">
      <summary>
            Stores whether we were moving on the last frame (or if we just started).
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.MoveObjectScript._startingObjectRotation">
      <summary>
            The starting object rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.MoveObjectScript._timeElapsedPanning">
      <summary>
            The time elapsed panning
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.MoveObjectScript.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Tools.MoveObjectScript" /> class.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.CameraTarget">
      <summary>
            Gets or sets the camera target.
            </summary>
      <value>
            The camera target.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.DestinationPanPosition">
      <summary>
            Gets or sets the destination pan position.
            </summary>
      <value>
            The destination pan position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.DestinationPanUp">
      <summary>
            Gets or sets the destination pan up.
            </summary>
      <value>
            The destination pan up.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.IsInterruptable">
      <summary>
            Gets or sets a value indicating whether this instance is interruptable.
            </summary>
      <value>
        <c>true</c> if this instance is interruptable; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.IsPanningFocusACameraTarget">
      <summary>
            Gets or sets a value indicating whether this instance is panning focus a camera target.
            </summary>
      <value>
        <c>true</c> if this instance is panning focus a camera target; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.ObjectIsPanning">
      <summary>
            Gets a value indicating whether [object is panning].
            </summary>
      <value>
        <c>true</c> if [object is panning]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.PanningCompleteAction">
      <summary>
            Gets or sets the panning complete action.
            </summary>
      <value>
            The panning complete action.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.PanningFocus">
      <summary>
            Gets or sets the panning focus
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.StartingPanPosition">
      <summary>
            Gets or sets the starting pan position.
            </summary>
      <value>
            The starting pan position.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.StartingPanUp">
      <summary>
            Gets or sets the starting pan up.
            </summary>
      <value>
            The starting pan up.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.TimeToFinishPanning">
      <summary>
            Gets or sets the time to finish panning.
            </summary>
      <value>
            The time to finish panning.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.TimeToFinishPanningReset">
      <summary>
            Gets or sets the time to finish panning reset.
            </summary>
      <value>
            The time to finish panning reset.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.MoveObjectScript.UpVectorWhenInterrupted">
      <summary>
            Gets or sets up vector when interrupted.
            </summary>
      <value>
            Up vector when interrupted.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.MoveObjectScript.ResetPanning">
      <summary>
            Resets the panning.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.MoveObjectScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.MoveObjectScript.UpdateCameraTarget">
      <summary>
            Updates the camera target.
            </summary>
      <exception cref="T:System.InvalidOperationException">IsPanningFocusACameraTarget is true, but CameraTarget is null</exception>
    </member>
    <member name="T:Assets.Scripts.Tools.NativeMeshTools">
      <summary>
            A utility class for working with Meshes in native code.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.NativeMeshTools.CompletePendingAsyncMeshUpdates">
      <summary>
            Completes any pending asynchronous mesh updates on the rendering thread.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.NativeMeshTools.CompletePendingAsyncMeshUpdatesImmediately">
      <summary>
            Completes any pending asynchronous mesh updates immediately on the current thread.
            This is not meant to be used in production as the current thread may not be the rendering thread.
            Its purpose is for profiling the time it takes to execute, as doing so on the rendering thread would not show up in the profiler.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.NativeMeshTools.UpdateMesh(System.IntPtr,System.Int32,UnityEngine.Vector3[],UnityEngine.Vector3[],UnityEngine.Color[],UnityEngine.Vector2[])">
      <summary>
            Updates the mesh immediately in native code.
            </summary>
      <param name="vertexBufferHandle">The vertex buffer handle.</param>
      <param name="vertexCount">The vertex count.</param>
      <param name="sourceVertices">The source vertices.</param>
      <param name="sourceNormals">The source normals.</param>
      <param name="sourceColors">The source colors.</param>
      <param name="sourceUVs">The source uvs.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.NativeMeshTools.UpdateMeshAsync(System.IntPtr,System.Int32,UnityEngine.Vector3[],UnityEngine.Vector3[],UnityEngine.Color[],UnityEngine.Vector2[])">
      <summary>
            Updates the mesh asynchronously.
            This is meant to be called from a background thread.
            The mesh update is not finalized until the complete pending updates method is called.
            </summary>
      <param name="vertexBufferHandle">The vertex buffer handle.</param>
      <param name="vertexCount">The vertex count.</param>
      <param name="sourceVertices">The source vertices.</param>
      <param name="sourceNormals">The source normals.</param>
      <param name="sourceColors">The source colors.</param>
      <param name="sourceUVs">The source u vs.</param>
    </member>
    <member name="T:Assets.Scripts.Tools.NativeMeshTools.NativeMethods">
      <summary>
            A collection of native methods used by this class.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.NormalSolver">
      <summary>
            Utility class that can calculate normals for a mesh.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver._dictionary">
      <summary>
            The vertex entry dictionary used by the normal solver.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver._faceNormals">
      <summary>
            The last face normals array that was used by the normal solver.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver._vertexEntryPool">
      <summary>
            The vertex entry pool for the normal solver.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.NormalSolver.#cctor">
      <summary>
            Initializes static members of the <see cref="T:Assets.Scripts.Tools.NormalSolver" /> class.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.NormalSolver.Options">
      <summary>
            Options for recalculating normals. Multiple options can be specified at once with the bitwise OR operation.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.Options.None">
      <summary>
            No options
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.Options.FlattenTop">
      <summary>
            Flatten y-coordinate of normals at y = 1 (top of the mesh)
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.Options.FlattenBottom">
      <summary>
            Flatten y-coordinate of normals at y = -1 (bottom of the mesh)
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.NormalSolver.RecalculateNormals(UnityEngine.Mesh,System.Single,Assets.Scripts.Tools.NormalSolver.Options)">
      <summary>
            Recalculate the normals of a mesh based on an angle threshold. This takes
            into account distinct vertices that have the same position.
            </summary>
      <param name="mesh">The mesh.</param>
      <param name="angle">The smoothing angle in degrees. Note that triangles that already share
            the same vertex will be smooth regardless of the angle!</param>
      <param name="options">The options.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.NormalSolver.RecalculateNormals(System.Single,System.Int32[],UnityEngine.Vector3[],UnityEngine.Vector3[],UnityEngine.Vector2[],UnityEngine.Vector3[],Assets.Scripts.Tools.NormalSolver.Options)">
      <summary>
            Recalculate the normals of a mesh based on an angle threshold. This takes
            into account distinct vertices that have the same position.
            </summary>
      <param name="angle">The smoothing angle in degrees.
            Note that triangles that already share the same vertex will be smooth regardless of the angle!</param>
      <param name="triangles">The triangles.</param>
      <param name="vertices">The vertices.</param>
      <param name="normals">The normals. This will be update with the results.</param>
      <param name="uvs">The original UVs for the mesh. The u coordinate (of &gt; -0.5) can determine if a vertex should be
            excluded from the normal calculation and use the normal from its original normals.</param>
      <param name="originalNormals">The original normals, which are used when the original UVs are passed in.</param>
      <param name="options">The normal calculation options.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.NormalSolver.ResetCacheData">
      <summary>
            Resets the static cache data.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.NormalSolver.VertexKey">
      <summary>
            A vertex key structure.
            </summary>
      <seealso cref="!:System.IEquatable&lt;Assets.Scripts.Tools.NormalSolver.VertexKey&gt;" />
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.VertexKey.Tolerance">
      <summary>
            The precision tolerance.
            Change this if you require a different precision.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.VertexKey._hash">
      <summary>
            The hash code value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.VertexKey._x">
      <summary>
            The x value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.VertexKey._y">
      <summary>
            The y value.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.VertexKey._z">
      <summary>
            The z value.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.NormalSolver.VertexKey.#ctor(UnityEngine.Vector3)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Tools.NormalSolver.VertexKey" /> struct.
            </summary>
      <param name="position">The position.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.NormalSolver.VertexKey.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.NormalSolver.VertexKey.Equals(Assets.Scripts.Tools.NormalSolver.VertexKey)">
      <summary>
            Determines whether the specified <see cref="T:Assets.Scripts.Tools.NormalSolver.VertexKey" />, is equal to this instance.
            </summary>
      <param name="other">The <see cref="T:Assets.Scripts.Tools.NormalSolver.VertexKey" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Assets.Scripts.Tools.NormalSolver.VertexKey" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.NormalSolver.VertexKey.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Tools.NormalSolver.VertexEntry">
      <summary>
            A vertex entry object.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.VertexEntry.Count">
      <summary>
            The current count.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.VertexEntry.TriangleIndex">
      <summary>
            The triangle indexes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.VertexEntry.VertexIndex">
      <summary>
            The vertex indexes.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.NormalSolver.VertexEntry._reserved">
      <summary>
            The reserved size.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.NormalSolver.VertexEntry.Add(System.Int32,System.Int32)">
      <summary>
            Adds the specified data.
            </summary>
      <param name="vertIndex">Index of the vertex.</param>
      <param name="triIndex">Index of the triangle.</param>
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.GizmoAxisScript">
      <summary>
            Base class script which represents a single axis of a gizmo (ex. "Up" or "Right" axis of a translate gizmo).
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1">
      <summary>
            Basic functionality a movement tool should provide.
            </summary>
      <typeparam name="T">The <see cref="T:Assets.Scripts.Tools.ObjectTransform.GizmoAxisScript" /> type.</typeparam>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1._isLocalOrientation">
      <summary>
            The local orientation
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.#ctor(UnityEngine.Camera)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1" /> class.
            </summary>
      <param name="camera">The camera.</param>
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmoAdjustedHandler">
      <summary>
            Handler for when a gizmo has been adjusted (started/continued/ended).
            </summary>
      <param name="source">The source.</param>
      <param name="newAxis">If set to <c>true</c> the axis being dragged has switched to a new axis or <c>null</c> if not applicable.</param>
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmoClickHandler">
      <summary>
            Handler for click events on a gizmo.
            </summary>
      <param name="source">The source.</param>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="E:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmoAdjusted">
      <summary>
            Occurs when a gizmo has been adjusted.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmoAdjustmentEnded">
      <summary>
            Occurs when a gizmo has started being adjusted.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmoAdjustmentStarted">
      <summary>
            Occurs when a gizmo has started being adjusted.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmoClickDown">
      <summary>
            Occurs when an initial click event occurs on a gizmo.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmoClicked">
      <summary>
            Occurs when a gizmo has been clicked.
            </summary>
    </member>
    <member name="E:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmoClickUp">
      <summary>
            Occurs when a click event has ended on a gizmo.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.MovementType">
      <summary>
            The movement type, self or all non-cockpit side connected parts.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.MovementType.Self">
      <summary>
            Just move the single part.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.MovementType.Connected">
      <summary>
            Move the part and all of its non-root side connected parts.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmoBeingDragged">
      <summary>
            Gets the gizmo currently being dragged.
            </summary>
      <value>
            The gizmo currently being dragged.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmosActive">
      <summary>
            Gets a value indicating whether the gizmos are active.
            </summary>
      <value>
        <c>true</c> if the gizmos are active; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmosCreated">
      <summary>
            Gets a value indicating whether the gizmos have bene created.
            </summary>
      <value>
        <c>true</c> if the gizmos have bene created; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GizmosParent">
      <summary>
            Gets the gizmos parent.
            </summary>
      <value>
            The gizmos parent.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GridSize">
      <summary>
            Gets the size of the grid to snap to.  Setting to zero will enable smooth movement.
            </summary>
      <value>
            The size of the grid to snap to.  Setting to zero will enable smooth movement.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.IsAdjusting">
      <summary>
            Gets a value indicating whether this instance is currently adjusting a transform.
            </summary>
      <value>
        <c>true</c> if this instance is currently adjusting a transform; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.IsLocalOrientation">
      <summary>
            Gets or sets a value indicating whether movement is based on the part's local orientation, or world orientation.
            </summary>
      <value>
        <c>true</c> if movement is based on the part's local orientation; otherwise world orientation, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.IsNewAxis">
      <summary>
            Gets the value indicating whether the adjustment occurred on a different axis than the last adjustment, or <c>null</c> if it is either not known, or not applicable.
            </summary>
      <value>
            The value indicating whether the adjustment occurred on a different axis than the last adjustment, or <c>null</c> if it is either not known, or not applicable.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.MouseDrag">
      <summary>
            Gets the <see cref="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.MouseDrag" /> instance for this gizmo which handles translating to/from screen-space to world-space mouse drag vectors/movements.
            </summary>
      <value>
            The <see cref="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.MouseDrag" /> instance for this gizmo which handles translating to/from screen-space to world-space mouse drag vectors/movements.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.Name">
      <summary>
            Gets the name of the Designer tool.
            </summary>
      <value>
            The name of the Designer tool.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.SelectedTransform">
      <summary>
            Gets or sets the selected part transform.
            </summary>
      <value>
            The selected part transform.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.IsPendingFirstDragEvent">
      <summary>
            Gets or sets a value indicating whether the gizmo currently being dragged has had the first drag event after being clicked.
            </summary>
      <value>
        <c>true</c> the gizmo currently being dragged has had the first drag event after being clicked; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.PreviousGizmoDragged">
      <summary>
            Gets or sets the previous gizmo which was dragged.
            </summary>
      <value>
            The previous gizmo which was dragged.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.CreateGizmos(System.Boolean)">
      <summary>
            Creates the gizmos.
            </summary>
      <param name="playGizmoFlyoutSound">If set to <c>true</c> the gizmo flyout sound will be played.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.DestroyGizmos">
      <summary>
            Destroys the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.HandleClick(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Handles the touch.
            </summary>
      <param name="e">The input event.</param>
      <returns>
        <c>true</c> if the input was processed and the gizmo should recieve further input events (capture).</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.SetAdjustmentTransform(UnityEngine.Transform,System.Boolean)">
      <summary>
            Sets the Transform to apply transform adjustments to.
            </summary>
      <param name="transform">The transform.</param>
      <param name="playGizmoFlyoutSound">If set to <c>true</c> the gizmo flyout sound will be played.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.Update">
      <summary>
            Called every frame when the designer is using this tool.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GetDistanceToPlane(UnityEngine.Transform,UnityEngine.Ray,ModApi.Utilities.UnityTransform.TransformAxis,System.Boolean)">
      <summary>
            Gets the distance from the ray's origin to the specified plane that goes through the transform.
            </summary>
      <param name="trans">The transform that plane goes through.</param>
      <param name="ray">The ray.</param>
      <param name="planeAxis">The plane's restricted axis.</param>
      <param name="local">If set to <c>true</c> the transform local orientation is used, otherwise world orientation is used.</param>
      <returns>The distance from the ray's origin to the specified plane that goes through the transform.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GetGizmoUnderMouse(UnityEngine.RaycastHit@)">
      <summary>
            Gets the gizmo under mouse.
            </summary>
      <param name="rayHit">The ray hit.</param>
      <returns>
            The gizmo under the mouse.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GetGizmoUnderMouse(System.Boolean,System.Single)">
      <summary>
            Gets the gizmo under mouse
            </summary>
      <param name="sphereCast">if set to <c>true</c> a SphereCast will be used instead of a raycast.</param>
      <param name="sphereCastRadius">The sphere cast radius (if using a sphere cast, otherwise ignored).</param>
      <returns>
            The gizmo script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.GetGizmoUnderMouse(System.Boolean,System.Single,UnityEngine.RaycastHit@)">
      <summary>
            Gets the gizmo under mouse
            </summary>
      <param name="sphereCast">if set to <c>true</c> a SphereCast will be used instead of a raycast.</param>
      <param name="sphereCastRadius">The sphere cast radius (if using a sphere cast, otherwise ignored).</param>
      <param name="rayHit">The ray hit.</param>
      <returns>
            The gizmo script.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.NotifyAdjustmentBeginning(System.Nullable{System.Boolean})">
      <summary>
            Gives notificaiton that an adjustment sequence has begun.
            </summary>
      <param name="newAxis">If set to <c>true</c> the axis being dragged has switched to a new axis or <c>null</c> if not applicable.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.NotifyAdjustmentEnded">
      <summary>
            Gives notification that an adjustment sequence has ended.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.NotifyAdjustmentOccurred">
      <summary>
            Gives notification that an adjustment has occurred.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.OnOrientationChanged">
      <summary>
            Called whenever the orientation has changed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.ProcessGizmoClick(`0,UnityEngine.RaycastHit,ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Processes a mouse begin (click) event when a gizmo is hit.
            </summary>
      <param name="gizmo">The gizmo which recieved the mouse begin event.</param>
      <param name="rayHit">The <see cref="T:UnityEngine.RaycastHit" /> info obtained when the gizmo was hit.</param>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.ProcessGizmoDrag(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Performs processing for when a gizmo is being dragged.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the click event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.ProcessGizmoDragEnd(Assets.Scripts.Tools.ObjectTransform.GizmoAxisScript,ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Performs processing when a gizmo has stopped being dragged.
            </summary>
      <param name="gizmo">The gizmo which is no-longer being dragged.</param>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.ShouldDragGizmo(`0,UnityEngine.RaycastHit)">
      <summary>
            Determines whether the specified gizmo should be allowed to begin being dragged.
            </summary>
      <param name="gizmo">The gizmo.</param>
      <param name="rayHit">The <see cref="T:UnityEngine.RaycastHit" /> info regarding the gizmo.</param>
      <returns>
        <c>true</c> if the specified gizmo should be allowed to begin being dragged, otherwise; <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.CreateGizmosContainer(Assets.Scripts.Tools.ObjectTransform.MovementGizmo{`0},System.Boolean)">
      <summary>
            Creates the gizmos container game-object.
            </summary>
      <param name="gizmo">The gizmo.</param>
      <param name="playGizmoFlyoutSound">If set to <c>true</c> the gizmo flyout sound will be played.</param>
      <returns>
            The gizmos parent.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.MoveGizmosToNewParent(UnityEngine.Transform)">
      <summary>
            Moves the gizmos to new parent.
            </summary>
      <param name="newParent">The new parent.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.ProcessFirstGizmoDrag">
      <summary>
            Performs processing for when a gizmo has initially been dragged after being clicked.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.ProcessMouseBegin(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Performs processing when a mouse button has been initially clicked.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.ProcessMouseEnd(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when the mouse button has been released.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.ProcessMouseFirstDrag">
      <summary>
            Performs processing for when the mouse has been dragged for the first time.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmo`1.RecreateGizmos(System.Boolean)">
      <summary>
            Destroys and creates the gizmos.
            </summary>
      <param name="playGizmoFlyoutSound">
        <c>true</c> if the gizmo flyout sound should be played, otherwise; <c>false</c>.</param>
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.MovementGizmoCamera">
      <summary>
            Helper class related to the gizmo camera.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmoCamera.CameraClearFlags">
      <summary>
            Gets the camera clear flags.
            </summary>
      <value>
            The camera clear flags.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.MovementGizmoCamera.CullingMask">
      <summary>
            Gets the culling mask.
            </summary>
      <value>
            The culling mask.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.MovementGizmoCamera.Create(UnityEngine.Transform)">
      <summary>
            Creates a gizmo camera.
            </summary>
      <param name="parent">The parent transform.</param>
      <returns>A gizmo camera.</returns>
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.RotateGizmo">
      <summary>
            Nudge part tool takes an already attached part and nudges it around w/o breaking the part attachment.
            </summary>
      <seealso cref="T:Assets.Scripts.Design.Tools.DesignerToolBase" />
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._animatingGizmos">
      <summary>
            The animating gizmos
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._cameraDist">
      <summary>
            The camera's current distance.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._flip">
      <summary>
            The flip
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._forwardVec">
      <summary>
            The forward vec for the forward gizmo.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._gizmoCenter">
      <summary>
            The small sphere at the center of the gizmos.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._gizmoSphere">
      <summary>
            The large sphere encompassing the gizmos.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._lastRotation">
      <summary>
            The last rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._lastSnapRotation">
      <summary>
            The last snap rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._rightVec">
      <summary>
            The right vec for the right gizmo
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._screenConstantScale">
      <summary>
            The screen constant scale
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._snapDegreesAccum">
      <summary>
            The number of degrees that have been accumulated toward an angle snap.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._startingRotation">
      <summary>
            The starting rotation.  Used to animate the gizmos manually during world rotations.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._tangentVec">
      <summary>
            The tangent vec
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._upVec">
      <summary>
            Up vec for the up gizmo.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._xRotation">
      <summary>
            The x rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._yRotation">
      <summary>
            The y rotation
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmo._zRotation">
      <summary>
            The z rotation
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.#ctor(UnityEngine.Camera)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Tools.ObjectTransform.RotateGizmo" /> class.
            </summary>
      <param name="camera">The camera.</param>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.AngleSnap">
      <summary>
            Gets or sets the angle snap.
            </summary>
      <value>
            The angle snap.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.RelativeSpace">
      <summary>
            Gets the space the rotations should be relative to.
            </summary>
      <value>
            The space the rotations should be relative to.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.RotateGizmoBeingDragged">
      <summary>
            Gets the axis gizmo being dragged.  <c>null</c> if no axis is being dragged.
            </summary>
      <value>
            The axis gizmo being dragged. <c>null</c> if no axis is being dragged.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.Sensitivity">
      <summary>
            Gets or sets the rotation sensitivity.
            </summary>
      <value>
            The rotation sensitivity.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.CreateGizmos(System.Boolean)">
      <summary>
            Creates the gizmos.
            </summary>
      <param name="playGizmoFlyout">if set to <c>true</c> [play gizmo flyout].</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.DestroyGizmos">
      <summary>
            Destroys the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.Update">
      <summary>
            Called every frame when the designer is using this tool.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.ProcessGizmoClick(Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript,UnityEngine.RaycastHit,ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Processes a mouse begin (click) event when a gizmo is hit.
            </summary>
      <param name="gizmo">The gizmo which recieved the mouse begin event.</param>
      <param name="rayHit">The <see cref="T:UnityEngine.RaycastHit" /> info obtained when the gizmo was hit.</param>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.ProcessGizmoDrag(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Performs processing for when a gizmo is being dragged.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the click event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.ProcessGizmoDragEnd(Assets.Scripts.Tools.ObjectTransform.GizmoAxisScript,ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Performs processing when a gizmo has stopped being dragged.
            </summary>
      <param name="gizmo">The gizmo which is no-longer being dragged.</param>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.ShouldDragGizmo(Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript,UnityEngine.RaycastHit)">
      <summary>
            Determines whether the specified gizmo should be allowed to begin being dragged.
            </summary>
      <param name="gizmo">The gizmo.</param>
      <param name="rayHit">The <see cref="T:UnityEngine.RaycastHit" /> info regarding the gizmo.</param>
      <returns>
        <c>true</c> if the specified gizmo should be allowed to begin being dragged, otherwise; <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.UpdateMouseRotation(System.Single)">
      <summary>
            Updates the currently selected part's rotation based on the supplied mouse movement.  Enforces angle snapping, if enabled.
            </summary>
      <param name="degrees">The number of degrees that the mouse is attempting to rotate the part.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.IsLeft(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
            Determines whether the specified point is left of the specified line.
            </summary>
      <param name="line">The line.</param>
      <param name="point">The point to check.</param>
      <returns>
        <c>true</c> if the specified line is left; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.GetTangentVec(UnityEngine.Vector3,Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript)">
      <summary>
            Gets the screen-space tangent vector to the gizmo given the world-space RaycastHit.
            </summary>
      <param name="pointOnAxis">A world-space point that lies on the axis that the circle tangent is wanted for.</param>
      <param name="gizmo">The gizmo.</param>
      <returns>The screen-space tangent vector to the gizmo given the world-space RaycastHit.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.Rotate(UnityEngine.Vector3,UnityEngine.Space)">
      <summary>
            Rotates the selected part using the specified parameters.
            </summary>
      <param name="eulers">The eulers angles to rotate by.</param>
      <param name="space">The relative space to use for the rotation.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmo.UpdateGizmos">
      <summary>
            Updates the gizmos.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript">
      <summary>
            Script for part rotation gizmos.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript._defaultColor">
      <summary>
            The default color
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript._hitCollider">
      <summary>
            The hit collider
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript._rotateTool">
      <summary>
            The rotate tool
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript._selectedColor">
      <summary>
            The selected color
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript._unSelectedColor">
      <summary>
            The un selected color
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript._vectorLine">
      <summary>
            Gets the vector line.
            </summary>
      <value>
            The vector line.
            </value>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript._vectorLineRenderer">
      <summary>
            Gets the renderer.
            </summary>
      <value>
            The renderer.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript.Axis">
      <summary>
            Gets or sets the axis of rotation.
            </summary>
      <value>
            The axis of rotation.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript.Create(Assets.Scripts.Tools.ObjectTransform.RotateGizmo,UnityEngine.Transform,ModApi.Utilities.UnityTransform.TransformAxis,UnityEngine.Color,System.Single)">
      <summary>
            Creates a rotate gizmo for the specified axis.
            </summary>
      <param name="rotateGizmo">The rotate gizmo.</param>
      <param name="parent">The parent.</param>
      <param name="axis">The axis.</param>
      <param name="color">The color.</param>
      <param name="lineSize">Size of the line.</param>
      <returns>
            The RotateGizmoAxisScript
            </returns>S
        </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript.UpdateGizmo(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
            Updates the gizmo.
            </summary>
      <param name="position">The position.</param>
      <param name="direction">The direction.</param>
      <param name="scale">The scale.</param>
      <param name="cameraDist">The camera dist.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript.OnDestroy">
      <summary>
            Called when the script is destroyed.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.RotateGizmoAxisScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo">
      <summary>
            Manages a 3-axis gizmo for moving a transform.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo._forwardAxisGizmo">
      <summary>
            The forward axis gizmo
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo._rightAxisGizmo">
      <summary>
            The right axis gizmo
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo._snapDeltaAccum">
      <summary>
            The delta accumulated from calls to Drag when there was not enough movement to snap to a new position...used for successive calls to Drag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo._upAxisGizmo">
      <summary>
            Up axis gizmo
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo.#ctor(UnityEngine.Camera)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo" /> class.
            </summary>
      <param name="camera">The camera.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo.CreateGizmos(System.Boolean)">
      <summary>
            Creates the gizmos.
            </summary>
      <param name="playGizmoFlyout">if set to <c>true</c> [play gizmo flyout].</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo.DestroyGizmos">
      <summary>
            Destroys the gizmos.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo.Update">
      <summary>
            Called every frame.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo.Drag(UnityEngine.Transform,System.Single,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean)">
      <summary>
            Drags transform using the this.AdjustmentMag specified ray while restricting to a plane or set of planes.
            </summary>
      <param name="trans">The transform to move and use for orientation.</param>
      <param name="movementMag">The initial movement mag.</param>
      <param name="dragDir">The drag direction.</param>
      <param name="snapDeltaAccum">The accumulated delta from previous calls when not enough moment had occurred to snap to the next place on the grid.
            On the initial call, this would be Vector3.zero. Then the result of each subsequent call would be feed back into the call to drag.</param>
      <param name="gridSize">Size of the grid.  Set to zero for smooth movement.</param>
      <param name="local">If set to <c>true</c> the transform local orientation is used, otherwise world orientation is used.</param>
      <returns>The delta accumulated from this call when there was not enough movement to snap to a new position....it used for successive calls to Drag (snapDeltaAccum parameter).</returns>
      <exception cref="T:System.ArgumentException">dragDir must be Vector3.up/right/forward when world grid snapping is used.</exception>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo.ProcessGizmoClick(Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript,UnityEngine.RaycastHit,ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Processes a mouse begin (click) event when a gizmo is hit.
            </summary>
      <param name="gizmo">The gizmo which recieved the mouse begin event.</param>
      <param name="rayHit">The <see cref="T:UnityEngine.RaycastHit" /> info obtained when the gizmo was hit.</param>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo.ProcessGizmoDrag(ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Performs processing for when a gizmo is being dragged.
            </summary>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the click event data.</param>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.TranslateGizmo.ProcessGizmoDragEnd(Assets.Scripts.Tools.ObjectTransform.GizmoAxisScript,ModApi.Input.Events.ClickEventArgs)">
      <summary>
            Called when a gizmo has stopped being dragged.
            </summary>
      <param name="gizmo">The gizmo which is no-longer being dragged.</param>
      <param name="e">The <see cref="T:ModApi.Input.Events.ClickEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript">
      <summary>
            Script for a single translate gizmo axis.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript._directionFunc">
      <summary>
            Gets the current direction that the gizmo should drag along.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript.AdjustmentGizmoScript">
      <summary>
            Gets the adjustment gizmo script.
            </summary>
      <value>
            The adjustment gizmo script.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript.Direction">
      <summary>
            Gets the direction of this gizmo's movement.
            </summary>
      <value>
            The the direction of this gizmo's movement.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript.Id">
      <summary>
            Gets or sets the identifier. Used by the FuselageShapeTool. Hacky? Yes.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.ObjectTransform.TranslateGizmoAxisScript.Create(UnityEngine.Transform,System.Func{UnityEngine.Vector3},UnityEngine.Color,System.Single,System.Boolean,UnityEngine.Camera)">
      <summary>
            Creates the gizmo.
            </summary>
      <param name="parent">The parent.</param>
      <param name="gizmoFlyoutDirection">A function returning the current direction that the gizmo should move along.</param>
      <param name="color">The color.</param>
      <param name="gizmoFlyoutDistance">The gizmo flyout distance.</param>
      <param name="screenSizeConstant">if set to <c>true</c> [screen size constant].</param>
      <param name="screenSizeConstantCamera">The screen size constant camera.</param>
      <returns>
            The gizmo script.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Tools.PartEditorIconGeneratorScript">
      <summary>
            Generates part icons in the PartEditor scene when the scene is run.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="M:Assets.Scripts.Tools.PartEditorIconGeneratorScript.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.PartViewerScript">
      <summary>
            Utility class to take pictures of parts.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Tools.PartViewerScript._camera">
      <summary>
            The camera
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.PartViewerScript._craftScript">
      <summary>
            The craft script
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.PartViewerScript._designerPartList">
      <summary>
            The designer part list
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.PartViewerScript._disabledLights">
      <summary>
            The disabled lights
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.PartViewerScript._partCameraLights">
      <summary>
            The part camera light
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.PartViewerScript._partTypes">
      <summary>
            The part types
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.PartViewerScript._renderer">
      <summary>
            The quad sphere renderer
            </summary>
    </member>
    <member name="P:Assets.Scripts.Tools.PartViewerScript.RegeneratePartIcons">
      <summary>
            Gets or sets a value indicating whether part icons need regenerated.
            </summary>
      <value>
        <c>true</c> if part icons need regenerated; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Tools.PartViewerScript.TakingPictures">
      <summary>
            Gets a value indicating whether the part viewer is currently taking pictures.
            </summary>
      <value>
        <c>true</c> if taking pictures; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.Create(System.Boolean)">
      <summary>
            Creates this instance.
            </summary>
      <param name="createPartShaderScript">if set to <c>true</c> [create part shader script].</param>
      <returns>
            The PartViewerScript
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.LoadPart(ModApi.Craft.Parts.DesignerPart)">
      <summary>
            Loads the part.
            </summary>
      <param name="designerPart">The designer part.</param>
      <returns>
            The loaded IPartScript.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.SavePartPicture(ModApi.Craft.Parts.DesignerPart,UnityEngine.Texture2D)">
      <summary>
            Saves the part picture.
            </summary>
      <param name="designerPart">The designer part.</param>
      <param name="texture">The texture.</param>
      <returns>
            The path to the picture.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.TakeAllPartPictures(System.Boolean,System.Boolean)">
      <summary>
            Takes all part pictures.
            </summary>
      <param name="retakeExisting">if set to <c>true</c> [retake existing].</param>
      <param name="destroySelfWhenComplete">if set to <c>true</c> [destroy self when complete].</param>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.TakePicture(ModApi.Craft.Parts.DesignerPart,ModApi.Craft.Parts.IPartScript)">
      <summary>
            Takes the picture.
            </summary>
      <param name="designerPart">The designer part info.</param>
      <param name="part">The part to take a picture of.</param>
      <returns>
            The texture resulting from the picture taken of the supplied part.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.OutputPartMeshStatistics(ModApi.Craft.Parts.IPartScript,System.Boolean)">
      <summary>
            Outputs the part mesh statistics. Only for debug purposes. This should be disabled
            by default, unless someone is interested in outputting this data temporarily.
            </summary>
      <param name="part">The part.</param>
      <param name="enabled">if set to <c>true</c> [enabled].</param>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.GetPartIconFilePath(ModApi.Craft.Parts.DesignerPart)">
      <summary>
            Gets the fully qualified path to the part icon for the supplied designer part.
            </summary>
      <param name="designerPart">The designer part.</param>
      <returns>The fully qualified path to the part icon for the supplied designer part.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.PostRender">
      <summary>
            Called when [post render].
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.PartViewerScript.PreRender">
      <summary>
            Called when [pre render].
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.UnityBugReporting.CollisionIgnoreScript">
      <summary>
            A collision ignore script used for exporting craft used for investigation of suspected Unity bugs.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:Assets.Scripts.Tools.UnityBugReporting.CollisionIgnoreScript.PartA">
      <summary>
            The A part involved in the collision.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.UnityBugReporting.CollisionIgnoreScript.PartB">
      <summary>
            The B part involved in the collision.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.UnityBugReporting.CollisionIgnoreScript.ColliderNameA">
      <summary>
            The collider name for part A.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Tools.UnityBugReporting.CollisionIgnoreScript.ColliderNameB">
      <summary>
            The collider name for part B.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.UnityBugReporting.CollisionIgnoreScript.Create(UnityEngine.GameObject,UnityEngine.GameObject,UnityEngine.GameObject,System.String,System.String)">
      <summary>
            Creates the collision ignore script on the specified object.
            </summary>
      <param name="obj">The object on which to create the script.</param>
      <param name="partA">The part A.</param>
      <param name="partB">The part B.</param>
      <param name="colliderNameA">The collider name for part A.</param>
      <param name="colliderNameB">The collider name for part B.</param>
      <returns>The created collision ignore script.</returns>
    </member>
    <member name="M:Assets.Scripts.Tools.UnityBugReporting.CollisionIgnoreScript.ApplyPartCollision">
      <summary>
            Applies the part collision.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Tools.UnityBugReporting.CollisionIgnoreScript.Start">
      <summary>
            The Unity start method.
            </summary>
    </member>
    <member name="T:Assets.Scripts.Tools.UnityBugReporting.UnityBugUtility">
      <summary>
            A utility used investigating and reporting of suspected bugs in Unity.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="T:Assets.Scripts.Web.WebRequest">
      <summary>
            Base class for web requests.
            </summary>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequest.Error">
      <summary>
            Gets the error message. Returns null if there is no error.
            </summary>
      <value>
            The error message.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequest.Form">
      <summary>
            Gets the form.
            </summary>
      <value>
            The form.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequest.IsDone">
      <summary>
            Gets a value indicating whether this request is done.
            </summary>
      <value>
        <c>true</c> if this instance is done; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequest.Progress">
      <summary>
            Gets the progress, 0 to 1.
            </summary>
      <value>
            The progress.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequest.Text">
      <summary>
            Gets the resulting text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequest.Bytes">
      <summary>
            Gets the resulting bytes.
            </summary>
      <value>
            The resulting bytes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequest.Url">
      <summary>
            Gets the URL.
            </summary>
      <value>
            The URL.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequest.IsMac">
      <summary>
            Gets a value indicating whether this instance is mac.
            </summary>
      <value>
        <c>true</c> if this instance is mac; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequest.Create(System.String)">
      <summary>
            Creates the request.
            </summary>
      <param name="url">The URL.</param>
      <returns>The web request.</returns>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequest.Create(System.String,UnityEngine.WWWForm)">
      <summary>
            Creates the specified URL.
            </summary>
      <param name="url">The URL.</param>
      <param name="form">The form.</param>
      <returns>
            The web request.
            </returns>
    </member>
    <member name="T:Assets.Scripts.Web.WebRequestDotNet">
      <summary>
            Web request using the WebClient dot net class.
            </summary>
      <seealso cref="T:Assets.Scripts.Web.WebRequest" />
    </member>
    <member name="F:Assets.Scripts.Web.WebRequestDotNet._bytes">
      <summary>
            The bytes
            </summary>
    </member>
    <member name="F:Assets.Scripts.Web.WebRequestDotNet._client">
      <summary>
            The web client.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Web.WebRequestDotNet._error">
      <summary>
            The error message.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Web.WebRequestDotNet._isDone">
      <summary>
            The is done flag.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Web.WebRequestDotNet._progress">
      <summary>
            The progress.
            </summary>
    </member>
    <member name="F:Assets.Scripts.Web.WebRequestDotNet._url">
      <summary>
            The _url
            </summary>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequestDotNet.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Web.WebRequestDotNet" /> class.
            </summary>
      <param name="url">The URL.</param>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequestDotNet.#ctor(System.String,UnityEngine.WWWForm,System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Web.WebRequestDotNet" /> class.
            </summary>
      <param name="url">The URL.</param>
      <param name="form">The form.</param>
      <param name="basicAuthUsername">The basic authentication username.</param>
      <param name="basicAuthPassword">The basic authentication password.</param>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestDotNet.Bytes">
      <summary>
            Gets the resulting bytes.
            </summary>
      <value>
            The resulting bytes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestDotNet.Error">
      <summary>
            Gets the error message. Returns null if there is no error.
            </summary>
      <value>
            The error message.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestDotNet.IsDone">
      <summary>
            Gets a value indicating whether this request is done.
            </summary>
      <value>
        <c>true</c> if this instance is done; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestDotNet.Progress">
      <summary>
            Gets the progress, 0 to 1.
            </summary>
      <value>
            The progress.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestDotNet.Text">
      <summary>
            Gets the resulting text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestDotNet.Url">
      <summary>
            Gets the URL.
            </summary>
      <value>
            The URL.
            </value>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequestDotNet.RemoteCertificateValidationCallback(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
      <summary>
            Remotes the certificate validation callback.
            </summary>
      <param name="sender">The sender.</param>
      <param name="certificate">The certificate.</param>
      <param name="chain">The chain.</param>
      <param name="sslPolicyErrors">The SSL policy errors.</param>
      <returns>
            True if the certificate is valid.
            </returns>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequestDotNet.WebClientDownloadCompleted(System.Object,System.Net.DownloadDataCompletedEventArgs)">
      <summary>
            Webs the client download completed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.Net.DownloadDataCompletedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequestDotNet.WebClientProgressChanged(System.Object,System.Net.DownloadProgressChangedEventArgs)">
      <summary>
            Webs the client progress changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.Net.DownloadProgressChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequestDotNet.WebClientUploadCompleted(System.Object,System.Net.UploadDataCompletedEventArgs)">
      <summary>
            Webs the client upload completed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.Net.UploadValuesCompletedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequestDotNet.WebClientUploadProgressChanged(System.Object,System.Net.UploadProgressChangedEventArgs)">
      <summary>
            Webs the client upload progress changed.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:System.Net.UploadProgressChangedEventArgs" /> instance containing the event data.</param>
    </member>
    <member name="T:Assets.Scripts.Web.WebRequestUnity">
      <summary>
            Web request that uses Unity's WWW class.
            </summary>
      <seealso cref="T:Assets.Scripts.Web.WebRequest" />
    </member>
    <member name="F:Assets.Scripts.Web.WebRequestUnity._progress">
      <summary>
            The progress
            </summary>
    </member>
    <member name="F:Assets.Scripts.Web.WebRequestUnity._webRequest">
      <summary>
            The unity thing.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequestUnity.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Web.WebRequestUnity" /> class.
            </summary>
      <param name="url">The URL.</param>
    </member>
    <member name="M:Assets.Scripts.Web.WebRequestUnity.#ctor(System.String,UnityEngine.WWWForm)">
      <summary>
            Initializes a new instance of the <see cref="T:Assets.Scripts.Web.WebRequestUnity" /> class.
            </summary>
      <param name="url">The URL.</param>
      <param name="form">The form.</param>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestUnity.Bytes">
      <summary>
            Gets the resulting bytes.
            </summary>
      <value>
            The resulting bytes.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestUnity.Error">
      <summary>
            Gets the error message. Returns null if there is no error.
            </summary>
      <value>
            The error message.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestUnity.IsDone">
      <summary>
            Gets a value indicating whether this request is done.
            </summary>
      <value>
        <c>true</c> if this instance is done; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestUnity.Progress">
      <summary>
            Gets the progress, 0 to 1.
            </summary>
      <value>
            The progress.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestUnity.Text">
      <summary>
            Gets the resulting text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Assets.Scripts.Web.WebRequestUnity.Url">
      <summary>
            Gets the URL.
            </summary>
      <value>
            The URL.
            </value>
    </member>
    <member name="T:Assets.Scripts.Web.WebUtility">
      <summary>
            A utility class for doing web stuff and things.
            </summary>
    </member>
    <member name="M:Assets.Scripts.Web.WebUtility.OpenUrl(System.String,System.Boolean)">
      <summary>
            Opens the specified URL.
            </summary>
      <param name="url">The URL to open.</param>
      <param name="useInGameOverlayIfAvailable">If set to <c>true</c> the in game overlay will be used if available.</param>
    </member>
    <member name="T:ReEntryMrt">
      <summary>
            File for testing using MRT for re-entry effects.
            </summary>
    </member>
    <member name="F:ReEntryMrt._camera">
      <summary>
            The camera
            </summary>
    </member>
    <member name="F:ReEntryMrt._debugImg">
      <summary>
            The debug img
            </summary>
    </member>
    <member name="F:ReEntryMrt._showDebug">
      <summary>
            The show debug
            </summary>
    </member>
    <member name="F:ReEntryMrt._tex">
      <summary>
            The tex
            </summary>
    </member>
    <member name="M:ReEntryMrt.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="M:ReEntryMrt.OnPreCull">
      <summary>
            Called when [pre cull].
            </summary>
    </member>
    <member name="M:ReEntryMrt.OnRenderImage(UnityEngine.RenderTexture,UnityEngine.RenderTexture)">
      <summary>
            Called when [render image].
            </summary>
      <param name="source">The source.</param>
      <param name="destination">The destination.</param>
    </member>
    <member name="M:ReEntryMrt.OnValidate">
      <summary>
            Called when [validate].
            </summary>
    </member>
    <member name="M:ReEntryMrt.Update">
      <summary>
            Updates this instance.
            </summary>
    </member>
    <member name="F:CameraOrbitScript.Scale">
      <summary>
            The map view script
            </summary>
    </member>
    <member name="F:CameraOrbitScript._camera">
      <summary>
            The _camera
            </summary>
    </member>
    <member name="F:CameraOrbitScript._cameraTarget">
      <summary>
            The camera target.
            </summary>
    </member>
    <member name="F:CameraOrbitScript._deltaRotation">
      <summary>
            The _delta rotation
            </summary>
    </member>
    <member name="F:CameraOrbitScript._lastZoomTime">
      <summary>
            The last time the view was zoomed in/out.
            </summary>
    </member>
    <member name="F:CameraOrbitScript._minZoomDistance">
      <summary>
            The minimum zoom distance
            </summary>
    </member>
    <member name="F:CameraOrbitScript._prevDeltaVec">
      <summary>
            The previous delta vec
            </summary>
    </member>
    <member name="F:CameraOrbitScript._targetDistance">
      <summary>
            The _target distance
            </summary>
    </member>
    <member name="P:CameraOrbitScript.Camera">
      <summary>
            Gets the camera.
            </summary>
      <value>
            The camera.
            </value>
    </member>
    <member name="P:CameraOrbitScript.CameraTarget">
      <summary>
            Gets or sets the camera target.
            </summary>
      <value>
            The camera target.
            </value>
    </member>
    <member name="P:CameraOrbitScript.CurrentZoomDistance">
      <summary>
            Gets the current zoom.
            </summary>
      <value>
            The current zoom.
            </value>
    </member>
    <member name="P:CameraOrbitScript.CurrentZoomPercent">
      <summary>
            Gets the current zoom percent.
            </summary>
      <value>
            The current zoom percent.
            </value>
    </member>
    <member name="P:CameraOrbitScript.DistanceFromTarget">
      <summary>
            Gets the distance from target.
            </summary>
      <value>
            The distance from target.
            </value>
    </member>
    <member name="P:CameraOrbitScript.MaxZoomDistance">
      <summary>
            The maximum zoom distance.
            </summary>
    </member>
    <member name="P:CameraOrbitScript.MinZoomDistance">
      <summary>
            The minimum zoom distance.
            </summary>
    </member>
    <member name="P:CameraOrbitScript.ZoomStep">
      <summary>
            The zoom step
            </summary>
    </member>
    <member name="M:CameraOrbitScript.OnDrag(UnityEngine.EventSystems.PointerEventData)">
      <summary>
            When draging is occuring this will be called every time the cursor is moved.
            </summary>
      <param name="eventData">Current event data.</param>
    </member>
    <member name="M:CameraOrbitScript.OnEnable">
      <summary>
            Called when [enable].
            </summary>
    </member>
    <member name="M:CameraOrbitScript.Update">
      <summary>
            Lates the update.
            </summary>
    </member>
    <member name="M:CameraOrbitScript.Zoom(System.Single)">
      <summary>
            Zooms the specified amount.
            </summary>
      <param name="amount">The amount.</param>
    </member>
    <member name="M:CameraOrbitScript.EnsureCameraIsInBounds">
      <summary>
            Ensures the camera is in bounds.
            </summary>
    </member>
    <member name="M:CameraOrbitScript.Rotate(UnityEngine.Vector2,System.Boolean)">
      <summary>
            Rotates the specified delta.
            </summary>
      <param name="delta">The delta.</param>
      <param name="additiveRotation">if set to <c>true</c> [additive rotation].</param>
    </member>
    <member name="M:CameraOrbitScript.UpdateCamera">
      <summary>
            Updates the camera.
            </summary>
    </member>
    <member name="T:TrueClouds.CloudCamera3D">
      <summary>
            The TrueClouds 3D camera.
            </summary>
      <seealso cref="T:TrueClouds.CloudCamera" />
    </member>
    <member name="F:TrueClouds.CloudCamera3D._sceneCam">
      <summary>
            The scene camera.
            </summary>
    </member>
    <member name="M:TrueClouds.CloudCamera3D.Awake">
      <summary>
            Awake is called when the script instance is being loaded.
            </summary>
    </member>
    <member name="M:TrueClouds.CloudCamera3D.OnRenderImage(UnityEngine.RenderTexture,UnityEngine.RenderTexture)">
      <summary>
            Called when the image is rendered.
            </summary>
      <param name="source">The source.</param>
      <param name="destination">The destination.</param>
    </member>
    <member name="T:UnityFS.AircraftAttachment">
      <summary>
            An aircraft attachment.
            </summary>
      <seealso cref="T:UnityEngine.MonoBehaviour" />
    </member>
    <member name="F:UnityFS.AircraftAttachment.Controllable">
      <summary>
            Base class for all UnityFS attachable objects.
            </summary>
    </member>
    <member name="M:UnityFS.AircraftAttachment.SetControllable(System.Boolean)">
      <summary>
            Sets the controllable value.
            </summary>
      <param name="enable">If set to <c>true</c>, the attachment is controllable.</param>
    </member>
    <member name="T:UnityFS.ControlSurface">
      <summary>
            The controls surface.
            </summary>
      <seealso cref="T:UnityFS.AircraftAttachment" />
    </member>
    <member name="F:UnityFS.ControlSurface.AffectedSections">
      <summary>
            The affected sections
            </summary>
    </member>
    <member name="F:UnityFS.ControlSurface.CurrentDeflection">
      <summary>
            The current deflection
            </summary>
    </member>
    <member name="F:UnityFS.ControlSurface.MaxDeflectionDegrees">
      <summary>
            The maximum deflection degrees
            </summary>
    </member>
    <member name="F:UnityFS.ControlSurface.Model">
      <summary>
            The model
            </summary>
    </member>
    <member name="F:UnityFS.ControlSurface.ModelRotationAxis">
      <summary>
            The model rotation axis
            </summary>
    </member>
    <member name="F:UnityFS.ControlSurface.RootHingeDistanceFromTrailingEdge">
      <summary>
            The root hinge distance from trailing edge
            </summary>
    </member>
    <member name="F:UnityFS.ControlSurface.TipHingeDistanceFromTrailingEdge">
      <summary>
            The tip hinge distance from trailing edge
            </summary>
    </member>
    <member name="F:UnityFS.ControlSurface.WingRootAileronHingePos">
      <summary>
            The wing root aileron hinge position
            </summary>
    </member>
    <member name="F:UnityFS.ControlSurface.WingTipAileronHingePos">
      <summary>
            The wing tip aileron hinge position
            </summary>
    </member>
    <member name="P:UnityFS.ControlSurface.AxisName">
      <summary>
            Gets or sets the name of the axis.
            </summary>
      <value>
            The name of the axis.
            </value>
    </member>
    <member name="M:UnityFS.ControlSurface.ModifyWingGeometry(System.Int32,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@,UnityEngine.Vector3@)">
      <summary>
            Modifies the wing geometry.
            </summary>
      <param name="SectionIndex">Index of the section.</param>
      <param name="PointA">The point a.</param>
      <param name="PointB">The point b.</param>
      <param name="PointC">The point c.</param>
      <param name="PointD">The point d.</param>
    </member>
    <member name="M:UnityFS.ControlSurface.Start">
      <summary>
            Starts this instance.
            </summary>
    </member>
    <member name="M:UnityFS.ControlSurface.Awake">
      <summary>
            Awakes this instance.
            </summary>
    </member>
    <member name="T:UnityFS.Wing">
      <summary>
            A script used to simulate wing physics.
            </summary>
      <seealso cref="T:UnityFS.AircraftAttachment" />
    </member>
    <member name="F:UnityFS.Wing.Aerofoil">
      <summary>
            The aerofoil used by this wing.
            </summary>
    </member>
    <member name="F:UnityFS.Wing.AngleOfAttack">
      <summary>
            The angle of attack.
            </summary>
    </member>
    <member name="F:UnityFS.Wing.FluidDensity">
      <summary>
            The fluid density
            </summary>
    </member>
    <member name="F:UnityFS.Wing.SectionCount">
      <summary>
            The section count.
            </summary>
    </member>
    <member name="F:UnityFS.Wing.WingTipAngle">
      <summary>
            The wing tip angle.
            </summary>
    </member>
    <member name="F:UnityFS.Wing.WingTipSweep">
      <summary>
            The wing tip sweep.
            </summary>
    </member>
    <member name="F:UnityFS.Wing.WingTipWidthZeroToOne">
      <summary>
            The wing tip width zero to one ratio.
            </summary>
    </member>
    <member name="F:UnityFS.Wing._aerodynamicCenterLocalSpace">
      <summary>
            The aerodynamic center in local space
            </summary>
    </member>
    <member name="F:UnityFS.Wing._aerodynamicCenterWorldSpace">
      <summary>
            The aerodynamic center world space
            </summary>
    </member>
    <member name="F:UnityFS.Wing._controlSurfaces">
      <summary>
            The control surfaces for this wing.
            </summary>
    </member>
    <member name="F:UnityFS.Wing._liftLineChordPosition">
      <summary>
            The lift line chord position.
            </summary>
    </member>
    <member name="F:UnityFS.Wing._transform">
      <summary>
            The transform for this game object.
            </summary>
    </member>
    <member name="F:UnityFS.Wing._wingSections">
      <summary>
            The collection of wing section objects that contain some precomputations used to speed up the fixed update.
            </summary>
    </member>
    <member name="P:UnityFS.Wing.AerodynamicCenterLocalSpace">
      <summary>
            Gets the aerodynamic center in local space.
            </summary>
      <value>
            The aerodynamic center in local space.
            </value>
    </member>
    <member name="P:UnityFS.Wing.AerodynamicCenterWorldSpace">
      <summary>
            Gets the aerodynamic center in world space.
            </summary>
      <value>
            The aerodynamic center in world space.
            </value>
    </member>
    <member name="P:UnityFS.Wing.DragForceMagnitude">
      <summary>
            Gets or sets the drag force magnitude.
            </summary>
      <value>
            The drag force magnitude.
            </value>
    </member>
    <member name="P:UnityFS.Wing.DragForceVector">
      <summary>
            Gets the drag force vector.
            </summary>
      <value>
            The drag force vector.
            </value>
    </member>
    <member name="P:UnityFS.Wing.HasStarted">
      <summary>
            Gets a value indicating whether this instance has started.
            </summary>
      <value>
        <c>true</c> if this instance has started; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:UnityFS.Wing.LiftForceMagnitude">
      <summary>
            Gets or sets the lift force magnitude.
            </summary>
      <value>
            The lift force magnitude.
            </value>
    </member>
    <member name="P:UnityFS.Wing.LiftForceVector">
      <summary>
            Gets the lift force vector.
            </summary>
      <value>
            The lift force vector.
            </value>
    </member>
    <member name="P:UnityFS.Wing.PartScript">
      <summary>
            Gets or sets the part script.
            </summary>
      <value>
            The part script.
            </value>
    </member>
    <member name="P:UnityFS.Wing.SimulateRealtime">
      <summary>
            Gets or sets a value indicating whether the wing should be simulated in real time.
            </summary>
      <value>
        <c>true</c> if the wing should be simulated in real time; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:UnityFS.Wing.WingAreaZeroDeflection">
      <summary>
            Gets the wing area at zero control-surface deflection.  This is a static value for a wing.
            </summary>
      <value>
            The wing area at zero control-surface deflection.
            </value>
    </member>
    <member name="M:UnityFS.Wing.PrecalculateSections">
      <summary>
            Initializes the wing by precomputing a bunch of information that is used by the fixed update.
            </summary>
    </member>
    <member name="M:UnityFS.Wing.RegisterControlSurface(UnityFS.ControlSurface)">
      <summary>
            Registers the control surface with the wing.
            </summary>
      <param name="controlSurface">The control surface to register with the wing.</param>
    </member>
    <member name="M:UnityFS.Wing.Simulate(System.Boolean)">
      <summary>
            Performs a physics update on the wing.
            </summary>
      <param name="applyForces">If set to <c>true</c>, forces will be applied to the wing.</param>
    </member>
    <member name="M:UnityFS.Wing.UpdateStaticAerodynamicCenter">
      <summary>
            Updates the aerodynamic center.  This is typically only needed in the designer when we are not running wing simulation, but still need to know aerodynamic center.
            </summary>
    </member>
    <member name="M:UnityFS.Wing.Awake">
      <summary>
            The Unity Awake method.
            </summary>
    </member>
    <member name="M:UnityFS.Wing.ModApi#GameLoop#Interfaces#IDesignerStart#DesignerStart(ModApi.GameLoop.DesignerFrameData@)">
      <summary>
            Called once in the designer scene before running any update methods on this object.
            </summary>
      <param name="frame">The designer frame data.</param>
    </member>
    <member name="M:UnityFS.Wing.ModApi#GameLoop#Interfaces#IFlightStart#FlightStart(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            Called once in the flight scene before running any update methods on this object.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="M:UnityFS.Wing.ModApi#GameLoop#Interfaces#IFlightFixedUpdate#FlightFixedUpdate(ModApi.GameLoop.FlightFrameData@)">
      <summary>
            FixedUpdate method that is only called in the flight scene when the game is not paused and when not warping.
            </summary>
      <param name="frame">The flight frame data.</param>
    </member>
    <member name="T:UnityFS.WingSection">
      <summary>
            A class representing a wing section.
            This is used to store precomputed information for the wing section and can be updated each frame
            to provide the calculations for that frame based on the wings current world coordinates.
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._aerodynamicCenterLocal">
      <summary>
            The aerodynamic center of the wing section in local coordinates.
            Each entry in the array represents the values based on various deflection values for the control surface.
            The first element is for a control surface deflection of zero degrees. The first half of the array is for positive
            deflection and the second half of the array is for negative deflection (larger deflection values as index increases).
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._area">
      <summary>
            The area of the wing section.
            Each entry in the array represents the values based on various deflection values for the control surface.
            The first element is for a control surface deflection of zero degrees. The first half of the array is for positive
            deflection and the second half of the array is for negative deflection (larger deflection values as index increases).
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._chordLineLocal">
      <summary>
            The chord line of the wing section in local coordinates.
            Each entry in the array represents the values based on various deflection values for the control surface.
            The first element is for a control surface deflection of zero degrees. The first half of the array is for positive
            deflection and the second half of the array is for negative deflection (larger deflection values as index increases).
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._controlSurface">
      <summary>
            The control surface associated with this wing section.
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._deflectionKeyframeCount">
      <summary>
            The number of deflection key frames we are using (not counting zero degrees deflection or negative deflection values).
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._deflectionKeyframeRange">
      <summary>
            The number of degrees covered by each deflection key frame.
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._deflectionKeyframeValues">
      <summary>
            The deflection values used for each key frame.
            The first element is for a control surface deflection of zero degrees. The first half of the array is for positive
            deflection and the second half of the array is for negative deflection (larger deflection values as index increases).
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._sectionIndex">
      <summary>
            The wing section index.
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._upLocal">
      <summary>
            The up vector of the wing section in local coordinates.
            Each entry in the array represents the values based on various deflection values for the control surface.
            The first element is for a control surface deflection of zero degrees. The first half of the array is for positive
            deflection and the second half of the array is for negative deflection (larger deflection values as index increases).
            </summary>
    </member>
    <member name="F:UnityFS.WingSection._wingTransform">
      <summary>
            The transform for the wing associated with this section.
            </summary>
    </member>
    <member name="M:UnityFS.WingSection.#ctor(UnityEngine.Transform,UnityFS.ControlSurface,System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:UnityFS.WingSection" /> class.
            </summary>
      <param name="wingTransform">The wing transform.</param>
      <param name="controlSurface">The control surface.</param>
      <param name="sectionIndex">Index of the section.</param>
      <param name="rootLeadingEdge">The root leading edge.</param>
      <param name="rootTrailingEdge">The root trailing edge.</param>
      <param name="tipLeadingEdge">The tip leading edge.</param>
      <param name="tipTrailingEdge">The tip trailing edge.</param>
      <param name="liftLineChordPosition">The lift line chord position.</param>
    </member>
    <member name="P:UnityFS.WingSection.AerodynamicCenter">
      <summary>
            Gets the current aerodynamic center of the wing section.
            </summary>
      <value>
            The current aerodynamic center of the wing section.
            </value>
    </member>
    <member name="P:UnityFS.WingSection.Area">
      <summary>
            Gets the current area of the wing section.
            </summary>
      <value>
            The current area of the wing section.
            </value>
    </member>
    <member name="P:UnityFS.WingSection.ChordLine">
      <summary>
            Gets the current chord line of the wing section.
            </summary>
      <value>
            The current chord line of the wing section.
            </value>
    </member>
    <member name="P:UnityFS.WingSection.Up">
      <summary>
            Gets the current up vector of the wing section.
            </summary>
      <value>
            The current up vector of the wing section.
            </value>
    </member>
    <member name="M:UnityFS.WingSection.Update">
      <summary>
            Update the wing section with data for the current frame.
            </summary>
    </member>
    <member name="M:UnityFS.WingSection.CalculateAerodynamicCenter(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
            Calculates the aerodynamic center.
            </summary>
      <param name="rootLeadingEdge">The root leading edge.</param>
      <param name="tipLeadingEdge">The tip leading edge.</param>
      <param name="tipTrailingEdge">The tip trailing edge.</param>
      <param name="rootTrailingEdge">The root trailing edge.</param>
      <param name="liftLineChordPosition">The lift line chord position.</param>
      <returns>The aerodynamic center.</returns>
    </member>
    <member name="M:UnityFS.WingSection.CalculateArea(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Calculates the area of the wing section.
            </summary>
      <param name="rootLeadingEdge">The root leading edge.</param>
      <param name="tipLeadingEdge">The tip leading edge.</param>
      <param name="tipTrailingEdge">The tip trailing edge.</param>
      <param name="rootTrailingEdge">The root trailing edge.</param>
      <returns>The area of the wing section.</returns>
    </member>
    <member name="M:UnityFS.WingSection.CalculateChordLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
            Calculates the chord line.
            </summary>
      <param name="rootLeadingEdge">The root leading edge.</param>
      <param name="tipLeadingEdge">The tip leading edge.</param>
      <param name="tipTrailingEdge">The tip trailing edge.</param>
      <param name="rootTrailingEdge">The root trailing edge.</param>
      <returns>The chord line.</returns>
    </member>
    <member name="M:UnityFS.WingSection.CalculateUp(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
            Calculates the up vector.
            </summary>
      <param name="rootLeadingEdge">The root leading edge.</param>
      <param name="tipLeadingEdge">The tip leading edge.</param>
      <param name="tipTrailingEdge">The tip trailing edge.</param>
      <param name="rootTrailingEdge">The root trailing edge.</param>
      <param name="chordLine">The chord line.</param>
      <param name="liftLineChordPosition">The lift line chord position.</param>
      <returns>The up vector.</returns>
    </member>
    <member name="T:JointSpringSource">
      <summary>
            JointSpringSource
            This class was created by:
            Nic Tolentino.
            rotatingcube@gmail.com
            I take no liability for it's use and is provided as is.
            The classes are based off the original code developed by Unity Technologies.
            You are free to use, modify or distribute these classes however you wish,
            I only ask that you make mention of their use in your project credits.
            </summary>
    </member>
    <member name="F:JointSpringSource._damper">
      <summary>
            The damper force uses to dampen the spring
            </summary>
    </member>
    <member name="F:JointSpringSource._spring">
      <summary>
            The spring forces used to reach the target position
            </summary>
    </member>
    <member name="F:JointSpringSource._targetPosition">
      <summary>
            The target position the joint attempts to reach.
            </summary>
    </member>
    <member name="P:JointSpringSource.Damper">
      <summary>
            Gets or sets the damper.
            </summary>
      <value>
            The damper.
            </value>
    </member>
    <member name="P:JointSpringSource.Spring">
      <summary>
            Gets or sets the spring.
            </summary>
      <value>
            The spring.
            </value>
    </member>
    <member name="P:JointSpringSource.TargetPosition">
      <summary>
            Gets or sets the target position.
            </summary>
      <value>
            The target position.
            </value>
    </member>
    <member name="T:WheelColliderSource">
      <summary>
            WheelColliderSource
            This class was created by:
            Nic Tolentino.
            rotatingcube@gmail.com
            I take no liability for it's use and is provided as is.
            The classes are based off the original code developed by Unity Technologies.
            You are free to use, modify or distribute these classes however you wish,
            I only ask that you make mention of their use in your project credits.
            </summary>
    </member>
    <member name="F:WheelColliderSource._center">
      <summary>
            The center of the wheel.
            </summary>
    </member>
    <member name="F:WheelColliderSource._dummyWheel">
      <summary>
            The dummy wheel object.
            </summary>
    </member>
    <member name="F:WheelColliderSource._forwardFriction">
      <summary>
            Properties of tire friction in the direction the wheel is pointing in.
            </summary>
    </member>
    <member name="F:WheelColliderSource._forwardSlip">
      <summary>
            The forward slip.
            </summary>
    </member>
    <member name="F:WheelColliderSource._gizmoColor">
      <summary>
            The gizmo color.
            </summary>
    </member>
    <member name="F:WheelColliderSource._groundVelocity">
      <summary>
            The current ground velocity.
            </summary>
    </member>
    <member name="F:WheelColliderSource._isGrounded">
      <summary>
            Indicates whether the wheel currently collides with something (Read Only).
            </summary>
    </member>
    <member name="F:WheelColliderSource._maxSpringForce">
      <summary>
            The max spring force to apply in a single frame.
            </summary>
    </member>
    <member name="F:WheelColliderSource._prevPosition">
      <summary>
            The center of the wheel, measured in the object's local space.
            </summary>
    </member>
    <member name="F:WheelColliderSource._raycastHit">
      <summary>
            The raycast hit.
            </summary>
    </member>
    <member name="F:WheelColliderSource._rigidbody">
      <summary>
            The rigidbody to apply suspension and slip forces to.
            </summary>
    </member>
    <member name="F:WheelColliderSource._sidewaysFriction">
      <summary>
            Properties of tire friction in the sideways direction.
            </summary>
    </member>
    <member name="F:WheelColliderSource._sidewaysSlip">
      <summary>
            The sideways slip.
            </summary>
    </member>
    <member name="F:WheelColliderSource._surfaceFriction">
      <summary>
            The surface friction.
            </summary>
    </member>
    <member name="F:WheelColliderSource._surfaceNormal">
      <summary>
            The normal of the surface the wheel is currently colliding with.
            </summary>
    </member>
    <member name="F:WheelColliderSource._suspensionCompression">
      <summary>
            The current suspension compression.
            </summary>
    </member>
    <member name="F:WheelColliderSource._suspensionCompressionPrev">
      <summary>
            The last frame's suspension compression.
            </summary>
    </member>
    <member name="F:WheelColliderSource._suspensionDistance">
      <summary>
            Maximum extension distance of wheel suspension, measured in local space.
            </summary>
    </member>
    <member name="F:WheelColliderSource._suspensionSpring">
      <summary>
            The suspension spring data.
            </summary>
    </member>
    <member name="F:WheelColliderSource._suspensionTransform">
      <summary>
            The suspension transform.
            </summary>
    </member>
    <member name="F:WheelColliderSource._totalForce">
      <summary>
            The total force to apply to the rigid body for the frame.
            </summary>
    </member>
    <member name="F:WheelColliderSource._wheelAngularVelocity">
      <summary>
            The wheel angular velocity.
            </summary>
    </member>
    <member name="F:WheelColliderSource._wheelBrakeTorque">
      <summary>
            The wheel brake torque.
            </summary>
    </member>
    <member name="F:WheelColliderSource._wheelMass">
      <summary>
            The wheel's mass. Used to simulate angular velocity accurately and does not affect CoM or rigid body's mass.
            </summary>
    </member>
    <member name="F:WheelColliderSource._wheelMesh">
      <summary>
            The wheel mesh.
            </summary>
    </member>
    <member name="F:WheelColliderSource._wheelMotorTorque">
      <summary>
            Motor torque on the wheel axle. Positive or negative depending on direction.
            </summary>
    </member>
    <member name="F:WheelColliderSource._wheelRadius">
      <summary>
            The wheel radius.
            </summary>
    </member>
    <member name="F:WheelColliderSource._wheelRotationAngle">
      <summary>
            Current wheel axle rotation speed, in rotations per minute (Read Only).
            </summary>
    </member>
    <member name="F:WheelColliderSource._wheelSteerAngle">
      <summary>
            Steering angle in degrees, always around the local y-axis.
            </summary>
    </member>
    <member name="P:WheelColliderSource.BrakeInput">
      <summary>
            Gets or sets the brake input. Ranging from zero to one.
            </summary>
      <value>
            The brake input.
            </value>
    </member>
    <member name="P:WheelColliderSource.BrakeTorque">
      <summary>
            Gets or sets the brake torque.
            </summary>
      <value>
            The brake torque.
            </value>
    </member>
    <member name="P:WheelColliderSource.Center">
      <summary>
            Gets or sets the center of the wheel.
            </summary>
      <value>
            The center.
            </value>
    </member>
    <member name="P:WheelColliderSource.ForwardFriction">
      <summary>
            Gets or sets the forward friction.
            </summary>
      <value>
            The forward friction.
            </value>
    </member>
    <member name="P:WheelColliderSource.ForwardSlip">
      <summary>
            Gets the forward slip.
            </summary>
      <value>
            The forward slip.
            </value>
    </member>
    <member name="P:WheelColliderSource.IsGrounded">
      <summary>
            Gets a value indicating whether the wheel is currently in contact with the ground.
            </summary>
      <value>
        <c>true</c> if it is grounded; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:WheelColliderSource.Mass">
      <summary>
            Gets or sets the mass.
            </summary>
      <value>
            The mass.
            </value>
    </member>
    <member name="P:WheelColliderSource.MotorTorque">
      <summary>
            Gets or sets the motor torque.
            </summary>
      <value>
            The motor torque.
            </value>
    </member>
    <member name="P:WheelColliderSource.Rigidbody">
      <summary>
            Gets or sets the rigidbody.
            </summary>
      <value>
            The rigidbody.
            </value>
    </member>
    <member name="P:WheelColliderSource.RPM">
      <summary>
            Gets the RPM.
            </summary>
      <value>
            The RPM.
            </value>
    </member>
    <member name="P:WheelColliderSource.Scale">
      <summary>
            Gets or sets the scale.
            </summary>
      <value>
            The scale.
            </value>
    </member>
    <member name="P:WheelColliderSource.SidewaysFriction">
      <summary>
            Gets or sets the sideways friction.
            </summary>
      <value>
            The sideways friction.
            </value>
    </member>
    <member name="P:WheelColliderSource.SidewaysSlip">
      <summary>
            Gets the sideways slip.
            </summary>
      <value>
            The sideways slip.
            </value>
    </member>
    <member name="P:WheelColliderSource.SteerAngle">
      <summary>
            Gets or sets the steer angle.
            </summary>
      <value>
            The steer angle.
            </value>
    </member>
    <member name="P:WheelColliderSource.SurfaceFriction">
      <summary>
            Gets the surface friction.
            </summary>
      <value>
            The surface friction.
            </value>
    </member>
    <member name="P:WheelColliderSource.SuspensionDistance">
      <summary>
            Gets or sets the suspension distance.
            </summary>
      <value>
            The suspension distance.
            </value>
    </member>
    <member name="P:WheelColliderSource.SuspensionEnabled">
      <summary>
            Gets or sets a value indicating whether [suspension enabled].
            </summary>
      <value>
        <c>true</c> if [suspension enabled]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:WheelColliderSource.SuspensionSpring">
      <summary>
            Gets or sets the suspension spring.
            </summary>
      <value>
            The suspension spring.
            </value>
    </member>
    <member name="M:WheelColliderSource.CreateFrictionCurves(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Creates the friction curves for the wheel collider based on the specified parameters.
            </summary>
      <param name="forwardExtremumSlip">The forward extremum slip.</param>
      <param name="forwardExtremumForce">The forward extremum force.</param>
      <param name="forwardAsymptoteSlip">The forward asymptote slip.</param>
      <param name="forwardAsymptoteForce">The forward asymptote force.</param>
      <param name="sidewaysExtremumSlip">The sideways extremum slip.</param>
      <param name="sidewaysExtremumForce">The sideways extremum force.</param>
      <param name="sidewaysAsymptoteSlip">The sideways asymptote slip.</param>
      <param name="sidewaysAsymptoteForce">The sideways asymptote force.</param>
    </member>
    <member name="M:WheelColliderSource.Awake">
      <summary>
            Unity Awake method.
            </summary>
    </member>
    <member name="M:WheelColliderSource.CalculateForcesFromSlips">
      <summary>
            Calculates the forces from slips.
            </summary>
    </member>
    <member name="M:WheelColliderSource.CalculateSlips">
      <summary>
            Calculates the slips.
            </summary>
    </member>
    <member name="M:WheelColliderSource.FixedUpdate">
      <summary>
            Unity fixed update method.
            </summary>
    </member>
    <member name="M:WheelColliderSource.OnDrawGizmosSelected">
      <summary>
            Unity OnDrawGizmosSelected method.
            </summary>
    </member>
    <member name="M:WheelColliderSource.Update">
      <summary>
            Unity Update method.
            </summary>
    </member>
    <member name="M:WheelColliderSource.UpdateSuspension">
      <summary>
            Updates the suspension.
            </summary>
    </member>
    <member name="M:WheelColliderSource.UpdateWheel">
      <summary>
            Updates the wheel.
            </summary>
    </member>
    <member name="T:WheelFrictionCurveSource">
      <summary>
            WheelFrictionCurveSource
            This class was created by:
            Nic Tolentino.
            rotatingcube@gmail.com
            I take no liability for it's use and is provided as is.
            The classes are based off the original code developed by Unity Technologies.
            You are free to use, modify or distribute these classes however you wish,
            I only ask that you make mention of their use in your project credits.
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource._arraySize">
      <summary>
            The array size.
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource._asymptotePoints">
      <summary>
            The asymptote points.
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource._asymptoteSlip">
      <summary>
            Asymptote point slip (default 4).
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource._asymptoteValue">
      <summary>
            Force at the asymptote slip (default 5500).
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource._extremePoints">
      <summary>
            The extreme points.
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource._extremumSlip">
      <summary>
            Extremum point slip (default 3).
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource._extremumValue">
      <summary>
            Force at the extremum slip (default 6000).
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource._stiffness">
      <summary>
            Multiplier for the extremumValue and asymptoteValue values (default 1).
            </summary>
    </member>
    <member name="M:WheelFrictionCurveSource.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:WheelFrictionCurveSource" /> class.
            </summary>
      <param name="extremumSlip">The extremum slip.</param>
      <param name="extremumForce">The extremum force.</param>
      <param name="asymptoteSlip">The asymptote slip.</param>
      <param name="asymptoteForce">The asymptote force.</param>
    </member>
    <member name="P:WheelFrictionCurveSource.AsymptoteSlip">
      <summary>
            Gets or sets the asymptote slip.
            </summary>
      <value>
            The asymptote slip.
            </value>
    </member>
    <member name="P:WheelFrictionCurveSource.AsymptoteValue">
      <summary>
            Gets or sets the asymptote value.
            </summary>
      <value>
            The asymptote value.
            </value>
    </member>
    <member name="P:WheelFrictionCurveSource.ExtremumSlip">
      <summary>
            Gets or sets the extremum slip.
            </summary>
      <value>
            The extremum slip.
            </value>
    </member>
    <member name="P:WheelFrictionCurveSource.ExtremumValue">
      <summary>
            Gets or sets the extremum value.
            </summary>
      <value>
            The extremum value.
            </value>
    </member>
    <member name="P:WheelFrictionCurveSource.Stiffness">
      <summary>
            Gets or sets the stiffness.
            </summary>
      <value>
            The stiffness.
            </value>
    </member>
    <member name="M:WheelFrictionCurveSource.CreateCurve">
      <summary>
            Creates an animation curve so the data can be easily see in the Unity editor.
            </summary>
      <returns>The animation curve.</returns>
    </member>
    <member name="M:WheelFrictionCurveSource.Evaluate(System.Single)">
      <summary>
            Evaluates the specified slip.
            </summary>
      <param name="slip">The slip.</param>
      <returns>The friction at the specified slip.</returns>
    </member>
    <member name="M:WheelFrictionCurveSource.Hermite(System.Single,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
            Returns the point along the hermite curve.
            </summary>
      <param name="t">The t.</param>
      <param name="p0">The p0.</param>
      <param name="p1">The p1.</param>
      <param name="m0">The m0.</param>
      <param name="m1">The m1.</param>
      <returns>
            The point.
            </returns>
    </member>
    <member name="M:WheelFrictionCurveSource.Evaluate(System.Single,WheelFrictionCurveSource.WheelFrictionCurvePoint[])">
      <summary>
            Evaluates the specified slip.
            </summary>
      <param name="slip">The slip.</param>
      <param name="curvePoints">The curve points.</param>
      <returns>The friction at the specified slip along the curve.</returns>
    </member>
    <member name="M:WheelFrictionCurveSource.UpdateArrays">
      <summary>
            Updates the arrays.
            </summary>
    </member>
    <member name="T:WheelFrictionCurveSource.WheelFrictionCurvePoint">
      <summary>
            Point in the friction curve.
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource.WheelFrictionCurvePoint.SlipForcePoint">
      <summary>
            The slip force point.
            </summary>
    </member>
    <member name="F:WheelFrictionCurveSource.WheelFrictionCurvePoint.TValue">
      <summary>
            The t value.
            </summary>
    </member>
    <member name="T:UI.Xml.ExtensionMethods">
      <summary>
            Extension methods for Xml Layout.
            </summary>
    </member>
    <member name="M:UI.Xml.ExtensionMethods.ApplyAttributesRecursive(UI.Xml.XmlElement)">
      <summary>
            Applies the attributes of the element and all of its children elements, recursively.
            </summary>
      <param name="e">The element.</param>
    </member>
    <member name="M:UI.Xml.ExtensionMethods.GetParentElementWithClass(UI.Xml.XmlElement,System.String)">
      <summary>
            Gets the parent XmlElement with specified class.
            </summary>
      <param name="xmlElement">The element.</param>
      <param name="className">Name of the class.</param>
      <returns>
            The parent element with the specified class, or null if there are none.
            </returns>
    </member>
    <member name="M:UI.Xml.ExtensionMethods.GetText(UI.Xml.XmlElement)">
      <summary>
            Gets the text attribute.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <returns>The text.</returns>
    </member>
    <member name="M:UI.Xml.ExtensionMethods.SetActive(UI.Xml.XmlElement,System.Boolean)">
      <summary>
            Sets the active state of the XmlElement
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="active">if set to <c>true</c> then make the element active.</param>
    </member>
    <member name="M:UI.Xml.ExtensionMethods.SetText(UI.Xml.XmlElement,System.String)">
      <summary>
            Sets the text attribute.
            </summary>
      <param name="xmlElement">The XML element.</param>
      <param name="text">The text.</param>
    </member>
    <member name="M:UI.Xml.ExtensionMethods.ToggleClass(UI.Xml.XmlElement,System.String)">
      <summary>
            Toggles the class on the element.
            </summary>
      <param name="e">The element.</param>
      <param name="className">Name of the class.</param>
    </member>
    <member name="M:UI.Xml.ExtensionMethods.ToggleVisibility(UI.Xml.XmlElement)">
      <summary>
            Toggles the visibility of the element.
            </summary>
      <param name="e">The element.</param>
    </member>
    <member name="T:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler">
      <summary>
            An XML layout tag handler for a spinner used for part properties which allows direct input.
            This was copied from <see cref="T:UI.Xml.Tags.TextMeshProInputFieldTagHandler" /> and modified for this specific use case.
            </summary>
      <seealso cref="T:UI.Xml.ElementTagHandler" />
      <seealso cref="T:UI.Xml.Tags.IHasXmlFormValue" />
    </member>
    <member name="P:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.isCustomElement">
      <summary>
            Gets a value indicating whether this tag hanlder is a custom element.
            If this returns false, then no auto-complete documentation will be generated for this element (as this indicates that the documentation has already been created manually)
            </summary>
    </member>
    <member name="P:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.prefabPath">
      <summary>
            Gets the prefab path.
            </summary>
      <value>
            The prefab path.
            </value>
    </member>
    <member name="P:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.primaryComponent">
      <summary>
            Gets the primary component.
            </summary>
      <value>
            The primary component.
            </value>
    </member>
    <member name="P:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.transformToAddChildrenTo">
      <summary>
            Gets the transform to add children to.
            </summary>
      <value>
            The transform to add children to.
            </value>
    </member>
    <member name="M:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.Open(UI.Xml.AttributeDictionary)">
      <summary>
            Called when the tag is opened.
            </summary>
      <param name="elementAttributes">The element attributes.</param>
    </member>
    <member name="M:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.ApplyAttributes(UI.Xml.AttributeDictionary)">
      <summary>
            Apply the specified attributes to the XmlElement (and its other relevant components)
            </summary>
      <param name="attributesToApply">The attributes to apply.</param>
    </member>
    <member name="P:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.attributes">
      <summary>
            Gets the attributes.
            Used to add non-default attributes to this element in the XSD file
            It is only necessary to override this if your custom tag handler provides new attributes and you wish for Visual Studio to autocomplete them for you.
            The key is the name of the attribute, and the value is the datatype.
            The datatype must be a valid datatype within XmlLayout.xsd or http://www.w3.org/2001/XMLSchema
            e.g.
            xs:string -&gt; string value (from http://www.w3.org/2001/XMLSchema)
            xs:integer -&gt; integer value (from http://www.w3.org/2001/XMLSchema)
            xs:float -&gt; float value (from http://www.w3.org/2001/XMLSchema)
            xmlLayout:color -&gt; color in hex/rgb/rgba format
            xmlLayout:vector2 -&gt; vector 2 in x y format
            xmlLayout:floatList -&gt; list of floats e.g. "10 10 10"
            </summary>
    </member>
    <member name="P:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.attributeGroups">
      <summary>
            Gets the attribute groups.
            This property will allow you to use built-in attribute groups so that you don't have to redefine the same properties
            The built-in attribute groups are:
            - simpleAttributes (* provided by most extension types already)
            - tooltip (*)
            - rectTransform (*)
            - layoutElement
            - image
            - text
            - animation
            </summary>
    </member>
    <member name="P:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.eventAttributeNames">
      <summary>
            Gets the event attribute names.
            </summary>
      <value>
            The event attribute names.
            </value>
    </member>
    <member name="P:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.elementChildType">
      <summary>
            Gest the element child type.
            This determines which element types may be a child of _this_ element
            default - Any element which is part of the 'Default' group (see ElementTagHandler.elementGroup) may be a child of this element
            </summary>
    </member>
    <member name="M:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.GetValue(UI.Xml.XmlElement)">
      <summary>
            Gets the value.
            </summary>
      <param name="element">The element.</param>
      <returns>The element value.</returns>
    </member>
    <member name="M:UI.Xml.Tags.PartPropertySpinnerInputFieldTagHandler.HandleEventAttribute(System.String,System.String)">
      <summary>
            Handles the event attribute.
            </summary>
      <param name="eventName">Name of the event.</param>
      <param name="eventValue">The event value.</param>
    </member>
  </members>
</doc>